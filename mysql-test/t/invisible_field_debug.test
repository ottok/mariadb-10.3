--source include/have_debug.inc
##TEST for invisible coloumn level 2
set @old_debug= @@debug_dbug;
set debug_dbug= "+d,test_pseudo_invisible";
create table t1(a int);
set debug_dbug=@old_debug;

desc t1;
show create table t1;
insert into t1 values(1);
select * from t1;
select invisible ,a from t1;
drop table t1;

##TEST for invisible coloumn level 3

set debug_dbug= "+d,test_completely_invisible";
create table t1(a int);
set debug_dbug=@old_debug;

desc t1;
show create table t1;
insert into t1 values(1);
select * from t1;

--error ER_BAD_FIELD_ERROR
select invisible ,a from t1;

set debug_dbug= "+d,test_completely_invisible";
select invisible ,a from t1;
set debug_dbug=@old_debug;

drop table t1;

##TEST for Alter table for invisibleness level 2

set debug_dbug= "+d,test_pseudo_invisible";
create table t1(a int);
set debug_dbug=@old_debug;

desc t1;
insert into t1 values(1);
select * from t1;
select invisible ,a from t1;

## Alter should not be possible

--error ER_BAD_FIELD_ERROR
ALTER table t1 change invisible b int;
select * from t1;
select invisible ,a from t1;

--error ER_BAD_FIELD_ERROR
ALTER table t1 modify invisible char;
select * from t1;
select invisible ,a from t1;

--error ER_CANT_DROP_FIELD_OR_KEY
ALTER table t1 drop invisible;
select * from t1;
select invisible ,a from t1;

--error ER_DUP_FIELDNAME
ALTER table t1 add invisible int;
select * from t1;
select invisible ,a from t1;

ALTER table t1 add invisible2 int default 2;
select * from t1;
select invisible ,a from t1;

drop table t1;

##TEST for Alter table for invisibleness level 3

set debug_dbug= "+d,test_completely_invisible";
create table t1(a int);

desc t1;
insert into t1 values(1);
select * from t1;
select invisible ,a from t1;

## Alter should not be possible

--error ER_BAD_FIELD_ERROR
ALTER table t1 change invisible b int;
select * from t1;
select invisible ,a from t1;

--error ER_BAD_FIELD_ERROR
ALTER table t1 modify invisible char;
select * from t1;
select invisible ,a from t1;

--error ER_CANT_DROP_FIELD_OR_KEY
ALTER table t1 drop invisible;
select * from t1;
select invisible ,a from t1;

ALTER table t1 add invisible int;
select * from t1;
select invisible1, invisible ,a from t1;

#set debug_dbug=@old_debug;
ALTER table t1 add hid int default 2;
set debug_dbug= "+d,test_completely_invisible";
select * from t1;
select invisible ,a from t1;

drop table t1;
set debug_dbug=@old_debug;

## Test Index on USER_DEFINED_INVISIBLE

Create table t1( a int default(99) invisible, b int);
insert into t1 values(1);
insert into t1 values(2);
insert into t1 values(3);
insert into t1 values(4);
select * from t1 order by b;
alter table t1 add index(a);
alter table t1 add index(a,b);
show index from t1;
drop table t1;

## Test Index on PSEUDO_invisible_INVISIBLE

set debug_dbug= "+d,test_pseudo_invisible";
Create table t1( a int default(99) invisible, b int);

--error ER_KEY_COLUMN_DOES_NOT_EXITS
Create table t2( a int default(99) invisible, b int, unique(invisible));

set debug_dbug=@old_debug;
insert into t1 values(1);
insert into t1 values(2);
insert into t1 values(3);
insert into t1 values(4);
select * from t1 order by b;
select invisible, a, b from t1 order by b;
--error ER_KEY_COLUMN_DOES_NOT_EXITS
alter table t1 add index(invisible);
--error ER_KEY_COLUMN_DOES_NOT_EXITS
alter table t1 add index(b,invisible);
show index from t1;
drop table t1;

## Test Index on COMPLETELY_INVISIBLE

set debug_dbug= "+d,test_completely_invisible";
Create table t1( a int default(99) invisible, b int);

--error ER_KEY_COLUMN_DOES_NOT_EXITS
Create table t2( a int default(99) invisible, b int, unique(invisible));
insert into t1 values(1);
insert into t1 values(2);
insert into t1 values(3);
insert into t1 values(4);
select * from t1 order by b;
select invisible, a, b from t1 order by b;
set debug_dbug=@old_debug;

--error ER_KEY_COLUMN_DOES_NOT_EXITS
alter table t1 add index(invisible);
--error ER_KEY_COLUMN_DOES_NOT_EXITS
alter table t1 add index(b,invisible);
show index from t1;
drop table t1;
## Sytem Generated index on invisible column
set debug_dbug= "+d,test_completely_invisible,test_invisible_index";
## index name will be invisible
Create table t1( a int default(99) , b int,c int, index(b));
set debug_dbug=@old_debug;
Show index from t1;
select * from INFORMATION_SCHEMA.STATISTICS where TABLE_SCHEMA ='test' and table_name='t1';
show create table t1;
insert into t1 values(1,1,1);
insert into t1 values(2,2,2);
insert into t1 values(3,3,3);
insert into t1 values(4,4,4);
set debug_dbug= "+d,test_completely_invisible,test_invisible_index";
select invisible, a ,b from t1 order by b;
explain select * from t1 where invisible =9;
alter table t1 add x int default 3;
select invisible, a ,b from t1;
set debug_dbug=@old_debug;
Show index from t1;
## Sytem Generated Index modification
--error ER_KEY_COLUMN_DOES_NOT_EXITS
create index a1 on t1(invisible);
set debug_dbug= "+d,test_completely_invisible,test_invisible_index";
## index does not exist for user
--error ER_CANT_DROP_FIELD_OR_KEY
drop index invisible on t1;
explain select * from t1 where invisible =9;
## index name will be changed
create index invisible on t1(c);
explain select * from t1 where invisible =9;
show indexes in t1;
drop table t1;
set @old_debug= @@debug_dbug;
