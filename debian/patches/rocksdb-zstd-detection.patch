From: https://github.com/MariaDB/server/commit/2ed415765aca144ea0177633cb5ac56a0c65be44
Date: Sun, 7 Jun 2020 09:58:15 +0300
Subject: [PATCH] Fix RocksDB detection of ZSTD

The library finder needs to have capitals in its name so that FIND_PACKAGE
will load the correct finder and actually detect that libzstd is available.

Without this change the CMake would just always silently skip ZSTD since
it would never find it.

Also remove QUIET from the RocksDB FIND_PACKAGE call so that it is easier
to read in build logs what libraries were detected. Also add missing
underscores to error messages.

Without this change the Debian autopkgtests would fail with:

+ mysql -e INSTALL PLUGIN RocksDB SONAME 'ha_rocksdb';
+ grep -qE kLZ4(Compression)? supported: 1 /var/lib/mysql/#rocksdb/LOG
+ grep -qE kSnappy(Compression)? supported: 1 /var/lib/mysql/#rocksdb/LOG
+ grep -qE kZlib(Compression)? supported: 1 /var/lib/mysql/#rocksdb/LOG
+ grep -qE kZSTD(Compression)? supported: 1 /var/lib/mysql/#rocksdb/LOG
autopkgtest [08:38:21]: test smoke: -----------------------]
smoke                FAIL non-zero exit status 1

---
 cmake/{Findzstd.cmake => FindZSTD.cmake} | 0
 storage/rocksdb/build_rocksdb.cmake      | 6 +++---
 2 files changed, 3 insertions(+), 3 deletions(-)
 rename cmake/{Findzstd.cmake => FindZSTD.cmake} (100%)

--- a/storage/rocksdb/build_rocksdb.cmake
+++ b/storage/rocksdb/build_rocksdb.cmake
@@ -36,15 +36,15 @@ endif()
 # Optional compression libraries.
 
 foreach(compression_lib LZ4 BZip2 ZSTD snappy)
-  FIND_PACKAGE(${compression_lib} QUIET)
+  FIND_PACKAGE(${compression_lib})
 
   SET(WITH_ROCKSDB_${compression_lib} AUTO CACHE STRING
   "Build RocksDB  with ${compression_lib} compression. Possible values are 'ON', 'OFF', 'AUTO' and default is 'AUTO'")
 
   if(${WITH_ROCKSDB_${compression_lib}} STREQUAL "ON"  AND NOT ${${compression_lib}_FOUND})
     MESSAGE(FATAL_ERROR
-      "${compression_lib} library was not found, but WITH_ROCKSDB${compression_lib} option is ON.\
-      Either set WITH_ROCKSDB${compression_lib} to OFF, or make sure ${compression_lib} is installed")
+      "${compression_lib} library was not found, but WITH_ROCKSDB_${compression_lib} option is ON.\
+      Either set WITH_ROCKSDB_${compression_lib} to OFF, or make sure ${compression_lib} is installed")
   endif()
 endforeach()
 
--- /dev/null
+++ b/cmake/FindZSTD.cmake
@@ -0,0 +1,25 @@
+# - Find zstd
+# Find the zstd compression library and includes
+#
+# ZSTD_INCLUDE_DIR - where to find zstd.h, etc.
+# ZSTD_LIBRARIES - List of libraries when using zstd.
+# ZSTD_FOUND - True if zstd found.
+
+if (DEFINED ZSTD_LIBRARIES)
+  return()
+endif()
+
+find_path(ZSTD_INCLUDE_DIR
+  NAMES zstd.h
+  HINTS ${ZSTD_ROOT_DIR}/include)
+
+find_library(ZSTD_LIBRARIES
+  NAMES zstd
+  HINTS ${ZSTD_ROOT_DIR}/lib)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(zstd DEFAULT_MSG ZSTD_LIBRARIES ZSTD_INCLUDE_DIR)
+
+mark_as_advanced(
+  ZSTD_LIBRARIES
+  ZSTD_INCLUDE_DIR)
--- a/cmake/Findzstd.cmake
+++ /dev/null
@@ -1,25 +0,0 @@
-# - Find zstd
-# Find the zstd compression library and includes
-#
-# ZSTD_INCLUDE_DIR - where to find zstd.h, etc.
-# ZSTD_LIBRARIES - List of libraries when using zstd.
-# ZSTD_FOUND - True if zstd found.
-
-if (DEFINED ZSTD_LIBRARIES)
-  return()
-endif()
-
-find_path(ZSTD_INCLUDE_DIR
-  NAMES zstd.h
-  HINTS ${ZSTD_ROOT_DIR}/include)
-
-find_library(ZSTD_LIBRARIES
-  NAMES zstd
-  HINTS ${ZSTD_ROOT_DIR}/lib)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(zstd DEFAULT_MSG ZSTD_LIBRARIES ZSTD_INCLUDE_DIR)
-
-mark_as_advanced(
-  ZSTD_LIBRARIES
-  ZSTD_INCLUDE_DIR)
