/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif


/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int LEX::case_stmt_action_expr(Item* expr)
{
  int case_expr_id= spcont->register_case_expr();
  sp_instr_set_case_expr *i;

  if (spcont->push_case_expr_id(case_expr_id))
    return 1;

  i= new (thd->mem_root)
    sp_instr_set_case_expr(sphead->instructions(), spcont, case_expr_id, expr,
                           this);

  sphead->add_cont_backpatch(i);
  return sphead->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int LEX::case_stmt_action_when(Item *when, bool simple)
{
  uint ip= sphead->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new (thd->mem_root)
         Item_case_expr(thd, spcont->get_current_case_expr_id());

#ifdef DBUG_ASSERT_EXISTS
    if (var)
    {
      var->m_sp= sphead;
    }
#endif

    expr= new (thd->mem_root) Item_func_eq(thd, var, when);
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, expr, this);
  }
  else
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, when, this);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return
    !MY_TEST(i) ||
    sphead->push_backpatch(thd, i, spcont->push_label(thd, &empty_clex_str, 0)) ||
    sphead->add_cont_backpatch(i) ||
    sphead->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int LEX::case_stmt_action_then()
{
  uint ip= sphead->instructions();
  sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, spcont);
  if (!MY_TEST(i) || sphead->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sphead->backpatch(spcont->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to after END CASE
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sphead->push_backpatch(thd, i, spcont->last_label());
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

bool
LEX::set_system_variable(enum enum_var_type var_type,
                         sys_var *sysvar, const LEX_CSTRING *base_name,
                         Item *val)
{
  set_var *setvar;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (spcont && sysvar == Sys_autocommit_ptr)
    sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), sysvar->name.str);
    return TRUE;
  }

  if (!(setvar= new (thd->mem_root) set_var(thd, var_type, sysvar,
                                            base_name, val)))
    return TRUE;

  return var_list.push_back(setvar, thd->mem_root);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

bool LEX::set_trigger_new_row(const LEX_CSTRING *name, Item *val)
{
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new (thd->mem_root) Item_null(thd);

  DBUG_ASSERT(trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (trg_chistics.event == TRG_EVENT_INSERT ||
               trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(thd, current_context(),
                               Item_trigger_field::NEW_ROW,
                               name, UPDATE_ACL, FALSE);

  if (unlikely(trg_fld == NULL))
    return TRUE;

  sp_fld= new (thd->mem_root)
        sp_instr_set_trigger_field(sphead->instructions(),
                                   spcont, trg_fld, val, this);

  if (unlikely(sp_fld == NULL))
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
Item_splocal*
LEX::create_item_for_sp_var(const Lex_ident_cli_st *cname, sp_variable *spvar)
{
  const Sp_rcontext_handler *rh;
  Item_splocal *item;
  const char *start_in_q= cname->pos();
  const char *end_in_q= cname->end();
  uint pos_in_q, len_in_q;
  Lex_ident_sys name(thd, cname);

  if (name.is_null())
    return NULL;  // EOM

  /* If necessary, look for the variable. */
  if (spcont && !spvar)
    spvar= find_variable(&name, &rh);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spcont && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= (uint)(start_in_q - sphead->m_tmp_query);
  len_in_q= (uint)(end_in_q - start_in_q);

  item= new (thd->mem_root)
    Item_splocal(thd, rh, &name, spvar->offset, spvar->type_handler(),
                 pos_in_q, len_in_q);

#ifdef DBUG_ASSERT_EXISTS
  if (item)
    item->m_sp= sphead;
#endif

  return item;
}

/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(thd, left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(thd, left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(thd, left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select
          statement uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
                       is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool LEX::add_select_to_union_list(bool is_union_distinct,
                                   enum sub_select_type type,
                                   bool is_top_level)
{
  const char *type_name= (type == INTERSECT_TYPE ? "INTERSECT" :
                     (type == EXCEPT_TYPE ? "EXCEPT" : "UNION"));
  /*
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "INTO");
    return TRUE;
  }
  if (current_select->order_list.first && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ORDER BY");
    return TRUE;
  }

  if (current_select->explicit_limit && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "LIMIT");
    return TRUE;
  }
  if (current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    thd->parse_error();
    return TRUE;
  }
  if (!is_union_distinct && (type == INTERSECT_TYPE || type == EXCEPT_TYPE))
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ALL");
    return TRUE;
  }
  /*
    Priority implementation, but also trying to keep things as flat
    as possible */
  if (type == INTERSECT_TYPE &&
      (current_select->linkage != INTERSECT_TYPE &&
       current_select != current_select->master_unit()->first_select())
     && !(thd->variables.sql_mode & MODE_ORACLE))
  {
    /*
      This and previous SELECTs should go one level down because of
      priority
    */
    SELECT_LEX *prev= exclude_last_select();
    if (add_unit_in_brackets(prev))
      return TRUE;
    return add_select_to_union_list(is_union_distinct, type, 0);
  }
  else
  {
    check_automatic_up(type);
  }
  /* This counter shouldn't be incremented for UNION parts */
  nest_level--;
  if (mysql_new_select(this, 0, NULL))
    return TRUE;
  mysql_init_select(this);
  current_select->linkage= type;
  current_select->with_all_modifier= !is_union_distinct;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    current_select->master_unit()->union_distinct= current_select;
  else
    DBUG_ASSERT(type == UNION_TYPE);
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    if (no_lookahead)
        lex->sphead->m_tmp_query= lip->get_ptr();
    else
        lex->sphead->m_tmp_query= lip->get_tok_end();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    sp_head *sp= lex->sphead;

    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      LEX_STRING qbuff;
      sp_instr_stmt *i;
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      if (!(i= new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex->spcont, lex)))
        return true;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      if (no_lookahead)
        qbuff.length= lip->get_ptr() - sp->m_tmp_query;
      else
        qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

      if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                          qbuff.length + 5)))
        return true;

      strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
              qbuff.length);
      qbuff.length+= 4;
      i->m_query= qbuff;
      if (sp->add_instr(i))
        return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}

void LEX::add_key_to_list(LEX_CSTRING *field_name,
                          enum Key::Keytype type, bool check_exists)
{
  Key *key;
  MEM_ROOT *mem_root= thd->mem_root;
  key= new (mem_root)
        Key(type, &null_clex_str, HA_KEY_ALG_UNDEF, false,
             DDL_options(check_exists ?
                         DDL_options::OPT_IF_NOT_EXISTS :
                         DDL_options::OPT_NONE));
  key->columns.push_back(new (mem_root) Key_part_spec(field_name, 0),
                         mem_root);
  alter_info.key_list.push_back(key, mem_root);
}

bool LEX::add_alter_list(const char *name, Virtual_column_info *expr,
                         bool exists)
{
  MEM_ROOT *mem_root= thd->mem_root;
  Alter_column *ac= new (mem_root) Alter_column(name, expr, exists);
  if (unlikely(ac == NULL))
    return true;
  alter_info.alter_list.push_back(ac, mem_root);
  alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
  return false;
}

void LEX::init_last_field(Column_definition *field,
                          const LEX_CSTRING *field_name,
                          const CHARSET_INFO *cs)
{
  last_field= field;

  field->field_name= *field_name;

  /* reset LEX fields that are used in Create_field::set_and_check() */
  charset= cs;
}


bool LEX::set_bincmp(CHARSET_INFO *cs, bool bin)
{
  /*
     if charset is NULL - we're parsing a field declaration.
     we cannot call find_bin_collation for a field here, because actual
     field charset is determined in get_sql_field_charset() much later.
     so we only set a flag.
  */
  if (!charset)
  {
    charset= cs;
    last_field->flags|= bin ? BINCMP_FLAG : 0;
    return false;
  }

  charset= bin ? find_bin_collation(cs ? cs : charset)
               :                    cs ? cs : charset;
  return charset == NULL;
}

#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


Virtual_column_info *add_virtual_expression(THD *thd, Item *expr)
{
  Virtual_column_info *v= new (thd->mem_root) Virtual_column_info();
  if (unlikely(!v))
     return 0;
   v->expr= expr;
   v->utf8= 0;  /* connection charset */
   return v;
}


#line 831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.hh".  */
#ifndef YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
# define YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FORCE_LOOKAHEAD = 346,
    FOREIGN = 347,
    FOR_SYM = 348,
    FOR_SYSTEM_TIME_SYM = 349,
    FROM = 350,
    FULLTEXT_SYM = 351,
    GE = 352,
    GOTO_ORACLE_SYM = 353,
    GRANT = 354,
    GROUP_SYM = 355,
    GROUP_CONCAT_SYM = 356,
    LAG_SYM = 357,
    LEAD_SYM = 358,
    HAVING = 359,
    HEX_NUM = 360,
    HEX_STRING = 361,
    HOUR_MICROSECOND_SYM = 362,
    HOUR_MINUTE_SYM = 363,
    HOUR_SECOND_SYM = 364,
    IDENT = 365,
    IDENT_QUOTED = 366,
    IF_SYM = 367,
    IGNORE_DOMAIN_IDS_SYM = 368,
    IGNORE_SYM = 369,
    INDEX_SYM = 370,
    INFILE = 371,
    INNER_SYM = 372,
    INOUT_SYM = 373,
    INSENSITIVE_SYM = 374,
    INSERT = 375,
    INTERSECT_SYM = 376,
    INTERVAL_SYM = 377,
    INTO = 378,
    INT_SYM = 379,
    IN_SYM = 380,
    IS = 381,
    ITERATE_SYM = 382,
    JOIN_SYM = 383,
    KEYS = 384,
    KEY_SYM = 385,
    KILL_SYM = 386,
    LE = 387,
    LEADING = 388,
    LEAVE_SYM = 389,
    LEFT = 390,
    LEX_HOSTNAME = 391,
    LIKE = 392,
    LIMIT = 393,
    LINEAR_SYM = 394,
    LINES = 395,
    LOAD = 396,
    LOCATOR_SYM = 397,
    LOCK_SYM = 398,
    LONGBLOB = 399,
    LONGTEXT = 400,
    LONG_NUM = 401,
    LONG_SYM = 402,
    LOOP_SYM = 403,
    LOW_PRIORITY = 404,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 405,
    MATCH = 406,
    MAX_SYM = 407,
    MAXVALUE_SYM = 408,
    MEDIAN_SYM = 409,
    MEDIUMBLOB = 410,
    MEDIUMINT = 411,
    MEDIUMTEXT = 412,
    MINUTE_MICROSECOND_SYM = 413,
    MINUTE_SECOND_SYM = 414,
    MIN_SYM = 415,
    MODIFIES_SYM = 416,
    MOD_SYM = 417,
    MYSQL_CONCAT_SYM = 418,
    NATURAL = 419,
    NCHAR_STRING = 420,
    NE = 421,
    NEG = 422,
    NOT2_SYM = 423,
    NOT_SYM = 424,
    NOW_SYM = 425,
    NO_WRITE_TO_BINLOG = 426,
    NTILE_SYM = 427,
    NULL_SYM = 428,
    NUM = 429,
    NUMERIC_SYM = 430,
    NTH_VALUE_SYM = 431,
    ON = 432,
    OPTIMIZE = 433,
    OPTIONALLY = 434,
    ORACLE_CONCAT_SYM = 435,
    OR2_SYM = 436,
    ORDER_SYM = 437,
    OR_SYM = 438,
    OTHERS_ORACLE_SYM = 439,
    OUTER = 440,
    OUTFILE = 441,
    OUT_SYM = 442,
    OVER_SYM = 443,
    PACKAGE_ORACLE_SYM = 444,
    PAGE_CHECKSUM_SYM = 445,
    PARAM_MARKER = 446,
    PARSE_VCOL_EXPR_SYM = 447,
    PARTITION_SYM = 448,
    PERCENT_ORACLE_SYM = 449,
    PERCENT_RANK_SYM = 450,
    PERCENTILE_CONT_SYM = 451,
    PERCENTILE_DISC_SYM = 452,
    POSITION_SYM = 453,
    PRECISION = 454,
    PRIMARY_SYM = 455,
    PROCEDURE_SYM = 456,
    PURGE = 457,
    RAISE_ORACLE_SYM = 458,
    RANGE_SYM = 459,
    RANK_SYM = 460,
    READS_SYM = 461,
    READ_SYM = 462,
    READ_WRITE_SYM = 463,
    REAL = 464,
    RECURSIVE_SYM = 465,
    REF_SYSTEM_ID_SYM = 466,
    REFERENCES = 467,
    REGEXP = 468,
    RELEASE_SYM = 469,
    RENAME = 470,
    REPEAT_SYM = 471,
    REPLACE = 472,
    REQUIRE_SYM = 473,
    RESIGNAL_SYM = 474,
    RESTRICT = 475,
    RETURNING_SYM = 476,
    RETURN_MARIADB_SYM = 477,
    RETURN_ORACLE_SYM = 478,
    REVOKE = 479,
    RIGHT = 480,
    ROWS_SYM = 481,
    ROWTYPE_ORACLE_SYM = 482,
    ROW_NUMBER_SYM = 483,
    SECOND_MICROSECOND_SYM = 484,
    SELECT_SYM = 485,
    SENSITIVE_SYM = 486,
    SEPARATOR_SYM = 487,
    SERVER_OPTIONS = 488,
    SET = 489,
    SET_VAR = 490,
    SHIFT_LEFT = 491,
    SHIFT_RIGHT = 492,
    SHOW = 493,
    SIGNAL_SYM = 494,
    SMALLINT = 495,
    SPATIAL_SYM = 496,
    SPECIFIC_SYM = 497,
    SQLEXCEPTION_SYM = 498,
    SQLSTATE_SYM = 499,
    SQLWARNING_SYM = 500,
    SQL_BIG_RESULT = 501,
    SQL_SMALL_RESULT = 502,
    SQL_SYM = 503,
    SSL_SYM = 504,
    STARTING = 505,
    STATS_AUTO_RECALC_SYM = 506,
    STATS_PERSISTENT_SYM = 507,
    STATS_SAMPLE_PAGES_SYM = 508,
    STDDEV_SAMP_SYM = 509,
    STD_SYM = 510,
    STRAIGHT_JOIN = 511,
    SUBSTRING = 512,
    SUM_SYM = 513,
    SYSDATE = 514,
    TABLE_REF_PRIORITY = 515,
    TABLE_SYM = 516,
    TERMINATED = 517,
    TEXT_STRING = 518,
    THEN_SYM = 519,
    TINYBLOB = 520,
    TINYINT = 521,
    TINYTEXT = 522,
    TO_SYM = 523,
    TRAILING = 524,
    TRIGGER_SYM = 525,
    TRIM = 526,
    TRUE_SYM = 527,
    ULONGLONG_NUM = 528,
    UNDERSCORE_CHARSET = 529,
    UNDO_SYM = 530,
    UNION_SYM = 531,
    UNIQUE_SYM = 532,
    UNLOCK_SYM = 533,
    UNSIGNED = 534,
    UPDATE_SYM = 535,
    USAGE = 536,
    USE_SYM = 537,
    USING = 538,
    UTC_DATE_SYM = 539,
    UTC_TIMESTAMP_SYM = 540,
    UTC_TIME_SYM = 541,
    VALUES = 542,
    VALUES_IN_SYM = 543,
    VALUES_LESS_SYM = 544,
    VARBINARY = 545,
    VARCHAR = 546,
    VARIANCE_SYM = 547,
    VARYING = 548,
    VAR_SAMP_SYM = 549,
    WHEN_SYM = 550,
    WHERE = 551,
    WHILE_SYM = 552,
    WITH = 553,
    WITH_CUBE_SYM = 554,
    WITH_ROLLUP_SYM = 555,
    WITH_SYSTEM_SYM = 556,
    XOR = 557,
    YEAR_MONTH_SYM = 558,
    ZEROFILL = 559,
    IMPOSSIBLE_ACTION = 560,
    BODY_MARIADB_SYM = 561,
    ELSEIF_ORACLE_SYM = 562,
    ELSIF_MARIADB_SYM = 563,
    EXCEPTION_ORACLE_SYM = 564,
    GOTO_MARIADB_SYM = 565,
    OTHERS_MARIADB_SYM = 566,
    PACKAGE_MARIADB_SYM = 567,
    RAISE_MARIADB_SYM = 568,
    ROWTYPE_MARIADB_SYM = 569,
    ACTION = 570,
    ADMIN_SYM = 571,
    ADDDATE_SYM = 572,
    AFTER_SYM = 573,
    AGAINST = 574,
    AGGREGATE_SYM = 575,
    ALGORITHM_SYM = 576,
    ALWAYS_SYM = 577,
    ANY_SYM = 578,
    ASCII_SYM = 579,
    AT_SYM = 580,
    ATOMIC_SYM = 581,
    AUTHORS_SYM = 582,
    AUTOEXTEND_SIZE_SYM = 583,
    AUTO_INC = 584,
    AUTO_SYM = 585,
    AVG_ROW_LENGTH = 586,
    AVG_SYM = 587,
    BACKUP_SYM = 588,
    BEGIN_MARIADB_SYM = 589,
    BEGIN_ORACLE_SYM = 590,
    BINLOG_SYM = 591,
    BIT_SYM = 592,
    BLOCK_SYM = 593,
    BOOL_SYM = 594,
    BOOLEAN_SYM = 595,
    BTREE_SYM = 596,
    BYTE_SYM = 597,
    CACHE_SYM = 598,
    CASCADED = 599,
    CATALOG_NAME_SYM = 600,
    CHAIN_SYM = 601,
    CHANGED = 602,
    CHARSET = 603,
    CHECKPOINT_SYM = 604,
    CHECKSUM_SYM = 605,
    CIPHER_SYM = 606,
    CLASS_ORIGIN_SYM = 607,
    CLIENT_SYM = 608,
    CLOB_MARIADB_SYM = 609,
    CLOB_ORACLE_SYM = 610,
    CLOSE_SYM = 611,
    COALESCE = 612,
    CODE_SYM = 613,
    COLLATION_SYM = 614,
    COLON_ORACLE_SYM = 615,
    COLUMNS = 616,
    COLUMN_ADD_SYM = 617,
    COLUMN_CHECK_SYM = 618,
    COLUMN_CREATE_SYM = 619,
    COLUMN_DELETE_SYM = 620,
    COLUMN_GET_SYM = 621,
    COLUMN_SYM = 622,
    COLUMN_NAME_SYM = 623,
    COMMENT_SYM = 624,
    COMMITTED_SYM = 625,
    COMMIT_SYM = 626,
    COMPACT_SYM = 627,
    COMPLETION_SYM = 628,
    COMPRESSED_SYM = 629,
    CONCURRENT = 630,
    CONNECTION_SYM = 631,
    CONSISTENT_SYM = 632,
    CONSTRAINT_CATALOG_SYM = 633,
    CONSTRAINT_NAME_SYM = 634,
    CONSTRAINT_SCHEMA_SYM = 635,
    CONTAINS_SYM = 636,
    CONTEXT_SYM = 637,
    CONTRIBUTORS_SYM = 638,
    CPU_SYM = 639,
    CUBE_SYM = 640,
    CURRENT_SYM = 641,
    CURRENT_POS_SYM = 642,
    CURSOR_NAME_SYM = 643,
    CYCLE_SYM = 644,
    DATAFILE_SYM = 645,
    DATA_SYM = 646,
    DATETIME = 647,
    DATE_FORMAT_SYM = 648,
    DATE_SYM = 649,
    DAY_SYM = 650,
    DEALLOCATE_SYM = 651,
    DECODE_MARIADB_SYM = 652,
    DECODE_ORACLE_SYM = 653,
    DEFINER_SYM = 654,
    DELAYED_SYM = 655,
    DELAY_KEY_WRITE_SYM = 656,
    DES_KEY_FILE = 657,
    DIAGNOSTICS_SYM = 658,
    DIRECTORY_SYM = 659,
    DISABLE_SYM = 660,
    DISCARD = 661,
    DISK_SYM = 662,
    DO_SYM = 663,
    DUMPFILE = 664,
    DUPLICATE_SYM = 665,
    DYNAMIC_SYM = 666,
    ENABLE_SYM = 667,
    END = 668,
    ENDS_SYM = 669,
    ENGINES_SYM = 670,
    ENGINE_SYM = 671,
    ENUM = 672,
    ERROR_SYM = 673,
    ERRORS = 674,
    ESCAPE_SYM = 675,
    EVENTS_SYM = 676,
    EVENT_SYM = 677,
    EVERY_SYM = 678,
    EXCHANGE_SYM = 679,
    EXAMINED_SYM = 680,
    EXCLUDE_SYM = 681,
    EXECUTE_SYM = 682,
    EXCEPTION_MARIADB_SYM = 683,
    EXIT_MARIADB_SYM = 684,
    EXIT_ORACLE_SYM = 685,
    EXPANSION_SYM = 686,
    EXPORT_SYM = 687,
    EXTENDED_SYM = 688,
    EXTENT_SIZE_SYM = 689,
    FAST_SYM = 690,
    FAULTS_SYM = 691,
    FILE_SYM = 692,
    FIRST_SYM = 693,
    FIXED_SYM = 694,
    FLUSH_SYM = 695,
    FOLLOWS_SYM = 696,
    FOLLOWING_SYM = 697,
    FORCE_SYM = 698,
    FORMAT_SYM = 699,
    FOUND_SYM = 700,
    FULL = 701,
    FUNCTION_SYM = 702,
    GENERAL = 703,
    GENERATED_SYM = 704,
    GEOMETRYCOLLECTION = 705,
    GEOMETRY_SYM = 706,
    GET_FORMAT = 707,
    GET_SYM = 708,
    GLOBAL_SYM = 709,
    GRANTS = 710,
    HANDLER_SYM = 711,
    HARD_SYM = 712,
    HASH_SYM = 713,
    HELP_SYM = 714,
    HIGH_PRIORITY = 715,
    HISTORY_SYM = 716,
    HOST_SYM = 717,
    HOSTS_SYM = 718,
    HOUR_SYM = 719,
    ID_SYM = 720,
    IDENTIFIED_SYM = 721,
    IGNORE_SERVER_IDS_SYM = 722,
    IMMEDIATE_SYM = 723,
    IMPORT = 724,
    INCREMENT_SYM = 725,
    INDEXES = 726,
    INITIAL_SIZE_SYM = 727,
    INSERT_METHOD = 728,
    INSTALL_SYM = 729,
    INVOKER_SYM = 730,
    IO_SYM = 731,
    IPC_SYM = 732,
    ISOLATION = 733,
    ISOPEN_SYM = 734,
    ISSUER_SYM = 735,
    INVISIBLE_SYM = 736,
    JSON_SYM = 737,
    KEY_BLOCK_SIZE = 738,
    LANGUAGE_SYM = 739,
    LAST_SYM = 740,
    LAST_VALUE = 741,
    LASTVAL_SYM = 742,
    LEAVES = 743,
    LESS_SYM = 744,
    LEVEL_SYM = 745,
    LINESTRING = 746,
    LIST_SYM = 747,
    LOCAL_SYM = 748,
    LOCKS_SYM = 749,
    LOGFILE_SYM = 750,
    LOGS_SYM = 751,
    MASTER_CONNECT_RETRY_SYM = 752,
    MASTER_DELAY_SYM = 753,
    MASTER_GTID_POS_SYM = 754,
    MASTER_HOST_SYM = 755,
    MASTER_LOG_FILE_SYM = 756,
    MASTER_LOG_POS_SYM = 757,
    MASTER_PASSWORD_SYM = 758,
    MASTER_PORT_SYM = 759,
    MASTER_SERVER_ID_SYM = 760,
    MASTER_SSL_CAPATH_SYM = 761,
    MASTER_SSL_CA_SYM = 762,
    MASTER_SSL_CERT_SYM = 763,
    MASTER_SSL_CIPHER_SYM = 764,
    MASTER_SSL_CRL_SYM = 765,
    MASTER_SSL_CRLPATH_SYM = 766,
    MASTER_SSL_KEY_SYM = 767,
    MASTER_SSL_SYM = 768,
    MASTER_SYM = 769,
    MASTER_USER_SYM = 770,
    MASTER_USE_GTID_SYM = 771,
    MASTER_HEARTBEAT_PERIOD_SYM = 772,
    MAX_CONNECTIONS_PER_HOUR = 773,
    MAX_QUERIES_PER_HOUR = 774,
    MAX_ROWS = 775,
    MAX_SIZE_SYM = 776,
    MAX_UPDATES_PER_HOUR = 777,
    MAX_STATEMENT_TIME_SYM = 778,
    MAX_USER_CONNECTIONS_SYM = 779,
    MEDIUM_SYM = 780,
    MEMORY_SYM = 781,
    MERGE_SYM = 782,
    MESSAGE_TEXT_SYM = 783,
    MICROSECOND_SYM = 784,
    MIGRATE_SYM = 785,
    MINUTE_SYM = 786,
    MINVALUE_SYM = 787,
    MIN_ROWS = 788,
    MODE_SYM = 789,
    MODIFY_SYM = 790,
    MONTH_SYM = 791,
    MULTILINESTRING = 792,
    MULTIPOINT = 793,
    MULTIPOLYGON = 794,
    MUTEX_SYM = 795,
    MYSQL_SYM = 796,
    MYSQL_ERRNO_SYM = 797,
    NAMES_SYM = 798,
    NAME_SYM = 799,
    NATIONAL_SYM = 800,
    NCHAR_SYM = 801,
    NEW_SYM = 802,
    NEXT_SYM = 803,
    NEXTVAL_SYM = 804,
    NOCACHE_SYM = 805,
    NOCYCLE_SYM = 806,
    NODEGROUP_SYM = 807,
    NONE_SYM = 808,
    NOTFOUND_SYM = 809,
    NO_SYM = 810,
    NOMAXVALUE_SYM = 811,
    NOMINVALUE_SYM = 812,
    NO_WAIT_SYM = 813,
    NOWAIT_SYM = 814,
    NUMBER_MARIADB_SYM = 815,
    NUMBER_ORACLE_SYM = 816,
    NVARCHAR_SYM = 817,
    OF_SYM = 818,
    OFFSET_SYM = 819,
    OLD_PASSWORD_SYM = 820,
    ONE_SYM = 821,
    ONLY_SYM = 822,
    ONLINE_SYM = 823,
    OPEN_SYM = 824,
    OPTIONS_SYM = 825,
    OPTION = 826,
    OWNER_SYM = 827,
    PACK_KEYS_SYM = 828,
    PAGE_SYM = 829,
    PARSER_SYM = 830,
    PARTIAL = 831,
    PARTITIONS_SYM = 832,
    PARTITIONING_SYM = 833,
    PASSWORD_SYM = 834,
    PERIOD_SYM = 835,
    PERSISTENT_SYM = 836,
    PHASE_SYM = 837,
    PLUGINS_SYM = 838,
    PLUGIN_SYM = 839,
    POINT_SYM = 840,
    POLYGON = 841,
    PORT_SYM = 842,
    PRECEDES_SYM = 843,
    PRECEDING_SYM = 844,
    PREPARE_SYM = 845,
    PRESERVE_SYM = 846,
    PREV_SYM = 847,
    PREVIOUS_SYM = 848,
    PRIVILEGES = 849,
    PROCESS = 850,
    PROCESSLIST_SYM = 851,
    PROFILE_SYM = 852,
    PROFILES_SYM = 853,
    PROXY_SYM = 854,
    QUARTER_SYM = 855,
    QUERY_SYM = 856,
    QUICK = 857,
    RAW_MARIADB_SYM = 858,
    RAW_ORACLE_SYM = 859,
    READ_ONLY_SYM = 860,
    REBUILD_SYM = 861,
    RECOVER_SYM = 862,
    REDOFILE_SYM = 863,
    REDO_BUFFER_SIZE_SYM = 864,
    REDUNDANT_SYM = 865,
    RELAY = 866,
    RELAYLOG_SYM = 867,
    RELAY_LOG_FILE_SYM = 868,
    RELAY_LOG_POS_SYM = 869,
    RELAY_THREAD = 870,
    RELOAD = 871,
    REMOVE_SYM = 872,
    REORGANIZE_SYM = 873,
    REPAIR = 874,
    REPEATABLE_SYM = 875,
    REPLICATION = 876,
    RESET_SYM = 877,
    RESTART_SYM = 878,
    RESOURCES = 879,
    RESTORE_SYM = 880,
    RESUME_SYM = 881,
    RETURNED_SQLSTATE_SYM = 882,
    RETURNS_SYM = 883,
    REUSE_SYM = 884,
    REVERSE_SYM = 885,
    ROLE_SYM = 886,
    ROLLBACK_SYM = 887,
    ROLLUP_SYM = 888,
    ROUTINE_SYM = 889,
    ROWCOUNT_SYM = 890,
    ROW_SYM = 891,
    ROW_COUNT_SYM = 892,
    ROW_FORMAT_SYM = 893,
    RTREE_SYM = 894,
    SAVEPOINT_SYM = 895,
    SCHEDULE_SYM = 896,
    SCHEMA_NAME_SYM = 897,
    SECOND_SYM = 898,
    SECURITY_SYM = 899,
    SEQUENCE_SYM = 900,
    SERIALIZABLE_SYM = 901,
    SERIAL_SYM = 902,
    SESSION_SYM = 903,
    SERVER_SYM = 904,
    SETVAL_SYM = 905,
    SHARE_SYM = 906,
    SHUTDOWN = 907,
    SIGNED_SYM = 908,
    SIMPLE_SYM = 909,
    SLAVE = 910,
    SLAVES = 911,
    SLAVE_POS_SYM = 912,
    SLOW = 913,
    SNAPSHOT_SYM = 914,
    SOCKET_SYM = 915,
    SOFT_SYM = 916,
    SONAME_SYM = 917,
    SOUNDS_SYM = 918,
    SOURCE_SYM = 919,
    SQL_BUFFER_RESULT = 920,
    SQL_CACHE_SYM = 921,
    SQL_CALC_FOUND_ROWS = 922,
    SQL_NO_CACHE_SYM = 923,
    SQL_THREAD = 924,
    STARTS_SYM = 925,
    START_SYM = 926,
    STATEMENT_SYM = 927,
    STATUS_SYM = 928,
    STOP_SYM = 929,
    STORAGE_SYM = 930,
    STORED_SYM = 931,
    STRING_SYM = 932,
    SUBCLASS_ORIGIN_SYM = 933,
    SUBDATE_SYM = 934,
    SUBJECT_SYM = 935,
    SUBPARTITIONS_SYM = 936,
    SUBPARTITION_SYM = 937,
    SUPER_SYM = 938,
    SUSPEND_SYM = 939,
    SWAPS_SYM = 940,
    SWITCHES_SYM = 941,
    SYSTEM = 942,
    SYSTEM_TIME_SYM = 943,
    TABLES = 944,
    TABLESPACE = 945,
    TABLE_CHECKSUM_SYM = 946,
    TABLE_NAME_SYM = 947,
    TEMPORARY = 948,
    TEMPTABLE_SYM = 949,
    TEXT_SYM = 950,
    THAN_SYM = 951,
    TIES_SYM = 952,
    TIMESTAMP = 953,
    TIMESTAMP_ADD = 954,
    TIMESTAMP_DIFF = 955,
    TIME_SYM = 956,
    TRANSACTION_SYM = 957,
    TRANSACTIONAL_SYM = 958,
    TRIGGERS_SYM = 959,
    TRIM_ORACLE = 960,
    TRUNCATE_SYM = 961,
    TYPES_SYM = 962,
    TYPE_SYM = 963,
    UDF_RETURNS_SYM = 964,
    UNBOUNDED_SYM = 965,
    UNCOMMITTED_SYM = 966,
    UNDEFINED_SYM = 967,
    UNDOFILE_SYM = 968,
    UNDO_BUFFER_SIZE_SYM = 969,
    UNICODE_SYM = 970,
    UNINSTALL_SYM = 971,
    UNKNOWN_SYM = 972,
    UNTIL_SYM = 973,
    UPGRADE_SYM = 974,
    USER_SYM = 975,
    USE_FRM = 976,
    VALUE_SYM = 977,
    VARCHAR2_MARIADB_SYM = 978,
    VARCHAR2_ORACLE_SYM = 979,
    VARIABLES = 980,
    VERSIONING_SYM = 981,
    VIA_SYM = 982,
    VIEW_SYM = 983,
    VIRTUAL_SYM = 984,
    WAIT_SYM = 985,
    WARNINGS = 986,
    WEEK_SYM = 987,
    WEIGHT_STRING_SYM = 988,
    WINDOW_SYM = 989,
    WITHIN = 990,
    WITHOUT = 991,
    WORK_SYM = 992,
    WRAPPER_SYM = 993,
    WRITE_SYM = 994,
    X509_SYM = 995,
    XA_SYM = 996,
    XML_SYM = 997,
    YEAR_SYM = 998,
    CONDITIONLESS_JOIN = 999,
    ON_SYM = 1000,
    PREC_BELOW_NOT = 1001,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1002,
    USER = 1003,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1004
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_element_head *with_element_head;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_view_suid view_suid;
  enum sub_select_type unit_type;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (THD *thd);

#endif /* !YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  707
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   98376

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  772
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1241
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3445
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5972

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1004

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   765,     2,     2,     2,   756,   751,     2,
     762,   763,   754,   753,   764,   752,   769,   755,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   771,   768,
     749,   747,   748,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   757,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,   750,   767,   758,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   759,   760,   761
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2249,  2249,  2259,  2258,  2283,  2290,  2292,  2296,  2297,
    2298,  2303,  2304,  2305,  2306,  2307,  2308,  2309,  2310,  2311,
    2312,  2313,  2314,  2315,  2316,  2317,  2318,  2319,  2320,  2321,
    2322,  2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,
    2332,  2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,
    2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,
    2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2363,  2372,
    2373,  2377,  2389,  2389,  2399,  2398,  2407,  2406,  2417,  2419,
    2419,  2430,  2431,  2435,  2447,  2446,  2463,  2462,  2471,  2472,
    2476,  2480,  2484,  2488,  2492,  2496,  2506,  2511,  2515,  2519,
    2523,  2527,  2531,  2536,  2540,  2545,  2573,  2577,  2581,  2586,
    2589,  2591,  2592,  2596,  2602,  2604,  2605,  2609,  2615,  2617,
    2618,  2622,  2629,  2633,  2648,  2652,  2658,  2664,  2670,  2680,
    2684,  2688,  2702,  2701,  2732,  2731,  2787,  2784,  2797,  2795,
    2808,  2806,  2818,  2817,  2832,  2830,  2842,  2840,  2849,  2848,
    2853,  2852,  2857,  2856,  2861,  2860,  2867,  2866,  2873,  2872,
    2877,  2876,  2882,  2889,  2896,  2900,  2904,  2904,  2910,  2921,
    2932,  2933,  2937,  2939,  2942,  2943,  2947,  2948,  2952,  2957,
    2963,  2969,  2977,  2983,  2989,  2997,  3005,  3013,  3021,  3029,
    3037,  3049,  3065,  3065,  3069,  3068,  3080,  3081,  3085,  3090,
    3095,  3100,  3105,  3110,  3115,  3123,  3122,  3155,  3154,  3161,
    3168,  3169,  3175,  3181,  3191,  3197,  3203,  3205,  3212,  3213,
    3217,  3227,  3228,  3236,  3236,  3281,  3295,  3300,  3308,  3309,
    3313,  3314,  3319,  3321,  3323,  3325,  3327,  3329,  3331,  3337,
    3338,  3342,  3346,  3354,  3353,  3364,  3363,  3374,  3373,  3386,
    3388,  3391,  3393,  3397,  3401,  3408,  3410,  3414,  3415,  3419,
    3427,  3432,  3439,  3445,  3450,  3455,  3463,  3465,  3469,  3470,
    3474,  3478,  3479,  3480,  3481,  3486,  3485,  3498,  3497,  3509,
    3510,  3514,  3515,  3520,  3523,  3535,  3540,  3546,  3552,  3561,
    3573,  3577,  3583,  3595,  3599,  3606,  3616,  3624,  3632,  3643,
    3644,  3651,  3653,  3652,  3671,  3670,  3684,  3686,  3691,  3701,
    3700,  3716,  3717,  3718,  3719,  3724,  3726,  3731,  3746,  3754,
    3758,  3778,  3779,  3783,  3787,  3793,  3799,  3805,  3811,  3821,
    3826,  3834,  3842,  3857,  3863,  3864,  3870,  3873,  3877,  3885,
    3902,  3904,  3922,  3928,  3930,  3932,  3934,  3936,  3938,  3940,
    3942,  3944,  3946,  3948,  3950,  3955,  3963,  3979,  3980,  3985,
    3991,  4000,  4007,  4016,  4025,  4030,  4039,  4041,  4043,  4052,
    4057,  4064,  4073,  4082,  4084,  4086,  4088,  4090,  4092,  4094,
    4096,  4098,  4100,  4102,  4104,  4106,  4111,  4112,  4120,  4132,
    4147,  4148,  4161,  4162,  4163,  4164,  4165,  4169,  4170,  4171,
    4172,  4173,  4174,  4175,  4176,  4177,  4178,  4182,  4183,  4184,
    4185,  4190,  4189,  4200,  4200,  4253,  4254,  4259,  4258,  4271,
    4284,  4284,  4288,  4293,  4298,  4304,  4313,  4318,  4323,  4329,
    4339,  4347,  4355,  4363,  4373,  4372,  4391,  4390,  4406,  4412,
    4420,  4421,  4425,  4433,  4438,  4443,  4451,  4452,  4467,  4485,
    4501,  4520,  4522,  4538,  4520,  4557,  4559,  4560,  4565,  4564,
    4634,  4636,  4634,  4644,  4649,  4650,  4654,  4655,  4660,  4664,
    4659,  4684,  4688,  4683,  4706,  4716,  4720,  4724,  4725,  4729,
    4740,  4738,  4755,  4754,  4769,  4768,  4785,  4786,  4790,  4798,
    4803,  4810,  4819,  4834,  4833,  4850,  4849,  4869,  4878,  4877,
    4885,  4884,  4893,  4898,  4907,  4892,  4917,  4916,  4927,  4926,
    4936,  4935,  4946,  4953,  4945,  4970,  4969,  4981,  4983,  4988,
    4990,  4992,  5009,  5014,  5020,  5027,  5028,  5036,  5042,  5051,
    5057,  5063,  5064,  5068,  5068,  5073,  5074,  5075,  5079,  5080,
    5081,  5085,  5089,  5090,  5091,  5095,  5096,  5097,  5098,  5099,
    5100,  5101,  5102,  5106,  5110,  5111,  5112,  5116,  5117,  5118,
    5119,  5120,  5124,  5128,  5129,  5130,  5134,  5135,  5136,  5137,
    5138,  5139,  5140,  5144,  5148,  5149,  5150,  5154,  5155,  5156,
    5161,  5169,  5177,  5185,  5198,  5211,  5216,  5221,  5229,  5237,
    5245,  5253,  5261,  5269,  5277,  5287,  5297,  5307,  5309,  5313,
    5318,  5328,  5329,  5342,  5341,  5344,  5350,  5352,  5351,  5354,
    5353,  5355,  5369,  5370,  5374,  5375,  5386,  5384,  5391,  5396,
    5398,  5397,  5400,  5399,  5404,  5441,  5442,  5447,  5446,  5462,
    5477,  5476,  5494,  5493,  5499,  5507,  5506,  5509,  5511,  5514,
    5513,  5522,  5525,  5524,  5533,  5534,  5540,  5541,  5558,  5559,
    5563,  5564,  5568,  5582,  5592,  5603,  5612,  5613,  5626,  5628,
    5627,  5632,  5630,  5641,  5642,  5646,  5660,  5672,  5673,  5686,
    5695,  5717,  5718,  5723,  5722,  5746,  5758,  5774,  5773,  5788,
    5787,  5801,  5806,  5811,  5831,  5849,  5853,  5880,  5892,  5893,
    5898,  5907,  5897,  5932,  5933,  5937,  5948,  5967,  5980,  6006,
    6007,  6012,  6011,  6048,  6057,  6058,  6062,  6063,  6067,  6069,
    6075,  6081,  6083,  6085,  6087,  6089,  6091,  6096,  6097,  6103,
    6119,  6122,  6139,  6149,  6149,  6170,  6171,  6175,  6176,  6180,
    6191,  6192,  6196,  6197,  6201,  6202,  6206,  6207,  6212,  6215,
    6223,  6226,  6233,  6237,  6243,  6245,  6249,  6250,  6254,  6255,
    6256,  6260,  6275,  6280,  6285,  6290,  6295,  6300,  6305,  6320,
    6326,  6341,  6346,  6361,  6367,  6385,  6390,  6395,  6400,  6405,
    6410,  6416,  6415,  6441,  6442,  6443,  6448,  6453,  6458,  6460,
    6462,  6464,  6470,  6475,  6480,  6489,  6498,  6504,  6510,  6515,
    6518,  6520,  6524,  6543,  6551,  6566,  6576,  6587,  6588,  6589,
    6590,  6591,  6592,  6593,  6597,  6598,  6599,  6603,  6604,  6605,
    6606,  6611,  6618,  6619,  6623,  6624,  6625,  6626,  6630,  6632,
    6638,  6637,  6645,  6644,  6652,  6651,  6659,  6658,  6668,  6665,
    6676,  6674,  6683,  6682,  6721,  6729,  6737,  6738,  6742,  6752,
    6753,  6757,  6758,  6762,  6767,  6766,  6804,  6804,  6807,  6806,
    6817,  6818,  6822,  6823,  6827,  6828,  6832,  6833,  6837,  6838,
    6839,  6840,  6842,  6841,  6847,  6852,  6860,  6861,  6866,  6869,
    6873,  6877,  6884,  6885,  6889,  6890,  6894,  6900,  6906,  6907,
    6915,  6914,  6933,  6939,  6940,  6950,  6960,  6960,  6963,  6964,
    6971,  6979,  6983,  6991,  6992,  6993,  6994,  6995,  6999,  7000,
    7001,  7017,  7021,  7025,  7029,  7031,  7038,  7040,  7045,  7047,
    7048,  7049,  7053,  7057,  7062,  7067,  7071,  7075,  7080,  7085,
    7093,  7111,  7112,  7119,  7126,  7134,  7139,  7144,  7149,  7154,
    7165,  7170,  7175,  7180,  7182,  7184,  7186,  7188,  7190,  7192,
    7194,  7202,  7204,  7209,  7210,  7211,  7212,  7213,  7214,  7215,
    7216,  7220,  7224,  7225,  7229,  7230,  7234,  7235,  7236,  7237,
    7238,  7242,  7243,  7244,  7245,  7246,  7250,  7256,  7257,  7262,
    7264,  7271,  7272,  7273,  7277,  7281,  7282,  7283,  7284,  7285,
    7286,  7290,  7291,  7292,  7293,  7297,  7298,  7302,  7303,  7307,
    7308,  7313,  7314,  7318,  7319,  7320,  7327,  7328,  7334,  7341,
    7345,  7346,  7350,  7351,  7355,  7363,  7371,  7380,  7384,  7390,
    7394,  7395,  7404,  7413,  7419,  7425,  7438,  7444,  7454,  7455,
    7459,  7464,  7468,  7469,  7473,  7474,  7478,  7485,  7489,  7490,
    7494,  7502,  7503,  7507,  7508,  7512,  7513,  7517,  7518,  7519,
    7526,  7530,  7531,  7535,  7536,  7537,  7538,  7539,  7551,  7555,
    7556,  7561,  7560,  7573,  7574,  7578,  7581,  7582,  7583,  7584,
    7588,  7596,  7603,  7604,  7608,  7618,  7619,  7623,  7624,  7627,
    7629,  7633,  7645,  7646,  7650,  7657,  7670,  7671,  7673,  7675,
    7681,  7686,  7692,  7698,  7705,  7715,  7716,  7717,  7718,  7719,
    7723,  7724,  7728,  7729,  7733,  7734,  7738,  7739,  7740,  7744,
    7745,  7749,  7753,  7765,  7766,  7770,  7771,  7775,  7776,  7780,
    7781,  7785,  7786,  7790,  7791,  7795,  7796,  7801,  7802,  7803,
    7807,  7809,  7814,  7819,  7821,  7829,  7837,  7843,  7852,  7853,
    7857,  7861,  7862,  7872,  7873,  7874,  7878,  7882,  7889,  7895,
    7907,  7908,  7912,  7914,  7924,  7938,  7923,  7959,  7958,  7972,
    7981,  7980,  7996,  7995,  8011,  8010,  8023,  8017,  8030,  8029,
    8064,  8069,  8074,  8079,  8085,  8084,  8091,  8098,  8108,  8097,
    8128,  8129,  8130,  8131,  8135,  8136,  8148,  8149,  8153,  8154,
    8157,  8159,  8167,  8175,  8177,  8179,  8180,  8188,  8189,  8195,
    8204,  8202,  8215,  8228,  8227,  8240,  8238,  8251,  8258,  8268,
    8269,  8293,  8300,  8304,  8310,  8308,  8325,  8327,  8332,  8340,
    8339,  8353,  8357,  8356,  8368,  8369,  8373,  8386,  8387,  8391,
    8395,  8402,  8407,  8411,  8418,  8422,  8427,  8435,  8443,  8453,
    8464,  8474,  8485,  8495,  8501,  8507,  8514,  8520,  8534,  8548,
    8553,  8557,  8562,  8563,  8564,  8569,  8574,  8580,  8582,  8583,
    8584,  8585,  8589,  8594,  8602,  8607,  8615,  8616,  8620,  8621,
    8625,  8625,  8628,  8630,  8634,  8635,  8639,  8640,  8649,  8650,
    8651,  8655,  8656,  8661,  8670,  8671,  8672,  8673,  8678,  8677,
    8687,  8686,  8694,  8701,  8711,  8728,  8731,  8738,  8742,  8749,
    8753,  8757,  8764,  8764,  8770,  8771,  8775,  8776,  8777,  8781,
    8782,  8791,  8798,  8799,  8804,  8803,  8815,  8816,  8817,  8821,
    8823,  8822,  8829,  8828,  8849,  8850,  8854,  8855,  8859,  8860,
    8861,  8865,  8866,  8871,  8870,  8891,  8892,  8896,  8901,  8902,
    8909,  8911,  8916,  8918,  8917,  8929,  8931,  8930,  8943,  8944,
    8949,  8958,  8959,  8960,  8964,  8971,  8981,  8989,  8998,  9000,
    8999,  9005,  9004,  9027,  9028,  9032,  9033,  9037,  9038,  9039,
    9040,  9041,  9042,  9046,  9047,  9052,  9051,  9072,  9073,  9074,
    9079,  9078,  9084,  9091,  9097,  9106,  9107,  9111,  9127,  9126,
    9139,  9140,  9144,  9145,  9149,  9160,  9171,  9172,  9177,  9176,
    9187,  9188,  9192,  9193,  9197,  9208,  9220,  9219,  9227,  9227,
    9236,  9237,  9242,  9243,  9252,  9263,  9264,  9265,  9266,  9267,
    9268,  9269,  9273,  9274,  9275,  9276,  9277,  9278,  9279,  9283,
    9283,  9291,  9291,  9303,  9307,  9309,  9313,  9313,  9324,  9328,
    9330,  9334,  9334,  9345,  9350,  9350,  9359,  9359,  9371,  9377,
    9375,  9382,  9394,  9392,  9399,  9409,  9414,  9413,  9418,  9422,
    9433,  9434,  9438,  9439,  9443,  9444,  9445,  9449,  9450,  9451,
    9455,  9456,  9457,  9458,  9459,  9463,  9463,  9481,  9488,  9490,
    9494,  9498,  9504,  9511,  9513,  9522,  9526,  9530,  9537,  9545,
    9549,  9557,  9560,  9567,  9571,  9575,  9579,  9586,  9587,  9591,
    9592,  9609,  9628,  9630,  9637,  9648,  9649,  9650,  9664,  9669,
    9691,  9697,  9703,  9709,  9715,  9716,  9717,  9718,  9719,  9723,
    9724,  9725,  9729,  9730,  9731,  9735,  9736,  9741,  9792,  9799,
    9842,  9848,  9854,  9860,  9866,  9872,  9878,  9884,  9890,  9896,
    9902,  9908,  9914,  9918,  9924,  9933,  9939,  9947,  9953,  9962,
    9968,  9976,  9986,  9992,  9999, 10006, 10014, 10020, 10029, 10033,
   10039, 10045, 10051, 10057, 10064, 10070, 10076, 10082, 10088, 10095,
   10101, 10107, 10113, 10119, 10125, 10131, 10137, 10143, 10147, 10148,
   10152, 10153, 10157, 10158, 10162, 10163, 10167, 10168, 10169, 10170,
   10171, 10172, 10176, 10177, 10182, 10186, 10190, 10191, 10192, 10196,
   10197, 10198, 10199, 10200, 10201, 10205, 10206, 10207, 10212, 10211,
   10217, 10225, 10248, 10255, 10264, 10265, 10266, 10267, 10271, 10280,
   10281, 10282, 10283, 10284, 10285, 10286, 10287, 10319, 10320, 10321,
   10322, 10323, 10324, 10325, 10326, 10327, 10328, 10329, 10330, 10337,
   10343, 10348, 10358, 10363, 10368, 10374, 10379, 10385, 10396, 10403,
   10408, 10413, 10418, 10423, 10428, 10433, 10441, 10442, 10443, 10447,
   10448, 10456, 10457, 10463, 10467, 10473, 10479, 10488, 10489, 10498,
   10505, 10519, 10525, 10531, 10540, 10549, 10555, 10561, 10567, 10573,
   10588, 10599, 10605, 10611, 10617, 10623, 10629, 10637, 10644, 10648,
   10653, 10661, 10682, 10689, 10695, 10702, 10709, 10715, 10721, 10727,
   10733, 10739, 10745, 10751, 10757, 10764, 10770, 10777, 10783, 10788,
   10793, 10798, 10803, 10821, 10827, 10833, 10838, 10845, 10852, 10860,
   10867, 10874, 10881, 10888, 10905, 10911, 10917, 10923, 10929, 10936,
   10942, 10948, 10957, 10968, 10975, 10981, 10987, 10994, 11002, 11008,
   11014, 11019, 11025, 11033, 11039, 11045, 11051, 11057, 11065, 11077,
   11084, 11099, 11105, 11112, 11119, 11126, 11133, 11140, 11144, 11151,
   11169, 11168, 11236, 11241, 11249, 11251, 11256, 11257, 11261, 11262,
   11266, 11267, 11271, 11278, 11286, 11313, 11319, 11325, 11331, 11337,
   11343, 11352, 11359, 11361, 11358, 11368, 11379, 11385, 11391, 11397,
   11403, 11409, 11415, 11421, 11427, 11434, 11433, 11458, 11467, 11485,
   11487, 11491, 11498, 11505, 11512, 11519, 11526, 11533, 11540, 11547,
   11554, 11565, 11572, 11583, 11594, 11614, 11613, 11619, 11636, 11642,
   11651, 11660, 11670, 11669, 11681, 11691, 11699, 11704, 11712, 11713,
   11718, 11723, 11726, 11728, 11732, 11737, 11745, 11746, 11750, 11754,
   11761, 11768, 11775, 11788, 11787, 11804, 11807, 11806, 11811, 11810,
   11815, 11814, 11818, 11823, 11824, 11828, 11829, 11830, 11831, 11832,
   11833, 11834, 11835, 11839, 11840, 11841, 11845, 11846, 11850, 11857,
   11865, 11866, 11870, 11877, 11885, 11894, 11904, 11905, 11914, 11923,
   11935, 11936, 11948, 11959, 11960, 11966, 11967, 11985, 11994, 11992,
   12010, 12008, 12019, 12029, 12027, 12045, 12044, 12054, 12065, 12063,
   12082, 12081, 12092, 12104, 12105, 12106, 12110, 12111, 12119, 12120,
   12124, 12139, 12140, 12144, 12144, 12185, 12251, 12294, 12295, 12304,
   12303, 12312, 12313, 12314, 12318, 12319, 12320, 12320, 12324, 12330,
   12338, 12338, 12353, 12370, 12371, 12379, 12389, 12388, 12403, 12420,
   12403, 12427, 12431, 12440, 12451, 12452, 12457, 12460, 12461, 12462,
   12466, 12467, 12472, 12471, 12477, 12476, 12484, 12485, 12488, 12490,
   12490, 12494, 12494, 12499, 12500, 12504, 12506, 12511, 12512, 12516,
   12527, 12541, 12542, 12543, 12544, 12545, 12546, 12547, 12548, 12549,
   12550, 12551, 12552, 12556, 12557, 12558, 12559, 12560, 12561, 12562,
   12563, 12564, 12568, 12569, 12570, 12571, 12574, 12576, 12577, 12581,
   12582, 12590, 12592, 12596, 12598, 12597, 12611, 12614, 12613, 12631,
   12633, 12637, 12642, 12650, 12651, 12668, 12691, 12692, 12698, 12699,
   12703, 12716, 12715, 12723, 12724, 12733, 12734, 12738, 12739, 12743,
   12744, 12758, 12759, 12763, 12773, 12782, 12789, 12796, 12806, 12807,
   12814, 12824, 12825, 12827, 12829, 12831, 12833, 12842, 12846, 12847,
   12851, 12863, 12865, 12870, 12869, 12922, 12927, 12935, 12936, 12937,
   12941, 12942, 12946, 12960, 12967, 12972, 12979, 12986, 12993, 13003,
   13008, 13013, 13017, 13023, 13029, 13038, 13047, 13051, 13058, 13059,
   13062, 13064, 13068, 13069, 13073, 13074, 13075, 13076, 13077, 13078,
   13082, 13083, 13084, 13085, 13086, 13090, 13091, 13092, 13093, 13097,
   13098, 13099, 13100, 13101, 13105, 13106, 13107, 13108, 13109, 13113,
   13118, 13119, 13123, 13124, 13128, 13129, 13130, 13135, 13134, 13168,
   13169, 13173, 13174, 13178, 13188, 13188, 13200, 13201, 13204, 13224,
   13228, 13233, 13241, 13246, 13257, 13245, 13259, 13274, 13286, 13285,
   13305, 13304, 13313, 13330, 13336, 13350, 13365, 13373, 13377, 13382,
   13381, 13390, 13395, 13401, 13406, 13411, 13418, 13416, 13430, 13431,
   13435, 13446, 13459, 13460, 13464, 13478, 13482, 13491, 13494, 13501,
   13502, 13510, 13518, 13509, 13532, 13539, 13531, 13553, 13561, 13562,
   13569, 13573, 13574, 13583, 13584, 13588, 13598, 13599, 13600, 13602,
   13601, 13613, 13615, 13619, 13620, 13621, 13625, 13626, 13630, 13631,
   13635, 13645, 13646, 13650, 13651, 13655, 13656, 13660, 13661, 13666,
   13665, 13681, 13680, 13695, 13696, 13700, 13701, 13705, 13710, 13718,
   13726, 13737, 13738, 13747, 13748, 13756, 13758, 13760, 13758, 13773,
   13781, 13772, 13807, 13808, 13812, 13819, 13827, 13828, 13832, 13842,
   13843, 13850, 13849, 13869, 13872, 13879, 13880, 13887, 13902, 13908,
   13907, 13919, 13918, 13933, 13935, 13939, 13940, 13944, 13959, 13977,
   13978, 13982, 13983, 13987, 13988, 13989, 13994, 13993, 14014, 14016,
   14019, 14021, 14024, 14025, 14028, 14032, 14036, 14040, 14044, 14048,
   14052, 14056, 14060, 14068, 14071, 14081, 14080, 14096, 14103, 14111,
   14119, 14127, 14135, 14143, 14150, 14157, 14163, 14165, 14167, 14176,
   14180, 14185, 14184, 14191, 14190, 14195, 14204, 14211, 14216, 14221,
   14226, 14231, 14236, 14238, 14240, 14242, 14249, 14257, 14259, 14267,
   14274, 14281, 14289, 14295, 14300, 14308, 14316, 14324, 14328, 14333,
   14340, 14345, 14352, 14359, 14365, 14371, 14377, 14385, 14390, 14397,
   14404, 14411, 14418, 14423, 14428, 14433, 14438, 14445, 14467, 14469,
   14471, 14476, 14477, 14480, 14482, 14486, 14487, 14491, 14492, 14496,
   14497, 14501, 14502, 14506, 14507, 14511, 14512, 14520, 14532, 14531,
   14547, 14546, 14556, 14557, 14558, 14559, 14560, 14564, 14565, 14569,
   14576, 14577, 14578, 14582, 14583, 14596, 14597, 14598, 14613, 14612,
   14625, 14624, 14636, 14640, 14641, 14656, 14659, 14658, 14671, 14672,
   14677, 14679, 14681, 14683, 14685, 14687, 14695, 14697, 14699, 14701,
   14706, 14708, 14716, 14718, 14720, 14722, 14739, 14740, 14744, 14745,
   14748, 14750, 14751, 14755, 14771, 14772, 14777, 14776, 14786, 14787,
   14791, 14791, 14795, 14794, 14800, 14804, 14805, 14809, 14810, 14818,
   14817, 14828, 14832, 14836, 14849, 14848, 14863, 14864, 14865, 14869,
   14870, 14871, 14880, 14881, 14885, 14889, 14897, 14903, 14915, 14927,
   14938, 14951, 14914, 14963, 14964, 14968, 14969, 14973, 14974, 14982,
   14986, 14987, 14988, 14991, 14993, 14997, 14998, 15002, 15007, 15014,
   15019, 15026, 15028, 15032, 15033, 15037, 15042, 15050, 15051, 15055,
   15057, 15065, 15066, 15070, 15071, 15072, 15076, 15078, 15083, 15084,
   15093, 15094, 15098, 15099, 15103, 15116, 15121, 15126, 15131, 15139,
   15147, 15152, 15165, 15174, 15190, 15197, 15203, 15213, 15214, 15222,
   15223, 15224, 15225, 15239, 15245, 15251, 15257, 15263, 15269, 15288,
   15298, 15308, 15314, 15321, 15331, 15339, 15347, 15359, 15360, 15369,
   15368, 15388, 15389, 15394, 15395, 15402, 15400, 15428, 15429, 15435,
   15440, 15449, 15469, 15470, 15474, 15479, 15487, 15492, 15500, 15505,
   15510, 15515, 15521, 15526, 15534, 15539, 15544, 15549, 15555, 15563,
   15564, 15575, 15583, 15587, 15593, 15599, 15609, 15615, 15624, 15634,
   15635, 15639, 15640, 15641, 15645, 15653, 15661, 15669, 15677, 15678,
   15686, 15687, 15695, 15696, 15701, 15710, 15711, 15719, 15720, 15728,
   15729, 15730, 15734, 15747, 15777, 15787, 15787, 15789, 15799, 15800,
   15801, 15802, 15803, 15804, 15805, 15806, 15811, 15812, 15813, 15814,
   15815, 15816, 15817, 15818, 15819, 15827, 15828, 15829, 15830, 15834,
   15835, 15836, 15837, 15838, 15839, 15840, 15841, 15845, 15846, 15847,
   15848, 15849, 15850, 15851, 15852, 15853, 15857, 15858, 15859, 15860,
   15861, 15862, 15863, 15864, 15877, 15878, 15879, 15880, 15881, 15882,
   15883, 15884, 15885, 15886, 15887, 15888, 15889, 15890, 15891, 15892,
   15893, 15894, 15895, 15896, 15897, 15898, 15899, 15900, 15901, 15902,
   15903, 15904, 15905, 15906, 15907, 15908, 15909, 15910, 15911, 15912,
   15913, 15914, 15915, 15916, 15917, 15918, 15919, 15920, 15921, 15922,
   15923, 15924, 15925, 15926, 15927, 15928, 15929, 15930, 15931, 15972,
   15973, 15974, 15975, 15976, 15977, 15988, 15989, 15990, 15991, 15992,
   15993, 15994, 15995, 15996, 15997, 16001, 16002, 16003, 16010, 16011,
   16012, 16016, 16017, 16018, 16027, 16028, 16029, 16030, 16031, 16032,
   16033, 16034, 16035, 16036, 16037, 16038, 16039, 16040, 16041, 16042,
   16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050, 16051, 16052,
   16053, 16054, 16055, 16056, 16057, 16058, 16059, 16060, 16068, 16069,
   16070, 16071, 16072, 16073, 16074, 16075, 16076, 16077, 16078, 16079,
   16080, 16081, 16082, 16083, 16084, 16085, 16086, 16087, 16088, 16089,
   16090, 16091, 16092, 16093, 16094, 16095, 16096, 16097, 16098, 16099,
   16100, 16101, 16102, 16103, 16104, 16105, 16106, 16107, 16108, 16109,
   16110, 16111, 16112, 16113, 16118, 16119, 16120, 16121, 16122, 16123,
   16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133,
   16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141, 16142, 16143,
   16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151, 16152, 16153,
   16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163,
   16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173,
   16174, 16175, 16176, 16177, 16178, 16179, 16180, 16181, 16182, 16183,
   16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192, 16193,
   16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201, 16202, 16203,
   16204, 16205, 16206, 16207, 16208, 16209, 16210, 16211, 16212, 16213,
   16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222, 16223,
   16224, 16225, 16226, 16227, 16228, 16229, 16230, 16231, 16232, 16233,
   16234, 16235, 16236, 16237, 16238, 16239, 16240, 16241, 16242, 16243,
   16244, 16245, 16246, 16247, 16248, 16249, 16250, 16251, 16252, 16253,
   16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263,
   16264, 16265, 16266, 16267, 16268, 16269, 16270, 16271, 16272, 16273,
   16274, 16275, 16276, 16277, 16278, 16279, 16280, 16281, 16282, 16283,
   16284, 16285, 16286, 16287, 16288, 16289, 16290, 16291, 16292, 16293,
   16294, 16295, 16296, 16297, 16298, 16299, 16300, 16301, 16302, 16303,
   16304, 16305, 16306, 16307, 16308, 16309, 16310, 16311, 16312, 16313,
   16314, 16315, 16316, 16317, 16318, 16319, 16320, 16321, 16322, 16323,
   16324, 16325, 16326, 16327, 16328, 16329, 16330, 16331, 16332, 16333,
   16334, 16335, 16336, 16337, 16338, 16339, 16340, 16341, 16342, 16343,
   16344, 16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353,
   16354, 16355, 16356, 16357, 16358, 16359, 16360, 16361, 16362, 16363,
   16364, 16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372, 16373,
   16374, 16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16383,
   16384, 16396, 16395, 16408, 16412, 16407, 16429, 16430, 16436, 16435,
   16442, 16441, 16451, 16450, 16461, 16460, 16466, 16474, 16476, 16481,
   16481, 16490, 16489, 16503, 16502, 16507, 16511, 16512, 16513, 16517,
   16518, 16519, 16520, 16524, 16525, 16526, 16527, 16532, 16537, 16542,
   16551, 16556, 16561, 16566, 16571, 16576, 16581, 16586, 16600, 16611,
   16630, 16648, 16660, 16668, 16673, 16689, 16690, 16691, 16692, 16696,
   16715, 16733, 16734, 16738, 16739, 16740, 16741, 16745, 16760, 16764,
   16765, 16766, 16776, 16777, 16778, 16784, 16790, 16802, 16801, 16815,
   16816, 16822, 16831, 16832, 16836, 16837, 16841, 16860, 16861, 16862,
   16867, 16868, 16873, 16872, 16889, 16899, 16910, 16909, 16941, 16942,
   16946, 16947, 16951, 16952, 16953, 16954, 16956, 16955, 16968, 16969,
   16970, 16971, 16972, 16978, 16983, 16989, 16995, 17001, 17008, 17015,
   17019, 17026, 17035, 17037, 17042, 17047, 17054, 17061, 17068, 17075,
   17082, 17089, 17101, 17102, 17106, 17107, 17111, 17116, 17124, 17134,
   17153, 17156, 17158, 17162, 17163, 17170, 17172, 17176, 17177, 17182,
   17181, 17185, 17184, 17188, 17187, 17191, 17190, 17193, 17194, 17195,
   17196, 17197, 17198, 17199, 17200, 17201, 17202, 17203, 17204, 17205,
   17206, 17207, 17208, 17209, 17210, 17211, 17212, 17213, 17214, 17215,
   17216, 17217, 17218, 17219, 17223, 17224, 17228, 17229, 17233, 17240,
   17247, 17257, 17267, 17276, 17285, 17298, 17303, 17311, 17316, 17324,
   17329, 17336, 17336, 17337, 17337, 17340, 17347, 17352, 17358, 17364,
   17370, 17374, 17378, 17379, 17383, 17411, 17413, 17417, 17421, 17425,
   17432, 17438, 17444, 17450, 17456, 17465, 17466, 17470, 17471, 17476,
   17477, 17481, 17482, 17486, 17487, 17491, 17492, 17497, 17496, 17506,
   17515, 17516, 17520, 17521, 17526, 17527, 17528, 17533, 17534, 17535,
   17539, 17551, 17560, 17566, 17575, 17584, 17597, 17599, 17601, 17606,
   17607, 17612, 17611, 17628, 17627, 17639, 17639, 17660, 17661, 17668,
   17676, 17677, 17678, 17682, 17683, 17688, 17687, 17709, 17716, 17717,
   17721, 17722, 17726, 17727, 17728, 17733, 17741, 17762, 17789, 17791,
   17795, 17796, 17800, 17801, 17809, 17810, 17811, 17812, 17818, 17824,
   17834, 17835, 17840, 17853, 17869, 17870, 17871, 17875, 17876, 17880,
   17881, 17886, 17887, 17891, 17897, 17906, 17906, 17934, 17935, 17936,
   17937, 17938, 17939, 17940, 17944, 17945, 17946, 17947, 17957, 17959,
   17965, 17971, 17981, 17990, 17996, 18001, 18005, 17979, 18057, 18075,
   18074, 18092, 18101, 18090, 18117, 18125, 18116, 18139, 18143, 18147,
   18151, 18155, 18159, 18167, 18168, 18184, 18191, 18198, 18208, 18209,
   18210, 18214, 18215, 18216, 18220, 18221, 18226, 18228, 18227, 18233,
   18234, 18238, 18245, 18255, 18261, 18272
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FORCE_LOOKAHEAD", "FOREIGN", "FOR_SYM",
  "FOR_SYSTEM_TIME_SYM", "FROM", "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM",
  "GRANT", "GROUP_SYM", "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM",
  "HAVING", "HEX_NUM", "HEX_STRING", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT",
  "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "':'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23",
  "sf_tail_not_aggregate", "sf_tail_aggregate", "create_function_tail",
  "create_aggregate_function_tail", "opt_sequence", "sequence_defs",
  "sequence_def", "force_lookahead", "server_def", "$@24",
  "server_options_list", "server_option", "event_tail", "$@25",
  "ev_schedule_time", "$@26", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@27", "clear_privileges", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@28",
  "$@29", "$@30", "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams",
  "sp_fdparam_list", "sp_fdparams", "sp_param_name",
  "sp_param_name_and_type", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_parenthesized_fdparam_list", "$@31",
  "sp_parenthesized_pdparam_list", "$@32", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "sp_decl_body",
  "$@33", "sp_decl_handler", "$@34",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@35", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@36",
  "sp_proc_stmt_statement", "$@37", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@38", "reset_lex_expr", "$@39",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "assignment_source_lex", "assignment_source_expr", "$@40",
  "for_loop_bound_expr", "$@41", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@42", "$@43", "$@44", "sp_elseifs",
  "case_stmt_specification", "$@45", "case_stmt_body", "$@46", "$@47",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@48", "$@49", "searched_when_clause", "$@50",
  "$@51", "else_clause_opt", "sp_label", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@52", "sp_unlabeled_block", "$@53",
  "sp_unlabeled_block_not_atomic", "$@54", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "while_body", "$@55", "repeat_body", "$@56", "pop_sp_loop_label",
  "sp_labeled_control", "$@57", "$@58", "$@59", "$@60", "$@61", "$@62",
  "sp_unlabeled_control", "$@63", "$@64", "$@65", "$@66", "$@67",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@68", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@69", "$@70", "$@71", "create_like", "opt_create_select",
  "create_select_query_expression", "$@72", "$@73", "$@74",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@75",
  "have_partitioning", "partition_entry", "$@76", "partition", "$@77",
  "part_type_def", "$@78", "$@79", "$@80", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@81", "$@82", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@83", "part_name",
  "opt_part_values", "$@84", "$@85", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@86", "$@87",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@88", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@89",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@90", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@91", "$@92", "$@93",
  "$@94", "$@95", "$@96", "$@97", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@98", "field_type_or_serial", "$@99", "$@100", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@101", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@102", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "field_type_all",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1", "opt_precision", "attribute_list",
  "attribute", "opt_compression_method", "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "collate", "opt_binary", "binary",
  "opt_bin_mod", "ws_nweights", "$@103", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@104", "$@105", "$@106", "$@107", "$@108", "$@109", "$@110",
  "$@111", "$@112", "$@113", "$@114", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@115", "$@116", "$@117", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@118",
  "add_part_extra", "reorg_partition_rule", "$@119", "reorg_parts_rule",
  "$@120", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@121", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@122", "$@123", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@124",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@125", "opt_checksum_type",
  "repair_table_or_view", "$@126", "repair", "$@127", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@128", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@129", "persistent_index_stat_spec",
  "$@130", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@131", "check", "$@132",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@133", "opt_no_write_to_binlog",
  "rename", "$@134", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@135", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@136", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@137", "cache_keys_spec", "$@138", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@139", "$@140",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@141", "select_parent_view_proper", "select_paren_view", "$@142",
  "select_paren_derived", "$@143", "$@144", "select_init3", "$@145",
  "select_init3_union_query_term", "$@146", "select_init3_view", "$@147",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@148", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "predicate", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "opt_dyncol_type",
  "dyncol_type", "numeric_dyncol_type", "temporal_dyncol_type",
  "string_dyncol_type", "$@149", "dyncall_create_element",
  "dyncall_create_list", "plsql_cursor_attr", "explicit_cursor_attr",
  "trim_operands", "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@150", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@151", "$@152", "$@153",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@154",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@155", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@156", "cast_type", "$@157", "$@158",
  "$@159", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@160", "$@161", "$@162", "$@163", "$@164", "$@165", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@166", "table_primary_derived",
  "select_derived_union", "$@167", "union_list_derived_part2", "$@168",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@169", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@170", "select_derived2", "$@171", "$@172", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@173",
  "$@174", "index_hints_list", "opt_index_hints_list", "$@175",
  "opt_key_definition", "$@176", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@177", "opt_having_clause", "$@178",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@179",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@180", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@181", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@182", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@183",
  "$@184", "do", "$@185", "drop", "$@186", "$@187", "$@188", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@189", "$@190", "replace",
  "$@191", "$@192", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@193", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@194", "no_braces_with_names",
  "$@195", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_ignore", "expr_or_ignore_or_default",
  "opt_insert_update", "$@196", "$@197", "update", "$@198", "$@199",
  "update_list", "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@200", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "single_multi", "$@201", "$@202",
  "opt_select_expressions", "table_wild_list", "table_wild_one",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@203", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@204", "show_param",
  "$@205", "$@206", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@207", "$@208", "explainable_command",
  "describe_command", "analyze_stmt_command", "opt_extended_describe",
  "opt_format_json", "opt_describe_column", "flush", "$@209",
  "flush_options", "$@210", "opt_flush_lock", "flush_lock", "$@211",
  "flush_options_list", "flush_option", "opt_table_list",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@212", "reset_options",
  "reset_option", "$@213", "$@214", "slave_reset_options",
  "master_reset_options", "purge", "$@215", "purge_options",
  "purge_option", "kill", "$@216", "kill_type", "kill_option",
  "opt_connection", "kill_expr", "shutdown", "use", "load", "$@217",
  "$@218", "$@219", "$@220", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "hex_or_bin_String", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "opt_with_clause", "with_clause", "$@221", "opt_recursive", "with_list",
  "with_list_element", "$@222", "opt_with_column_list", "with_column_list",
  "with_element_head", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "label_ident", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@223", "$@224", "$@225",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@226", "$@227", "$@228",
  "start_option_value_list_following_option_type", "$@229",
  "option_value_list_continued", "option_value_list", "$@230", "$@231",
  "option_value", "$@232", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@233",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@234", "handler", "$@235",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@236", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@237", "$@238", "$@239",
  "$@240", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@241", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@242", "union_list_view", "$@243", "union_order_or_limit", "$@244",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@245", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@246", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@247", "$@248",
  "$@249", "$@250", "$@251", "udf_tail", "sf_return_type", "$@252",
  "sf_tail", "$@253", "$@254", "sp_tail", "$@255", "$@256", "xa",
  "opt_format_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "$@257", "opt_migrate", "install",
  "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,    61,    62,    60,
     124,    38,    45,    43,    42,    47,    37,    94,   126,  1002,
    1003,  1004,    40,    41,    44,    33,   123,   125,    59,    46,
      64,    58
};
# endif

#define YYPACT_NINF -5255

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5255)))

#define YYTABLE_NINF -3378

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   10620,  2984,   956, 91009, -5255,   138, -5255,   358, -5255, -5255,
   -5255,  2534, -5255, -5255, -5255, -5255, -5255, -5255,   218,   565,
   -5255,   533, -5255, -5255, -5255, 86571,    36,   503, -5255, -5255,
   87839, -5255,   703, -5255, 87839, -5255, -5255, 91009, -5255,  1409,
   -5255,  2457,    35,  1621,   565,  1073, -5255, -5255, 91643,   533,
    1538, 75773, -5255,  1578, 91009,   533, -5255,  1073, 91009, -5255,
     197,   209, -5255,  1629,  1999,  1927,  1871, -5255, -5255,  1424,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255,  2595, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   76407, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,   310,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, 91009, 91009,  1315,
    1381, 91009,  1911,  1918, 87205, 91009,  1918, -5255,   380, -5255,
   -5255,  1761, -5255,  1462, -5255,   565,  1940, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  1482,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  2024,
    2119,   422,  2142,  2303, 91009,  1281,  1918,  2278,  1918,  1918,
    1918,  1918,  2456,  1918,  1918, 91009, -5255,  1918,  1918,   915,
   91009, 36295, -5255,  1279,   829,  2467, -5255, -5255, -5255, -5255,
   -5255, -5255, 55379,   565, 22263,  2567,   315,  3410,  1888, -5255,
    2331, -5255, -5255, 91009, -5255, -5255, 55379,   360, -5255,  2331,
   37033, -5255, 34850, 14074,  2331,   565,  2487, -5255, 22263, -5255,
   -5255, -5255, -5255,  2335,  1073, -5255, 87205, -5255, -5255, -5255,
   -5255,  2628, 22263,   311, -5255, -5255, -5255,  2275, 91009,  2118,
     367,   853, 87205, 91009,  2119,  2606, -5255,  1564,  1275, -5255,
    2033,  2119,   412,  2049,  2119,  2491, 91009,  2119, -5255, -5255,
    1730,  1730,  1730,  2282,  1730, -5255,  1730, -5255, -5255,  1980,
   91009,  2644, -5255, -5255, -5255,  2644,  2644,  2111,  2660,  2668,
    2670,   405,  1584,  1503,  1524,  1761,   219,  1462,   293, -5255,
   -5255, -5255,  2026, -5255, -5255,   261, -5255,  2115, -5255,  2079,
   -5255,  2039,    42, 58066, -5255, 91009,  2709, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255,   548, -5255, -5255,  2541,   544,
    2169,  2394,  2090, -5255,  2572, 87205, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, 91009,  2060, -5255,  2757, 22263,  2024, -5255,
    2573, -5255, -5255, -5255, -5255, 75773, -5255, 91009, -5255,  2841,
   -5255, -5255,  2756, -5255, -5255, 79597,   447, 91009,  2769, 91009,
   91009, 91009, 91009, 91009, 91009, -5255, 87205,  2180, -5255, -5255,
    1918,  1918, -5255,  2737,  2270,  2239,  2046,  2121,  2407, -5255,
    2310, -5255, -5255,  2200, -5255, -5255,   157, -5255, -5255, -5255,
      78,   120,   122,   124,  2724,   149,    59,   165,   240, -5255,
   -5255, -5255,  2631,  2727,  2145, -5255,  2498, 22263, -5255, -5255,
   -5255,  2799, -5255, -5255,   154,  2574,  1253, 75773, 96715, 78953,
   97633, 97633, 97633, -5255,   254,  2457, 91009, 97174, 91009, 49367,
   -5255,  2147, -5255, -5255, 12656, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, 91009, -5255, -5255,  1864,  2614, -5255, -5255,
   -5255, -5255, -5255,  2181, -5255, -5255, -5255, -5255, -5255, -5255,
   27541, -5255,  2193,  2196,  2214, 17739,  2218,  2222,  2241,  2254,
    2259,  2121,  2121,  2121,  2277,  2281,  2285,  2298, -5255,  2301,
    2304,  2309,  2311, -5255,  2316, -5255,  2319,  2329,  2337, -5255,
   -5255,    84,   263,  2341,  2342, 23017,  2348, -5255, 71335,  2355,
    2359,  2365,  2368, -5255, -5255, 22263,  2277,  2378, -5255, -5255,
    2383, -5255,  2385,  2396,  2402,  2410,  2412,  2414,  2425,  2439,
    2445,  2796,  2447,  2452,  2455,  2463,  2277, -5255,  2469, -5255,
   -5255,  1766,  2121,  2277,  2277,  2479,  2481,  2483,  2486,  2488,
    2496,  2503,  2505, 88473,  2516,  2518,  2520,  2524,  2528,  2533,
    2535,    33,  2538,  2540,  2544,  2550,  2552,  2555,  2582,  2590,
    2597,  2605,  2611,  2613,  2615,  2617,  2622,  2624,  2279,  2627,
    2629,  2630,  2635,  2637,  2315,  2641,  2643,  2645,  2647,  2650,
    2651,  2652,    50,  2656,  2659,    73,  2664,  2675,  2676,  2677,
    2679,  2685,  2689,  2690, 28295, 29049, 27541, 22263, -5255, 91009,
   92277, -5255,  9421,  1598,  3119, 27541, -5255, -5255, -5255,  2958,
   -5255,  2865, -5255, -5255, -5255, -5255, -5255, -5255,  2981, -5255,
    3032, -5255, -5255,  3046,  2584, -5255,  3113, -5255, -5255, -5255,
   -5255, -5255,  2663,  2691,  3199,  3261, -5255, -5255, -5255, -5255,
    2960, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  2693,  2707, -5255,  3113, -5255, -5255,
   58760, 75773, 56047, -5255, -5255, -5255, 71969, -5255, -5255,  2270,
    2891,  3288, -5255,  3371, -5255,  3298, 62870,  3246,   -48,   340,
     341,   471, 42488,   195, 84035,   474,   265,  2716, 67529, 43938,
    2718,    67,  2719, -5255,  2720,  2721,  2729,  2734,  2736,  2740,
    2741, -5255, -5255, -5255,  2820,  2751,   872,  1050, -5255, -5255,
     762,  2842,   868, -5255,  3098, -5255,  1050, -5255, 37694,  3382,
    2267, -5255,   904, -5255,  3428, -5255, -5255,  2851,  2845,  2869,
   -5255,   662, -5255,  2119, -5255,  1009, -5255,  3382,  1050,  2267,
   -5255,  3041,  3123,  1241,  3448, -5255,  1097, -5255, -5255,  2799,
   -5255,  3016, 91009, -5255, -5255,  2779, 75773, 75773,   874,   923,
    9421,  2782, -5255, 22263,  3264,  9547, 39059, -5255,   180, -5255,
   -5255, 91009, -5255,  2887, -5255, -5255,   805, -5255,  3205, -5255,
    2786, -5255, 92911,   923, -5255, -5255,   -77,  3175, -5255,  2794,
   -5255, -5255, -5255, -5255, 75773, -5255, -5255, -5255, -5255, -5255,
   -5255,  2798, -5255, -5255,  3001,  2890, -5255,  2824, -5255, -5255,
     162,  3495, -5255,  2457, 91009, -5255, -5255,  2644, -5255,  2644,
    2644,  2644,  2644,  2644, -5255, -5255, -5255,  2849,  3131, -5255,
    3135, -5255,  2572,  1940, 45959,  2293,  1425,  2826,   261,  2823,
    3296,  3359, -5255, -5255, -5255,  2101, -5255, -5255,  1722,  3529,
    3201, -5255, 91009, -5255, -5255, -5255,  2121,  2825, -5255, -5255,
   -5255, -5255, -5255,  3591, -5255, -5255, 75773,  3027,  3209,  3209,
    3209,  3596, -5255, -5255, -5255, 58066, 75773, -5255, -5255, -5255,
     544, -5255,  1366, 91009, 75773,  2873, -5255, 75773,  2833, 22263,
   -5255, 22263, 55379,  3190,  9421, -5255, -5255, 75773,  1174, -5255,
   -5255, -5255,  3591,  3209, 75773,  3590, 75773,  3309, -5255,  2846,
   -5255,  2840, -5255, -5255, -5255,  3434, -5255, -5255, -5255,  2843,
    2180, 59453, -5255,  1193,  3198, 58760, 75773, -5255, -5255,  3208,
    2987, -5255, -5255, -5255, -5255, -5255, -5255,  2929, -5255, -5255,
    2858, -5255, -5255, -5255,  2860, -5255,  2860,  2860, -5255, -5255,
    2860, 58760, -5255, -5255, 58066,  1539,  9983,  3511,  8927, -5255,
   71969, -5255, 23771, -5255, 24525, -5255, -5255, -5255,  3132,   208,
    1230, -5255, -5255,  3329, 91009,  3080,  3535,  3513, -5255, -5255,
   -5255, -5255, -5255, -5255,  3342,  2877,  3496,  2875, -5255, -5255,
   22263,  2883, -5255, -5255, -5255, -5255, -5255, -5255, -5255, 75773,
    2888, 27541, 27541, -5255,  3643,  3643,  3643, 22263,  8930,   444,
    3238, 22263, 22263, 22263,  2162,  2889, -5255, -5255, -5255,   291,
   -5255,  2894, 22263, 22263, 72603,  2896, -5255,  5277, 22263,  3592,
   22263, 22263, 22263, 22263, 22263,  9095, 22263, -5255, -5255, 92277,
   72603,  3343,  2897, -5255,  2895, -5255,  2186, 22263,  2274, 22263,
     419, -5255, 22263, 22263,  2902, 22263, 22263, 29803,  2905, 22263,
   22263, 22263,  2906,  3037,  3643,  3643, 22263,  2289, -5255, 16985,
   -5255, -5255, -5255, -5255, -5255,  3643,  3643, 22263, 22263,  2398,
   22263, 22263, 22263, -5255,  2904, 22263, 22263, 22263, 22263, 22263,
   22263, 22263, -5255, 22263, 22263, 22263, 22263, 22263, 22263,  1411,
   22263, 22263, 75773, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
    3582, 75773, 22263, 22263, 22263, 22263,  3583, 22263, 22263, 22263,
    2915, 22263, 75773, 22263, -5255, 22263,  3109,  3109, -5255, 22263,
   16985, 22263,  2916, 73237, 22263, 22263, 22263, 22263, 23017, -5255,
   23017, -5255, -5255,  2917,  3551, -5255,  3383, 22263,  2913, 68164,
   -5255, -5255, 29803, -5255,   365, -5255, -5255, -5255, -5255, 22263,
   -5255, -5255, -5255, 22263, 22263, 16231, 29803,  2923, 29803, 29803,
    3550,  2074, 29803, 29803, 29803, 29803, 29803, 29803, 29803, 30557,
   31311, 29803, 29803, 29803, 29803, -5255, 87205, 27541, 77675,  2926,
    3589, -5255, 92277, -5255,  2105,   516,   518,  3410, 32785, -5255,
    2931, -5255,  3429,  2932, -5255,   -33,  2922, 75773, -5255, -5255,
   -5255,  3505,  2935,  3607, 58760, 58066,  1687,  2933,   511,  2939,
   -5255, -5255, 59453, 91009, -5255, -5255, -5255, -5255, -5255,  3671,
   22263, -5255, 58760, -5255,  1041, 15477, -5255,   312,  1421,    67,
   -5255, -5255, -5255, -5255, -5255, 15477, 91009, 63548,  2942,  3040,
    2956,  2644, 91009, 75773, 91009, 93545, 91009, 91009, 75773, 58760,
   75773, -5255, -5255, -5255, 91009,  1050,  2267,   975,  1050,  3593,
   -5255,  1645,  1645, -5255, -5255, -5255, 84669, -5255, -5255, -5255,
    1050, 91009, 91009,  1050, 58066, -5255,  2267,  1951, -5255,  3243,
    3028, -5255, -5255, -5255,  3289, -5255, -5255,  3633,  2969, -5255,
    3314, -5255, -5255,  3063, -5255, -5255, 75773, -5255, -5255,  2267,
   -5255,  2267,  2267, 22263,  1050,  1050,  1050,   768, -5255,  2973,
   -5255,  2977, -5255, -5255,  2970,  3616,  2982, -5255, -5255,  3555,
     953, -5255,  3403, -5255,  3536, -5255, 22263,  3264,  9421, -5255,
   -5255,  3255, -5255,  3257,  3258,  3262, -5255, -5255, -5255, -5255,
    3413,  3265, -5255,  2119,  3270, -5255, -5255,  2993, -5255, -5255,
   -5255, 32785, 87205, -5255,  3003, -5255,  3021, -5255, -5255, -5255,
   95447, -5255, 94179, -5255,  2119, -5255, -5255, -5255, 75773,  3503,
   -5255,  2119,  1564, 91009, -5255, -5255, -5255,  1677, -5255, -5255,
   -5255,  3114,   412, -5255, -5255,   -33,  1730,  3194, -5255, -5255,
   -5255, 87205, -5255, -5255, -5255, -5255, -5255,  3688, -5255, 59453,
   58066, 87205, 91009, 91009, 91009, 75773, 75773,  2644, -5255, -5255,
    2644, -5255,  2644, -5255,  2644,  3049, -5255, -5255, -5255, -5255,
     146,  1061,  3755, -5255,  1382, -5255,  2155,  1382,  3309,  3382,
   -5255,  3687, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  3029,  1425, -5255, -5255, -5255,  3020, -5255,
    3023,  2115,  2293, -5255, -5255, -5255, -5255, -5255, -5255,   182,
   -5255, -5255, -5255,   410,  3389,  1437, -5255, -5255, 87205,  1437,
      -1,   937, -5255,  3025,  2119,  1349, -5255,  1349, -5255,  3328,
   -5255,  3330,   198, -5255,   -33, -5255, -5255, -5255, -5255, -5255,
   75773,  3031, -5255,  3216, 91009,  2060,  3039,  3042,  9421,  9421,
   50035,  3775,  3510,  9848,   109,  3088, -5255, -5255, -5255, -5255,
   -5255, 75773, -5255, -5255,  1175,  1946,  3526,  3505,  3121, -5255,
    3050, -5255, -5255,   374, -5255,  3636, 91009,  3724, 80231, -5255,
   75773, 91009,  1193,  3056, -5255, -5255, -5255, -5255, -5255,    67,
   -5255,  3057,   189, 75773, 75773, 55379, -5255,  3060, -5255, -5255,
   91009, -5255, -5255, -5255, -5255,  3558,    43, 33428, 73871, -5255,
   73871, 73871, -5255, -5255, -5255, -5255, -5255,    59, -5255, -5255,
   -5255, -5255, -5255, -5255, 22263, 46653,  9421, -5255, -5255, 75773,
   -5255,  3711,   407, -5255,   245, 75773, -5255, -5255, 22263, -5255,
    3706,  3195, 91009, -5255,  3771, -5255, -5255, -5255, -5255, -5255,
   -5255,  9421, 91009, 91009, 55379, 55379, 22263, -5255,  1283, 22263,
   -5255,  3069, -5255,  3070,  3071,  9035,  3423, 22263, 22263, -5255,
    9039,   401,  2006, -5255,  3074,  3084, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  3079, -5255, -5255, -5255,  3782,  3801,
    3081, -5255,  3082, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  3748, -5255,  6776, -5255, -5255,  2096,  2697,
    3838,  3902,  3911,  3093,  4065,  2904,  1776,  3089, 72603, 92277,
    3643,  3087,  6789,  3643,  3091,  4129,  6859,  4193, -5255,  6882,
    6918,  1847, -5255,  4447,  4588,  4625, -5255, -5255,  3092,  3094,
    2722,  3643,  3096, 18493, 19247, 20001,  9115,  3102,  3105,  3117,
    4691,  6923,  3643,  3118,  6964,  1965,  6985, 92277,  4737,  6996,
    4787, -5255,  2017,  4890,  5005,  5146,  5330,  7024,  7322,  5384,
    5478,  5576,  2042, -5255, -5255, -5255, -5255,  3120,  7374,  7385,
    3124,  3122,  2076,  7417,  7437,  7512,  2103,  2106,  2112, 75773,
    3126,  7624,  7649,  5706,  2129, 75773,  7680,  7699,  6072, -5255,
    7719,  3127,  6182,  2753,  3129,  3130,  7811,  3134,  6203, -5255,
   92277, 91009,  3136,  3108,  2821,   223,  6411,  7839,  9095,  9095,
   -5255, 22263,   421,   369, 92277,  1421, -5255,  3648,   509, -5255,
   -5255, -5255, -5255,   300,   266,   227,   419, -5255,  3125,   509,
    3128,  1537, 22263,  1222,  3727, 29803, 29803,  3139, 29803, 29803,
    3143,  3143,   345,   307,   307,  3260,  1227, 23017,   345, 23017,
     345,  3143,  3143,  3143, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,  3709,  3141,  1691,  3142, -5255, -5255, -5255, -5255,
   -5255, -5255,    85,  3543, -5255,  3338,  1002, 22263,  2119, -5255,
    3159,  3644,  3660,  3661, -5255, -5255, -5255, -5255, 58760, 58760,
   75773,  3657, 22263, -5255,  1263,  3164, -5255, -5255,  3829, 59453,
    3834, -5255,  3166, 34143, 73871, 73871, 73871, 91009, 91009, 15477,
   62870,  3839,  3841,    67, 62192, -5255,  9421,    67, -5255,  3174,
    3178, -5255, -5255, 27541,  2301, -5255,  9421, -5255,  1194,  3447,
   -5255,  3177,  3179, -5255,  3173,  3176,  3180, 66260, 22263, -5255,
      67,   312, -5255, -5255, -5255, -5255, -5255,  3183, 91009, -5255,
   -5255, -5255, 91009, -5255, -5255, -5255, -5255, -5255, -5255,  2119,
   22263, -5255, -5255,  1050, 91009,  1050, -5255,  2119,  3852, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255,  3525, -5255, 88473,  3728,
     860, -5255,  3186, -5255, -5255, -5255, -5255, -5255,  1050, -5255,
   -5255, -5255, -5255, -5255,  3355,  3382,   662,  3593, -5255,  2267,
   75773,  1050,  1050,  9421, -5255, -5255, -5255, -5255, 91009,  2073,
    3726, -5255,  3202, -5255, -5255, -5255, 75773, -5255, 55379, 91009,
   91009, -5255,  3771, 87205, 64226, 75773, -5255, -5255, -5255,  2249,
   -5255, -5255, -5255, -5255, -5255,  9421, -5255, 20755,  3906, -5255,
   -5255, -5255, -5255,  2119, -5255, -5255,  4022, -5255, 75773, -5255,
   70067, -5255, 70067,  1833, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255,   448,   491,  1308,  3309, -5255,
   -5255, 75773,   947,   245, -5255,  3963, -5255, -5255, -5255, -5255,
   -5255,  3210, -5255,  3263, -5255, -5255, -5255,  3211, -5255,  3886,
   -5255, -5255,  1823,   292,   198, -5255,   415,  3796,  3803, -5255,
   -5255, 91009, -5255,  2644, -5255, -5255,  2644, 75773,  2644, -5255,
   -5255, 91009, -5255, -5255,  2644, -5255, 91009,  2644, -5255, -5255,
   -5255,  3722,  3722, -5255, 68799, -5255, -5255,  3707,  3861, -5255,
   91009, -5255, -5255,   464, -5255,  3893, -5255, -5255,  3636, -5255,
    3230, -5255, 22263, -5255,  3234,  3236, -5255, -5255, -5255, -5255,
   -5255, -5255,  2293,   439, -5255,    67,    67,  3456,  3753,  3754,
    3363,  2119,  3761,  3770,  3772, -5255, -5255, -5255,  2119,  2119,
   -5255, -5255,    67, -5255,  1828, -5255, -5255, -5255, -5255,  4422,
     909, -5255,    67,    67, -5255,  2399, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  1498, -5255,   205,  1383, 58066,  3705, -5255,
    3845,  3267, -5255, 75773,  3932, -5255, -5255, -5255, -5255, 22263,
    3767, -5255, -5255,  3510, -5255,  3285,  3286,  3294,  3295,  3297,
    3300,  3301,  3303,  3304,  3306,  3307,  3311,  3312,  3313,  3315,
    3318,  3319,  3320,  3322,  3323,  3324,  3325,  3332,  3334,  3271,
   -5255, -5255,  3317, -5255, -5255, -5255, -5255,    67,    67,    67,
      67, -5255,  2978, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255,  3561,  2199, -5255,  1047, 91009,  3762, 80231, -5255, 22263,
    3923, -5255, -5255,   768, -5255,  3321,   -33, -5255, -5255, 59453,
   -5255, 87205, 58760, -5255, -5255, -5255,  3327,  1283, 50703, -5255,
   -5255,  4004, -5255,  2131, -5255, 58066,  3766, -5255, 73871,  3326,
   -5255,  3335,  3818,  3819,  3828,  3854, 55379,  1263,  9421, -5255,
   -5255,  3333, -5255, -5255,  3555,  3722,  3370,  3620,  3745, -5255,
   -5255, -5255,  2102, -5255, -5255,  9421, -5255, -5255, -5255,  4000,
   57367, 51371,  3356, -5255, -5255, -5255,  2133, -5255, -5255, 97633,
   97633, 97633,  3771, -5255,  6434, -5255, 22263, -5255, -5255, 22263,
   -5255,  9421,  9165,  2767, 45310, -5255, 45310,  2767, 22263, -5255,
    3362, -5255,  4005,  4006, -5255, -5255, 22263, -5255, 22263, -5255,
   22263, -5255, 22263, 22263, 22263, 22263, 22263, 22263, -5255, 29803,
   -5255,  3357,  3368, -5255, -5255,  3373, -5255, 22263, -5255, 22263,
   -5255, -5255, 22263, 22263, 22263, 22263, -5255, -5255, 22263, 22263,
    3374, -5255, 22263,  9176, 22263,  9224, 22263,  9368, 22263, -5255,
   -5255, -5255, 25279, -5255,  3379, -5255, -5255, -5255, -5255, -5255,
   22263, -5255, 22263, -5255, 22263, 22263, 22263, 22263, 22263, -5255,
   -5255, 22263, 22263, 22263, -5255, 22263, -5255,  3955, 22263, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, 22263, -5255, -5255, -5255, -5255, 22263, -5255,   216, 26033,
   -5255, 22263, 22263, 22263, -5255, -5255, 22263,  3375,  3376, -5255,
   91009, -5255, 22263,  2465,  1976,   245,  3385, 22263, -5255,  3396,
    3397,  2782, -5255,   333,  2370, -5255, -5255, -5255,  2012, -5255,
   -5255, -5255, 96081, 22263, -5255, -5255, -5255, -5255, -5255, 29803,
    2996,  3388, 29803,  3727,  1561, 22263,  1324,  3727,  9095,  9095,
   91009,  4126,  3390, -5255, 22263, 92277, 22263,  3392,  3395, -5255,
    3394, 29803, -5255, -5255,  3401, -5255,  1388,  1976,  3485,  3847,
   -5255,  9421, -5255, 32785,  3901, -5255, -5255, 75773,  9204, -5255,
    2826,  2826, 70701, -5255, -5255, -5255,  3941, 91009,  3604, -5255,
   58760, 58066, 73871,  4081,  4082,  4083,  4084,    67,    67, -5255,
   -5255, 11838, 58760, 15477, -5255, -5255, -5255, -5255,  3917,  3927,
   -5255, -5255,   752,  3708,  3986, -5255, -5255, -5255,  3426, -5255,
   -5255, -5255,   536, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255,  9421, 15477, -5255,  2942,  3430, 35557,   863, -5255, -5255,
   -5255,  9421, -5255, -5255, -5255, -5255,  3443, -5255, 85937, -5255,
    3774, 85937, 85937, 92277, -5255, -5255,  4027, -5255, -5255,  3852,
    3309,  2267, -5255, -5255,  1869,  3444,  4077,  4079, -5255,  4023,
    2586,  4023, -5255, -5255,  3444, 73237,   768,  3505, 52039, -5255,
    2168, -5255,  4200, 52707, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  3453, -5255,  2301, -5255,  3452, -5255,
    9421, -5255, -5255,  3471, -5255, -5255, -5255,  3327,   557,  3472,
    3457, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3382,   119,
   -5255, -5255, -5255, -5255, -5255,    31, -5255, -5255, -5255,  1677,
    2308, -5255,   245,  3690, -5255, -5255,  1823,  3907, -5255,  3705,
    4130,   997,   997,  4047, 75773, 75773, 11828,  4422, -5255, -5255,
   91009, -5255, -5255, -5255, -5255, -5255, -5255,  1333, -5255, 75773,
   -5255, -5255, -5255, 87205,  3461, -5255, -5255,  3458, -5255, 22263,
     -33,  3577, -5255, -5255, -5255,  2012,  4203,  4128,  3382, -5255,
    9421, -5255,  3464, 20755,  3467,  3470, -5255, -5255,  1382, -5255,
    3473, -5255,  2115, 62192, 44660, -5255,  3846,  3848,  1695, -5255,
   -5255, -5255, -5255, -5255, -5255,  3353,   937, -5255,    67,    67,
   -5255,   186,    67, -5255, -5255,   325, -5255, -5255,   513,   210,
    4422, -5255,  2119,  2119,  2119,  2119,   245,  2119,  2119,  2197,
   -5255,  3353,  3353,  1349, -5255,   883, -5255, -5255, -5255, -5255,
    1037, -5255, -5255, 87205, -5255,  3973,  3975, -5255,  3977, -5255,
   -5255,   211, -5255,  2427, -5255,  6156,    61, -5255,  4026, 91009,
    4231,  3267, -5255,   462,  2060,  9421, 55379, 22263, -5255,  3482,
    3487,   245,  3490,   245,   245,  2119,  2119,  3443,  2119,   245,
    2119,  2119,  2119,  2119,  2119,  2119,  2119,   245,  2119,  1019,
    2228,  2119,   245,  9848, -5255,  2119,  1976,  3353,  3353,  1946,
   -5255,  4154,    67, -5255,  2300, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,   321, -5255, 29803, -5255, -5255, -5255,
    3488,   768,   446,  9421, 85303,  4035,  3309,  3504, -5255, -5255,
   -5255, -5255, -5255, -5255,  1609,  4166, -5255,  3497, 22263, -5255,
   -5255, 91009,   313,  3694,  4003,  3514, 80865, 58066, 58066, 58066,
   58066, 47363,  4098, 75773, -5255,  4164, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, 12996, -5255, -5255, -5255,  3823,  2449,  3520, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3517,
   -5255, 22263, -5255, -5255,  3881, -5255, -5255, -5255, -5255, -5255,
   53375, 22263,  9421,  9421, 22263,  3530,  3530,  3531,  3532, -5255,
   -5255,  4167,  3530,  3530, -5255,  3530,  4172,  3530,  3530,  3538,
   -5255, -5255,  3540,  3541,  3544,  2782, -5255, 22263, 22263,  7849,
     190,  7858,  7912,  6486,  6490,  3052, -5255,  7948,  2187, 92277,
   -5255, -5255,  7976,  8046,  8073,  8100,  6494,  8136,   177,  3076,
   -5255,  9421, 22263,  9421, 22263,  9421, 22263,  9421, 23017,  8183,
   -5255,  2202,  9229, -5255,  2207,  9391,  8201,  3242,  8210,  6621,
    2210,  3352,  8233,  8237,  8242,  2219, -5255,  2408,  4114,  2225,
   23017,  8343,  8396,  6652,  6716,  8435, 92277, 91009,  3539,  8488,
    3549,  3549,   183, -5255,  3552, -5255, -5255, -5255,  3553, -5255,
    8511, 22263, 22263,  3687, -5255,  1371,   333,  3559,  3296,  4088,
   -5255,  1382, -5255,  2101,   421, -5255,  3545,  9421,  3560,   509,
   -5255, 22263, -5255,  3727, 29803,  3425,  3563, 29803, -5255, -5255,
    3709, -5255, 22263, -5255,  4131,  3564,  2782,  3562,  9421, -5255,
   -5255, 91009,  3565,  3119, -5255, 22263,  3443, -5255, -5255,  4303,
    3568,  3584,  3571,  3401, -5255, 58760, -5255,  4120, 73237,  3020,
    3020,   899,  3574,  2232,  4108, -5255, -5255, -5255,  3570, -5255,
    2234, -5255,  4245,  3057, -5255,  4246, 58066, 58066, 58066, 58066,
   15477, 15477, -5255, -5255, -5255,  3579,  3581,   774,  4138, -5255,
   -5255, -5255, -5255, 91009, 91009, 15477, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  2472, -5255,  3382, -5255, -5255, 85937,
   -5255, -5255, -5255, -5255, -5255, -5255,  1050, -5255, -5255,  3585,
     282,  2370, -5255, -5255, -5255,   768,  3383,   200, -5255, -5255,
   -5255,  4218,  4023,  4023,  3444,  4219,  3929,  3586, -5255,    67,
   -5255,  4255,  4056, -5255, 91009,  3594, -5255,  3599, 89107, 20755,
    3601, -5255,  4147, -5255, -5255,  4103, 70067,  3602, -5255,  3824,
   -5255, -5255, -5255,  3621, -5255,  3605, -5255, -5255, 58066, -5255,
    3979, -5255, -5255, -5255, -5255, -5255, 75773, -5255, -5255,  3967,
   75773,    67,    67,    67,    67,    67,  3646,    67,    67,    67,
      67,    67,  3969,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,  1613, 91009,    67,    67, 40407, -5255, -5255,
    4184, -5255, 10628, -5255, -5255, -5255,    67, 13371,  4422,  3617,
   91009, -5255,  3267,  3618,   350, -5255,  1285, -5255, 68799, 91009,
    9421,  3614,  2434, -5255,  3851,  3619, -5255, -5255, 22263, -5255,
    3652, -5255, -5255, 41766, -5255, 81499, -5255, -5255, -5255, 20755,
   -5255,  2293,  3473,  3626,  2045, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,   216,   216, -5255, -5255,   216,   216, -5255, -5255,
   -5255, -5255,   216,   216, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,   909, -5255, -5255, -5255,  1498, -5255, -5255,
    4119,   510, -5255, -5255, -5255, -5255,   986,   245,   245,   245,
    2228,  2258, -5255,  2427,  3880,  4024,  4197,  4024,  4199,  4125,
    1686,    67,  4201,  4376, -5255,   172,    67,  4216,  4282,  3723,
    4283,  4222, -5255,  3737,  4024,  4225,  3850,  4237,  4239,  4242,
   -5255, -5255, 13371, -5255, -5255, -5255, -5255,   233, 74505, -5255,
   -5255, -5255, -5255,  2457,  1685,  4168,  2082, -5255,  2244, -5255,
    4431, -5255,   179, -5255, -5255, 48031,  9421,   294,   322, -5255,
     417, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, 91009,
    3353,  2199, -5255, -5255,  3119, 80231,  3309, -5255,  4021,  4224,
    3029, -5255, -5255, -5255, -5255,  3383, -5255,  9421, -5255, -5255,
    4352, -5255, -5255, 58066, -5255, -5255,   198,   198,   198,   198,
    2886,  4042, -5255, -5255, -5255,  4164,  3965, -5255,  1623, -5255,
    3530,  3530,   -13, -5255,  3531,  4259,  3531, -5255,  4080,   443,
     207,  4080, -5255,   443,  3531, -5255,  3697, -5255,  4080, -5255,
     443,  3530, -5255,  3530, -5255, -5255,   443,  3530, -5255,  3700,
    3531, -5255, -5255,  4080, -5255, -5255, -5255, -5255,  1266,  2266,
    3531, -5255, -5255, -5255,  3530,  1586,  3530,  3530,  3530,  3900,
    3530,  3530,  4403, -5255, -5255, -5255, -5255, -5255, -5255,  3531,
      58,  3530,  3530,  3530,  3530,  3532,  4372,  4373, -5255, 91009,
   -5255,  9421, -5255, 55379, 97633,  3052,  9421,  2340, -5255, -5255,
   -5255,  2539, -5255, -5255, -5255,  4293, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3710,
    9095,  9095, -5255,  4442,  4240, -5255, -5255, 22263, 22263, -5255,
   22263, -5255,  1423,  3712,  4171, -5255, -5255, -5255, -5255, -5255,
   22263, -5255, 22263, -5255, -5255, 22263,  9421,  9421,  9421,  9095,
   -5255, -5255,  3010, -5255, -5255,  2767, -5255, -5255, 22263, -5255,
   22263, -5255, 22263, -5255, 22263, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,   152,  9095, -5255, -5255, 22263, 22263, -5255,
   -5255, -5255, 91009, -5255,  1976,  3713,  3984, -5255, -5255, -5255,
    1976,  3849, -5255, -5255,  1976,   245, -5255, -5255, -5255, -5255,
    3029,  1371, -5255,  3714,  2297, -5255, -5255, -5255, -5255, -5255,
   -5255,  3715, 91009, -5255,  2268,   509, -5255, 22263, -5255,  3727,
    4302,  3725,  2434,  4460,  3731, -5255, 22263, 41766, -5255,  3738,
    3743, -5255, -5255, -5255,  9095, -5255,  4349,  4297, -5255,  1976,
   91009, -5255, -5255, -5255,  3759, -5255,    67,  3383, -5255,  2371,
     899, 73237, -5255, 82133,  2083,  1425, -5255, 91009, 58066, 58066,
    3166,  3166,  3166,  3166, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255,    67,    67, -5255, 35557, 62870, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  3382, -5255, -5255,  2826,  4255, -5255, -5255,
    2012,  1382,  3202,   421, -5255,  3444,  4391,  4398, -5255,  3444,
   -5255, -5255, 73237,  3309, 21509,  2339,  6116, -5255, -5255, -5255,
   38355, -5255,  3764, -5255,  3768, -5255, -5255,  1892,  4101,  4394,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, 20755, -5255,  2119,  2010, -5255,
    3800, -5255,  3777,  3778,    67, -5255,   220,   225,   226,   276,
   -5255, -5255,  3443,   245,   245,  2119,  2119,    67,   245, 87205,
    1748,   245,  3443,  3443,   285,  2119,   717,   220, -5255, -5255,
   -5255,   245,   220, 77041, 75773,  4440, 91009,  3779,  3780,  3781,
   -5255, -5255, -5255, -5255, -5255,  1795, -5255,  4329,  2644,  2249,
    2249, -5255,  3784,   238, -5255, -5255, 10692, -5255, 60140, -5255,
   -5255, -5255,  1171,  4370,  4540, -5255,  3926, -5255, -5255, -5255,
   -5255,  3894,  3267, 44660, -5255, -5255, -5255, 22263, -5255, -5255,
   -5255,   -33,  3792,   945, 22263, 91009, -5255, 89741, -5255, -5255,
   -5255, -5255,  1716, -5255, 20755,  3794,  3795, -5255, -5255,  1382,
    2334,  1382,  3797,  2115, -5255, -5255,  2293, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  2119, -5255,
   -5255, -5255, -5255, -5255,  4384,  4387, -5255, -5255, 75139,  2644,
   -5255,  4440,  3836, -5255, -5255, -5255,  4451,  2278,   533,  2278,
   38355,  1285,  1568,  4438,  1918,  4475,  3844,  4371,  2278,  2278,
   64904,   533, 73237, -5255, -5255, -5255, -5255, 75773, 65582,   533,
   -5255, -5255, -5255, 91009, -5255,  2278,   533, -5255,   533,   533,
   38355, -5255, 14201, -5255, -5255, 41110,  1472, -5255,  3981, 22263,
   22263,  4397, 91009,  4399, -5255,  4209, -5255, 91009, -5255,  3383,
   -5255, -5255, -5255,  4110,  4320,  2286, -5255, -5255,  2290, -5255,
   -5255,  2306, -5255, -5255, -5255, -5255, -5255,  3321, -5255, -5255,
    4165,  3230, -5255,  4018,   198,  4294,  4294,  4294,  4294, 55379,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  4468, -5255, -5255,
    4080,    67,  4080, -5255, -5255,  1141, -5255,  1141, -5255,   284,
   62192, -5255, -5255, -5255, -5255,   306, 45310,  2349, -5255,  4220,
    3246,  4080, -5255,  4306,   443, -5255, -5255,  1141,  1730, -5255,
   -5255,  4080, -5255, -5255, -5255,  1730,  1141, -5255,  4307, -5255,
   -5255, -5255,  1141,  4080,  4032, 91009,  4403,   443, -5255, -5255,
   94813,   443,  1141, 22263, -5255,  4393, -5255,   306,  4589,   443,
    4080,  1141,  1141, -5255,   140,  3843, -5255, 54043, -5255,  3855,
    3856,  3857,  3858,   306,  2312,  3853,   306,   306, -5255,  3862,
    3863, 22263,  1730,  4469,  8618,  6729,  2320,  4124,  4076, -5255,
    4010, -5255,  8625,  8672,  8692,  1832,  3531, -5255, -5255, -5255,
   -5255,  4488,  3530, -5255,  4582, -5255,  3530, -5255, -5255, -5255,
   -5255, -5255, -5255,  3864,  8699,  9421,  9421,  8738, -5255, -5255,
   -5255,  2324,  1856,  8762,  8836, -5255, -5255, -5255,  3869, -5255,
   -5255,   388, -5255,  3860,  3230, -5255, -5255, -5255,  3687,  2012,
   -5255, -5255,  2326,  4612,  1979, 22263, -5255, 22263, -5255,  3876,
   -5255, -5255, 91009,  3945,  1049, -5255,  2332, -5255, -5255,  3879,
   73237, 20755,  2012, -5255, -5255, -5255,  2083, -5255,  3874,  1382,
    1722,  1382, -5255,  3029, -5255, -5255,  3166,  3166, 15477, 15477,
   -5255, -5255, -5255, -5255,  1425,  3020,  6345,   421, -5255, -5255,
   -5255,  3252,  4361,  3444,  3444,  3732,  4364, 22263,  3890, -5255,
    3636,  2301, -5255, -5255,  4085,  1047,  1047, -5255, -5255, -5255,
   -5255,  3891,  3892, -5255, -5255, -5255, 89107, -5255,  2344, -5255,
   -5255,  4645,  2351, -5255, -5255, 87205,  3895, 91009, 91009,  2119,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3899,
   -5255, -5255, -5255, -5255, -5255,  2119, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255,  3904,  3903, -5255,  2556, -5255, 41110,  3908,  4532,  4533,
    2249, -5255,  2644, 75773, -5255, 77041, -5255,  2644,  2644, 43216,
   91009, -5255,  4653, -5255, -5255, -5255, -5255, -5255,   167,  2817,
   -5255, -5255,  1378,  4030, -5255, 91009, -5255, -5255,  2119,  4657,
   -5255,  4312,  2434, -5255, 22263,  3913,  3910, -5255, -5255, -5255,
   -5255,  9421,  4667,  3915, -5255, -5255, -5255, 82767, -5255, -5255,
   20755, -5255,  4558, -5255, -5255, -5255, -5255,  2293, -5255, -5255,
   -5255, -5255, -5255, -5255,  2457,   533, -5255,  2457, -5255, 77041,
   38355, 77041, -5255, 44660, 77041,  2278, 91009, -5255, -5255,  4552,
   77041, 77041, -5255, -5255, 38355,  3920, -5255,  2434,  2567, -5255,
   -5255, -5255,  1976,  4388, 77041, 38355, -5255, 38355, -5255,  2248,
    2221, -5255,  3924, 91009, -5255, -5255, -5255,  9421,  9095,  4315,
   -5255, -5255,  4034,  2119,  4284, -5255,   466, -5255, 91009,   187,
   55379, -5255,   245, -5255,   245, -5255,   245, -5255, -5255,  4294,
    1131, -5255, -5255, -5255, -5255, 54711, -5255,  4560,  4430, -5255,
   -5255, 91009, -5255,  4392,  4418, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255,    67, -5255, -5255, -5255,
   -5255,  2362, -5255, -5255,  2372, -5255, -5255, -5255, -5255, 94813,
   13842, -5255,  2375, -5255, -5255, -5255,  4403,  3930, -5255, -5255,
    9421,  3951, -5255, -5255, -5255, -5255,  4589, -5255, -5255, 78309,
   -5255, -5255, -5255, 91009,  4610,  4615, -5255, -5255, -5255, -5255,
   -5255,  4536, -5255, -5255, -5255, -5255,  3947,  2434, -5255, -5255,
    3949, 85937, -5255, -5255, 22263, -5255,  4179, -5255,  4285, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,   306, -5255,
   -5255, -5255, -5255,  3443, -5255, -5255, -5255,  3952, -5255,   245,
    3636, -5255, -5255, 22263, -5255, -5255,  3954,  9626,  2434,  2434,
   -5255, -5255,   245, -5255,  3847,  3956, 91009, -5255,  4297, -5255,
   -5255, -5255, -5255, -5255,  1382, -5255, -5255, 83401, -5255, -5255,
   -5255, -5255,  3230, -5255, -5255,  3029, -5255, -5255,  3958, -5255,
    4436, -5255, -5255, -5255,  4441,  9421, 91009,  3923,  1047,  4717,
    4461, -5255,  1195, -5255, -5255, 91009, -5255, -5255,  3443,  4326,
   -5255, -5255,  4162, 91009,  2388,  2434,  3971,  2391, -5255, 75773,
   -5255, -5255, 91009,  2012, -5255, 13371, -5255, 22263,  2644, -5255,
   -5255, 77041,  3972,  4452,   -81, 77041, 77041,  1843,  3968,  3974,
     194,  1865,  3983,  3700,  1924,  3987,  3989,   296,  3992,  3995,
    3997,  3999,  1266,   408,  1926,  4001,  4007,  4008,  3530,  4009,
    1935,  1949,  1968,  3530,  1996,  4011,  4703, -5255, -5255,  4014,
   -5255,    75, -5255, -5255, -5255,  3978,  3976, -5255, 91009, -5255,
   -5255,  4675, 55379, -5255, -5255, -5255,  4567,  1685, -5255,  3985,
    3991, 13344, -5255, -5255, 13842,  2817, -5255, -5255,  1852,  4633,
   -5255,  9421, -5255, -5255,  3988, 91009, -5255, -5255, -5255,  2012,
    1382,  4690, -5255,  4701,  1605, -5255, 77041,  1175,  3671, -5255,
   77041,  3892, -5255, -5255,  1609, -5255, 73237, -5255, -5255, -5255,
    4514,  1472, -5255, 91009, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  4028,  2115,  4491,  2403, -5255, -5255, -5255,
   -5255, 48699, -5255, -5255, -5255, -5255,  4227, -5255,  1131, -5255,
    4513, 75773, -5255, -5255, -5255, -5255,   306,  1730,   306,  4403,
   -5255, -5255, 91009, -5255, 91009,  4626, -5255, -5255, -5255, -5255,
   39769, -5255, -5255, -5255,  4354, -5255,  2426, -5255, -5255,  4038,
   22263, -5255, -5255, -5255,   989,  8886, -5255, -5255, -5255,  4039,
   -5255,  4040,  3382,  3614, -5255,  2137,  4169,  3644,  3660,  3661,
    4215,  4381, -5255,  4221, -5255, -5255, -5255,  4053, 29803, -5255,
    1614, -5255, -5255, -5255, -5255,  2012,  3230,  4255, 22263,  4054,
   22263,  4057,  2428, -5255, -5255,  1047,  1047, -5255,  1264,  4058,
   -5255, -5255,  4471,  4060,  2430,   -33, 91009, -5255,  4650,   -33,
    4062,  4071, -5255, -5255,  4184,  8906, 77041,  4452,   -69, 91009,
    4685,   997, -5255,   997, -5255, -5255,  2380, 13842, -5255, -5255,
    4927, 91009,  4541, -5255,  2114, -5255, -5255,  4754, -5255,  4397,
   -5255, 91009,  1591,  4286, -5255, -5255, 56689, -5255,  4820,  4821,
    4769,  4824,  1852, -5255,  2255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, 77041,   826, -5255,  4792,  4794,  1472, -5255, -5255,
   -5255, -5255,   533, -5255, 75773, -5255, -5255,  3892,    31,  4186,
   -5255, 55379,  2083,  4028,  4095,  2052,  2101, -5255, -5255,   736,
   -5255, -5255, 91009, 90375, -5255, -5255, -5255,  3505, -5255, -5255,
   -5255, -5255, -5255,  4090, -5255, 78309, -5255, -5255, -5255, -5255,
   97633, -5255,  2434, 85937, 85937, -5255, -5255, -5255,  1382,  1354,
   -5255,  4851,  1484, -5255, -5255,   267, -5255, -5255, 91009,  4099,
    4183, -5255, -5255,  4170, -5255, -5255,  3138, -5255,  3687,  6345,
    9421, 91009,  9421, 91009, -5255, -5255, -5255, -5255,  2249, -5255,
    2249, -5255,  1264, -5255, -5255,   909,   -33,  1593,  2434,  4102,
    1504, -5255, 91009,   238, -5255, -5255, -5255,   997,  2432, -5255,
    1144,  4693, -5255,  4105, -5255,  4111,  4118, -5255,  4751, -5255,
    2119, -5255,  4195, -5255,  2380, -5255, -5255, -5255,  4157,  4755,
    4713,    67, -5255, 87205, 32064, -5255,  4607, -5255,  4566,  4828,
   -5255,  4880,  9552, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,  2082, -5255, -5255,  4331, -5255, 91009,  4754,  1730,
    1730,  4869,  1730, -5255,  4870,  4871,  2255, -5255,  4703,  1976,
    4297, -5255, -5255, 32064, -5255, -5255, -5255,  4778, -5255, 22263,
    4490,  4754, -5255,  1722,  1382,  1382,  4139,  2115, -5255, -5255,
    2083, -5255,  4334,  4874,  4877, -5255, -5255,  2440, -5255, -5255,
   73237, -5255, 91009, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    2137, -5255, -5255,  4275,  1775, -5255,  2442, -5255, -5255, -5255,
    1976, -5255,  4150, -5255,  4510,    67,    67,  4511,    67,    67,
      67,    67,  4155,  3138, -5255,  4500, -5255, -5255,  2458,  2473,
    4829,  4829, -5255,  2475,  1182,  4346,  2119,    67,  1258,  1593,
   -5255, -5255,    67, -5255, -5255,  1258,  1504, -5255, -5255,  4160,
   -5255,  4163,  4173, -5255, -5255, 91009, -5255, -5255, -5255,  1351,
   -5255, 91009,  4175, 91009, 91009, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, 60827, -5255,  2228,  2228, 22263, -5255, -5255, -5255,
   -5255, -5255,  2691,  4756, -5255,  4206,   619,    67, -5255,  9578,
   75773,  4209, 91009,  4161, -5255, -5255, -5255,  1730, -5255,  1730,
    1730, -5255, -5255, -5255,  2497, -5255, -5255,  4177,  9421, 22263,
   -5255, -5255,  1382,  2014, -5255, -5255, -5255, -5255,  2083, -5255,
    1722, -5255, -5255,   466, -5255,  4358,  4360, -5255, 90375,  4180,
   -5255,    67,  1285, -5255, -5255, -5255, -5255, -5255, -5255, 91009,
   -5255,  4181, -5255, -5255,   127,    67,  2119,  2119,    67,  2140,
    2140,  1976, 87205,  4250, -5255, -5255,    67, -5255, -5255,  2127,
   -5255, -5255, -5255,   997,   997,  1258,  1182, -5255, -5255, -5255,
    2946, -5255,   245, -5255,  4790,  4613, -5255, 61514, -5255, -5255,
   -5255, 91009, 91009,  4185, -5255,   539,   539,  2521, 91009,  2529,
    2545, -5255, -5255, -5255, -5255, -5255, -5255,  4182,  4187, -5255,
    1055, -5255, -5255,  9578,  4855,  4543,  4189, 91009, -5255, -5255,
   -5255, -5255,  4297,  9421, -5255,  2012,  1382, -5255, -5255, -5255,
   -5255, -5255, 73237, 20755, -5255,  4183, -5255, -5255,  2547, -5255,
   26787, -5255, -5255, -5255,  2119, -5255, -5255,  2119, -5255, -5255,
   -5255, -5255, -5255,  2557, -5255, 87205,  4926, -5255,  4929,  4194,
    4198, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  2561,  2563, 91009, -5255, -5255,  1938,  4647,
    4786,  4788,  1182,  2585,  1593,  1504, -5255,   391, -5255,  2238,
    2238,  1420, -5255, -5255, 91009,  4205,  2587, -5255, -5255, -5255,
   -5255,  4738, -5255, -5255,  4181, -5255,  4202, -5255,  3119, -5255,
   -5255, 87205, -5255,  4250, -5255, -5255, -5255, 89107, 89107,  4329,
    1182,  2594, -5255, -5255, -5255,  4687,  4906, -5255,  1182, -5255,
   -5255, -5255,  4212, -5255,  2238, -5255, -5255, -5255, -5255, -5255,
    1556, -5255, -5255, -5255, 91009, -5255,  4515,  4312, -5255, 26787,
    4213,  3138, -5255, -5255,  4217,  2602, -5255, -5255,  1182,   539,
     539, -5255, -5255, -5255, -5255,  1556, -5255,  4907, -5255,  4957,
    4633, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    4348,  1730,  4872, -5255, -5255,  4811,  4228,  1494,   455, 66894,
    4757, -5255, -5255, 87205, -5255, -5255, -5255, -5255, -5255, 87205,
    2607, -5255, -5255, 73237, -5255, -5255, 55379, -5255, -5255, 69433,
    4230, -5255,    67,  4754, -5255, 73237, -5255, -5255, -5255, 20755,
   -5255, -5255
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2527,  1144,  2373,     0,   458,     0,  1351,   742,  2231,  2367,
    2368,  2159,     2,   512,   225,   411,  2161,  2434,     0,     0,
     508,  1367,   880,   630,  2429,   336,     0,     0,   515,  2164,
     334,   225,  3071,  2275,     0,  3162,  2219,     0,   510,  2531,
    3445,  3307,     0,     0,     0,  3312,    69,  2128,     0,  1367,
     357,     0,    84,     0,     0,  1367,  2416,  3312,     0,  2446,
       0,     0,  2256,     0,     0,     0,     3,     8,    21,     0,
      43,    26,    31,    16,    20,    15,    45,    57,    51,    28,
    3309,   407,   408,   409,   410,    41,  3372,    40,    11,    60,
      61,    18,    48,    12,    14,    17,    39,    47,    35,    42,
      55,    24,    25,    32,    49,    65,    22,    62,    58,    23,
    2373,    13,    27,    50,    44,    36,    59,    66,    37,     0,
    2528,    56,    38,    64,    30,    52,    29,     9,    10,    19,
      53,    54,    46,    67,    33,    63,    34,  1178,     0,     0,
       0,     0,     0,  2157,     0,     0,  2157,  1260,  1502,  3370,
    3371,  3372,  1368,     0,  1369,     0,  2527,  2569,  2570,  2776,
    2824,  2825,  2719,  2852,  2671,  2946,  2968,  2994,  2758,  2760,
    2759,  2761,  2762,  2763,  2764,  2765,  2766,  2644,  2767,  2768,
    2769,  2771,  2770,  2772,  2773,  2774,  2645,  2718,  2646,  2724,
    2775,  2726,  2725,  2777,  2647,  2648,  2778,  2779,  2780,  2781,
    2702,  2650,  2649,  2782,  2784,  2783,  2727,  2728,  2705,  2785,
    2786,  2787,  2789,  2651,  2652,  2653,  2654,  2655,  2788,  2656,
    2790,  2706,  2791,  2792,  2657,  2793,  2794,  2795,  2796,  2798,
    2797,  2699,  2799,  2800,  2802,  2803,  2804,  2801,  2805,  2806,
    2808,  2807,  2730,  2809,  2729,  2810,  2658,  2811,  2812,  2813,
    2814,  2815,  2816,  2817,  2818,  2819,  2820,  2707,  2821,  2822,
    2823,  2844,  2720,  2826,  2828,  2827,  2731,  2829,  2830,  2831,
    2833,  2832,  2834,  2836,  2659,  2660,  2661,  2835,  2837,  2838,
    2839,  2840,  2842,  2841,  2846,  2847,  2732,  2662,  2703,  2663,
    2664,  2843,  2845,  3048,  2848,  2849,  2733,  2734,  2850,  2665,
    2721,  2851,  2708,  2854,  2853,  2666,  2855,  2667,  2856,  2857,
    2858,  2859,  2860,  2862,  2864,  2861,  2865,  2866,  2872,  2668,
    2863,  2867,  2868,  2869,  2870,  2871,  2873,  2735,  2874,  2700,
    2876,  2875,  2877,  2878,  2879,  2880,  2736,  2881,  2722,  2882,
    2883,  2884,  2897,  2898,  2888,  2889,  2891,  2892,  2895,  2890,
    2896,  2901,  2900,  2902,  2903,  2904,  2905,  2906,  2899,  2886,
    2893,  2894,  2887,  2907,  2908,  2885,  2909,  2911,  2910,  2912,
    2737,  2913,  2914,  2915,  2916,  2917,  2918,  2919,  2920,  2922,
    2921,  2923,  2738,  2739,  2740,  2924,  2925,  2926,  2715,  2927,
    2741,  2742,  2930,  2928,  2929,  2931,  2932,  2937,  2938,  2939,
    2701,  2934,  2933,  2935,  2936,  2743,  2744,  2745,  2940,  2941,
    2942,  2943,  2945,  2944,  2709,  2670,  2669,  2672,  2947,  2948,
    2673,  2949,  2951,  2950,  2717,  2674,  2952,  2953,  2955,  2954,
    2746,  2747,  2675,  2704,  2676,  2677,  2956,  2957,  2958,  2959,
    2960,  2961,  2962,  2963,  2964,  2965,  2966,  2967,  2748,  2749,
    2969,  2970,  2971,  2973,  2972,  2974,  2975,  2976,  2977,  2978,
    2979,  2980,  2678,  2981,  2710,  2982,  2983,  2679,  2985,  2984,
    2680,  2986,  2987,  2988,  2989,  2990,  2716,  2711,  2991,  2992,
    2993,  2750,  2995,  2996,  2997,  2712,  2998,  2999,  3000,  2681,
    3001,  3002,  2751,  2723,  2682,  3003,  3005,  2713,  2683,  3004,
    2685,  2686,  3006,  3007,  3008,  2684,  3009,  2687,  3010,  3011,
    3013,  3012,  3014,  3015,  3016,  2688,  3017,  3018,  2689,  3019,
    2690,  3020,  3021,  3022,  3023,  3025,  3024,  3026,  3027,  3028,
    3029,  3030,  3031,  3033,  3035,  3034,  3032,  3036,  3037,  2752,
    3038,  2691,  2753,  3043,  3044,  2754,  3039,  3040,  3041,  3042,
    2714,  3045,  3046,  3047,  2694,  3049,  3050,  3052,  3051,  2692,
    2693,  3053,  3054,  2698,  3055,  3056,  3061,  2755,  2756,  3057,
    3058,  3070,  3059,  3060,  3063,  3062,  3064,  3065,  2614,  2695,
    3066,  3067,  2696,  3068,  2697,  3069,  2757,  2574,  2585,   243,
    2586,  2611,  2609,  2613,  2607,  2608,  2612,  2606,  2610,   460,
     129,     0,     0,     0,     0,  2251,  2157,  2155,  2157,  2157,
    2157,  2157,     0,  2157,  2157,     0,  2160,  2157,  2157,     0,
       0,     0,   451,  2167,  2436,     0,  2453,  2454,  2448,  3152,
    3153,  3147,   413,     0,     0,     0,     0,     0,   321,   333,
     336,   329,   332,     0,   225,  1370,   413,  2229,   335,   336,
       0,  3073,     0,  2347,   336,     0,  2229,  2447,     0,  2532,
    2529,  1573,  1572,     0,  3312,  2575,     0,  1346,  1378,  1304,
    3313,  3314,     0,    72,    74,  2378,   358,     0,     0,     0,
       0,  2568,     0,     0,     0,     0,  1312,     0,  3314,  3324,
       0,   129,  1285,     0,   129,  2258,     0,     0,  3428,  3429,
       0,     0,     0,  3423,     0,  3430,     0,     1,     5,     0,
       0,   740,  1101,  1102,  1100,   740,   740,     0,     0,     0,
       0,     0,  3377,  3370,  3371,  3372,  2839,  2664,  2951,  2360,
    2372,  2358,  2563,  1465,  3345,  1419,  1404,  1406,  1147,  1179,
    1150,   227,     0,     0,  1152,     0,     0,  1167,  2591,  2590,
    2589,  1164,  1163,  1162,  1160,     0,   583,   225,     0,  1262,
       0,     0,     0,  3378,  3377,     0,  1323,  2362,  2363,  2364,
    2365,  2366,  2369,     0,   249,   471,   474,     0,   463,   466,
       0,   130,   131,  1349,  1352,     0,   743,     0,   165,     0,
    2255,  2254,     0,  2253,  2232,     0,  2251,     0,     0,     0,
       0,     0,     0,     0,     0,   225,     0,  2343,   225,  2139,
    2157,  2157,   513,     0,  3215,  3230,  3231,  1515,  3227,  3232,
       0,  3229,  3221,     0,  3225,  3219,     0,  3251,  3223,  3228,
    2832,  2661,  2846,  2960,  2964,  2980,  2983,  2713,  3026,  3209,
    3194,  3210,     0,     0,  3213,  3217,     0,     0,  2168,  2169,
    2170,  1258,  2437,  2438,  2442,     0,  2457,     0,   426,     0,
       0,     0,     0,   415,   416,   482,     0,   422,     0,   413,
     397,     0,   396,   398,  2527,   417,   392,   400,   399,   401,
     402,   403,   404,     0,   405,   406,   479,     0,   393,   394,
     509,   395,  2587,     0,  2588,  2616,  2618,  2615,  2617,  1365,
       0,  2517,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1515,  1515,  1515,  1512,     0,     0,     0,  2522,     0,
       0,     0,     0,  2513,     0,  2523,     0,     0,     0,  2515,
    2516,  2571,  2572,     0,     0,     0,     0,  2520,     0,     0,
       0,     0,     0,  2496,  1575,     0,  1512,     0,  2512,  2519,
       0,  2504,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1512,  2495,     0,  2514,
    2521,     0,  1515,  1512,  1512,     0,     0,  2759,  2644,  2774,
    2702,  2785,  2787,     0,  2651,  2652,  2653,  2654,  2655,  2699,
    2809,  2729,  2810,  2811,  2812,  2664,  2733,  2850,  2857,  2875,
    2877,  2736,  2916,  2918,  2923,  2738,  2739,  2740,  2928,  2929,
    2942,  2717,  2746,  2747,  2958,  2965,  2990,  2750,  2995,  3000,
    3003,  3022,  2753,  3043,  3044,  2754,  3042,  2714,  3055,  3061,
    3064,  3065,  2695,  2757,     0,     0,     0,  3356,  1574,     0,
       0,  1812,   881,  1532,  1548,     0,  1647,  1646,  1649,  1651,
    1657,  1567,  1678,  1618,  1619,  1621,  1740,  1620,  1625,  1626,
       0,  1789,  1627,     0,     0,  1624,  2509,  1623,  1622,  2510,
    2511,  1617,  2549,  2585,     0,  2573,   632,   631,  2342,  2341,
       0,  2430,   348,   343,   351,   345,   347,   346,   352,   353,
     354,   349,   344,   350,   337,     0,   322,     0,   330,  3325,
       0,     0,   413,   516,  2230,  2172,     0,  2171,   355,  3215,
    2760,  2964,  3183,     0,  3193,     0,     0,     0,     0,  1019,
    3096,  3097,  2715,  2717,  2716,  3098,  3039,  2643,     0,     0,
    2580,     0,     0,  2581,  2640,  2638,  2642,  2637,  2641,  2636,
    2639,  3072,  3082,  3078,     0,     0,     0,  2355,  1097,  1096,
       0,     0,     0,  2297,     0,  1019,  2355,  2298,     0,  2050,
    2345,  2348,     0,  3100,  2311,  1098,  3101,  2341,     0,  2283,
    2299,  2260,  2304,   129,  3102,     0,  2344,  2050,  2355,     0,
    2276,     0,     0,     0,     0,  1500,     0,   331,  3163,  1258,
     511,     0,     0,   484,  3308,     0,     0,     0,     0,  3317,
    1858,  2129,    76,     0,    78,     0,     0,  2565,  1986,  3166,
    3165,     0,    85,     0,  3442,    72,     0,  2422,     0,  2420,
    2417,  2419,     0,  3317,  1292,  1292,     0,     0,  1284,  1286,
    1287,  1292,  1292,  2259,     0,  3443,  3444,  2503,  2501,  2502,
    2576,  3425,  2500,  2499,  3434,  3436,  3419,     0,  3422,  3421,
    3431,     6,    68,     0,     0,   225,   225,   740,   167,   740,
     740,   740,   740,   740,   150,   148,   152,     0,     0,   158,
       0,   154,  3377,  2527,  2375,  1468,  1473,     0,  1419,     0,
       0,     0,  3328,  3327,  3326,  3340,  1407,  1408,     0,  1035,
       0,   228,     0,  3375,  3376,  3374,  1515,  2592,  2595,  3373,
    2596,   228,  1161,     0,   584,  2158,     0,     0,     0,     0,
       0,     0,   586,   585,   522,     0,     0,  1266,  1267,  1261,
    1263,  1265,     0,     0,     0,     0,  2374,     0,   245,   251,
     244,     0,   413,     0,   461,   467,    86,     0,  1353,  2148,
    2150,   164,     0,     0,     0,  2233,     0,  1993,  2235,  2239,
    2245,  2249,  2252,  2133,  2156,     0,  2136,  2142,  2141,  2135,
    2343,     0,  2145,   597,     0,     0,     0,  2146,  2130,     0,
     486,   488,  3216,  3214,  3248,  3247,  3252,     0,  3249,  3245,
       0,  3208,  3253,  3238,  3280,  3242,  3280,  3280,  3239,  3246,
    3280,     0,  3244,  3243,     0,  3211,     0,     0,     0,  1259,
       0,  2443,     0,  2435,     0,  1388,  2459,  2458,  2455,  1986,
    3149,  3154,   420,   427,     0,     0,  2928,     0,   432,   431,
     430,   283,   448,   420,   423,   440,     0,     0,   281,   414,
       0,   446,   449,   502,   498,   506,   500,   480,   476,     0,
       0,     0,     0,  1652,  1991,  1991,  1991,     0,     0,  1866,
       0,     0,     0,     0,  1991,     0,  1684,  1663,  1664,     0,
    1685,     0,     0,     0,     0,     0,  3356,     0,     0,  1818,
       0,     0,     0,     0,  3356,     0,     0,  2571,  2572,     0,
       0,     0,  1860,  1862,  2549,  2573,  1991,     0,  1991,     0,
    1520,  1694,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1991,  1991,     0,  1991,  1702,     0,
    2497,  2518,  1706,  1708,  1707,  1991,  1991,     0,     0,  1991,
       0,     0,     0,  2506,  2505,     0,     0,     0,     0,     0,
       0,     0,  2524,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2526,     0,     0,     0,  2525,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1654,
       0,  1653,  1655,     0,   883,   882,  2527,     0,     0,     0,
    1571,  1570,     0,  1577,     0,  1579,  1581,  1569,  1568,     0,
    1576,  1578,  1580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1656,     0,     0,     0,     0,
       0,  2498,     0,  1750,     0,   644,     0,     0,     0,   320,
    1372,  2597,     0,  1371,  1375,  3149,   495,     0,  2175,  2165,
    2174,  1898,  3214,     0,     0,     0,  3211,     0,     0,  3074,
    3076,  1018,     0,     0,  1021,  1023,  2192,  2191,  1022,  1031,
       0,  1020,     0,  3137,     0,     0,  3122,     0,  3103,     0,
    1027,  1029,  1028,  3117,  1026,     0,     0,     0,  3087,     0,
       0,   740,     0,     0,     0,     0,     0,     0,     0,  2326,
       0,  1500,  1500,  2277,     0,  2355,  2345,     0,  2355,  2351,
    2310,     0,     0,   796,  2052,  2303,     0,  2051,  2349,  2350,
    2355,     0,     0,  2355,     0,  2317,  2345,  2355,  2272,     0,
       0,  2264,  2269,  2265,     0,  2271,  2270,  2273,  2261,  2262,
       0,  2290,  2319,     0,  2302,  2309,     0,  2289,  2296,     0,
    2307,  2345,  2345,     0,  2355,  2355,  2355,  1903,   493,  2530,
    2533,  2537,  2541,   283,     0,     0,  1380,  1382,  1381,  1398,
    1306,  3316,     0,  3318,     0,  3320,     0,    78,    73,    79,
      75,     0,  2403,     0,     0,     0,  2397,  2399,  2402,  2398,
       0,     0,  2404,   129,     0,  2400,  2379,  2382,  2389,  1500,
    2380,     0,     0,   356,   359,   361,     0,   364,  1987,  1988,
       0,  3164,     0,  2564,     0,    71,  1310,  1313,     0,  2427,
    2424,   129,     0,  2712,  3323,  3321,  1280,  1296,  1278,  1290,
    1291,     0,     0,  1283,  1282,  3149,     0,     0,  3420,  3437,
    3418,     0,  3432,  3433,  3417,     7,     4,     0,   142,     0,
       0,     0,     0,     0,     0,     0,     0,   740,  1502,  1502,
     740,   160,   740,   156,   740,     0,  2361,  2359,  2376,  2377,
    1903,  2114,     0,  1405,  1492,  1457,  1469,  1492,  1993,  2050,
    3338,  1468,  1460,  3369,  3364,  3366,  3365,  3362,  3363,  3367,
    1491,  3368,  1490,  1502,  1474,  1488,  1489,  2201,  3346,  2187,
       0,  1409,  1468,  1465,  3342,  3341,  3331,  3336,  1036,  1035,
     734,   737,   736,     0,     0,  1151,   226,  2594,     0,  1153,
       0,  2343,  1168,     0,     0,  2343,   533,  2343,   587,  2595,
    3279,     0,  3285,  3267,  3149,  1264,  3379,  3380,  1158,  1156,
       0,  1324,  1325,  1328,     0,   249,     0,   252,   254,   472,
     413,     0,     0,     0,  1363,     0,  1361,  1360,  1358,  1359,
    1357,     0,  1348,  1354,  1355,  2343,   525,  1898,     0,  2236,
    2241,  2152,  2154,  2563,  1994,  2041,     0,     0,     0,  2247,
       0,     0,   597,  2138,  3206,   600,   599,  2143,   598,  2193,
    3265,  2137,  1268,     0,     0,   413,   487,   433,  3241,  1516,
       0,  3222,  3226,  3220,  3224,     0,  3204,     0,     0,  3212,
       0,     0,  3250,  3233,  3237,  3236,  3234,     0,  3235,  3240,
    3218,   412,   452,  2162,  2858,  3055,  2444,  2440,  2439,     0,
    2456,     0,     0,  3151,  2070,     0,  3148,   428,     0,   420,
       0,     0,     0,   443,   279,   424,   420,   433,   442,   492,
     282,   418,     0,     0,   413,   413,     0,   283,  3149,     0,
    1992,     0,  1833,     0,     0,     0,     0,     0,     0,  1633,
       0,     0,     0,  1772,     0,  1833,  1795,  2100,  2101,  2081,
    2082,  2080,  2083,  1513,     0,  2084,  2099,  1718,     0,     0,
       0,  1793,     0,  1962,  1963,  1964,  1965,  1966,  1967,  1968,
    1969,  1970,  1971,  1972,  1973,  1975,  1980,  1976,  1977,  1978,
    1979,  1974,  1981,     0,  1961,     0,  1819,  1785,     0,     0,
       0,     0,   883,     0,     0,     0,     0,     0,     0,     0,
    1991,     0,     0,  1991,     0,     0,     0,     0,  1794,     0,
       0,     0,  1792,     0,     0,     0,  1791,  1676,     0,     0,
       0,  1991,     0,     0,     0,     0,  1609,     0,     0,     0,
       0,     0,  1991,     0,     0,     0,     0,     0,     0,     0,
       0,  1602,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1984,  1982,  1985,  1983,     0,     0,  1858,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1732,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1680,
       0,     0,     0,  2554,     0,  1067,     0,     0,     0,     0,
    1648,     0,     0,     0,     0,  3103,  1813,  1815,  1529,  1523,
    1527,  1521,  1525,     0,  1518,  1517,  1519,  1582,  2766,  1530,
       0,     0,  3356,  1542,  1546,     0,     0,     0,     0,     0,
    1564,  1565,  1553,  1551,  1552,  1549,  1550,     0,  1555,     0,
    1554,  1561,  1562,  1563,  1566,  1650,  1030,  1658,  2011,  1787,
    1788,  1811,  2015,     0,  2550,  1502,  1605,  1604,  1606,  1607,
    1608,   645,     0,   639,   642,   656,     0,     0,     0,  2431,
       0,  2729,  2753,  2754,   338,   341,   340,   342,     0,     0,
       0,     0,     0,  2173,  2527,     0,  2151,  1899,     0,     0,
       0,  3269,  3191,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3120,     0,     0,  3119,  3118,     0,  3139,     0,
       0,  3124,  3145,  3146,  3143,  3144,  3142,  3123,     0,     0,
    3081,  3125,  3126,  3129,     0,     0,     0,     0,     0,  3110,
       0,  3039,  3083,  3084,  3089,  3079,  2318,     0,     0,  2321,
    2314,  2325,  2776,  2323,  2335,  2322,  2316,  2327,  2315,     0,
       0,  2332,  2328,  2355,     0,  2355,  2330,     0,  2353,  2340,
    2339,  2338,  2287,  2286,  2063,  2064,     0,  2062,     0,  2053,
    2056,  2061,  2059,  2280,  2346,  2333,  2329,   225,  2355,  2285,
    2284,  2266,  2267,  2268,     0,  2050,     0,  2351,  2320,  2345,
       0,  2355,  2355,  2336,  2337,  2306,  2308,  1931,     0,  1873,
       0,  1875,  1872,  1871,  1870,  1901,     0,  1902,   413,     0,
       0,  2535,   279,     0,     0,     0,   629,  1398,  1384,  1400,
    1308,  1307,  1305,  3315,  3319,  1859,    77,     0,  2408,  2391,
    2390,  2392,  2396,   129,  2401,  2393,     0,  2405,  2406,   369,
       0,   365,     0,     0,  2578,  1990,  2579,  2603,  2601,  2605,
    2599,  2600,  2604,  2598,  2602,  2847,  2928,     0,  1993,  3168,
    3441,     0,  1314,  2070,  2423,  2425,  2418,  3322,  1281,  1298,
    1297,  1293,  1294,  1299,  1289,  1288,  2257,  3426,  3435,  3439,
    3424,   741,   732,  3202,  3285,   194,  1117,     0,     0,   132,
     134,     0,   151,   740,   149,   153,   740,     0,   740,   170,
     159,     0,   171,   168,   740,   155,     0,   740,  1472,  1470,
    1471,     0,     0,  2127,     0,  2122,  2043,     0,     0,  1441,
       0,  1458,  1462,  1463,  1439,  1999,  3337,  1469,  2041,  1497,
    1466,  1496,     0,  1487,  1502,     0,  1423,  1410,  1411,  1420,
    1451,  1450,  1468,     0,   735,  2193,  2193,     0,     0,     0,
       0,     0,     0,     0,     0,   229,   238,  2593,     0,     0,
     531,   532,  2193,   530,   573,   574,   577,   578,   579,     0,
       0,   580,  2193,  2193,   527,   553,   554,   557,   558,   559,
     560,   561,   523,     0,   528,     0,     0,     0,  3297,  1145,
    1170,  3381,  1154,     0,     0,  1327,   247,   246,   250,     0,
       0,   459,   468,   462,   464,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    87,
      88,   109,     0,  1350,  1362,  2149,  1356,  2193,  2193,  2193,
    2193,   529,   562,   563,   566,   567,   568,   569,   572,   570,
     571,     0,  2343,  2237,  1475,     0,     0,     0,  2566,     0,
    2066,  2042,  2246,  1903,  2250,  2249,  3149,  2134,  2144,     0,
    2194,     0,     0,  1270,  1269,  2140,  2147,  3149,   413,   308,
     436,   490,  3284,     0,  3283,     0,     0,  3201,     0,  3261,
    3264,  2563,     0,     0,     0,     0,   413,  2527,  2441,  2445,
    1389,  1391,  1392,  1390,  1398,     0,     0,  3157,  3158,  3156,
    2075,  2071,     0,  3150,  3155,   421,   429,   444,   447,     0,
       0,   413,     0,   425,   434,   438,     0,   450,   503,   477,
     477,   477,   279,  1366,     0,  1767,     0,  1768,  1769,     0,
    1634,  1867,     0,     0,     0,  1661,     0,     0,     0,  1771,
       0,  1514,     0,     0,  1637,  1629,     0,  1797,     0,  1802,
       0,  1800,     0,     0,     0,     0,     0,     0,  1861,     0,
    1863,  2550,     0,  1777,  1807,     0,  1775,     0,  1796,     0,
    1808,  1809,     0,     0,     0,     0,  1781,  1779,     0,     0,
       0,  1783,     0,     0,     0,     0,     0,     0,     0,  1679,
    1780,  1782,     0,  1714,     0,  1765,  1715,  1716,  1717,  2553,
       0,  1711,     0,  1712,     0,     0,     0,     0,     0,  1665,
    1666,     0,     0,     0,  1742,     0,  1667,  1722,     0,  1642,
    1743,  1724,  1672,  1673,  1744,  1745,  1746,  1639,  1640,  1726,
    1727,     0,  1748,  1641,  1728,  1731,     0,  1675,  2070,     0,
    1659,     0,     0,     0,  1677,  1705,     0,     0,     0,  1638,
       0,  1734,     0,     0,     0,  2070,     0,     0,  1681,     0,
       0,   884,  1920,  1434,  1492,  3344,  3343,  3352,  3353,  3357,
    1630,  2551,     0,     0,  1524,  1528,  1522,  1526,  3356,     0,
       0,     0,     0,  1541,     0,  3356,  1544,  1547,     0,     0,
    2013,     0,     0,  1805,  1856,     0,     0,     0,  1761,  1762,
       0,     0,   638,   637,     0,   641,   717,     0,   658,   646,
     635,  2433,  2432,     0,     0,  1373,  1376,     0,     0,  2179,
       0,     0,  2527,  2185,  2166,  2176,     0,     0,     0,  3192,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3107,
    3077,  2527,     0,     0,  1034,  1033,  1032,  3138,     0,     0,
    3131,  3132,     0,     0,     0,  3104,  3105,  3106,     0,  2626,
    2582,  2584,     0,  2583,  2624,  2622,  2625,  2620,  2621,  2619,
    2623,  3113,     0,  3086,  3087,  3088,     0,     0,  2313,  2324,
    2356,  2357,  2281,  2334,  2331,  2352,  2070,  2291,     0,  2505,
       0,     0,     0,     0,  2312,  2282,     0,  2305,  2263,  2353,
    1993,  2345,  2278,  2279,  1931,  1903,     0,     0,  1893,  1934,
       0,  1934,  1895,  1896,  1903,     0,  1903,  1898,   413,  2534,
       0,  2539,     0,   413,  1347,  1387,  1379,  1386,  1383,  1398,
    1396,  1385,  1093,  1092,     0,  1399,  2214,  2212,    80,    82,
    2211,  2213,    83,     0,  2394,  2395,  2388,  2407,  2383,     0,
     360,   370,   362,   366,   367,   368,   363,  3179,  3180,  3172,
    3175,  3173,  3174,  3178,  3181,  3182,  3169,  3176,  2050,  1321,
    1319,  1318,  1320,  1309,  1315,  1316,  2428,  2426,  2421,  1296,
       0,  1279,  2070,     0,  3438,   143,   733,     0,   163,  3297,
       0,     0,     0,     0,     0,     0,   744,   174,  3414,  3402,
       0,   144,   172,   161,   173,   169,  3411,   227,   157,     0,
    2577,  2123,  2126,     0,  2115,  2117,  2118,  2589,  2120,     0,
    3149,     0,  2107,  1459,  1464,  3329,     0,  1996,  2050,  1502,
    1503,  1503,  2549,     0,     0,  2206,  2199,  2186,  1492,  1465,
    1426,  3332,  1413,     0,     0,  1149,     0,     0,     0,   232,
     235,   233,   234,   582,   581,     0,  2343,   575,  2193,  2193,
     188,  2193,  2193,   187,   189,     0,   183,   180,   190,  2193,
    1169,   176,     0,     0,     0,     0,  2070,     0,     0,     0,
     196,     0,     0,  2343,   555,   534,   535,   538,   539,   540,
       0,  3272,  3271,     0,  3287,     0,     0,  3289,     0,  3288,
    3286,  3257,  3268,     0,  1166,  1035,     0,  1172,  1174,     0,
       0,  3381,  1326,     0,   249,   253,   413,     0,   465,     0,
       0,  2070,     0,  2070,  2070,     0,     0,  2070,     0,  2070,
       0,     0,     0,     0,     0,     0,     0,  2070,     0,     0,
       0,     0,  2070,     0,  1364,     0,     0,     0,     0,  2343,
     564,     0,  2193,   524,   541,   542,   545,   546,   547,   548,
     549,   552,   550,   551,  1477,  1476,     0,  2234,  1479,  2153,
    2249,  1903,  2564,  1995,     0,  2243,  1993,     0,  2248,  2132,
    3207,   596,   795,  3266,  1268,     0,   309,     0,     0,   433,
    3281,     0,  3301,     0,     0,     0,     0,     0,     0,     0,
       0,   413,  2215,     0,  1398,  1402,  2449,  3160,  3161,  3159,
    2078,  2079,  2076,  2074,  2077,   445,   312,   314,   311,   313,
    2635,     0,   299,   285,   301,     0,   388,   294,   386,   387,
    2632,  2630,  2634,  2628,  2629,  2633,  2627,  2631,   483,     0,
     284,     0,   441,   433,     0,   497,   499,   478,   507,   501,
     413,     0,  1834,  1864,     0,   985,   985,   971,   989,  1851,
    1845,  1848,     0,   985,  1853,   985,  1846,   985,     0,     0,
    1843,  1844,     0,     0,     0,  1773,  1770,     0,     0,     0,
    1822,     0,     0,     0,     0,     0,  1558,     0,  1756,     0,
    1778,  1776,     0,     0,     0,     0,     0,     0,     0,     0,
    1784,  1615,     0,  1613,     0,  1614,     0,  1616,     0,     0,
    1766,     0,  1584,  1603,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1859,     0,     0,  2086,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2555,     0,
       0,     0,  1056,  1062,  1065,  1066,  1068,  1060,     0,  1736,
       0,     0,     0,  1468,  1919,  3358,  1434,     0,     0,     0,
    3350,  1492,  3354,  3340,     0,  3355,  1816,  1814,     0,  1539,
    1535,     0,  1533,  1543,     0,     0,     0,     0,  1557,  1556,
    2015,  2014,     0,  1804,     0,     0,  1857,  2552,  1503,  1751,
    1502,   648,     0,   666,   640,     0,  2070,   643,   657,     0,
     669,     0,     0,     0,   339,     0,  1377,     0,     0,  2183,
    2184,  2527,     0,     0,     0,  2182,  2543,  2542,  2554,   723,
       0,  1959,     0,  3190,  3270,     0,     0,     0,     0,     0,
       0,     0,  3075,  3121,  3112,     0,     0,     0,     0,  3136,
    3130,  3127,  3128,     0,     0,     0,  3111,  3085,  3091,  3090,
    3093,  3095,  2301,  2300,     0,  2354,  2050,  2065,  2055,     0,
    2058,  2057,  2060,  2274,  2293,  2295,  2355,  1933,  1926,     0,
    3335,  1492,  1923,  1924,  1932,  1903,     0,     0,  1897,  1894,
    1935,     0,  1934,  1934,  1903,     0,  1877,  2220,  2223,     0,
    1876,  1481,     0,  2538,     0,     0,   485,     0,  1953,     0,
       0,  2386,     0,  2381,  2384,     0,     0,     0,  3167,     0,
    1311,  1317,  1295,     0,  1302,  1300,  3427,  3440,     0,   162,
       0,  1133,  1135,  1134,  1118,  1119,     0,   138,   140,     0,
       0,  2193,  2193,  2193,  2193,  2193,     0,  2193,  2193,  2193,
    2193,  2193,     0,  2193,  2193,  2193,  2193,  2193,  2193,  2193,
    2193,  2193,  2193,     0,     0,  2193,  2193,   841,   133,   611,
     625,   745,   748,   789,   773,   774,     0,   744,   175,     0,
       0,   205,  3381,     0,     0,   146,  1024,  2119,     0,     0,
    2548,  2044,  2047,  1493,     0,     0,  1440,  3330,     0,  1997,
    2006,  1461,  1495,  1504,  1498,     0,  1503,  2202,  1502,  2203,
    1422,  1468,  1426,     0,     0,  1414,  1415,   794,   793,   237,
     236,   241,   242,  2096,  2097,  2094,  2095,   588,   601,  2098,
     602,   576,  2070,  2070,  2198,  2197,  2070,  2070,   182,   179,
    2196,  2195,  2070,  2070,   177,   200,   199,   201,   202,   204,
     203,   198,  1165,     0,   589,   590,   556,     0,   536,  3275,
       0,  3277,  3260,  3259,  3258,  3255,     0,  2070,  2070,  2070,
       0,  2070,  3296,  3298,  1256,  1256,     0,  1256,     0,     0,
    1256,  2193,     0,     0,   629,  1274,  2193,     0,     0,     0,
       0,     0,  1240,     0,  1256,     0,     0,     0,     0,     0,
    1186,  1239,   746,  1146,  1185,  1187,  1199,   625,     0,  1217,
    1242,  1243,  1241,  3310,     0,     0,   210,  3383,     0,  3385,
       0,  1330,     0,  1329,   248,   413,   469,  2070,  2070,   102,
    2070,    94,    95,    90,   122,   123,    92,    93,    98,    97,
      99,   100,   103,   104,   101,    96,    91,   126,   128,   127,
     105,   124,   125,    89,   595,   594,   593,   592,   565,     0,
       0,  2343,   543,  1478,  1480,     0,  1993,  2567,     0,  2067,
    1502,  2238,  2240,  2131,   514,  2527,   491,   437,   489,  3282,
       0,  3200,  3205,     0,  3263,  3262,  3285,  3285,  3285,  3285,
     455,     0,  2163,  1393,  1398,  1402,     0,  1394,  2460,   965,
     987,   985,  1002,   951,   971,   967,   971,   961,  1002,   908,
     908,  1002,   964,   908,   971,   966,     0,   963,  1002,   962,
     908,     0,   955,   987,   902,   903,   908,   985,   921,     0,
     971,   944,   943,  1002,   947,   948,   946,   950,     0,   952,
     971,   957,   945,   949,     0,     0,   985,   985,   985,     0,
       0,   985,   390,   890,   893,   895,   894,   896,   897,   971,
     987,   987,     0,     0,   985,   989,     0,     0,   302,     0,
     280,   435,   439,   413,   477,     0,  1865,     0,   986,  1835,
    1836,     0,  1850,   973,   972,     0,   990,  1852,  1849,  1838,
    1855,  1842,  1847,  1854,  1840,  1632,  1662,  1636,  1635,     0,
       0,     0,  1692,     0,  1820,  1803,  1801,     0,     0,  1669,
       0,  1671,     0,     0,  1758,  2552,  1725,  1799,  1695,  1729,
       0,  1674,     0,  1701,  1699,     0,  1612,  1610,  1611,     0,
    1682,  1709,     0,  1601,  1710,     0,  1741,  1688,     0,  1690,
       0,  1691,     0,  1720,     0,  1693,  1723,  1747,  1628,  2088,
    2087,  2085,  1643,  2070,     0,  1696,  1660,     0,     0,  1733,
    2556,  2557,     0,  1735,     0,     0,  1067,  1053,  1054,  1055,
       0,  1057,  1059,  1061,     0,  2070,  1749,  1560,  1559,  3347,
    1502,  3359,  3361,     0,  3351,  1435,  1920,  3348,  3339,  1918,
    1914,  1916,     0,  1531,     0,  1540,  1537,     0,  1534,  1545,
    2017,  2016,  2047,     0,     0,  1752,  1856,  1504,  1763,     0,
     649,   650,   652,   654,     0,   719,   644,     0,   633,     0,
     648,   636,  1374,   496,  2180,  2189,     0,  2527,  2177,   619,
    2527,     0,   723,     0,  1468,  1473,   629,     0,     0,     0,
    3187,  3186,  3185,  3184,  3109,  3108,  3141,  3140,  3134,  3133,
    3135,     0,     0,  3114,     0,     0,  2092,  2093,  2091,  2089,
    2090,  2292,  2054,  2050,  2288,  1928,     0,  1481,  1908,  1909,
    1911,  1492,  1922,     0,  1874,  1903,     0,     0,  1882,  1903,
    1878,  1880,     0,  1993,     0,     0,  1986,   494,  2540,  1500,
       0,  1956,     0,  1957,  1954,  1955,    81,  2070,     0,     0,
     378,   373,   381,   375,   377,   376,   382,   383,   384,   385,
     379,   374,   380,   372,   371,     0,  1322,     0,     0,  3203,
       0,   136,     0,     0,  2193,   612,  2070,  2070,  2070,  2070,
     771,   792,  2070,  2070,  2070,     0,     0,  2193,  2070,     0,
       0,  2070,  2070,  2070,  2070,     0,     0,  2070,   779,   780,
     778,  2070,  2070,  1140,     0,  2674,     0,     0,     0,   811,
     812,   814,   815,   816,   817,     0,   842,   818,   740,  1094,
    1094,   844,  2559,  2460,   624,   626,  1035,   749,     0,   135,
     277,   230,     0,     0,     0,   275,     0,   809,   810,   808,
     807,     0,  3381,     0,  2124,  2116,  2121,     0,  2048,  2049,
    2046,  3149,  1502,  2003,     0,     0,  1467,     0,  1499,  1508,
    1507,  2546,  2550,  2210,     0,     0,  2204,  2208,  1412,  1492,
    1469,  1492,     0,  1416,  1465,  1427,  1468,   181,   186,   185,
     178,   191,   184,   197,   537,  3276,  3274,  3273,     0,  3256,
    3292,  3290,  3291,  3294,     0,     0,  3293,  3295,  1140,   740,
    1257,     0,     0,  1221,  1224,  1222,   738,  2155,  1367,  2155,
       0,     0,  2155,     0,  2157,     0,     0,     0,  2155,  2155,
       0,  1367,     0,   627,  1277,  1275,  1276,     0,     0,  1367,
    1233,  1181,  1234,     0,  1182,  2155,  1367,  1201,  1367,  1367,
       0,   747,  1035,  1183,  1184,   841,  1271,  3311,     0,     0,
       0,  1171,     0,   213,   211,   221,  3382,     0,  1157,  2527,
    3385,  1332,  1333,     0,     0,     0,   115,   117,     0,   119,
     121,     0,   111,   113,   526,   591,   544,  2249,  2242,  2068,
       0,  2244,   310,     0,  3285,  3299,  3299,  3299,  3299,   413,
     451,   454,  2216,  1395,  1403,  2462,  2461,     0,   988,   914,
    1002,  1000,  1002,   928,  1003,   975,   968,   975,   931,  1045,
       0,  1038,  1043,  1039,   937,  1041,     0,  1049,  1048,   909,
     951,  1002,   939,     0,   908,   930,   936,   975,     0,   925,
     934,  1002,   901,   938,   924,     0,   975,   940,   953,   956,
     958,   960,   975,  1002,     0,     0,   390,   908,   923,   922,
       0,   908,   975,     0,   295,   969,   954,  1041,  1049,   908,
    1002,   975,   975,   304,  2070,   306,   389,   413,   481,     0,
       0,     0,     0,  1041,     0,     0,  1041,  1041,  1774,     0,
       0,     0,     0,  1826,     0,     0,     0,     0,     0,  1631,
       0,  1754,     0,     0,     0,     0,   971,  1591,  1593,  1589,
    1592,     0,   985,  1595,     0,   952,   985,  1598,  1600,  1585,
    1586,  1587,  1588,     0,     0,  1868,  1869,     0,  2106,  2105,
    2104,     0,     0,     0,     0,  2558,  1051,  1738,     0,  1064,
    1058,  1056,  1063,     0,  1921,  3360,  1438,  3349,  1468,     0,
    1817,  1536,     0,     0,  2019,     0,  2002,     0,  1806,     0,
    1764,   653,     0,   720,     0,   673,     0,   671,   647,     0,
       0,     0,     0,  3335,  2178,  2181,  1468,  2544,  2555,  1492,
    1469,  1492,   728,  1502,  1900,  1960,  3189,  3188,     0,     0,
    3092,  3094,  2294,  1925,  1473,  1927,  1986,     0,  1913,  1912,
    3357,     0,  1870,  1903,  1903,     0,  1870,     0,     0,  2222,
    2041,  2224,  2225,  1484,     0,  1475,  1475,  1482,  1951,  3356,
    1202,     0,  1203,  1214,  1216,  1401,     0,  2413,     0,  2411,
    2387,  2414,     0,  1301,  1303,     0,     0,     0,     0,     0,
    2103,  2102,   768,   761,   760,   763,   762,   765,   764,     0,
     757,   754,   766,   756,   781,     0,   769,   751,   805,   806,
     804,   775,   782,   752,   753,   759,   758,   755,   797,   802,
     800,   799,   798,   803,   801,   770,   788,   767,   783,   843,
    1141,     0,     0,  2562,   606,   603,   841,     0,     0,     0,
    1094,   834,   740,     0,   819,  1140,  1095,   740,   740,     0,
       0,   605,   730,   750,   787,   786,   784,   785,   271,  3415,
     517,   518,     0,     0,  3385,   255,  3409,   230,     0,     0,
    1025,  2463,  2047,  1494,     0,     0,  2110,  2112,  2004,  2005,
    2000,  1998,     0,  2007,  2009,  1506,  1505,     0,  1503,  2200,
       0,  1444,  1463,  1442,  1428,  1417,  1418,  1468,  1425,  1453,
    1452,  3278,  2073,  2072,     0,  1367,  1244,     0,  1219,     0,
       0,     0,  1193,     0,     0,  2155,     0,  1246,  1245,     0,
       0,     0,  1254,  1255,     0,  2037,  2039,  2047,     0,  1237,
    1252,  1253,     0,     0,     0,     0,  1209,     0,  1198,  1256,
    1256,  1218,     0,     0,  1273,  1220,   220,   209,     0,     0,
    1173,  1175,     0,     0,  1176,  3384,     0,  1155,  1338,     0,
     413,   107,  2070,   108,  2070,   106,  2070,  2069,  3302,  3299,
       0,  3198,  3197,  3196,  3195,   413,   456,     0,     0,   926,
    1004,     0,   927,   977,   978,   976,   904,   900,  1046,  1040,
     911,  1042,  1037,  1050,  1047,  1044,  1000,   910,   932,   933,
     906,     0,  1142,   918,     0,   907,   959,   905,   919,     0,
       0,   291,     0,   289,   298,   935,   390,   286,   916,   920,
     391,     0,   929,   912,   913,   915,  1049,   898,   899,  2070,
     300,   319,   318,     0,     0,     0,   983,   981,   984,   982,
    1837,     0,  1839,  1841,  1686,  1687,  1823,  2047,  1821,  1828,
       0,     0,  1827,  1719,     0,  1670,     0,  1755,     0,  1730,
    1700,  1698,  1683,  1594,  1590,  1597,   953,  1596,  1041,  1713,
    1689,  1721,  1644,  2070,  1697,  1703,  1704,     0,  1737,  2070,
    2041,  1917,  1538,     0,  2022,  2021,     0,     0,  2047,  2047,
    1753,   651,  2070,   718,   646,     0,     0,   670,     0,   634,
    2188,  2190,   621,   623,  1492,   726,   725,     0,   618,   729,
     727,   616,   724,  3116,  3115,  1502,  1905,  1910,     0,  1883,
       0,  1887,  1892,  1888,     0,  1879,     0,  2066,  1475,     0,
       0,  1904,  1948,  1501,  1397,     0,  1958,  2409,  2070,     0,
    2385,  3177,     0,     0,     0,  2047,  1138,     0,   777,  2406,
     776,   613,     0,     0,  3335,   744,   813,     0,   740,  1090,
    1091,  1140,  1072,  1115,  2559,  1140,  1140,   987,   902,   903,
     908,   985,   921,  2731,   971,   944,   943,  1002,   947,   948,
     946,   950,  2741,   952,   971,   957,   945,   949,  2749,   848,
     985,   985,   985,  2756,   985,     0,   836,   846,   891,  2561,
     731,  2527,   274,   272,   273,     0,   267,   269,     0,   239,
     231,     0,   413,   521,   519,   520,     0,     0,   145,     0,
     256,     0,   258,   259,     0,  3412,  3408,  3385,     0,  2471,
    2045,  1503,  2108,  1502,     0,     0,  2547,  2209,  2207,  3329,
    1492,     0,  1204,     0,     0,  1192,     0,  1353,  1031,  1229,
       0,  1188,  1231,  1232,  1268,  1190,     0,  2040,   628,  1197,
       0,  1271,  1189,  1211,  1195,  1223,  1272,   207,   212,   222,
     223,  1159,  1465,  1431,  3388,  3394,     0,  1339,  1335,  1336,
    1331,   413,   116,   120,   112,  3199,     0,  3306,  3300,  3304,
       0,     0,  1001,   979,   980,  1005,  1041,     0,  1041,   390,
     290,   293,     0,   296,     0,     0,   917,   328,   327,   325,
     413,   315,   323,   317,     0,   324,     0,   308,   504,     0,
       0,  1825,  1786,  1829,  1830,     0,  1757,  1759,  1599,     0,
    1052,     0,  2050,  2018,  2012,     0,     0,     0,     0,     0,
       0,  2031,  2023,     0,  2001,  1810,   721,     0,     0,   659,
     676,   675,   672,   722,  2545,  3329,  1929,  1481,     0,     0,
       0,     0,     0,  2221,  1483,  1475,  1475,  1952,     0,     0,
    1215,  2412,     0,     0,     0,  3149,     0,  1137,     0,  3149,
       0,     0,   608,   610,   625,     0,  1140,  1115,  2559,     0,
    1076,     0,   820,     0,   824,   826,   850,     0,   845,   837,
     858,     0,   790,   278,   271,   270,   240,   192,  1502,   218,
     276,     0,     0,     0,   260,  3410,     0,   147,     0,     0,
       0,     0,  2464,  2466,     0,  2125,  2113,  2111,  2010,  2008,
    1443,  1424,     0,  1206,   739,     0,     0,  1271,  1194,  1238,
    1230,  1228,  1367,  2038,     0,  1227,  1210,  1212,  1314,   214,
    1177,   413,  1468,  1431,     0,     0,  3340,  3390,  3389,     0,
    3386,  1334,     0,  1341,  3305,  3303,  2217,  1898,   942,  1143,
     941,   297,   292,   287,   970,  2070,   305,   326,   307,   303,
     477,   974,  2047,     0,     0,  1668,  1645,  1739,  1492,     0,
    2028,     0,     0,  2026,  2025,     0,  2020,  2027,     0,     0,
     667,   683,   679,     0,   681,   682,   704,   617,  1468,  1986,
    1884,     0,  1889,     0,  1881,  1486,  1485,  1941,     0,  1940,
       0,  1946,  1950,  2536,  2415,     0,  3149,  1105,  2047,     0,
    1107,   772,     0,  2460,   838,   832,   828,     0,     0,  1075,
       0,  1080,  1116,     0,   822,     0,     0,  1070,   876,  1016,
       0,   879,     0,   849,   851,  1009,  1010,   853,     0,     0,
       0,     0,   892,     0,     0,   993,     0,   996,     0,     0,
     847,     0,   859,   992,   999,  2560,   615,   791,   268,   193,
    3416,  3403,   210,   219,   257,     0,   265,     0,   192,     0,
       0,     0,     0,  2465,     0,     0,  2472,  2474,     0,     0,
       0,  1205,  1236,     0,  1226,  1191,   629,     0,  1196,     0,
     216,   192,  3387,  1469,  1492,  1492,     0,  3391,  1465,  1432,
    1468,  3333,     0,     0,     0,  1340,  1345,     0,  1342,  1344,
       0,  2450,     0,   316,   505,  1824,  1832,  1831,  1437,  2029,
       0,  2030,  2033,     0,     0,  2034,     0,   663,   665,   655,
       0,   660,     0,   677,     0,  2193,  2193,     0,  2193,  2193,
    2193,  2193,   697,   705,   707,     0,  1930,  1906,     0,     0,
    1936,  1936,  1947,     0,  1103,     0,     0,  2193,  1247,  1106,
    1131,  1113,     0,  1136,  1139,  1247,  1108,  1130,  1111,     0,
     604,     0,     0,   830,  1073,     0,  1077,  1078,  1079,     0,
    1071,     0,     0,     0,     0,   877,   878,  1017,   852,  1015,
    1008,  1007,     0,   998,     0,     0,  3356,   888,   889,   994,
     886,   887,     0,     0,   867,     0,     0,  1000,   991,   860,
       0,   221,     0,     0,  3413,  2469,  2470,     0,  2467,     0,
       0,  2473,  1225,  1208,     0,  1235,  1200,     0,   215,     0,
     208,   224,  1492,  1445,  1448,  1433,  3393,  3392,  1468,  1430,
    1469,  1454,  1455,     0,  3395,     0,     0,  1337,     0,  2218,
    2227,     0,  1024,   288,  2024,  2032,  2036,  2035,   661,     0,
     668,   690,   680,   686,     0,  2193,     0,     0,  2193,     0,
       0,     0,     0,     0,   674,   706,  2193,  1886,  1891,     0,
    1944,  1942,   195,     0,     0,  1247,  1104,  1129,  1128,  1109,
       0,  1123,  2070,   139,  1249,  1248,  1114,     0,   141,  1112,
     835,     0,     0,     0,  1074,     0,     0,     0,     0,     0,
       0,  1014,  1013,  1011,  1012,  2508,  2507,     0,  1509,   997,
       0,   862,  1006,   861,     0,     0,   263,     0,  2468,  2476,
    2475,  1207,     0,   217,  1449,     0,  1492,  1456,  3334,  3396,
    3397,  1343,     0,     0,  2451,   667,   664,   690,     0,   688,
       0,   684,   678,   685,     0,   716,   710,     0,   712,   713,
     711,   708,   701,     0,   699,     0,     0,  1937,     0,     0,
       0,  1120,  1121,   137,  1110,  1132,  1122,  1251,  1250,  1127,
    1126,  1124,  1125,     0,     0,     0,  1086,  1085,     0,     0,
    1082,  1081,  1103,     0,  1105,  1107,   885,     0,   995,   854,
     854,   868,  1502,   223,     0,   261,     0,  1447,  1429,  2226,
    2228,  2477,   662,   687,     0,   695,   691,   693,   696,   715,
     714,     0,   698,     0,   709,  1939,  1938,  1953,     0,     0,
    1103,     0,  1089,  1087,  1088,     0,     0,   821,  1103,   825,
     827,  1510,     0,   865,   855,   857,   864,   870,   871,   869,
     872,  3404,   206,   264,     0,  1213,     0,  2463,   689,     0,
       0,   704,   703,   700,     0,     0,   833,   829,  1103,     0,
       0,   823,  1511,   856,   863,   873,   875,     0,   262,     0,
    2471,   694,   692,   702,  1945,  1943,   831,  1084,  1083,   874,
       0,     0,  2479,  3405,  2478,     0,  2483,  3400,     0,     0,
    2490,  3398,  3399,     0,  3406,  2481,  2482,  2480,  2485,     0,
       0,  2487,  2488,     0,  2452,  3401,   413,  2489,  2484,     0,
    2491,  2493,     0,   192,  2486,     0,  1502,  3407,  2492,     0,
    1503,  2494
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5255, -5255, -5255, -5255,  2008,  4121, -5255, -5255, -5255,  3783,
   -5255, -5255, -5255, -5255,  3215, -5255, -5255,  1357, -5255, -5255,
   -5255, -5255, -5255,  1714, -5255,   113, -5255,   118, -5255,   117,
   -2975,  -595,  3827, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    3140,  2471, -5255, -5255, -5255,  1866, -2594, -4961, -5255, -5255,
    -439,  1224, -5255, -5255,  -128, -5255,  -491, -5255, -5255, -5255,
   -4253,  -641,  -831, -5255,    74,    60,  3716,   231, -4049, -5255,
   -5255, -5255, -5255, -5255, -5255, -1827, -5255, -5255, -5255,    66,
   -5255, -3880, -5255, -5255,  -304, -5255, -5255, -5255, -5255, -5255,
   -2059,  -613,  -538, -5255,    92, -5255,  -199, -5255,  -307, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  -211, -5255, -5255,
   -5255,  -368,   484, -4360, -5255, -5255, -5255, -5255,  2230, -5255,
    1923, -5255, -1646,  3393, -5255, -5255, -5255, -5255, -5255,  2559,
   -2310, -5255, -5255, -5255,  1386, -5255, -2668, -5255, -4242,  -303,
    -846,    46, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -1188,
   -5255, -5255, -5255, -5255, -5255, -5255, -1931,  1646, -5255,  1705,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,   566, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    2409, -5255, -5255,  4257, -5255, -5255, -5255, -5255,  1036, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  2988, -5255,  2990,
    2991, -5255,  2994, -5255, -2691, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3717, -5255, -5255,
   -5255, -2792, -5255, -5255, -3025,  3137, -5255, -2382, -5255, -5255,
   -2421, -5255, -5255, -2189,  1164, -5255, -5255,  1930,  1689, -5255,
   -1716, -2417, -2391, -5255, -5255, -5255, -2515, -2492,  -716,  3068,
   -1249, -2783, -5255, -5255, -5255, -5255, -5255,  -402,   -68, -5255,
   -5255, -5255,  -250,  1218,  1816, -5255, -3712, -5255, -5255,   214,
   -5255, -5255, -5255, -5255, -5255,   912,    49,   917, -5255,   433,
    2775, -2625, -5255, -5255, -5255, -5255, -5255, -5255,  -629,  -196,
    -710, -5255, -3991,    56, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -3584, -5255, -5255, -5255,  -823, -5255, -5255,  -786,
   -5255, -5255,  -821, -5255,  -502, -5255, -5255,  1387,   925, -5255,
   -5255,   442, -4220, -5255, -5255,  2578, -1760, -5255,  -657, -5255,
   -3606,  1259, -3439, -3094, -5255, -5255,  -237, -1177, -1172,  -708,
   -5255, -5255, -5255, -5255,   669, -5255,   342,  1261, -3632, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -3625, -3624, -5255, -4709,
   -5255, -5255, -5255, -3531, -5255, -5255, -5255, -5255, -5255, -5255,
    -739, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5254, -5255,
   -5255,  -533,  -540, -5255,  -416, -3337, -5255, -4381, -5255, -2744,
   -5255, -5255, -5255, -5255, -5255, -2457,  1046,  1169, -5255, -5255,
   -5255, -5255, -3209, -3105, -1200, -2950, -2985, -1845,  1116,  -537,
   -4301, -4727, -1489, -3629, -5255, -5255, -3115, -3600, -5255,  -644,
   -2679, -3071,  -579, -5255, -5255, -1619,   -54, -3037, -5255,   630,
     623, -3806, -4094, -3981,  1640, -5255, -5255,  1021, -5255, -1450,
    1020, -5255, -5255, -5255,  1027, -5255,  -743, -5255, -5255, -5255,
   -5255, -3636, -5255, -2402, -3676, -5255, -5255,  5043,  5046, -3494,
    -701,  -700, -5255, -5255, -5255,  -173, -5255, -5255, -3942,  -590,
    -468,  -460, -3061, -4464,  -156, -3660,   626, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  1306, -2809, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -4068, -4149, -5255, -5255,
     723, -3864, -3166, -3158, -3597,  3957, -5255, -5255, -5255, -5255,
    3830, -3230, -3582, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    3337,  1536, -5255, -5255,  2028, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  -217,  2038, -5255, -5255, -5255, -5255,
   -5255,  2536, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    -531, -5255, -5255, -5255, -5255, -5255,    -9,  3196, -5255, -5255,
   -5255, -5255,     7, -5255, -5255, -5255, -5255,  2852, -5255, -5255,
   -5255, -5255,  2725, -5255, -5255, -5255, -5255, -5255, -5255,  1818,
   -5255,  2431, -5255, -2339, -5255, -5255,  1239,  -126, -5255, -5255,
    3888, -5255, -5255, -5255,  1430, -5255, -5255,  -198, -5255,  1678,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  2609,   361,
    -496,  3909, -3579, -1854, -5255, -1264, -1258, -5255, -5255, -3783,
   -5255, -4215, -4020, -5255, -5255,  3291, -1814, -3725,  2018, -1625,
   -5255,  -145, -3093,  1052, -5255,  1813,   820,  9938, -1440, -1493,
   -5255, -5255,   -40, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,  2346,  2353, -5255, -5255,  3627, -3124, -5255, -5255,
    -768, -5255, -2619, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255,  1668, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255,  3572, -1494, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,   413,
   -5255, -2627, -5255, -5255, -5255, -5255, -5255,  1063,  -604, -5255,
    3721, -5255,  3757, -5255, -2836, -1755,  2146,  1588, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255,  2156, -5255, -1928, -5255, -3399,
   -5255, -5255, -5255, -5255, -5255,   540, -5255, -3608, -5255,  1093,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,  2166,
   -5255, -5255, -2590,  -379, -5255,  -229, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255,  -653,   519,  -652, -3977, -1401,  1662, -5255,
   -5255, -1389,  3763, -1798, -5255, -5255, -5255, -5255,  1490, -5255,
   -5255, -5255,    65,    68, -5255, -5255,  1703, -5255, -5255, -5255,
   -5255,   217,  -335, -5255, -5255, -5255,    53, -2470, -1933, -5255,
     228, -3916, -1145, -5255, -1134, -5255, -1675,  1627,   185, -2632,
   -5255,  1319, -1441,  -661, -2923, -4165, -3058, -5255, -2218, -5255,
    2680, -5255, -5255, -5255,    77, -5255, -5255, -5255,  1516, -5255,
   -1812, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    -609, -1087, -5255, -5255,  2551, -2268,  -125,  5149,     3, -5255,
   -5255,    14, -5255, -5255, -5255, -5255,  3837,  3595,  2511, -5255,
   -5255, -3268, -2803, -5255,   599, -1038,   825,  2031, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255,   996, -5255,  1030, -3083, -5255,
   -5255, -5255,    15, -5255, -5255, -5255,  1033, -5255,  -536,  4591,
      17, -5255, -5255, -5255,  4453, -5255, -5255, -5255, -5255, -5255,
    3273, -1316,  4455, -5255, -5255, -5255, -5255, -5255, -5255,  2837,
   -5255, -5255, -5255, -5255, -5255, -5255,  3547,  4602,  -647, -1570,
   -5255,  -712,  2844,  2223,  -884, -5255, -5255, -5255,  3990,  4604,
   -5255, -5255,  5150, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,  2800,   199, -5255, -5255,   206, -5255, -5255, -5255,
   -5255,  3445, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255,  3866, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255,  1337,  -626, -5255,   -67,
    -646, -5255,  -239, -5255, -5255, -5255, -5255, -5255,  -680, -5255,
   -5255,  -684, -5255, -1259,  4311, -1680, -5255, -1609, -3207, -5255,
   -1549,  1667, -5255, -5255, -5255,  2847, -5255, -5255, -5255, -5255,
    1123, -5255, -5255, -3413,  -849, -1520, -3397,   196, -5255, -5255,
   -5255,  -564,  4496,    -2,  1149,  -854, -5255, -5255,  2376,    -3,
    -848,  -139,  -549,  -643,  -994, -5255,  8971, -5255, -5255, -5255,
   -5255,  -586,  -577,  -571,  -492,  -569,  -608,   -86,   722, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    2273, -5255, -5255, -5255,  1105, -5255,  4638, -5255,  3059, -1615,
    4639,  2934,  2305,  2299, -5255, -5255, -5255, -5255, -1618, -5255,
   -5255, -1629,   268, -5255,  3266, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255, -5255,  3449,  -517,  -511,  3641,  4652,  4191, -5255,  3912,
   -5255, -5255, -5255, -5255, -5255,  1508, -5255, -1811,  2343, -1296,
   -2151, -5255, -5255,  2688,  1410, -5255,  1978, -2403, -2815, -5255,
    2182, -2900, -5255, -5255,   102, -5255, -5255, -5255,  1473,   232,
    4627,  4094, -5255, -5255, -5255, -5255, -2847, -3799,  -711, -5255,
   -4284, -5255, -1851, -5255, -1231,  1709, -3411, -5255,  -117, -5255,
   -5255, -3356, -3351,  1117, -1414,  2280,   651, -5255, -5255, -3216,
     236,  5236,  5237,  5239,  -220, -5255, -3090, -5255, -4236, -5255,
    -357, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
    2806, -5255, -5255,     8, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255,  2040, -5255, -5255, -5255, -5255, -5255, -5255, -5255, -5255,
   -5255
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,   709,  1846,    66,    67,    68,    69,    70,  1202,
    1203,    71,  1204,  1777,  1780,  2457,  3078,  3079,    72,   682,
      73,  1953,  2659,  2660,  4451,  4452,  4445,  4446,  4448,  4449,
    2661,   780,   781,    74,  3136,  3137,  4706,  4252,  4253,  2512,
    3712,  4322,  1858,  1857,  1859,  1864,  2534,  1862,  2528,   717,
    2529,  3142,  2530,  3143,  3707,  3210,  3211,  5500,  1258,  3130,
    3219,  3220,  2525,  4313,  4431,  5369,  4435,  5530,  5670,  5502,
    3247,  4874,  5370,  5371,   621,  3146,  1915,  4779,  2585,  5130,
    2586,    75,   774,  1945,  3254,  1330,  1946,  1947,  5139,  5140,
    5141,  5142,  5125,  5126,  5127,  5128,  4316,  4785,  4311,  4778,
    2751,   869,  2044,  2752,  4936,  4930,  4931,  4932,  4526,  3361,
    3362,  3363,  4545,  3364,  4949,  4954,  3326,  3327,  3905,  3365,
    5230,  5231,  5232,   639,  1097,  5233,    76,    77,   640,   649,
     641,  1094,  2304,  1095,    78,    79,   677,  1803,  1804,  1805,
    1806,  3096,  2470,  3090,  3091,  4243,  4937,  3367,  4534,   870,
     871,   872,    81,   622,   873,   874,   875,   876,  1430,  2037,
    2038,   877,   878,   879,   880,   881,  2710,  2755,  3381,  2711,
    3328,  2756,  2048,   882,   883,   884,   885,  1431,   846,   847,
    2726,  3920,  4471,    82,   599,   776,   777,  1952,  2633,   778,
    2634,  3257,  4444,   779,  1331,  2630,  1333,   886,  3385,   887,
     888,  2057,   889,  1421,    83,  1763,  1997,   812,  1371,   890,
    1190,  2438,  1103,  2312,  3386,   891,  2054,  2056,  2053,  3384,
    5400,  2055,    84,   632,   658,   620,  1369,   646,  4782,  5136,
     752,   753,   788,  2682,   754,  1341,  1302,  1921,  2612,  2613,
    3225,  3226,  3293,  3294,  3295,  2604,  2605,  2606,  2671,  2672,
    2673,  2593,  2594,  2595,  1925,  2590,  2591,   755,  1303,  1314,
    2607,  2608,  2609,  3299,  2675,  2676,  2677,  2678,  2610,  1987,
    2611,  3757,  3698,  5075,  5073,  5074,  3699,  4771,  2963,  5275,
    4642,  4643,  4303,  4304,  4305,  4848,  3070,    85,   635,  1077,
    1635,  2295,  3543,  2944,  2946,  2296,  3542,  4139,  4140,  4141,
    2942,  2943,  5269,  2948,  3540,  5420,  5785,  5566,  5567,  3532,
    5571,  4148,  4636,  4637,  5016,  5270,  5426,  5704,  5572,  5792,
    5702,  5788,  5703,  5790,  5900,  5856,  5857,  5714,  5803,  5804,
    5861,  5901,  5582,  5583,  5584,  3537,  5013,  3552,  4164,  4165,
    5024,  4649,  5028,  5121,  3125,  1909,  1910,  4828,  2531,    86,
    3700,  3831,  3701,  3702,  4719,  5496,  3703,  3704,  3705,  3321,
    1712,  4745,  4731,  4321,  4288,  4289,  4290,  4291,  4292,  5463,
    5622,  5465,  5466,  5612,  5743,  5611,  4293,  4294,  5318,  4761,
    4397,  4295,  4296,  4297,  4769,  5116,  5320,  5316,  5473,  5474,
    5883,  5884,  5490,  5841,  5491,  5890,  5914,  5915,  5475,    87,
     634,  1583,  5637,  5638,  5639,  3982,  5117,  3983,  3984,  4513,
    3985,  3986,  3987,  3988,  3989,  3990,  3991,  3992,  3993,  3994,
    3995,  4942,  4516,  4013,  4906,  4008,  4514,  4512,  4017,  5492,
    5493,  4900,  4517,  4484,  4917,  5649,  5476,  5494,  5478,  4496,
    1668,  1669,  4324,  1682,  1683,  2985,  2335,  2986,  1913,  4497,
    4498,  4910,  4499,  4915,  4095,  4997,  4101,  4102,  4103,  3482,
    3483,  3484,  3485,  3486,  2896,  5479,  4764,  5310,  5458,  5461,
    5620,  5830,  4762,  4298,  4767,  1179,   718,  4299,  4300,  5725,
    5598,  5605,  5726,  5606,  5599,  5312,  3133,  5727,  5728,  5729,
    5608,  5601,  3664,  5064,  5065,  4749,  4921,    88,   147,  3245,
    1289,  1291,  1301,  3251,  2621,  2620,  1307,  1306,  2599,  3248,
    3846,  5191,   738,  3833,  5362,  5167,  5368,  3834,  4691,  3835,
    5353,  5521,  3836,  5183,  5366,  5527,  4692,  4693,  3837,  3838,
    3839,  5733,  5734,  5735,  4386,  1400,   758,   759,  1319,  1320,
    1321,  2705,  4865,  4407,    89,  2503,  2498,    90,  1228,  1229,
    1230,  1826,  1827,  2501,  2502,  3121,  3655,    91,  1197,  2452,
    1817,  2491,    92,  1216,  3113,  3114,  3115,  3650,    93,  1327,
    1941,  1942,  2625,  3853,  4443,  4878,  5200,  5383,  5196,  5547,
    5548,    94,   784,  1337,    95,   601,  1962,  1963,  1964,  2663,
      96,  1439,   155,    97,  1101,  1640,  1643,  1644,    98,  1196,
    1765,  1766,  1767,  1768,  3066,    99,  2029,  2730,  2731,  2732,
    2733,  2447,  3637,  2448,  2449,  3075,  3927,   100,   736,  3181,
    1279,  1280,  1281,  4355,  3743,  3744,  5539,  5374,  5375,  3497,
    3498,  3499,  1873,  3165,  4348,  5159,  5532,  5775,  2569,  4818,
    5679,  2570,  1875,  1275,  1276,  2557,  2571,  1878,  2539,  1893,
    3306,  3307,  4216,  4687,  1894,  1895,  5029,  2560,  2561,  1754,
    5289,  2562,  3733,  4338,  5838,  1460,  1381,  1200,  1043,  1044,
    1603,  1604,  1611,  1045,  1605,  2250,  4063,  4589,  4590,  4591,
    4592,  4988,  2171,  2172,  2290,  1046,  2157,  1047,  1048,  1049,
    1050,  1051,  1052,  1053,  1054,  1055,  1056,  1057,  2285,  4043,
    4044,  4571,  2937,  2938,  2939,  1058,  2778,  4029,  2788,  1059,
    1060,  1061,  1062,  1063,  3524,  1064,  4134,  4802,  1065,  1589,
    2236,  2117,  4563,  4034,  4966,  4970,  4971,  4972,  5243,  2061,
    2766,  3409,  4553,  4556,  4557,  3410,  3411,  3525,  2901,  1481,
    1482,  1449,  1450,  3460,  2429,  2430,  2431,  2432,  2433,  4677,
    4678,  5278,  5040,  5280,  5044,  3053,  3054,  2316,  2317,  2434,
    2435,  2436,  2437,  3609,  4667,  4119,  4619,  3502,  3493,  3494,
    3495,  3610,  3611,  3612,  3613,  4196,  4663,  4664,  5428,  3044,
    3615,  4195,  3621,  5720,  5440,  5441,  5810,  5809,  5442,  5287,
    5288,  5051,  5052,  4222,  4223,  4224,  3560,  2113,  2114,  2187,
    1810,  1811,  2062,  1975,  2689,  3730,  4334,  3167,  4131,  4800,
    4336,  4803,  4804,  2280,  2930,  3520,  2932,  4624,  5006,  5007,
    5261,  5410,  5411,  5416,  3842,  4845,  4846,  2690,  1879,  3159,
    3721,  4330,  1715,  1716,  1880,  2399,  3597,  3598,  3315,  2742,
    4376,  4711,  3487,  3469,  4697,  3758,  2085,  2086,  4712,  4601,
    2551,  3725,  4795,  4796,  4797,  2543,  2544,  3154,  3155,  3156,
    1881,  2545,  3716,  4791,   101,   672,   102,  1994,  1366,  1993,
    3087,  1339,  1648,  1970,  1971,   799,   747,   619,   103,   623,
    2727,   104,   647,  2314,   851,  1106,  1649,  1650,  2964,  3548,
    3553,  2965,  1898,  4154,  4155,  2700,  3771,  3772,  3766,  3177,
    3739,  1899,  2564,  4345,  3174,  4346,  3175,  3081,  3082,  3922,
    4897,  5550,   105,   656,  4213,  3627,  3628,  5689,  5690,  1107,
     106,   605,  1969,   794,  1345,  1348,  1977,  2686,  3901,  1349,
    1350,  2688,   795,   796,   107,   695,  1234,  1737,  1738,  1739,
    2415,   108,   653,  1180,  3596,  4193,  2392,  1080,  1364,  1720,
    1183,  1721,  2388,  3027,  1703,   109,  1274,  1273,   772,   110,
     111,   729,   156,  1867,   112,  1205,  1796,  2468,  3643,  3644,
    4228,  1797,  1798,  3088,  3084,  4698,  4699,  5060,   113,   687,
    1220,  1221,  1821,  1819,  3118,  2494,   114,   636,  1081,  2299,
     115,   624,   854,  1403,  1404,  2027,   116,   117,   118,   856,
    3928,  5692,  5851,   628,  2031,  1408,  4772,  5149,  5342,  5343,
    5345,  5516,  5517,  5897,  5936,  5947,  5940,  5950,  5951,  5954,
    5960,  5961,  1066,  1241,  1242,  1067,  5641,  1068,  1069,  1070,
     119,   120,  1192,   660,  1759,  1760,  3062,  2441,  3060,  1761,
    3555,  3556,  3171,  3722,  1071,  3557,  4750,  1340,  1972,   680,
     587,  1072,   588,   749,  1243,  3151,  2475,  1131,  3002,  1074,
     893,  1297,  1641,  1930,  1931,  2476,   590,   894,  3003,  3369,
    1133,   591,   592,   593,   594,   595,   596,   597,   598,   121,
     652,  1116,  2331,  1659,  1141,  1688,  1677,  1687,  2362,  3014,
    2365,  3015,  3016,  4184,  3589,  4185,  3590,  1186,  2357,  1660,
    3591,  2350,  2351,  2352,  2353,  3580,  1674,  2341,  2347,   122,
     857,  2036,   631,  1410,  1411,  2739,   123,   655,   124,  1812,
    2488,  2489,  3106,  3647,  3107,   125,  1112,  1113,   126,   840,
    3128,  2717,  1983,  1300,  1984,  2011,   843,  1373,   844,   845,
    1387,  1384,  1390,  1386,  3796,  3240,  3241,  2722,  1991,  1932,
    2322,  3233,  4368,  1933,  2001,  2713,  2714,  2618,  5207,  3803,
    3244,  4891,  3911,  5208,  5209,   127,   664,   128,  5131,   671,
    1199,  1775,   129,   130,   131,   132,  1285,  3726,  3727,  2573,
    5377,  5683,  1287,  1288,  1882,  3504,  1906,  2904,  2905,  1277,
    2906,  2907,  2908,  2909,  1585,  1586,  3505,  4110,  4111,  1896,
     148,   149,   150,   151,   762,   763,  3250,  3848,  4438,  4439,
    5195,  5380,  5943,  5944,  2524,  3710,  5650,  5917,  5937,  5956,
    2532,  4787,  5144,  2533,  3713,  5336,  2522,  3709,  5132,   133,
    1248,  1244,   706,  1844,  1838,  1840,  2509,  3124,   134,   135,
     136
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     589,   663,   737,   761,  2141,   751,  1182,  2275,  1129,  1178,
    1413,  1876,  1418,  1419,  1420,  1868,  2311,  1877,  2084,  1424,
    2032,   757,   642,  1427,   896,  1717,  1286,   642,   633,  2306,
     767,   642,  1744,  1102,   657,  1979,  2401,  2232,   896,  2683,
     667,  2400,  2691,  1717,  1138,   674,    80,  3074,   681,  2572,
    2568,   685,  2092,  2222,  1254,   689,   675,  1907,  1255,  1256,
    2549,  3503,   686,  2554,  2552,  3308,  1134,  2359,  1201,  3388,
    3389,  3665,  2363,  3880,  2123,  1135,  2379,  2380,  3734,  3840,
    2555,  1136,  3366,  1137,  1670,  1673,  1675,  3841,  3168,  1483,
    3736,  1363,  4118,  1685,  3903,  3412,  1225,  3413,  2006,  1232,
    1299,  4309,  4403,  3595,   841,   650,  1642,   732,  3071,  4132,
     842,  3129,  1911,  3748,  1988,  2540,  2754,  1912,  2627,  2260,
    2261,  2262,  2263,  2264,  2265,  2266,  2268,  2270,  2271,  2272,
    2273,  2274,  1443,   841,   739,   741,  2383,  3759,   741,  1114,
     895,   750,   756,  4775,  2305,  3654,  3747,  1835,  4120,  2574,
    3414,  3832,  2238,  4121,   895,  2469,  2408,  3549,  3550,   768,
    3089,  3850,  4349,  3759,  3759,  2249,  2251,  3300,  2253,  2254,
     769,   770,  4383,   771,  2467,  4461,  1338,  4666,  4870,  4384,
    4385,  2421,  2422,  4404,  4951,  4441,  1590,  1591,  4012,  5215,
    3301,  1808,  2306,  5198,  1298,  4097,  3228,  2723,   740,  2724,
    2725,   744,  2662,   690,  4877,  2596,  2506,  1388,  4387,  3617,
    4389,  4489,  3764,  4399,  3649,   693,  4626,  2703,  3626,  1808,
    2538,  3795,  3229,  3224,  4489,  4208,  1117,  4415,  4490,  3759,
    3759,  3230,  1590,  1591,  2893,  2045,  1590,  1591,  4598,  4500,
    1943,  4490,  3046,  1908,  5067,  2740,  3468,   679,  4098,  2674,
     896,  3290,   896,   896,   896, -3250,  1427,  2740,  1592,   896,
   -1989,   896, -1148,  4307,  4853,  3297,  1579,  1581,  1582,  3892,
    4052, -1989,  1710, -1148,  1593,  1590,  1591,  1625, -2569,  4112,
    5791,  4710, -2370,  4158,  4934,  5122,  4713,  4715,  1672,   688,
    1842,  3298,  5123,  4016,  1745,   645,  1532, -3233,   665, -3237,
    4301, -3236,  1666,  1594,  1592,  2619,   731,  2305,  1592,  1595,
    4495,  4495,   669,  1564,  4495,  4132,  1117,  3047,  -614,  3534,
    1593,  4495,   722,  4489,  1593,  2740, -3234,  4495,  3048,  -614,
    2740,  2740,  1078,   625,  -419,  3049,  1568,  4717,  1117, -2370,
    4490,  2716, -3235,  1596,  3865,  -419,  4735,  1592,  2077,  1594,
    2740,  4536,  4475,  1594,  5124,  1595, -2371, -1989,  1597,  1595,
    1598,  4481,  3466,  1593,  3050,  1282,   895,  5562,   895,   895,
     895,  1990,  4033,    39,  1484,   895,  1612,   895,  1590,  1591,
    2078,  2740,  4653,  3063,   638,  4614,  2914,   764,  5118,  1596,
    2740, -2862,  1594,  1596,  3594,  3345,  2079,  2005,  1595,  2740,
    4097,  4911, -2862,  1283,  1597,  3197,  1598,  5319,  4317,  2704,
    4009,  4010,  1392, -2371,  1612, -1989,  2616, -3240,  4020,  1524,
    4021,  1666,  4023,   766,  4599,  3051,  3814,  2740,  3802,  2763,
    1666,  5031,  1596,  3788,  3843,  4137, -2370,  2080,  3784,  3785,
    4405,  4301,  1117,  4911,  2575,  1666,  2940,  4014,  2077, -2370,
    1592,  2239,  4019,  4098,  4654,  4476,  3052, -2570,  4024,  4911,
    4489,  3625,  4911,  4911,  3110,  2081,  1593,  1746,  3851,  1613,
    5049,  5050, -3080,  2915,  4318,  1117,  1588,  4490,  3768,  1599,
    2078,   797,   839,   800,   801,   802,   803,  1614,   805,   806,
    1829, -1421,   808,   809,   896,  1594,  2079,  4501,  3952, -2370,
    1592,  1595,  1267,  3231,  3886,  3887, -2370,  1613,  3770,  1104,
   -2371,   839,  2973,  2974,  2975,  2976,  1593, -2370,  4491,  2348,
    2067,  4366,  2740, -2371,  1606,  1599,  2033,  1195, -3170,  1599,
    1401,  4491,  2297,   661,   662,  1596,  4492,  2080,  2240, -3170,
     733,   602,  1155,  1212,  1325,  1594,   897,  5654,  5138,  4492,
    1597,  1595,  1598,  1308,  2514,  1155,  2736,  4944,  1284,  4319,
     897,   790, -3254, -1436,  2082,  2081,  1139,  5826,  4481,  1293,
    5671, -3171,  2916, -2371,  1209, -2702, -2721,  2507,  1740,  1309,
   -2371,  4481, -3171,  1662,  3893,  1596, -3170,  1871,  1770,  4951,
    3127, -2371,  4668,  4373, -2862,  5945,   791,   734,   782,  5294,
    1851,   756,  1852,  1853,  1854,  1855,  1856,  2588,  4491,   626,
     895,  3910,   756,  4145,  2737,  2090,  3774,   813,   750,  1226,
    2329,  1310,  4314,  2558,  4768,  2691,  1326,  5313,   760, -3171,
    4491,  1483,  1155,  3111,  1607,  3594,  5916,  2241,  1876,  5457,
    1099,  2358,  1807,  4343,  1982,  2553,  1608,   750,  4492,  1132,
    3641,  2902,   600,  5563,  1155,  2291,  4347, -2249,  1317, -2193,
    2320,  5929,  1830,   750,  2082,  2550,  1262,  1362,  1728,  3179,
    4481,  1599,  2598,  1579,  1581,  1207,   643,   661,  2337,   750,
    1213,  5946,  1214,   629,  2774,  1367,  1368, -2193,  4770,   782,
    3108, -3254,   782,  1235,  5223,  1236,  5192,  2034,  3131,  4520,
    4770,  4521,  3844,  3390,   152,  2377, -2722,  1252,   734, -2723,
    1227,  2979,  2589,  2894,  1393,  2980,  2680,  1311,  1100,  1950,
    2292,  1663,  1609,  1210,   896,  4485,   734,  4487,  1954, -2249,
    5129,  4943,  1911,  1988,  2556,  4507,  1294,  1912,  3832,  2068,
     750,  3164,  1304, -3080, -3170,  1717,  1666,  4960,  1666,  4007,
    4962,  4963,  3112,   734,  1295,  1402,  1312,  1992,  1155,  5827,
    1105,  4522,   750,  3503,   629,  2966,  1929,  4491,  5171,  5542,
    1328,  1666,   897,  5828,   897,   897,   897,  4819,  4738,  3300,
    4535,   897,   732,   897,  1304,  4492,  2298, -3171,  1843,  2307,
    2349,  1155,  1351,  4367,  1353,  1533,  1355,   741,   741,   741,
    1359,  1304,  3301,   750,  5273,   666,  4672,  2617,  3228,  5662,
    4676,  3770,  1565,  4099,  1667,  2923,  2924,  4481,  2926,  2927,
    4007,  2382,  5564,  3852,  2386,   663,   629,  2899,  2900,  1079,
    2058,  1315,  3759,  5284,  3229,  1569,  2403,  4157,  2921,  2406,
     895,  3786, -3250,  2409,   841,  1929, -2569,  2941,  2071,  3040,
    3826,  2746,   691,   603,   732,  3642,  1417,  3769,  2753,  2277,
    1356,  1357,  1358,  1422,   694,  1425,  4456,  4773,  3888,   785,
    2424,  2425,  2426,  1961,  2665,  4495,  5150,  3297,  2596,  1361,
    1432,  5035,  1365,  1961, -3233,  1389, -3237,   811, -3236,  5787,
    4016, -3254,  4644,  2741,  4911,  4615,  1194,  3227,  4495,   692,
    1484,   899,  4495,  3298,  3594,  2741,  5290,  3334,  2427,  4493,
    4495,  5337,  2428, -3234,  4792,  2125,  1484,  2165,  4151,  4406,
    5762,  1691,  4493,  1188,  1600,  1601,  1602,  1809,  5032, -3235,
    -266,  5177,  3232,  1667,  2182,  4100,  5482,  2190,  3316,  2192,
    4053,  4442,  1667,  2196,  2197,  2198,  4480, -1989, -1989,  5199,
   -1148,  2204,  2307,  1961,  1776,  1809,  2674,  1667,  3212,  3577,
     627,  1272,  2617, -2728,  5565,  5226,  3296,  4204,  3467,  2741,
    1600,  1601,  1602,  2741,  1600,  1601,  1602,  5391,  2741,  2741,
    4478, -2370,  4482,  1671,  4014,  1676,  4014,  2895,  4377,  1679,
    1684,  4527,  4528,  4529,  4014,  4364,  4532,  4422,  2741,  4493,
    1729,  4511,  5967,  4478, -3240,  3925,  -614,  3761,  2293,  4541,
    4014,  5001,  2321,  1600,  1601,  1602,   897,  2917,  4099,  1713,
    4014,  4493,  -419,  1278,  4523, -2570,   154,  4320,  4301,  2741,
    4531,  2729,  4206,  4207,  2368,  4951,  1587,  2420,  2741,  4014,
    4478,  4478,  4539,  4540,  1730, -1907,  1731,  2741,   604,   793,
    1263,  5241,  1865,  1409,  2083, -2371,  2699,  -114,  -114,  1619,
    1620,  1621,  1622,  1623,  1624, -2735,   629,  3319,  2284,  5282,
    5435,  5436,   735,  1692,  1484,  2741,  5503,  2617,  3324, -2862,
    5543,  2407,  2242,  1565,  5080,  -118,  -118, -2702, -2721,  4739,
    3500,  4740,  5264,  5265,  5829,  3496,  5129,   750,   732,  1621,
    1622,  1623,  1624,   732,  1427,  5083,  1298,  4455, -3377, -2702,
   -2721,   630,  1318,  1658,  3774,  5367,  1600,  1601,  1602,   750,
    1704,   750,  4911,  3132,  4911,   750,   750,   152,  4741,  3631,
    3468,  3468,  2949,  1693,  3468,  3468,  2910,  1773, -2249,  1732,
    3468,  3468,  1694,  2687,  4178,   841,  2738,   767,  4967,  5297,
     783,  2332,  2402,  1313,  5881,   750,  4742,  5747,  4493,  5749,
    5750,  3565,  4347,  1902,  2775,  1776,  1600,  1601,  1602,  4375,
    2741,   782,  1610,   782,  1707,  1298,   629, -2742,  2966,  5014,
    -110,  -110,  5248,  2903,  1695,  4780,  2960,  1701,  1733,  1762,
    2567,  5648,   630,   732,   732,  4494,  4502,    39,  2464,  4506,
    2521,  3180,  2482,  2527,  2294,  2597,  4510,  2536,  1813,  2492,
   -2249,  2602,  5008,  1847,  5009,  3317, -3170, -1367, -2722,  1824,
    1771, -2723,   839,   644,  2477,  2442,  2495,  4383,  5193,  5544,
    5206,   732,  4789,  2478,  4384,  4385,  1734,  1484,  4819,  2479,
   -2722,  2481,  3605, -2723,  4798,  4799,   897,  2541,  5325,  2679,
    3759,  1848,  4790,  5676,   630,  5760,  3840,  5429,  1667, -3171,
    1667,  4808,  1722,  4399,  3841, -2193, -2193,  1955,  1955,  2576,
    3037,  1869,   665,  4704,  5041,  5042,   768,  5823,  5824,  2800,
    2328,  1717,  3592,  1667,  5833,  1198,   852,   769,   770,  1916,
     771,  4743,   157,   158,  1696,  2983,  1612,  1645,  4518,  2987,
    3789,  1929,  1651,   732,  2338,  3584,  3428,  3544,  1876, -1949,
    5276,  4120,   750,   732,  2954,  2955,  4121,  1117,  2480,  1697,
     741,   732,  3012,  5181,   732,  3741,  1735,  4744,  3832,  1849,
    1850,  3746,   841,  2384,   732,  1911,  3089,  3235,  3661,  4720,
    1912,   732,   896,  1973,  2306,  2598,  1702,  1736,  2401,  4733,
    4734,  2401,  2401,  3503,   898,  2592,  3600,  3601,   750,  4301,
    5350,  5871,   750,   732,  3740,  3574,  2574,  4983,   898,  4671,
    3228,  3213,  3578,  4675,  1140,   651,  3300,  1883,  5437,  3318,
    3110,  5636,  2708,  1938,  2706,  2707,  2450,   896,   750,  1613,
     661,   750,  1769,  4665,  3586,   790,  3229,   732,  3579,  3301,
     153,  3811,  1406,  5519,  2603,  3097,  3877,  1614,  4398,  2592,
    5388,  2040,  5390,  3554,  5745,  4170,  4171,  4172,  4173,  3332,
    4903,  5307, -2563,  2680,  3031,  5314,  5315,  3854,   848,  1772,
     791,  1883,  5164,  3303,  5166,  1705,   732,  5169,  4593,  1884,
    3098,  5133,  1102,  5173,  5174,  4904,   896,   896,  3533,   154,
    2237,  5504,  2754,  4909,  5588,  3662,  5589,  4301,   895,  2305,
    2950,  4495,  5648,  1615,  1616,  5723,  3236,  5752,  5839,  5304,
    2542,  3606,  1741,  1800,  3297,  2547,  5427, -1949,  1774,  3509,
    2596,  3214,  3513,  4503,  1818,  4179,  5555,  2276,  3215,  4781,
     853,  5847,   661,  1884,   630,  1985,  3216,  2959,  5134,  3022,
    3298,  3024,  1922,   895,  3508,  5600,  3538,  5015,  5607,  3227,
    3535,  3516,  1934,  4465,  4466,  4467,  4468,  1698,  3902,  2762,
    1939,  1956,  1956,   839,  3035,  2548,  3536,  3518,  3519,  5664,
    2427,  3723,  5603,  1816,  2428,  3629,  1943,  3042,  3043,   732,
    1967,  1708,  1967,  1222,  5798,  5799,  5438,  2919,   732,  3111,
    2960,  5596,  1606,  5403,  2243,  2451,  3896,  4519,  5021,   732,
     810,    39,   895,   895,  1484,  2801,  4892,  4893,  4894,  3217,
    2223,  3514,  5820,  2674,  3878,  1443,  1606,  1723,  3296,  3816,
     898,  4832,   898,   898,   898,  3345,   750,  4567,  5520,   898,
    5616,   898,  1699,  5220,  3593,  3594,  1651,  4985,  2578,  5365,
    1700,  4987,  1749,  2839,   630,  4587,  2339,  1957,  1957,  1958,
    1958,  4858,  1176,  1606,   157,   158,  3790,  1885,  1886,   659,
    2340,  2961,  1211,   750,  3032,  2281,  4014,  1887,  1407,  3218,
    3594,  5746,  3234,  1155,  2401,  5357,  3663,  2703, -1949,  3899,
    3594,  3594,  2922,  2579,   732, -1367,  5455,  3787,  2385,  3797,
    3798,   750,   750,  3799,  3800,  3801,  2887,  5600,  5135,   750,
    2333,  4157,  1607,  2471,  5607,  5597,  3238,  1986,  3112,   750,
    2911,  1885,  1886,  3501,  1608,  5421,  3879,  2602,  5355,   849,
     798,  1887,  1742,  2360,  1658,  2580,  1607,  4117,  3152,   741,
     732,   741,   741,   741,   741,   732,   750,   732,  1608,  1959,
    1959,   741,  2510,   157,   158,   661,   662,  5439,  3323,  4625,
     839,  1961,  2515,  2523,  2526,  5157,  5477,  1961,  2404,   741,
    5617,   750,  4392,  1607,  2483,  2410,  5840,  5158,  2007,   661,
     662,  1456,  1457,  1458,  3235,  1608,   668,  4475,  2191,   850,
    2008,  5738,   792,   732,  3517,  3304,  3099,  2200,  1237,  3305,
    1609,  1985,  2369,  5404,  2371,  2373,  2374,  2375,  2211,  4198,
    4919,  2990,  5168,  4568,  2381,  1936,   661,   662,  -840,  4301,
    1755,  3004,  3503,  5360,  1609,  5524,  1960,  1960,  4393,  2587,
    3005,  5846,  2405,  4935,  1237,  1264,  3006,  4938,  3008,  2033,
    4863,   782,  1512,  3100,  4905,  4945,  5559,  4200,  5618,   750,
    2009,  3072,   841,  2183,  5334,  2184,  2581,  5335,  2969,  2487,
     670,  1609,  2490,  3894,  5666,   732,  3073,  4912,  2582,   782,
    2497,  2592,  1756,  1268,   898,  3058,  2602,  5402,  4757,  2704,
     896,  1888,   760,  5468,  3029,  1238,  1239,  1750,   750,  5356,
    4476,  1937,  2033,  1651,  1270,  3885,   750,   750,   750,  2516,
    2517,  2518,   732,   732,  1265, -1035,  3101, -1035,  2063,  2064,
    1714,  5813,  1427,  3236,   897,  3007,  3139,  2074,  3085,  3140,
    2603,  1238,  1239,  5596,  5628,  2354,  2323,  2536,  2597,  4394,
    3149,  3346,  3109,   793,  1908,  1888,  -839,  4758,  2324,  2370,
    5724,  5595,  5600,  5607,  2376,  4522,  2378,  4766,  4766,  2131,
    3102,  2134,  5422,  5423,  1872,  3379,  1807,  1985,  1807,   897,
    4864,  3387,  3387,  3387,  2355,   750,  1612,  2148,  2149,  2401,
    2152,  2583,  2601,  1986,   676,  5470,  5561,   707,  2158,  2159,
    1751,  5338,  2163,  2991,  5339,  5941,  3237,   732,  1961,  3570,
    3571,  2626,  2419,  5414,  5361,  1752,   895,  2598,  2009,  1911,
    1269,   708,  4174,  4175,  1912,  5518,  2679,  1433,   732,  5696,
    2034,  3714,  5596,  3648,  3585,  5541,  3302,  4183,   897,   897,
    2592,  1271,  2812,  1351,  1717,  2695,  1990,   732,  2697,  1619,
    1620,  1621,  1622,  1623,  1624,  2961,  2010,  5597,  3573,  5205,
     732,   732,  2584,  1240,  2035,  4759,  3897,  2712,  3172,  5872,
    5424,  5887,  2966,     8,  2721,  2721,  1266,  2721,  2721,  1613,
    4429,   745,  1434,  2034,   710,  1590,  1591,  4656,  4657,  2603,
    4278,  5165,   750,  3731,  1176,  2962,   732,  1614,  4156,  1510,
     746,  5340,   732,  2077,  1717,  5175,  1889,  5471,  1891,  2749,
    2680,  3916,  3917,  3918,  3919,  3303,  5182,  1961,  5184,  2757,
     813,  2519,  2520,  4380,   898,  3103,  3104,  3105,  5346,  4746,
      16,  4889,   742,  3238,  4748,  2078,  3308,  3308,  1929,  2356,
    5249,  3227,  4760,  5417,  4125,  5425,  5597,  4129,  1217,  1986,
    1435,  2079,  5942,  1615,  1616,  4479,  5697,  1592,  1701,  2256,
    1889,  1890,  1891,  1892,  3751,  1282,  5888, -1446,  4458,  3607,
     896,  5115,  1292,  1593,  2307,  1590,  1591,  1904,  4430,  2185,
    5831,  5873,  2186,  3341,  5341,  3046,  1917,  5789,   896,  4829,
    5793,  4831,  2080,  3239,  4834,  4527,  4528,  4529,   743,  4532,
    4840,  4841,  1594,  1283,  2325, -1446,  2622,  4478,  1595,  4279,
    2936,  2389,  3375,   896,  4014,  4537,  4538,  4854,  3554,  5889,
    2081,   896,   896,   896,  4014,   901,  3608,    29,  4523,  3350,
     140,  1436,   683,  4531,  3370,  1218,  1929, -3356,  2060,  1905,
    3752, -1035,  1596,  3371,  3415,  3296,  2696,  1592,  1870,  3372,
     839,  3374,   841,  5004,  3420,  2390,  4728,  1597,  3320,  1598,
    3047,  3351,  2060,  1593,   918,  2276,   732,  2077,  1282,  2257,
    1610,  3048,   732,  2720,  2720,  5005,  2720,  2720,  3049,   765,
    5047,  2258,  1427,   696,   665,  1631,   895,  3379,  2888,  1219,
      36,  1714,  1594,   923,  1610,  2734,   925,  5806,  1595,  2078,
    2073,  1409,  5122,  4729,   895,  4109,  1283,  3050,    39,  5123,
     684,  3454,   929,   930, -2343,  3753,  1639,  1702,  3352,  2082,
    5462,   773,  5464, -3335,  2130,  5807,  1612,  4392,  3373,   895,
     648,  1610,  1596,  4617,   654,  1872,  4395,   895,   895,   895,
    5898,  3009,  3465,  5927,  5928,  4354,  3353,  1597,  1871,  1598,
    2060,  -841,  5538,   937,  4378,   918,  3754,  2259,  1284,  2776,
   -1446,   697,  2499,  1714,  4524,  2060,  2952, -3335,  3051,  5505,
    2592,  5124,   943,  4730,  3064,   750,   750,   732,  1599,  5808,
     948,   949,  4042,  4393,  3755,  2667,   750,   925,  2391,   775,
    2721,  2721,  2721,  2721,  2977,  2978,  3004,  1658,  3564,  3052,
    3526,   750,   734,   698,   699,  3005,  3072,  1872,  5877,   734,
    -841,  3006,  2133,  3008,   712,  4683,  2500,  5376,  4525,  1613,
    4684,  3073,   897,  4525,  4685,  3001,  2550,  2151,  4766,   786,
    5640,  3594,  1718,  3072,  3072,  3018,  4913,  1614, -1069,   741,
     700,  3527,  1129,  4396,   937,  3354,  5907,  3020,  3073,  3073,
    4201,   741,   665,  4490,  5911,  3025,  1985,  4669,  1870,  1484,
     798,  1284,  1719,  3093,  3094,  2867,  5613,  4549,  1599,  5640,
     967,  2873,   949,   787,  2060,  3158,   661,   662,  1138,   969,
     970,   971,   701,  3756,  5926,  4680,  1871,   732,  2592,  3173,
    3007,  -839,  1298,  1615,  1616,  3045,  3594,  5755,  5756,  3308,
    1134,  1714,  3019,   732,  4686, -3335,  1762,  3061,  5467,  1135,
     750,  3067,   732,  4483,  3023,  1136,  4328,  1137,  -841,  4488,
     896,  4191,  4505,  2934,  -620,   896,  3182,  1871,  4398,  4509,
    2935,   782,  1717,  2547,  2402,   732,  2162,  2402,  2402,  3602,
    3095,  3745,  1714,  1926,  1927,  1872,  1342,  4350,  2934, -3335,
    2597,  3034,  3480,  4351,  3997,  4807,  4550,  4433,   732,   713,
     157,   158,  -620,  1360,  4434,  1427,  3998,  3481,  2668,  4329,
    4817,   970,  4816,  1176,  1985,  5514,  1645,  1966,  1714,  -622,
   -1069,  2642,  2643,  2548,  4551,  5468,  1872,  5515,   741,  2720,
    2720,  2720,  2720,  5256,   732,  -841,  2655,  2602,  3147,  4186,
    5252,  5257,  2484,   741,   789,  4811,  3145,  4813,  2552,  2798,
    2128,  3157,  3145,  2802,  3379,   807,  2805,  3162,   661,   662,
    2286,  4152,  1872,  -622,  4079,  2669,   804,  4520,  1986,  4521,
     839,  4187,  3322,  1098,  2820,   637,   895,  5170,  2667,  5818,
    4661,   895,  1108,  2679,  3759,  2834,  5817,  1187,  3302,  3189,
    5467,  3138,  4080,   606,  2287,  2796,  3193,  3194,  4380,   702,
     855,  4214,  3196,  1076,  4689,  4982,  4549,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  4007,   703,  5470,  3554,  2796,
    1096,  2966, -2724,  4552,   750,  4380,  3041,  4464,  4188,  4994,
     732,  1176,   897,  2657,  2658,   661,   662,  4007,  2602,  4559,
    4560,   704,  3057,  3292, -2730,  1671,  1104,  1671,  1198,  -607,
     897,  3069,  3303,  3855,   711,  2741,  4189,  -620,   896,   607,
    4609,  3759,  3759,  4606,  4611, -2410, -2410,  5468,  4575,  2288,
    2670,  1193,  5811,  5812,  3376,   897,  3308,  3308,  4308,  2667,
     705,  2592,   898,   897,   897,   897,  1986,  -607,  1206,  3759,
    1375,  5469,  3310,  4602,  3312,  4550,  4011,  1208,  4011,  1224,
    5376,   712,  3629, -2732,  -609, -2744,   750,  4007,   750,   750,
    5850,  1215,  4793,  3047, -2752,  1231,  1590,  1591,  4638,  5554,
   -1099,  4007,   750,  4554,  3048,  2721, -2343,   898, -2753,  5471,
    2603,  3622,  4194,  3141,  5885,  5885,  1247,  2602,  2837,  1776,
    4007,  1590,  1591,   896,  3292,   608,  1376, -2754,  -609,  1377,
    2289,  1245,  1246,  4633,  1249,  4190,  1250,  2691,  1251,  5470,
    2402,  2668,  1233,  1600,  1601,  1602,  1253,  1985,  4007,  1491,
    1257,  1828,  1590,  1591,   895, -2757,  1378,  1833,  1834,  5913,
    2777,   750,  2592,   750,  1379,  1259,   898,   898,  1592,  1508,
    2843,  2844,   896,  1260,  3395,  1261,  1513,  1514,  1929,  1929,
    1929,  1929,  5023,  1305,  1593,  1211,  2002,  2003,  1290,  3396,
    2004,  4395,  1316,  1592,   609,  2854,  1776,  3653,  1292,  2642,
    2643,  3623,  4552,  1322,  2701, -2343,  1323,  2818,  1324,  1593,
     760,  2603,  1329,  1594,  2655,  3397,  3009,  4688,  4381,  1595,
    1590,  1591,  -607,  1332,  1592,  5258,   713,  3398,  5259,  2860,
    1776,  1336,  3052,  1600,  1601,  1602,  1343,  5409,  1594,   895,
    1593,  1344,  2668,  1354,  1595,  1176, -2159,  3399,  1985,  2789,
    2790,  5471,  1370,  1596,  1372,  4045,  2864,  1776,  1382,  2865,
    1776,  2592,   714,  1374,  1176,  2866,  1776,  5971,  1597,  1594,
    1598,  1383,  4847,  1380, -3310,  1595,  5970,  3478,  1596,  1385,
    4876,  3400,  2872,  1776,  3330,  3331,  3382,  3383,   895,  1394,
    4650,  1391,  1592,  1597,  1395,  1598,  4651,  4124,  4396,  1396,
    3001,  1397,  4090,  1399,  2720,  1428,   139,  1405,  1593,  1596,
    2603,  2657,  2658,  2321,  2321,  2321,  2321,  3521,  5376,  1986,
    1139,  3633,  3634,  4652,  1597,  4382,  1598,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  3797,  3798,  1594,  1437,  3799,
    3800,  3801,  1438,  1595,   732,  1444,   610,  1985,  1445,  3558,
    3782,  3783,  4469,  4470,  3561,  4061,  2844,   750,   750,  2721,
    4064,  1776,   897,  4071,  4072,  1176,  1446,   897,  2578,   750,
    1451,   611,  4078,  1776,  1452,   661,   662,  1596,  4082,  4083,
    1503,  4899,  1626,  4902,   140,  4160,  4161,  4166,  4167,  1599,
    3164,  1550,  1597,  1453,  1598,  1590,  1591,  4436,  4437,  1427,
    4374,  2741,  4918,  1132,  3717,  4249,  1454,  1298,  1298,  1298,
    1298,  1455,  4923,  2579,  1599,  1590,  1591,    80,  1627,   612,
    1986,  4621,  1776,   137,  4928,  2402,  5590,  1556,  5591,  1459,
    5033,  5034,  3933,  1461,  2276,  1671,  3401,  1462,  4662,  4881,
    4882,  4946,  2223,  4883,  4884,  1599,   157,   158,  3402,  1717,
    1463,  1590,  1591,  1464,  3891,  2580,  1465,  2691,  4576,  4885,
    4886,  1466,  4323,  1467,  1176,  4958,  4961,  1592,  1468,  3010,
    4577,  1469,  1807,  4975,  1776,  1590,  1591,  4992,  4993,  5002,
    1776,  1470,  4350,  1593,  3791,  5017,  5018,  1592,  4820,  1471,
    4578,  4357,  4358,  1472,  1473,  4359,  4360,  5057,  5058,  1298,
    1476,  4361,  4362,  1593,  5061,  4810,  5472,  1486,  4641,  4812,
    4156,  1487,  1594,  1599,   -70,  5216,  5217,  1488,  1595,  1986,
    1489,   732,   732,  1592,  4579,  5218,  5217,   741,  5221,  5222,
    1492,  3897,  1594,  4658,  4659,  1493,   732,  1494,  1595,  1593,
     750,  5295,  5296,  3546,  5299,  5296,  3387,  1592,  1495,  3403,
     898,  3404,  1596,  3223,  1496,   613,  5381,  5382,  2720, -1790,
     897,  4342,  1497,  1593,  1498,  3302,  1499,  1597,  1594,  1598,
     750,   750,  1596,   614,  1595,   138,  2581,  1500,  1612,  5398,
    5331,  5434,  4167,  5446,  5296,  5614,  5615,  1597,  2582,  1598,
    3711,  1501,  1594,  5687,  5688,  5698,  5699,  1502,  1595,  1504,
    3775,  3776,  3777,  3778,  1505,  3780,  3781,  1506,  1596,  4580,
    1628,  5717,  4167,  5303,   615,  1507,   715,   616,  2214,  2215,
     750,  1509, -3372,  1597,  1629,  1598,  5718,  4167,  5722,  3783,
   -2159,  1515,  1596,  1516,  -166,  1517,  3847,   896,  1518,  4922,
    1519,  1590,  1591,  5574,   617,   897,  4922,  1597,  1520,  1598,
    5771,  5018,   618,  3863,  3864,  1521,  3866,  1522,  3868,  3869,
    3870,  3871,  3872,  3873,  3874,  5053,  3876,  5036,  1525,  3881,
    1526,  1613,  1527,  3884,  5832,  5296,  1528,  4907,   616,  4581,
    1529,  2401,  5834,  5296,  3046,  1530,  5244,  1531,  1599,  1614,
    1534,  2583,  1535,  4968,   897,   139,  1536,  4920,  5835,  5296,
    5853,  5854,  1537,  3405,  1538,   716,  4925,  1539,  1599,  1630,
    5862,  5863,  4927,  1592,  5869,  5296,  5870,  5296,  2712,  1612,
    3667,  3668,  4939,  1813,   750,   750,   750,   750,  5372,  1593,
     732,  4947,  4948,  5378,  1540,  3715,  5351,  2667,  5878,  5296,
    5895,  5018,  1541,  2743,  1599,  1615,  1616,  5908,  5296,  1542,
    5000,  1590,  1591,   895,  1929,  5925,  4696,  1543,  1594,  3047,
    5958,  5959,  2584,  1544,  1595,  1545,  1240,  1546,  1599,  1547,
    3048,  4115,  4650,   140,  1548,  2936,  1549,  3049,  5026,  1551,
    4547,  1552,  1553,  1634, -2343,   896,   896,  1554,  5263,  1555,
    3183,  3184,  4582,  1557,  4583,  1558, -3372,  1559,  1596,  1560,
    2077,  5179,  1561,  1562,  1563,  4652,  3050,  3195,  1566,  5030,
    3406,  1567,  1613,  1597,  1758,  1598,  1570,  3221,  3222,  5039,
     898,   141,  1632,  1592,  1590,  1591,  4566,  1571,  1572,  1573,
    1614,  1574,  2078,  4901,  1600,  1601,  1602,  1575,   898,  1593,
    2592,  1576,  1577,  1633,  1638, -2586,  1636,  1637,  3753,  5551,
    2791,  2792,  1653,   157,   158,  1654,  1655,  5187,  3407,  1600,
    1601,  1602,  3377,   898,  4091,  1656,  1689,  3051,  1594,   142,
    1661,   898,   898,   898,  1595, -2614,  2819, -2585,  1686, -2611,
   -2609,  3408,  3285,  3286,  3287,  3288,  1615,  1616, -2613,  3754,
    1600,  1601,  1602, -2608,  2104, -2612,  1592,  5575,  3052, -2606,
   -2610,   895,   895,  1690,  5576,  1706,  2880,  2881,  1596,  1709,
    1714,  1724,  1593,  4622,  1725,  2321,  2321,  3755,  4142,  5577,
    2668,  1727,  3526,  1597,  1726,  1598,  1985,  1747,  1748,  3924,
    1129,  1753,   750,  1764,  1599,  2223,  1776,  1779,  1820,  1814,
    1822,  1594,  1831,  4350, -2343,  4584,  4585,  1595,  1832,  4820,
    1590,  1591,  1836,   750,   750,   750,   750,  1837,  1600,  1601,
    1602,  1841,  2966,  2105,  1839,  1845,  1138,  1860,  1861,  3158,
    4181,  4182,  1863,   734,  2891,  2892,  1901,  2669,  1897,  1903,
    1908,  1596,  1914,  4344,  5558,  1918,  1920,  1923,  1134,  1924,
    1928,  1940,  1944,  1951,  1968,  1974,  1597,  1135,  1598,  1978,
    1976,  1980,  1981,  1136,  1989,  1137,  1995,  1996,  1998,  1298,
    1298,  1999,  2000,  2021,  2039,  2030,  3756,  4356,  2041,   143,
    2042,  4218,  1592,   144,  3010,  4225,  2043,  2046,  2106,  2047,
    2107,  4765,  4815,  2050,  2049,  2108,  5412,  2052,  1593,  2060,
    2059,  2069,  2076,  1176,  1599,   750,  4847,  2087,  5578,  2091,
    2116,  2128,  2127,   732,  2129,  2138,  5447,   732,  2142,  2146,
    5450,  5579,  2147,  2167,   145,  2199,  2205,  1594,  2209,  2219,
    2230,    39,  2234,  1595,  5678,  2252,  5677,  2255,  2282,  2283,
    5580,  4280,  2670, -3054,  4302,  2308,  2310,  2309,  2315,  2318,
    2319,  1427,  2327,  2330,   146,  2334,  2364,   741,  1986,  2109,
    2367,  4586, -3372,  2366,  2412,  3157,  4326,  1596,  2387,  2411,
    5673,  5674,  4825,  2401,  2401,  2413,  2414,  1599,  5556,  5557,
    4340,  4339,  1597,  2416,  1598,  2417,  2418,  2439,  1140,  2440,
    2443,  2444,  3289,  1600,  1601,  1602,  2445,  4833,  2446,  2453,
    2454,  2458,  2110,  2459,  2460,  1082,  2462,  2466,  2461,  3510,
    3511,  2463,  1083,  1600,  1601,  1602,  2465,  2472,  2473,   897,
    4312,  2493,  2511,  2504,  3046,  3533,  2508,  2537,  1084,  4462,
     898,  2546,  1870,  2559,  2565,   898,  2566,  2600,  1085,  1086,
    1087,  1590,  1591,  2577, -2597,  2623,  2615,  2624,  1088,  1600,
    1601,  1602,  2628,  4427,  2631,  2632,  2629,  2664,  2681,  2684,
    1590,  1591,  3116,  1176,  2685,  4039,  4040,  5594,  1872,  2693,
    2699,  2702,  2709,  1600,  1601,  1602,  2715,  2735,  5581,  2747,
    2750,  2748,  2765,  2767,  2768,  4302,  2770,  2779,  2780,  4054,
    4055,  2111,  2781,  2786,  2784,  2785,  2796,  1590,  1591,  3047,
    2803,  2799,  2112,  1599,  2806,  2816,  4895,  2817,  5774,  2821,
    3048,   896,  4251,  1592,  5633,  2829,  4255,  3049,  2830,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  2890,  4901,  1593,
    2831,  2835,  1592,  2913,  2855,  2859,  4454, -1583,  2858,  2868,
    2918,  2878,  4457,  2882,  2883,   661,  3050,  2885,  1593,  2889,
    1624,  2925,  2931,  2933,  2940, -1760,  2953,  1532,  1594,  5043,
     750,  1590,  1591,  -841,  1595,  2947,  4378,   897,   897,  1592,
    1590,  1591,  3375,  1564,  1568,  2957,  2967,  1594,  2968,  2970,
    2971,  5022,  2981,  1595,  2982,  1593,  2988,  2992,  1089,   896,
    2989,  2993,  2995,  2994,  3370,  2996,  3017,  3026,  1596,  2997,
    3028,  5412,  1090,  3371,  3030,  3033,  3036,  3051,  5389,  3372,
    3055,  3374,  5848,  1597,  1594,  1598,  3056,  1596,  3083,  3117,
    1595,  3046,  -841,  3134,  3119,  3122,   712,   895,   898,  3123,
    3135,  3120,  1597,  1592,  1598,  3150,  3161,  3160,  3052,  1600,
    1601,  1602,  1592,  3166,  3169,  3072,  4546, -2205,  3176,  1593,
    3185,  3186,  3187,  3243,  1596,  4067,  4068,  3188,  1593,  3190,
    3073,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  3191,  1597,
    3192,  1598,  3246,  3762,  3763,  3253,  3765,  3767,  1594,  3249,
    5691,  3256,  3259,  3260,  1595,  3283,  3284,  1594,  3373,  1781,
    5587,  3261,  3262,  1595,  3263,  3311,  3047,  3264,  3265,  1427,
    3266,  3267,  1091,  3268,  3269,   895,  3291,  3048,  3270,  3271,
    3272,  3314,  3273,   898,  3049,  3274,  3275,  3276,  1596,  3277,
    3278,  3279,  3280,  4379,  1590,  1591,  3329,  1596,  5663,  3281,
    -841,  3282,  3333,  1597,  1599,  1598,  3337,  3338,  1092,  4605,
    3317,  1961,  1597,  3050,  1598,  3335,  3339,  3343,  1139,  1600,
    1601,  1602,  1093,  1599,  3336,  5081,  4210,  5408,  5533,  3347,
    5085,  5086,   898,  3348,  5534,  4073,  4074,  3890,  1717,  4620,
    3349,   713,  3340,  3355,  3380,  3416,  3429,  3417,  3418,  5700,
    4727,  3430,   157,   158,  4340,  4339,  3431,  3440,  1590,  1591,
    1599,  5535,  3450, -1798,  3476,  3477,  1592,  4142,  3489,  3491,
    3492,  3512,  3522,  3523,  3051,  3529,  3531,  -841,  3558,  3530,
    4648,  3375,  1593,  2941,  4655,   750,   750,  3539,  3541,  3545,
    5586,  3559,  1600,  1601,  1602,  3562,  3566,  3567,  3568,  3569,
    3575,  1132,  1658,  3370,  1671,  3052,  2349,  4794,  4126,  4127,
    3576,  1594,  3371,  2348,  3588,  3583,  2741,  1595,  3372,  3599,
    3374,  3603,  1590,  1591,  1599,  3618,  2427,  3619,  3620,  2223,
    1592,  3635,  4211,  1599,  3488,  3638,  3639,  4694,  3640,  3645,
    3657,  3646,  3660,  3658,  3666,  3718,  1593,  3719,  3724,  3728,
    3737,  1596,  3729,  3735,  3738,  3742,  3792,  3749,  3793,  3750,
    3794,  3845,  3849,  3527,  3857,  4703,  1597,  4380,  1598,  3858,
    5655,  5656,  3860,  5658,  3889,  1594,  3900,  3895,  2694,  3904,
    3906,  1595,  5691,  4723,  4724,  3912,   750,  5201,  3914,  4836,
    5800,  3913,   896,  4737,  1592,  3921,  5680,  3373,  3926,  3996,
    4302,   732,  5681,  4753,  3999,  4000,  5327,   896,  4081,  4003,
    1593,  4018,  4007,  4011,  4015,  1596,  4022,  5858,  1600,  1601,
    1602,  4025,  5672,  4026,  4027,  4777,  4776,  4028,  4092,  5682,
    1597,  4094,  1598,  4133,  4122,  2231,  4104,  4105,  4116,  1594,
     750,  3375,  4114,  4123,  4136,  1595,  4128,  4135,  4143,  4146,
    4147,  4149,  2281,  4150,  4806,  4805,  4153,  4159,  4162,  4163,
    4168,  4169,  4176,  3370,  4177,  4180,  4205,  4209,  4197,  4215,
    4212,  2276,  3371,  4217,  4229,  1427,  4219,  1671,  3372,  1596,
    3374,  4220,  5302,  4227,  4245,  4246,  4821,  1599,  4247,  4248,
    4250,  4254,  4261,  4267,  1597,  4302,  1598,  3814,  4327,  4310,
    4315,  4332,  4365,   897,  5396,  4331,  4335,  4694,   895,  4353,
    4388,  4380,  4390,  4391,  4401,  4830,  5882,  4843,  5768,  2223,
    5769,  5770,  4402,   895,   732,  4851,  5858,  2402,  4844,  4409,
    4694,  4410,  4412,  4411,  5680,  4413,  4852,  4694,  4416,  5952,
    5681,  5306,  4302,  4855,  1782,  4856,  4857,  4414,  4417,   741,
    4418,  1599,  4419,  5962,  4875,  4420,  4432,  3373,  1783,  5952,
    1784,  3656,  4440,  5632,  3376,  5962,  4459,  5682,  4230,  5777,
    4460,  4463,  4472,  4474,  4481,  4231,  1590,  1591,  4486,  4508,
    4381,   897,  4515,  4530,  4533,  4543,  4544,  4555,  4561,  4570,
    1785,  4232,  4562,  4558,  2894,  4569,  4607,  4616, -1915,  4099,
    4751,  4233,  4234,  4235,  4623,  1786,  4627,   750,  2291,  4625,
    4635,  4236,  4871,   750,  4628,  1599,  4256,  4257,  4258,  4259,
    4260,  4631,  4262,  4263,  4264,  4265,  4266,  4632,  4268,  4269,
    4270,  4271,  4272,  4273,  4274,  4275,  4276,  4277,  1787,  4673,
    4281,  4282,  4933,  4640,   896,  5531,  4674,  4695,  1592,  1600,
    1601,  1602,  4696,  4700,  4752,  3779,  1788,  4701,  4705,  4707,
    4708,  4763,  4754,  4755,  1593,  4756,  2782,  4783,  1600,  1601,
    1602,  4784,  3387,  4770,  4786, -2109,  4788,  4809,  4822,  4810,
    4814,  4823,  4826,  4827,  5737,  2783,  5062,  4382,  4835,  4837,
    4838,  4839,  4866,  1594,  4869,  3198,  4872,   898,  4873,  1595,
    3859,  4879,  3861,  3862,  4880,  1600,  1601,  1602,  3867,  4888,
    4887,  4898,  4890,   896,  4916,  4929,  3875,  1590,  1591,  4536,
    4926,  3882,  2793,  4849,  4941,  4953,  4913,  4969,  4976,  4901,
    4977,  4978,  4984,  1596,  4986,  5012,  1789,  4961,  4956,  4957,
    4958,  4959,   896,  1790,  4999,  4964,  4965,  4989,  1597,  4142,
    1598,  4237,  4998,  1791,  1590,  1591,  4400,  2223,  5003,  5010,
     895,  4408,  5019,  5027, -1885,  4238,  1792, -1890,  5048,  1600,
    1601,  1602,  5046,  5783,  5054,  5059,  5055,  5063,  1600,  1601,
    1602,  5069,  5078,  5079,  5120,  5072,  2794,  5071,  5147,  1592,
    5077,  5137,  5934,  5148,  5153,  2795,  5152,  1793,  5154,  5155,
    1794,  1871,  5172,  3376,  5176,  1593,  5180,  5185,  3843,  5188,
    5210,  5211,  5190,  4225,  1671,  1795,  5213,  5214,  5225,  5224,
    1590,  1591,   750,  5237,  5066,  5066,  1592,  5068,  5238,   895,
    5239,  5240,  5242,  5246,  1594,  5250,  5247,  5254,  5268,  5279,
    1595,  5277,  1593,  5070,  5281,   898,   898,  5285,   896,  5286,
    4239,  5292,  5293,  5298,  5309,  5311,  4757, -2726,   895,  4427,
    5324,  5323,  5326, -2725,  5328,  4240,  1590,  1591,  5330,  1599,
    2278,  1594, -2729,  4302,  1596,  5331, -2733,  1595, -2734,  5194,
     732, -2736,  5084,   896, -2738,  3199, -2739,  5119, -2740,  1597,
   -2745,  1598,  1592,  5344,  5352,  5364, -2746, -2747, -2751,  5585,
    5317,  4241,  5143,  5321,  5161,  5354,  5146,  5163,  1593,  5379,
    5373,  1596,   896,  5386,   897,  4242,  1590,  1591,  5384,  5397,
    5394,  5401,  5406,  5407,  5414,  5413,  1597,  5415,  1598,   897,
    5417,  3200,  1600,  1601,  1602,  5418,  5431,  1594,  1592,  5433,
    5444,  5443,  5445,  1595,  5449,  5451,  4302,  4694,  4302,  2797,
     750,  4302,  5162,  4694,  1593,  5452,  5460,  4302,  4302,  2402,
    2402,  4694,  3676,  3376,   895,  5499,  5509,  5510,  5511,  5507,
    5512,  4302,  4694,  5522,  4694,  5523,  5529,  1596,  5537,  5552,
    5186,  5560,  5569,  1594,  5570,  5604,  5573,  5621,  1592,  1595,
    5619,  5189,  1597,  5623,  1598,  5197,  1600,  1601,  1602,   895,
    5624,  5625,  5627,  5629,  1593,  5630,  5631,  5643,  5644,  5645,
    1599,  5646,  3201,  2807,  5652,  5657,  5659,  5660,  5212,  1590,
    1591,  5667,  5675,  1596,  5669,  5684,  1140,  5685,   895,  5234,
    5686,  5695,  5701,  1594,  5705,  5708,  5716,  5713,  1597,  1595,
    1598,  5730,  5719,  5740,  5966,  5741,  5758,  1599,  5759,  5779,
    5767,  5780,  5802,  3811,  3816,  5742,  5585,  5748,  -866,  5772,
    1600,  1601,  1602,  5787,  5782,  5836,  5235,  5825,  5842,  5837,
    5143,  5843,  5865,  1596,  3202,  5866,  5867,  2809,  5844,  5082,
    5868,  5483,  5874,  5875,  5896,  5876,  5899,  5909,  1597,  5910,
    1598,  1592,  3203,  3204,  5894,  5912,  5922,  3205,  3206,  3207,
    5924,  5919,  5930,  5931,  5933,  5938,  5935,  1593,  5484,  3572,
    5939,  5953,  2456,  1599,  5965,  1429,  4226,  3883,  1815,  5204,
    5202,  5203,  1743,  3708,  2535,  3148,  5593,  4363,  4794,  5329,
    5765,  5651,  5892,  5271,  1590,  1591,  1594,  1919,  5145,  5236,
    5498,  5219,  1595,  5392,  4605,  5506,  5399,  5553,  4950,  4002,
    2300,  3092,  4244,  5508,  3908,  1335,  4896,   157,   158,  1599,
    4548,  2758,  3258,  3561,  2759,  3208,   897,  2761,  4323,  2760,
    2698,  5610,  4694,  5322,  5453,  4423,  1596, -1069,  4634,  1965,
    5066,  3830,  5178,  5267,  2614,  5011,   732,  4639,  2945,  5301,
    5786,  1597,  5419,  1598,  5272,  5852,  5921,  5903,  5308,  4709,
    5923,  5715,  4302,  4302,  4287,  5497,  1592,  4646,  5025,  1599,
    3126,  4421,  4725,  3209,  4862,   661,   662,  5864,  5076,  4426,
    5485,  5886,  1593,  5757,  5486,  4427,  5761,  5665,  4588,  4504,
    5963,  4542,  5763,  5784,  5359,   897,  4370,  4371,  4372,  4908,
    4914,  4096,  4610,  4608,  4612,  5143,  5906,  5467,   892,   719,
    1073,  1594,   720,  5879,  5456,  5880,  5814,  1595,  5739,  5736,
    5448,  4924,   892,  4424,   897,  4861,  1757,  3652,  1130,  1185,
    1935,  5528,  2281,  3651,  1073,  1590,  1591,  5781,  5358,  3252,
    2666,  3923,  2956,  4302,  4473,  3344,  1900,  4302,  1073,  2505,
    3068,  1596,  4352,  2223,  4113,  5536,  4447,  4450,  5160,  4453,
    4694,  3178,  5776,  5501,  1874,  2563,  1597,  3732,  1598,  4630,
    3453,   898,  1599,  3451,  1600,  1601,  1602,  2217,  4138,  4629,
    2279,  2126,  3630,  4202,  5468,  2066,  3624,  5037,   732,  4618,
    3614,  2813,  5721,  5592,  5904,  5056,  5905,  2075,  4333,  4933,
    5349,  5393,  5348,  4130,  5262,  5694,  4192,  1592,  5469,  5363,
    5347,  5253,  5283,  3163,  4325,   721,  3309,  2023,  3342,  5020,
    3773,  4702,  2313,  1593,  4682,  4679,  5849,  1189,  1347,  2692,
     897,  1352,  3377,  3038,  5585,  1181,  5487,  1184,  5540,  2393,
     730,  3039,  3604,  1866,  5291,  4477,  3086,  2496,  5300,   898,
    2028,  5920,  1594,  1073,  5932,  5513,  5480,  5661,  1595,  5964,
    5480,  5968,  1511,  4203,  4645,   897,  3059,  3587,  3506,  4660,
    1142,  1143,  3581,  5066,  2912,  3013,  5470,  2326,  2513,  3582,
    1652,  2744,  1115,  4302,  4369,  3242,  5459,  1599,  2020,  3909,
    5385,  3659,  1596,  3563,   897,  1223,  4428,  1825,  5495,  4199,
    4670,  5038,   723,   724,  3616,   725,  5778,  1597,  5143,  1598,
    2093,  2094,  2095,  2096,  3144,  1600,  1601,  1602,     0,  1590,
    1591,     0,     0,  1073,  2276,     0,     0,     0,   896,  4302,
       0,     0,  2814,     0,   892,  5234,   892,   892,   892,     0,
       0,   732,     0,   892,     0,   892,     0,     0,     0,  5525,
       0,     0,  1600,  1601,  1602,     0,  5488,     0,     0,  5545,
    5549,     0,     0,     0,  2097,  2098,  2099,     0,     0,  2815,
       0,     0,  5235,  1590,  1591,     0,  1073,     0,     0,     0,
       0,  1073,  4600,     0,     0,     0,     0,  5387,  5471,     0,
       0,  1592,     0,     0,     0,  5568,     0,     0,     0,     0,
       0,     0,     0,     0,  4613,     0,     0,  1593,  3561,     0,
    3561,  1073,     0,     0,  5480,  2100,  2101,     0,  1600,  1601,
    1602,  1073,     0,     0,     0,     0,     0,     0,  1599,  5609,
       0,     0,  5480,     0,     0,  2832,  1594,     0,     0,     0,
       0,     0,  1595,     0,   895,  1592,     0,     0,  5626,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     750,  1593,     0,     0,  1600,  1601,  1602,  1590,  1591,     0,
       0,  3377,     0,     0,     0,     0,  1596,     0,     0,     0,
       0,  2840,     0,     0,  5653,     0,  2102,     0,     0,     0,
    1594,  1597,     0,  1598,     0,     0,  1595,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1073,  1073,  1073,  1073,  1600,  1601,  1602,     0,     0,     0,
       0,  1073,     0,     0,     0,     0,     0,  2223,     0,  5693,
    1596,  2842,     0,     0,     0,     0,     0,     0,     0,  1592,
    5526,     0,     0,     0,     0,  1597,  5194,  1598,     0,     0,
       0,     0,     0,  5801,  5489,  1593,  4714,  4716,  4718,     0,
    2103,     0,  4721,  4722,     0,  1590,  1591,  4726,     0,     0,
    4732,     0,     0,  4736,  5731,     0,     0,     0,   892,     0,
    4747,     0,   898,     0,  1594,     0,     0,     0,     0,  5480,
    1595,     0,  5744,     0,     0,     0,     0,   898,  5066,     0,
    5066,  5066,     0,     0,     0,     0,     0,     0,     0,  5754,
    5753,     0,  1599,     0,     0,     0,     0,  1600,  1601,  1602,
       0,     0,     0,     0,  1596,     0,     0,   732,     0,  5766,
       0,  3377,     0,     0,  2845,     0,     0,  1592,     0,  1597,
       0,  1598,     0,  5472,     0,     0,  3322,     0,     0,     0,
       0,     0,  2104,  1593,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5549,  1599,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5568,  5891,     0,  1073,
       0,  1799,  1594,     0,  5795,  5796,     0,     0,  1595,   750,
       0,     0,     0,     0,     0,  1590,  1591,     0,     0,     0,
       0,     0,  5902,  5480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5822,  5821,     0,     0,  5066,  5066,
       0,  2105,  1596,     0,     0,  5066,     0,     0,     0,     0,
       0,     0,  1600,  1601,  1602,     0,     0,  1597,     0,  1598,
       0,     0,     0,     0,  5845,     0,     0,     0,     0,  2846,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2223,
    1599,     0,     0,     0,     0,     0,     0,  1592,     0,     0,
       0,     0,  5859,     0,     0,  5860,     0,     0,     0,  5480,
    5480,     0,   750,  1593,  5955,     0,  2106,     0,  2107,     0,
    5957,     0,     0,  2108,     0,     0,     0,     0,     0,     0,
       0,  5969,  5066,     0,     0,  1073,     0,  1073,   892,     0,
       0,     0,  1594,     0,     0,     0,     0,     0,  1595,     0,
       0,  5893,     0,     0,  5480,     0,  5764,     0,     0,     0,
       0,     0,     0,     0,   898,     0,     0,     0,   750,     0,
       0,     0,     0,  4952,  4225,  4225,     0,     0,     0,     0,
     897,     0,  1596,     0,     0,     0,     0,  2109,  1599,     0,
       0,     0,     0,     0,     0,     0,     0,  1597,     0,  1598,
       0,  5918,     0,  1600,  1601,  1602,     0,     0,  1073,     0,
    1073,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2847,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2110,     0,     0,   898,     0,     0,  1073,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2223,  1073,  1073,     0,
     750,     0,     0,  1073,     0,     0,   750,  1073,  1073,  1073,
    2223,     0,   898,     0,     0,     0,  2223,     0,  1073,  1073,
       0,     0,  2223,     0,  1073,     0,  1073,  1073,  1073,  1073,
    1073,     0,  1073,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1073,     0,  1073,     0,     0,  1073,  1073,
       0,  1073,  1073,  1073,     0,  1073,  1073,  1073,     0,     0,
       0,     0,  1073,     0,     0,  1073,     0,     0,  1599,  2111,
       0,     0,     0,  1073,  1073,     0,  1073,  1073,  1073,     0,
    2112,  1073,  1073,  1073,  1073,  1073,  1073,  1073,     0,  1073,
    1073,  1073,  1073,  1073,  1073,     0,  1073,  1073,     0,  1073,
    1073,  1073,  1073,  1073,  1073,  1073,     0,     0,  1073,  1073,
    1073,  1073,     0,  1073,  1073,  1073,     0,  1073,   898,  1073,
       0,  1073,     0,     0,     0,  1073,  1073,  1073,     0,     0,
    1073,  1073,  1073,  1073,  1073,     0,  1073,  1600,  1601,  1602,
       0,  1590,  1591,  1073,     0,     0,     0,     0,  1073,     0,
       0,     0,     0,   898,  2848,  1073,     0,     0,     0,  1073,
    1073,  1073,  1073,     0,  1073,  1073,     0,     0,  1073,  1073,
    1073,  1073,  1073,  1073,  1073,  1073,  1073,  1073,  1073,  1073,
    1073,     0,   898,  1073,     0,     0,     0,  1808,     0,     0,
       0,  1600,  1601,  1602,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2851,     0,
       0,     0,     0,  1592,     0,     0,     0,     0, -1989,     0,
       0,  3804,     0,  3805,  3806,     0,  1073,     0,     0,  1593,
       0,  1073,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1073,     0,     0,     0,     0,     0,  3807,     0,  3808,
       0,  1590,  1591,     0,     0,  3809, -1989,     0,  1594, -1989,
       0,  4447,     0,  4450,  1595,  4453,     0, -1989,     0, -1989,
       0,     0,  1590,  1591,     0,     0, -1989,  1908,     0,     0,
   -1989,     0,     0,     0,     0,  1600,  1601,  1602,     0,  3810,
   -1989,     0,     0, -1989,     0,     0, -1180, -1989,  1596, -1989,
       0,     0,  2852,     0, -1989,     0,     0, -1180,     0,  1073,
       0, -1989,     0,  1597, -1989,  1598,     0,     0,     0, -1989,
       0,     0,     0,  1592,     0,     0,   157,   158,  4952,     0,
       0,  3669,  1073,     0,     0,     0,     0,     0,     0,  1593,
   -1989,     0,     0,     0,  1592,     0,     0,     0,     0,     0,
       0,     0,     0, -1989,     0,     0,     0,     0, -1989,  3811,
    1593,     0,     0,     0,     0,     0,  2474,     0,  1594,     0,
       0,     0,     0,     0,  1595,     0,     0, -1989,  5251,     0,
       0,     0,     0,  1600,  1601,  1602,     0,     0,     0,  1594,
       0,  5266,     0,     0,  3812,  1595,     0,     0,  3813,     0,
    2853, -1989,     0,     0,     0,     0,  3671,     0,  1596,  3814,
   -1989,     0,     0,     0,     0,     0,  1808,     0,     0,     0,
       0,     0,     0,  1597,     0,  1598,     0,     0,     0,  1596,
       0,  3815, -1989,     0,  1599,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1597,     0,  1598, -1989,     0,     0,
       0,     0, -1989,     0,     0,     0,     0,     0, -1989, -1989,
    5706,  5707,     0,  5709,  5710,  5711,  5712,  3672,  3673,  3674,
       0,     0, -1989,     0, -1989,     0,     0, -1989,     0,     0,
    1590,  1591,  5732,     0,     0, -1989,     0,     0, -1989,     0,
       0,     0,  3675,     0,     0,     0, -1989,     0, -1989,     0,
       0,     0,     0,  1590,  1591, -1989,   892,     0,     0, -1989,
       0,     0,     0,  1600,  1601,  1602,     0,  3676,     0,     0,
       0,     0, -1989,     0,     0,     0, -1989,     0, -1989,     0,
    2871,     0,     0, -1989,     0,     0,     0,  3816,     0,     0,
   -1989,     0,     0, -1989,  1599,  3677,     0,  3678, -1989,     0,
       0,   892,  1592,     0,     0,  1590,  1591,     0,     0,  1590,
    1591,     0,     0,  1590,  1591,  1599,  3679,     0,  1593, -1989,
       0,     0,     0,  3817,     0,  1592,     0,     0,     0,     0,
    1073,     0, -1989,     0,     0,  3680,     0, -1989,     0,     0,
    5794,  1593,  3681,  5797,  1073,     0,     0,  1594,     0,     0,
       0,  5805,     0,  1595,     0,     0, -1989,  3682,     0,     0,
     892,   892,  1073,     0,     0,  1073,     0,  3683,     0, -1989,
    1594,  3818,  3819,  1073,  1073,     0,  1595,  1592,  3820,     0,
   -1989,  1592,  3684,     0,     0,  1592,     0,  1596,     0, -1989,
    3821,     0,     0,  1593,     0,     0,     0,  1593,     0,     0,
       0,  1593,  1597,     0,  1598,     0,     0,     0,     0,  3822,
    1596, -1989,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1594,     0,     0,  1597,  1594,  1598,  1595,     0,
    1594, -1989,  1595,     0,     0,  3823,  1595,     0, -1989,  3685,
    1590,  1591,     0,     0,     0,     0,     0,     0,     0,  3686,
       0, -1989,     0, -1989,     0,     0, -1989,     0,     0,  1073,
    1073,  1073,  1596,     0,     0,     0,  1596,     0,     0,     0,
    1596,  1590,  1591,     0,     0,     0,     0,  1597,     0,  1598,
       0,  1597,     0,  1598,     0,  1597,  3687,  1598,   898,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3688,
       0,  3824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1592,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1599,  4952,     0,     0,     0,  1593,     0,
       0,     0,     0,     0,     0,  1590,  1591,  1073,     0,  3689,
       0,     0,     0,  1592,     0,  3690,  1599,     0,  1590,  1591,
       0,     0,     0,     0,     0,     0,     0,  1594,  1073,  1593,
       0,  1073,  1073,  1595,  1073,  1073,     0,     0,     0,     0,
       0,     0,  3825,  1073,     0,  1073,     0,     0,     0,     0,
       0,     0,     0,  3826,  3827,  3828,     0,     0,  1594,     0,
       0,     0,     0,     0,  1595,  1590,  1591,  1596,  1599,     0,
       0,     0,  1599,  1073,  3691,     0,  1599,  1592,  1590,  1591,
       0,  3692,  1597,     0,  1598,     0,     0,     0,  1073,     0,
    1592,     0,     0,  1593,     0,     0,     0,     0,  1596,  1600,
    1601,  1602,     0,     0,     0,  1073,  1593,     0,     0,     0,
       0,  3693,     0,  1597,     0,  1598,  2876,     0,     0,  1073,
       0,     0,  1594,     0,     0,     0,  3694,  3695,  1595,     0,
   -1989,     0,     0,  3000,  1073,  1594,     0,  1592,     0,  3696,
       0,  1595,  3829,  1809,     0,     0,     0,     0,  1590,  1591,
    1592,     0,     0,  1593,     0,     0,  1073,     0,     0, -1989,
   -1989,     0,  1596, -1989, -1989,     0,  1593,     0,     0,     0,
       0,  1590,  1591,     0,     0,  1596,     0,  1597,     0,  1598,
       0,     0,  1594,     0,     0,     0,     0,     0,  1595,     0,
    1597,     0,  1598,     0,     0,  1594,     0,     0,     0,     0,
       0,  1595,     0,  1599, -1180,     0,     0,  1590,  1591,  1600,
    1601,  1602,  1590,  1591,   892,     0,     0,     0,     0,     0,
    1592,     0,  1596,     0,     0,     0,  2879,     0,     0,     0,
    1600,  1601,  1602,  1073,  1599,  1596,  1593,  1597,     0,  1598,
       0,     0,  1799,  1592,     0,     0,     0,  2886,     0,     0,
    1597,     0,  1598,  1590,  1591,     0,     0,     0,     0,  1593,
       0,     0,     0,     0,     0,  1594,     0,     0,     0,     0,
       0,  1595,     0,     0,  1590,  1591,     0,     0,     0,  1592,
       0,     0,     0,     0,  1592,  1590,  1591,     0,  1594,     0,
       0,     0,     0,     0,  1595,  1593,     0,     0,  1599,     0,
    1593,     0,     0,     0,     0,  1596,     0,     0,     0,     0,
       0,  1599,     0,  1590,  1591,     0,     0,     0,     0,     0,
    1597,     0,  1598,     0,  1594,  1592,     0,     0,  1596,  1594,
    1595,  5816,     0,     0,     0,  1595,     0,     0,  1073,     0,
       0,  1593,     0,  1597,     0,  1598,  1592,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1592,  1599, -1989,
       0,     0,  1593,     0,  1596,     0,     0,     0,     0,  1596,
    1594,  1599,  1809,  1593,     0,     0,  1595,     0,     0,  1597,
       0,  1598,     0,     0,  1597,  1592,  1598,     0, -1989, -1989,
       0,  1594, -1989, -1989,     0,     0,     0,  1595,     0,     0,
       0,  1593,  1594,     0,     0,  1073,     0,     0,  1595,     0,
    1596,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1597,     0,  1598,     0,     0,
    1594,  1596,     0,     0,     0,     0,  1595,     0,  1600,  1601,
    1602,  1599,  1596,     0,     0,     0,  1597,     0,  1598,     0,
       0,     0,     0,     0,     0,  2897,     0,  1597,     0,  1598,
       0,  1600,  1601,  1602,  1599,  1073,     0,     0,     0,     0,
    1596,     0,     0,     0,     0,     0,     0,     0,  3391,     0,
       0,     0,     0,     0,   892,  1597,     0,  1598,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1599,     0,   892,     0,     0,  1599,     0,     0,     0,     0,
       0,     0,     0,  1600,  1601,  1602,     0,  1600,  1601,  1602,
       0,  1600,  1601,  1602,     0,     0,  3368,   892,     0,     0,
    4037,     0,     0,     0,  4038,   892,   892,   892,  4050,     0,
       0,     0,  1073,     0,     0,  1073,  1599,     0,     0,     0,
       0,     0,     0,     0,  1073,     0,     0,     0,     0,     0,
       0,     0,  1073,     0,  1073,     0,  1073,  1599,  1073,  1073,
    1073,  1073,  1073,  1073,     0,  1073,     0,     0,  1599,     0,
       0,     0,     0,  1073,     0,  1073,     0,     0,  1073,  1073,
    1073,  1073,     0,     0,  1073,  1073,     0,     0,  1073,     0,
    1073,     0,  1073,     0,  1073,     0,  1599,     0,  1073,     0,
       0,  1590,  1591,     0,     0,     0,  1073,     0,  1073,     0,
    1073,  1073,  1073,  1073,  1073,     0,     0,  1073,  1073,  1073,
       0,  1073,     0,     0,  1073,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1073,  1600,  1601,
    1602,     0,  1073,     0,     0,  1073,     0,  1073,  1073,  1073,
       0,     0,  1073,  1590,  1591,  4070,     0,     0,  1073,     0,
       0,     0,     0,  1073,  1590,  1591,     0,     0,     0,  1600,
    1601,  1602,     0,  1592,     0,     0,     0,     0,  3000,  1073,
       0,     0,     0,     0,     0,  1073,  4087,     0,  1073,  1593,
       0,  1073,     0,     0,     0,     0,  1590,  1591,     0,     0,
    1073,     0,  1073,     0,     0,     0,     0,  1073,     0,     0,
       0,     0,     0,     0,     0,     0,  1590,  1591,  1594,     0,
       0,     0,     0,     0,  1595,  1592,     0,     0,     0,     0,
       0,     0,     0,  1600,  1601,  1602,  1592,     0,     0,     0,
       0,  1593,     0,     0,     0,     0,  1600,  1601,  1602,  1073,
    4088,     0,  1593,     0,     0,     0,     0,     0,  1596,     0,
       0,     0,     0,  4974,     0,     0,     0,     0,  1592,     0,
    1594,     0,     0,  1597,     0,  1598,  1595,     0,  1073,     0,
       0,  1594,  1130,     0,  1593,     0,     0,  1595,  1592,     0,
       0,  1590,  1591,  1600,  1601,  1602,     0,     0,     0,     0,
       0,     0,     0,     0,  1593,     0,  1600,  1601,  1602,  2787,
    1596,     0,     0,  1594,     0,     0,     0,     0,     0,  1595,
       0,  1596,  2804,     0,   892,  1597,     0,  1598,     0,   892,
       0,     0,     0,  1594,     0,     0,  1597,     0,  1598,  1595,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1596,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1592,     0,     0,     0,     0,  1597,     0,
    1598,     0,     0,  1596,     0,     0,  1600,  1601,  1602,  1593,
       0,     0,     0,     0,     0,     0,     0,     0,  1597,     0,
    1598,     0,  2808,     0,  1599,     0,     0,     0,     0,  1600,
    1601,  1602,  3706,  1590,  1591,     0,     0,     0,  1594,     0,
       0,     0,     0,     0,  1595,  2810,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1073,     0,     0,  1590,  1591,
       0,     0,     0,     0,     0,  1600,  1601,  1602,     0,  1073,
    1600,  1601,  1602,     0,     0,     0,  1599,     0,  1596,     0,
       0,  2811,     0,     0,     0,     0,  2833,  1599,     0,  1590,
    1591,  3760,     0,  1597,     0,  1598,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1592,     0,     0,  1590,  1591,
       0,  1600,  1601,  1602,     0,     0,     0,  3760,  3760,  1599,
       0,  1593,     0,     0,     0,     0,     0,  2836,  1590,  1591,
    1592,     0,  1600,  1601,  1602,     0,     0,     0,     0,  1599,
       0,  3706,     0,  1600,  1601,  1602,  1593,     0,  2838,     0,
    1594,     0,   892,  1073,     0,     0,  1595,     0,     0,  2841,
       0,  1592,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1600,  1601,  1602,     0,  1594,     0,  1593,     0,     0,
    1592,  1595,     0,  3760,  3760,     0,     0,  2849,     0,     0,
    1596,     0,     0,     0,     0,     0,  1593,     0,     0,     0,
    1592,     0,  1073,     0,     0,  1597,  1594,  1598,     0,     0,
       0,     0,  1595,     0,  1599,  1596,  1593,     0,     0,     0,
    1590,  1591,     0,     0,  1073,  1594,     0,     0,     0,     0,
    1597,  1595,  1598,     0,     0,     0,     0,   892,     0,     0,
       0,     0,     0,     0,     0,  1594,  1596,     0,  1590,  1591,
       0,  1595,     0,     0,     0,     0,     0,     0,  1590,  1591,
       0,  1597,     0,  1598,     0,  1596,     0,  1590,  1591,     0,
       0,     0,     0,     0,     0,     0,     0,  1073,     0,     0,
    1597,     0,  1598,     0,     0,  1596,   892,  1073,     0,     0,
    1073,     0,  1592,     0,     0,     0,     0,     0,     0,     0,
    1597,     0,  1598,     0,     0,     0,     0,     0,  1593,     0,
       0,     0,     0,  1073,  1073,     0,     0,     0,     0,     0,
    1592,  1590,  1591,     0,     0,     0,  1599,     0,     0,     0,
    1592,     0,     0,     0,     0,     0,  1593,  1594,  1073,  1592,
    1073,     0,  1073,  1595,  1073,     0,  1593,     0,     0,     0,
       0,  1599,     0,     0,     0,  1593,     0,  1590,  1591,     0,
       0,     0,     0,     0,     0,  1594,  1073,     0,     0,     0,
       0,  1595,     0,     0,     0,  1594,     0,  1596,     0,     0,
       0,  1595,  1599,     0,  1594,  1590,  1591,  1073,  1073,     0,
    1595,     0,  1597,  1592,  1598,     0,     0,     0,     0,     0,
       0,  1599,     0,     0,     0,  1596,     0,  1073,     0,  1593,
    1073,     0,     0,  1073,     0,  1596,     0,     0,  1073,     0,
    1597,  1599,  1598,     0,  1596,     0,     0,     0,     0,  1592,
    1597,  1073,  1598,     0,     0,     0,     0,     0,  1594,  1597,
       0,  1598,     0,     0,  1595,  1593,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1590,  1591,  1592,     0,     0,
       0,     0,     0,     0,     0,     0,  1073,  1073,     0,  1600,
    1601,  1602,     0,  1593,  1594,     0,     0,     0,  1596,     0,
    1595,  1073,  1590,  1591,     0,  2850,     0,     0,     0,     0,
       0,     0,     0,  1597,     0,  1598,     0,     0,     0,     0,
       0,     0,  1594,     0,     0,     0,     0,     0,  1595,  1590,
    1591,     0,     0,  1599,  1596,     0,     0,     0,     0,     0,
       0,  1600,  1601,  1602,     0,     0,     0,  1592,     0,  1597,
       0,  1598,  1600,  1601,  1602,  1073,     0,  2856,     0,     0,
       0,  1599,  1596,  1593,     0,  1590,  1591,     0,  2857,     0,
       0,  1599,     0,     0,  1592,     0,     0,  1597,     0,  1598,
    1599,     0,     0,     0,  1600,  1601,  1602,     0,     0,     0,
    1593,     0,  1594,     0,     0,     0,     0,     0,  1595,     0,
    2861,  1592,     0,     0,  1600,  1601,  1602,     0,     0,     0,
       0,     0,  1590,  1591,     0,     0,     0,  1593,  3706,  1594,
    2862,     0,     0,  3706,     0,  1595,     0,     0,     0,     0,
    1590,  1591,  1596,     0,  1599,     0,     0,  1592,     0,  1590,
    1591,     0,     0,     0,  1073,     0,  1594,  1597,     0,  1598,
       0,     0,  1595,  1593,     0,  1073,     0,     0,     0,  1596,
       0,     0,  1590,  1591,     0,     0,  1590,  1591,     0,     0,
    1599,  1590,  1591,     0,  1597,     0,  1598,     0,     0,  1600,
    1601,  1602,  1594,     0,  1592,     0,  1596,     0,  1595,     0,
       0,     0,     0,     0,     0,  2863,     0,     0,  1599,     0,
    1593,  1597,  1592,  1598,     0,     0,     0,     0,     0,     0,
       0,  1592,     0,     0,     0,     0,     0,     0,  1593,     0,
       0,     0,  1596,     0,     0,     0,     0,  1593,     0,  1594,
       0,     0,     0,     0,  1592,  1595,     0,  1597,  1592,  1598,
       0,     0,     0,  1592,     0,     0,     0,  1594,  3706,     0,
    1593,     0,     0,  1595,  1593,     0,  1594,     0,     0,  1593,
       0,     0,  1595,     0,     0,     0,     0,     0,  1599,  1596,
       0,   892,  1590,  1591,     0,     0,     0,     0,     0,  1594,
       0,     0,     0,  1594,  1597,  1595,  1598,  1596,  1594,  1595,
       0,  1600,  1601,  1602,  1595,  1599,  1596,     0,     0,     0,
       0,     0,  1597,     0,  1598,     0,  3760,  2869,     0,     0,
       0,  1597,     0,  1598,     0,     0,  1600,  1601,  1602,  1596,
       0,     0,  1599,  1596,     0,  1590,  1591,     0,  1596,     0,
       0,     0,  2870,     0,  1597,     0,  1598,     0,  1597,     0,
    1598,     0,     0,  1597,  1592,  1598,     0,  1600,  1601,  1602,
       0,     0,     0,     0,     0,     0,     0,     0,  1599,     0,
    1593,     0,     0,  2874,  1590,  1591,  1600,  1601,  1602,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2875,     0,     0,     0,  1600,  1601,  1602,  1594,
       0,     0,     0,     0,     0,  1595,     0,  1592,     0,     0,
       0,     0,  2877,     0,     0,  1599,     0,     0,     0,     0,
       0,     0,     0,  1593,     0,     0,     0,  1590,  1591,   892,
     892,     0,     0,  1599,     0,     0,     0,     0,     0,  1596,
       0,     0,  1599,     0,     0,     0,  1592,     0,     0,     0,
    1590,  1591,  1594,     0,  1597,     0,  1598,     0,  1595,     0,
       0,     0,  1593,  1073,  1073,  1599,  1073,     0,     0,  1599,
       0,     0,     0,     0,  1599,     0,  1073,     0,  1073,     0,
       0,  1073,     0,     0,     0,     0,     0,     0,  1600,  1601,
    1602,  1594,  1596,     0,  1073,     0,  1073,  1595,  1073,  1592,
    1073,     0,     0,     0,  2884,     0,     0,  1597,     0,  1598,
       0,     0,     0,  1073,  1073,  1593,  1600,  1601,  1602,     0,
       0,     0,  1592,     0,     0,     0,  1600,  1601,  1602,     0,
       0,  1596,  2898,     0,     0,  1600,  1601,  1602,  1593,     0,
       0,     0,  4032,     0,  1594,     0,  1597,     0,  1598,     0,
    1595,  4035,     0,  1073,     0,     0,     0,  1590,  1591,     0,
       0,     0,  1073,     0,  1590,  1591,     0,  1594,     0,     0,
       0,     0,     0,  1595,     0,  1599,     0,     0,     0,     0,
       0,     0,     0,     0,  1596,     0,     0,     0,     0,  1600,
    1601,  1602,     0,     0,     0,     0,     0,     0,     0,  1597,
       0,  1598,     0,     0,     0,  4036,     0,  1596,     0,     0,
    1130,  1590,  1591,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1597,     0,  1598,  1600,  1601,  1602,  1599,  1592,
       0,  1590,  1591,     0,     0,     0,  1592,     0,  1590,  1591,
    1073,  4041,     0,     0,     0,  1593,     0,     0,     0,     0,
       0,     0,  1593,  1600,  1601,  1602,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1599,     0,  4046,
       0,  1073,     0,     0,  1594,     0,     0,  1590,  1591,     0,
    1595,  1594,     0,  1592,     0,     0,     0,  1595,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1593,
       0,  1590,  1591,  1592,     0,     0,     0,     0,     0,     0,
    1592,     0,     0,     0,  1596,     0,     0,     0,     0,  1593,
    1599,  1596,     0,  1600,  1601,  1602,  1593,     0,  1594,  1597,
       0,  1598,  3706,     0,  1595,     0,  1597,     0,  1598,  4047,
       0,     0,     0,  1599,     0,     0,     0,     0,  1594,  1592,
    1600,  1601,  1602,  1073,  1595,  1594,     0,     0,     0,     0,
    1073,  1595,     0,     0,     0,  1593,  4048,     0,  1596,     0,
    1073,     0,     0,  1592,     0,  1590,  1591,  1600,  1601,  1602,
       0,     0,     0,  1597,     0,  1598,     0,     0,  1596,  1593,
       0,     0,     0,  4049,  1594,  1596,     0,     0,     0,     0,
    1595,     0,     0,  1597,     0,  1598,     0,     0,     0,     0,
    1597,     0,  1598,  1600,  1601,  1602,     0,     0,  1594,     0,
       0,     0,     0,     0,  1595,  1590,  1591,     0,     0,  4051,
       0,     0,     0,     0,  1596,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1590,  1591,  1592,  3706,  1597,
    1599,  1598,     0,     0,     0,  1073,  1073,  1599,  1596,     0,
    1600,  1601,  1602,  1593,     0,     0,  1590,  1591,     0,  1590,
    1591,     0,     0,  1597,     0,  1598,  4060,     0,  1600,  1601,
    1602,     0,     0,     0,     0,     0,     0,  1600,  1601,  1602,
       0,     0,  1594,     0,  4066,   892,     0,  1592,  1595,     0,
       0,     0,     0,  4069,  1599,     0,     0,     0,     0,     0,
    1600,  1601,  1602,  1593,  1600,  1601,  1602,  1592,     0,  1600,
    1601,  1602,     0,     0,  1599,     0,  4075,     0,     0,     0,
    4076,  1599,  1596,  1593,     0,  4077,     0,     0,  1592,     0,
       0,  1592,  1594,     0,     0,     0,     0,  1597,  1595,  1598,
       0,     0,     0,     0,  1593,     0,  3368,  1593,     0,  1073,
       0,     0,  1594,     0,     0,     0,     0,     0,  1595,     0,
    1599,     0,     0,   892,  1590,  1591,     0,     0,  1590,  1591,
    2773,     0,  1596,  1594,     0,     0,  1594,  1073,     0,  1595,
       0,     0,  1595,     0,  1599,     0,     0,  1597,     0,  1598,
       0,     0,  1596,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1597,     0,  1598,
    1600,  1601,  1602,  1596,     0,     0,  1596,     0,     0,     0,
       0,     0,     0,     0,  1590,  1591,  4085,     0,  1597,     0,
    1598,  1597,     0,  1598,     0,     0,  1592,     0,     0,     0,
    1592,  1073,     0,  1073,  1590,  1591,     0,     0,     0,     0,
       0,     0,  1593,     0,     0,     0,  1593,  1073,  1599,     0,
       0,     0,     0,  1600,  1601,  1602,     0,     0,  2093,  2094,
    2095,  2096,     0,     0,  1073,  1073,     0,     0,     0,  4086,
       0,  1594,     0,     0,     0,  1594,     0,  1595,     0,     0,
       0,  1595,     0,  1073,  1590,  1591,  1592,     0,     0,     0,
       0,     0,  1600,  1601,  1602,  1590,  1591,     0,  1599,     0,
       0,  2022,  1593,     0,     0,     0,  1592,     0,  4089,     0,
       0,  1596,  2097,  2098,  2099,  1596,     0,     0,  1599,     0,
    2828,     0,  1593,  1590,  1591,     0,  1597,     0,  1598,     0,
    1597,  1594,  1598,     0,     0,  1447,     0,  1595,     0,  1599,
       0,     0,  1599,  1590,  1591,  1600,  1601,  1602,  1590,  1591,
    4062,  1594,     0,     0,     0,     0,  1592,  1595,     0,     0,
       0,  4093,     0,  2100,  2101,     0,     0,  1592,  1600,  1601,
    1602,  1596,  1593,     0,     0,  3368,     0,     0,     0,     0,
       0,  3442,     0,  1593,  4106,     0,  1597,     0,  1598,     0,
       0,  1596,     0,     0,     0,  1592,     0,     0,     0,     0,
    1073,  1594,     0,     0,     0,     0,  1597,  1595,  1598,  2769,
       0,  1593,  1594,     0,     0,  1592,  1073,     0,  1595,     0,
    1592,     0,     0,     0,     0,     0,     0,     0,     0,  3444,
       0,  1593,     0,     0,  2102,     0,  1593,     0,     0,     0,
    1594,  1596,     0,     0,     0,     0,  1595,  1599,     0,     0,
       0,  1599,  1596,     0,     0,     0,  1597,     0,  1598,     0,
    1594,     0,     0,     0,     0,  1594,  1595,  1597,     0,  1598,
       0,  1595,     0,     0,     0,  1600,  1601,  1602,     0,     0,
    1596,     0,  1600,  1601,  1602,     0,   892,  1590,  1591,     0,
       0,  4973,     0,     0,     0,  1597,     0,  1598,  4979,     0,
    1596,   892,     0,     0,     0,  1596,     0,  1599,  2103,     0,
    1590,  1591,  4065,     0,     0,  1597,     0,  1598,     0,     0,
    1597,     0,  1598,     0,     0,     0,     0,  1599,     0,  1600,
    1601,  1602,     0,     0,     0,  3368,     0,     0,     0,  3394,
    1590,  1591,     0,     0,     0,  4980,     0,     0,     0,  1600,
    1601,  1602,     0,     0,     0,     0,  1600,  1601,  1602,  1592,
       0,     0,     0,     0,     0,  4981,     0,     0,     0,     0,
       0,     0,  4990,  3446,     0,  1593,     0,  1599,     0,     0,
    1073,     0,  1592,     0,     0,     0,     0,     0,  1599,     0,
       0,     0,     0,     0,     0,  1600,  1601,  1602,  1593,     0,
    2104,     0,     0,     0,  1594,     0,     0,     0,     0,  1073,
    1595,  4991,  1592,     0,     0,     0,  1599,     0,     0,  1600,
    1601,  1602,     0,     0,     0,     0,     0,  1594,  1593,     0,
       0,     0,     0,  1595,     0,  4995,  1599,     0,     0,     0,
       0,  1599,     0,     0,  1596,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1594,     0,  1597,
       0,  1598,     0,  1595,     0,     0,     0,  1596,     0,  2105,
       0,     0,     0,     0,  1781,     0,     0,     0,     0,     0,
       0,  3706,  1597,  1073,  1598,     0,     0,     0,     0,     0,
       0,     0,     0,  1600,  1601,  1602,  5483,  1596,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4996,
       0,     0,  1597,     0,  1598,  1075,     0,     0,     0,     0,
       0,     0,  5483,  5484,     0,     0,     0,  3547,     0,     0,
       0,     0,     0,     0,  2106,     0,  2107,     0,   892,  1075,
       0,  2108,     0,  1600,  1601,  1602,     0,     0,     0,  5484,
       0,  5255,     0,  1075,   901,     0,     0,     0,     0,  5405,
       0,     0,     0,  1600,  1601,  1602,     0,   157,   158,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,  5454,
    1599,     0,     0,     0,  1600,  1601,  1602,  1600,  1601,  1602,
       0,     0, -1069,   918,     0,     0,     0,     0,   157,   158,
       0,     0,     0,  1599,     0,  2109,     0,   892,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1069,     0,
       0,     0,   923,     0,     0,   925,     0,     0,     0,     0,
     661,   662,     0,  1599,     0,  5485,   892,     0,     0,  5486,
       0,   929,   930,     0,     0,     0,  1073,     0,  2110,     0,
       0,     0,     0,     0,     0,     0,   661,   662,  1075,     0,
       0,  5485,  5467,     0,     0,  5486,     0,     0,     0,     0,
       0,     0,     0,     0,  1073,     0,     0,     0,     0,     0,
       0,     0,   937,     0,  1073,     0,  1073,     0,  5467,     0,
       0,     0,  1600,  1601,  1602,     0,  1600,  1601,  1602,     0,
       0,   943,     0,     0,     0,     0,     0,     0,     0,   948,
     949,     0,     0,     0,     0,     0,     0,     0,   629,     0,
       0,     0,  5481,     0,     0,     0,  5481,     0,  1075,     0,
       0,     0,     0,     0,     0,     0,     0,  2111,     0,  5468,
       0,     0,   892,     0,     0,     0,     0,     0,  2112,     0,
       0,     0,  1600,  1601,  1602,     0,     0,     0,     0,     0,
       0,     0,     0,  5469,     0,  5468,     0,     0,     0,     0,
       0,     0,  1600,  1601,  1602,     0,     0,   892,     0,     0,
       0,  1075,     0,     0,     0,     0,  1075,     0,     0,  5469,
       0,  5487,     0,     0,     0,     0,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,   892,     0,   969,   970,
     971,     0,     0,     0,     0,     0,  1075,  5487,     0,  1485,
       0,     0,  1600,  1601,  1602,     0,  1075,     0,     0,  2635,
       0,  5470,     0,  1600,  1601,  1602,  5647,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5602,     0,     0,  5602,  5470,     0,  1782,
       0,  1600,  1601,  1602,  1485,     0,     0,     0,     0,     0,
       0,  2636,     0,  1783,     0,  1784,     0,     0,     0,     0,
    5481,  1600,  1601,  1602,     0,     0,  1600,  1601,  1602,     0,
    5642,     0,     0,     0,     0,     0,     0,     0,  5481,     0,
     815,     0,     0,     0,     0,  1785,     0,     0,  2637,     0,
       0,     0,     0,     0,     0,  1075,  1075,  1075,  1075,     0,
    1786,  1485,  5256,     0,     0,     0,  1075,     0,     0,  5642,
    5257,     0,     0,     0,   816,  1073,     0,     0,     0,     0,
       0,     0,     0,  5471,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1787,     0,     0,   818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   819,     0,     0,  5471,
       0,  1788,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   820,     0,     0,     0,     0,     0,     0,     0,
    5602,     0,     0,     0,     0,  5602,     0,     0,   821,     0,
       0,     0,  5602,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1600,  1601,  1602,     0,     0,
       0,     0,     0,     0,     0,     0,   823,     0,     0,     0,
       0,     0,  1073,     0,     0,     0,     0,     0,  1600,  1601,
    1602,  1789,     0,     0,     0,  5481,     0,     0,  1790,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1791,     0,
       0,     0,     0,     0,     0,  1073,     0,     0,  1600,  1601,
    1602,  1792,     0,     0,  1075,     0,     0,  1485,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,     0,     0,  5489,
       0,     0,  1793,     0,     0,  1794,     0,     0,     0,     0,
       0,     0,     0,   825,     0,     0,     0,     0,     0,     0,
    1795,   826,  5602,     0,     0,  5489,  5815,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   630,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   827,     0,     0,     0,     0,     0,  5481,
       0,     0,     0,   828,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1073,
       0,     0,     0,     0,     0,     0,  1073,     0,  5472,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5472,  2638,     0,     0,     0,     0,
       0,     0,     0,     0,  5258,     0,     0,  5259,  5602,     0,
    5602,  5602,     0,     0,     0,     0,  5260,     0,     0,     0,
       0,     0,     0,     0,     0,  2639,  2640,     0,  2641,  2642,
    2643,  2644,  2645,     0,  2646,  2647,  2648,  2649,  2650,  2651,
    2652,  2653,     0,  2654,  2655,  2656,  5602,     0,     0,     0,
       0,     0,     0,  1075,  5602,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1073,     0,     0,     0,     0,
       0,  1075,     0,     0,  5602,  2012,     0,     0,     0,     0,
    2013,     0,  1075,  1075,     0,     0,     0,     0,  1075,     0,
    2014,     0,  1075,  1075,  1075,     0,     0,     0,     0,     0,
       0,     0,     0,  1075,  1075,  1485,     0,     0,     0,  1075,
       0,  1075,  1075,  1075,  1075,  1075,     0,  1075,     0,     0,
    1485,  1485,   892,     0,     0,     0,     0,     0,  1075,     0,
    1075,  2657,  2658,  1075,  1075,  1073,  1075,  1075,  1075,     0,
    1075,  1075,  1075,     0,     0,     0,     0,  1075,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,  1075,  1075,
       0,  1075,  1075,  1075,     0,     0,  1075,  1075,  1075,  1075,
    1075,  1075,  1075,     0,  1075,  1075,  1075,  1075,  1075,  1075,
       0,  1075,  1075,     0,  1075,  1075,  1075,  1075,  1075,  1075,
    1075,     0,     0,  1075,  1075,  1075,  1075,     0,  1075,  1075,
    1075,     0,  1075,     0,  1075,     0,  1075,     0,     0,     0,
    1075,  1075,  1075,     0,     0,  1075,  1075,  1075,  1075,  1075,
       0,  1075,     0,     0,     0,     0,     0,     0,  1075,     0,
       0,     0,     0,  1075,     0,     0,     0,     0,     0,     0,
    1075,     0,  1042,     0,  1075,  1075,  1075,  1075,  2015,  1075,
    1075,     0,     0,  1075,  1075,  1075,  1075,  1075,  1075,  1075,
    1075,  1075,  1075,  1075,  1075,  1075,  1191,     0,  1075,  2016,
       0,     0,     0,  1485,  2017,     0,     0,     0,     0,  1485,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     1,     2,     0,
       0,     0,     0,     0,     0,  2018,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,     0,  1075,     3,     0,     4,
       0,     5,     0,     6,     0,     0,  1075,     0,     0,     0,
   -1035,     7, -1035,     0,     0,     0,  2019,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     8,     0,     9,    10,  1485,     0,  1908,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
      12,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,  1334,     0,     0,     0,    14,
       0,     0,     0,     0,  1075,     0,     0,     0,     0,     0,
       0,     0,    15,     0,     0,     0,     0,     0,   157,   158,
      16,     0,     0,  3669,     0,     0,     0,  1075,     0,     0,
       0,    17,     0,  1908,     0,     0,     0,     0,     0,     0,
       0,    18,     0,    19,     0,     0,     0,     0,    20,     0,
       0,     0,  1485,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1398,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,   157,   158,     0,     0,     0,  3669,     0,     0,
       0,     0,    22,    23,     0,     0,     0,     0,  3671,     0,
       0,     0,    24,    25,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    26,    27,    28,    29,     0,    30,
       0,     0,     0,  1448,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,    33,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1475,     0,     0,     0,     0,     0,  3672,
    3673,  3674,  3671,  1490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    35,     0,
      36,     0,    37,     0,  3675,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,    39,     0,
       0,     0,     0,     0,     0,    40,     0,     0,     0,  3676,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3672,  3673,  3674,     0,     0,     0,     0,
       0,     0,     0,     0,    41,     0,    42,  3677,     0,  3678,
       0,     0,     0,    43,     0,     0,     0,     0,  3675,     0,
      44,     0,     0,     0,     0,  1584, -1035,     0,  3679,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    45,     0,  3676,     0,  1075,     0,  3680,     0,     0,
       0,     0,     0,     0,  3681,     0,     0,     0,     0,  1075,
       0,     0,     0,     0,     0,     0,    46,     0,     0,  3682,
       0,  3677,     0,  3678,     0,     0,     0,  1075,    47,  3683,
    1075,     0,     0,     0,     0,     0,     0,     0,  1075,  1075,
       0,     0,  3679,     0,  3684,     0,     0,    48,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      49,  3680,     0,     0,     0,     0,     0,     0,  3681,     0,
       0,     0,     0,    50,     0,     0,    51,     0,     0,    52,
       0,     0,     0,  3682,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3683,    53,     0,     0,     0,     0,  1485,
    1485,  3685,     0,     0,     0,     0,     0,     0,  3684,     0,
       0,  3686,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,  1075,  1075,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1485,     0,
       0,  1778,     0,     0,     0,     0,     0,     0,  3687,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3688,     0,     0,     0,  3685,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3686,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1485,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3689,  1075,     0,     0,  1485,     0,  3690,     0,     0,
      54,     0,  3687,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1075,     0,  3688,  1075,  1075,     0,  1075,
    1075,     0,     0,     0,     0,     0,     0,     0,  1075,    55,
    1075,     0,    56,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    57,     0,     0,     0,     0,     0,     0,     0,
      58,     0,     0,     0,     0,  3689,  3691,  1948,  1075,  1949,
       0,  3690,    59,  3692,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1075,     0,     0,     0,     0,     0,     0,
       0,    60,     0,     0,    61,     0,     0,     0,     0,     0,
    1075,     0,     0,  3693,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,     0,     0,     0,  3694,  3695,
       0,     0,     0,     0,     0,     0,    62,     0,     0,  1075,
    3691,  3696,     0,     0,     0,     0,    63,  3692,     0,     0,
    2026,     0,  2026,     0,     0,     0,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    64,     0,     0,     0,     0,     0,  3693,  2051,  1485,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3694,  3695,     0,  2065,     0,     0,     0,  2070,
       0,  2072,  4306,     0,     0,  3696,     0,     0,     0,     0,
    2088,  2089,     0,     0,     0,     0,  2115,     0,  2118,  2119,
    2120,  2121,  2122,     0,  2124,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2132,     0,  2135,  1075,     0,
    2136,  2137,     0,  2139,  2140,     0,     0,  2143,  2144,  2145,
       0,  1485,     0,  1485,  2150,     0,     0,  2156,     0,     0,
       0,     0,     0,     0,     0,  2160,  2161,     0,  2164,     0,
    2166,     0,     0,  2168,  2169,  2170,  2173,  2174,  2175,  2176,
       0,  2177,  2178,  2179,  2180,  2181,     0,     0,  2188,  2189,
       0,     0,  2193,  2194,  2195,     0,     0,     0,     0,     0,
    2201,  2202,  2203,     0,     0,  2206,  2207,  2208,     0,  2210,
       0,  2212,     0,  2213,     0,     0,     0,  2216,  2156,  2218,
       0,     0,  2224,  2225,  2226,  2227,  2228,     0,  2229,     0,
       0,     0,     0,     0,     0,  2233,     0,     0,     0,     0,
       0,     0,     0,  1075,     0,     0,     0,  2244,     0,     0,
       0,  2245,  2246,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,  2336,     0,
       0,     0,     0,  2346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2346,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2423,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1075,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,     0,  1075,
       0,     0,     0,     0,     0,     0,     0,  1075,     0,  1075,
       0,  1075,     0,  1075,  1075,  1075,  1075,  1075,  1075,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,  1075,     0,
    1075,     0,     0,  1075,  1075,  1075,  1075,     0,     0,  1075,
    1075,     0,     0,  1075,     0,  1075,     0,  1075,     0,  1075,
       0,     0,     0,  1075,     0,     0,     0,     0,     0,     0,
       0,  1075,     0,  1075,     0,  1075,  1075,  1075,  1075,  1075,
       0,     0,  1075,  1075,  1075,     0,  1075,     0,     0,  1075,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1075,     0,     0,     1,     2,  1075,     0,     0,
    1075,     0,  1075,  1075,  1075,     0,     0,  1075,     0,     0,
   -1035,     0, -1035,  1075,     0,     3,     0,     4,  1075,     5,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     7,
       0,     0,     0,     0,  1075,     0,     0,     0,     0,  1908,
    1075,     0,     0,  1075,     0,     0,  1075,     0,     0,     0,
       0,     8,     0,     9,    10,  1075,  1485,  1075,     0,     0,
       0,    11,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1485,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,    14,   157,   158,
       0,     0,     0,  3669,     0,     0,     0,     0,     0,     0,
      15,     0,     0,     0,  1075,     0,     0,     0,    16,     0,
       0,     0,  2728,     0,     0,  3670,     0,     0,     0,    17,
       0,     0,     0,     0,     0,     0,  2745,     0,     0,    18,
       0,    19,     0,  1075,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,  1191,     0,     0,  2764,     0,  1485,
       0,     0,  1485,  1485,  1485,  2771,  2772,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,  3671,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,    23,     0,     0,     0,     0,     0,     0,     0,     0,
      24,    25,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    26,    27,    28,    29,     0,    30,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,     0,     0,    33,    34,     0,  3672,
    3673,  3674,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2823,  2825,  2827,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3675,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,     0,    36,     0,
      37,     0,     0,     0,     0,     0,     0,     0,     0,  3676,
    1075,     0,     0,     0,     0,    38,    39,     0,     0,     0,
       0,     0,     0,    40,  1075,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3677,     0,  3678,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    41,     0,    42,     0, -1035,     0,  3679,     0,
       0,    43,     0,     0,     0,     0,     0,     0,    44,     0,
    2920,     0,     0,     0,     0,     0,     0,  3680,     0,     0,
       0,     0,     0,     0,  3681,  2928,     0,  2929,     0,    45,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3682,
       0,     0,     0,     0,     0,     0,     0,     0,  1075,  3683,
       0,     0,     0,     0,    46,  2951,     0,     0,     0,     0,
       0,     0,     0,     0,  3684,     0,    47,     0,     0,     0,
    2958,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    48,     0,  2346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1075,    49,     0,
       0,     0,     0,     0,     0,  1485,     0,     0,     0,     0,
       0,    50,     0,     0,    51,     0,  3011,    52,     0,  1075,
       0,  3685,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3686,    53,     0,     0,     0,     0,     0,  3021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3687,     0,
       0,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,  3688,  1075,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1075,  1075,
       0,     0,     0,     0,     0,  3080,     0,     0,     0,     0,
    1485,  3689,     0,     0,     0,     0,     0,  3690,     0,     0,
       0,     0,     0,  1075,     0,  1075,     0,  1075,     0,  1075,
       0,     0,     0,     0,     0,     0,     0,     0,    54,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,     0,     0,  1485,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    55,     0,     0,
      56,     0,  1075,  1075,     0,     0,  3691,     0,     0,     0,
      57,     0,     0,  3692,     0,     0,     0,     0,    58,     0,
       0,     0,  1075,     0,     0,  1075,     0,     0,  1075,     0,
      59,     0,     0,  1075,     0,     0,     0,     0,     0,     0,
    3170,     0,     0,  3693,     0,     0,  1075,     0,     0,    60,
       0,     0,    61,     0,     0,     0,     0,     0,  3694,  3695,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3696,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1075,  1075,     0,    62,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    63,     0,  1075,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3255,     0,     0,
    1485,     0,     0,     0,     0,     0,     0,     0,     0,    64,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3697,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,  1485,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3313,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     1,     2,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     3,     0,     0,     0,     5,     0,     6,
       0,     0,     0,     0,     0,     0,     0,     7,     0,  1075,
       0,     0,     0,     0,  3392,     0,  1485,  3393,     0,     0,
    1075,     0,     0,     0,     0,     0,     0,     0,     0,     8,
       0,     9,    10,     0,  3419,     0,     0,     0,  3421,    11,
    3422,  3423,  3424,  3425,  3426,  3427,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3432,     0,  3433,     0,     0,
    3434,  3435,  3436,  3437,     0,    14,  3438,  3439,     0,     0,
    3441,     0,  3443,     0,  3445,     0,  3447,     0,     0,     0,
    3449,     0,     0,     0,     0,     0,    16,     0,  2170,     0,
    3452,     0,  2170,     0,  3455,  3456,  3457,    17,     0,  3458,
    3459,  3461,     0,  3462,     0,     0,  3463,    18,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3464,
       0,     0,     0,     0,     0,     0,     0,  3471,     0,  3472,
    3473,  3474,     0,     0,  3475,     0,     0,     0,     0,     0,
    3479,     0,     0,     0,    21,  3490,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,    23,
       0,  3507,     0,     0,     0,     0,     0,     0,    24,    25,
       0,     0,     0,  3515,     0,     0,     0,     0,     0,     0,
      26,    27,     0,    29,  3528,    30,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      32,     0,     0,     0,    33,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2346,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    35,     0,    36,     0,    37,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2346,     0,     0,     0,    39,     0,     0,     0,     0,     0,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,     0,    43,
       0,     0,     0,     0,     0,     0,    44,     0,  1075,  1075,
       0,  1075,  3929,  3930,     0,     0,     0,     0,  3931,  3932,
       0,  1075,     0,  1075,     0,     0,  1075,    45,  3933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1075,
       0,  1075,     0,  1075,     0,  1075,     0,     0,     0,     0,
       0,     0,    46,     0,  3934,     0,     0,     0,  1075,  1075,
       0,     0,     0,     0,    47,     0,  3935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    48,     0,     0,  3936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    49,  3720,  1075,     0,
       0,     0,     0,     0,     0,     0,     0,  1075,     0,    50,
       0,  3080,    51,     0,     0,    52,     0,     0,     0,     0,
    3937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      53,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3938,  3939,     0,  3940,     0,     0,     0,     0,     0,     0,
       0,  3941,  3942,  3943,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3944,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3856,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3945,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1075,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3946,     0,     0,     0,     0,     0,  3947,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    54,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3948,  3949,  3950,     0,     0,  3907,     0,     0,     0,
       0,     0,     0,     0,     0,    55,     0,     0,    56,     0,
       0,     0,     0,     0,     0,     0,  3951,  3952,    57,     0,
       0,     0,     0,     0,     0,     0,    58,     0,  1075,     0,
       0,     0,     0,     0,     0,  1075,     0,     0,    59,     0,
       0,     0,     0,     0,     0,  1075,     0,     0,     0,  4001,
       0,     0,     0,     0,     0,     0,     0,    60,     0,  4005,
      61,     0,  4006,  3953,     0,  3954,  3955,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3956,     0,     0,     0,  4030,  4031,     0,     0,     0,
    3929,  3930,    62,     0,     0,     0,  3931,  3932,     0,     0,
       0,     0,    63,     0,     0,     0,  3933,     0,     0,     0,
    4056,     0,  4057,     0,  4058,     0,  4059,     0,  3957,     0,
    3958,     0,     0,     0,     0,     0,     0,    64,     0,     0,
    1075,  1075,  3934, -1035,     0, -1035,     0,     0,  4084,     0,
       0,     0,     0,  3959,  3935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4107,
    4108,     0,  1908,     0,  3936,  3960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3961,  3962,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3720,     0,     0,     0,     0,     0,     0,     0,  3937,     0,
       0,     0,     0,  4144,     0,     0,     0,     0,  3963,     0,
       0,   157,   158,     0,     0,     0,  3669,  3964,  3938,  3939,
       0,  3940,     0,     0,     0,     0,     0,     0,     0,  3941,
    3942,  3943,     0,     0,  1075,     0,     0,     0,  2346,  2346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3944,
       0,     0,     0,  2346,     0,     0,     0,     0,     0,     0,
       0,     0,  1075,  3965,  3966,  3967,     0,     0,     0,     0,
       0,  3968,  3969,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3945,     0,     0,     0,  3970,  3971,     0,
       0,  3671,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3080,  3946,     0,
       0,  3972,  3973,     0,  3947,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1075,     0,  1075,     0,
    3974,     0,     0,     0,     0,     0,     0,     0,     0,  3948,
    3949,  3950,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3672,  3673,  3674,     0,     0,     0,     0,  1075,
    1075,     0,  3975,     0,  3951,  3952,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3675,  1075,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3720,     0,     0,     0,
       0,     0,  3676,     0,     0,     0,     0,  3080,     0,     0,
       0,  3953,     0,  3954,  3955,     0,     0,     0,     0,     0,
       0,  3976,     0,     0,  3977,     0,     0,  3978,     0,  3956,
    3677,     0,  3678,     0,  3979,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1035,
    3980,  3679,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3957,     0,  3958,  3981,
    3680,     0,     0,     0,     0,     0,     0,  3681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3959,  3682,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,  3683,     0,     0,     0,     0,     0,  1485,     0,
       0,  1075,     0,  3960,     0,     0,     0,  3684,     0,     0,
       0,     0,     0,     0,  3961,  3962,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3963,     0,     0,     0,
       0,     0,     0,     0,     0,  3964,     0,     0,     0,     0,
       0,     0,     0,     0,  3685,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3686,     0,     0,     0,  3929,  3930,
       0,     0,     0,     0,  3931,  3932,     0,     0,     0,     0,
       0,     0,     0,     0,  3933,     0,     0,     0,     0,     0,
       0,  3965,  3966,  3967,     0,     0,     0,     0,     0,  3968,
    3969,  3687,     0,     0,     0,     0,     0,     0,     0,     0,
    3934,     0,     0,     0,  3688,  3970,  3971,     0,     0,     0,
       0,     0,  3935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3972,
    3973,     0,  3936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1485,     0,  3689,  1075,     0,     0,  3974,     0,
    3690,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3937,     0,     0,     0,
       0,     0,     0,     0,  1075,  4564,  4565,     0,     0,     0,
    5332,     0,     0,     0,     0,     0,  3938,  3939,  4572,  3940,
    4573,     0,     0,  4574,     0,     0,     0,  3941,  3942,  3943,
       0,     0,     0,     0,     0,     0,  4594,     0,  4595,  3691,
    4596,     0,  4597,     0,     0,     0,  3692,  3944,     0,     0,
       0,     0,     0,     0,     0,  4603,  4604,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3976,
       0,     0,  3977,     0,     0,  3978,  3693,     0,  1075,     0,
       0,  3945,  5333,     0,     0,     0,     0,     0,     0,     0,
       0,  3694,  3695,     0,     0,     0,     0,     0,  3980,     0,
       0,     0,     0,     0,  3696,     0,  3946,     0,     0,     0,
    1144,     0,  3947,     0,     0,     0,     0,  3981,     0,     0,
       0,  1078,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,  3948,  3949,  3950,
       0,     0,     0,     0,  1145,  1146,     0,     0,     0,     0,
       0,     0,     0,     0,  1147,     0,     0,     0,     0,     0,
       0,     0,  3951,  3952,     0,     0,     0,     0,     0,     9,
      10,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3080,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3953,
       0,  3954,  3955,  3080,   157,   158,     0,     0,     0,  1148,
       0,     0,     0,     0,     0,     0,     0,  3956,     0,     0,
       0,     0,     0,  1149,     0,     0,  4859,     0,  3805,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3807,     0,  3957,     0,  3958,     0,     0,  1075,
    3809,     0,     0,     0,     0,     0,     0,     0,     0,  1075,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,  3959,
       0,     0,  1908,     0,     0,  3720,     0,     0,     0,     0,
       0,     0,  4801,     0,  4860,  1150,     0,     0,     0,     0,
       0,  3960,  3080,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3961,  3962,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,  3669,     0,     0,     0,
       0,     0,     0,     0,  3963,     0,     0,     0,     0,     0,
       0,     0,     0,  3964,     0,  1151,     0,     0,     0,     0,
       0,     0,     0,     0,  3811,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4867,  4868,     0,
       0,     0,     0,     0,  1485,  1485,     0,     0,     0,  3965,
    3966,  3967,     0,  3813,     0,     0,  1152,  3968,  3969,     0,
       0,  3671,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1153,     0,  3970,  3971,     0,     0,     0,     0,     0,
    1154,     0,     0,     0,     0,     0,  3815,     0,     0,     0,
       0,     0,  1155,     0,     0,     0,     0,  3972,  3973,     0,
       0,     0,     0,  1156,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3974,     0,     0,     0,
       0,     0,  3672,  3673,  3674,  1485,     0,  1157,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4940,     0,     0,     0,     0,     0,  3675,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2343,
    1158,     0,     0,  1159,  1485,  1160,     0,     0,     0,  3720,
    1075,     0,  3676,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1161,  1162,  3816,     0,     0,     0,     0,     0,  1163,  1164,
    3677,     0,  3678,     0,     0,     0,     0,  3976,     0,     0,
    3977,     0,     0,  3978,     0,  1165,     0,     0,     0,     0,
       0,  3679,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3720,     0,  3720,  3980,  1166,     0,     0,
    3680,     0,     0,     0,     0,     0,     0,  3681,     0,  3080,
       0,     0,     0,     0,     0,  3981,     0,     0,  1167,     0,
       0,     0,  3682,     0,     0,     0,  2346,  2346,     0,     0,
       0,     0,  3683,     0,     0,     0,  3818,  1075,     0,     0,
       0,     0,     0,  3820,     0,  5045,     0,  3684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,     0,  1168,  3822,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1170,     0,
       0,  1171,  1172,     0,  3685,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3686,     0,  1173,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3687,  1174,     0,     0,     0,     0,     0,     0,  1175,
       0,     0,  5151,     0,  3688,     0,  3824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -3099,  3080,  1176,
       0,     0,     0,     0,  1075,     0,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3689,     0,     0,     0,     0,     0,
    3690,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -3099,
       0,     0,     0,     0,     0,  1177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3691,
       0,     0,     0,     0,     0,     0,  3692,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,     0,     0,     0,     0,     0,  3693,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3694,  3695,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3696,     0,     0,     0,     0,     0,
       0,     0,  5245,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1075,  3720,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5305,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3720,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5430,     0,  5432,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5668,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2343,   901,   902,   903,   904,     0,
       0,     0,     0,     0,     0,     0,   905,   906,     0,   907,
       0,     0,     0,     0,     0,     0,   908,   909,     0,     0,
     910,   911,   912,   913,     0,   914,   915,     0,   916,   917,
       0,     0,     0,     0,   918,     0,     0,     0,  2344,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,   922,   923,     0,   924,   925,     0,     0,     0,
       0,     0,     0,     0,  1584,     0,     0,     0,   926,   927,
     928,     0,   929,   930,     0,     0,     0,   931,   932,   933,
       0,     0,     0,     0,     0,     0,     0,   934,     0,   935,
       0,     0,     0,     0,     0,     0,     0,  5773,     0,     0,
       0,     0,   936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,   938,   939,
       0,   940,     0,     0,     0,     0,     0,   941,     0,   942,
       0,     0,   943,     0,     0,   944,   945,   946,     0,   947,
     948,   949,     0,   950,  2345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,   952,   953,   954,   955,     0,     0,     0,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,   958,     0,     0,     0,     0,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3080,     0,     0,     0,   961,     0,     0,     0,     0,
       0,   962,   963,     0,   964,   965,   966,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   968,   969,
     970,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   972,   973,   974,     0,     0,     0,     0,     0,   975,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   977,   171,   172,   173,   174,   175,
     176,   978,   178,   179,   180,   181,   182,   183,   184,   979,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   980,   201,   202,   203,   204,
     205,   206,   207,   208,   981,   210,   982,   983,   212,   984,
     985,   986,   987,   988,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   989,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     990,   991,   992,   246,   993,   994,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,  3080,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   995,   291,   292,   293,   294,   295,   996,   297,   997,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   998,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   999,  1000,   333,   334,   335,  1001,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,  1002,   375,  1003,   377,
     378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,
     388,   389,   390,   391,   392,  1008,  1009,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,  1010,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1011,   425,   426,   427,
     428,   429,  1012,  1013,   432,   433,   434,   435,   436,   437,
    1014,   439,   440,   441,   442,   443,   444,  1015,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,  1016,   476,   477,
     478,   479,   480,  1017,  1018,   483,   484,   485,   486,   487,
    1019,   489,   490,   491,   492,   493,   494,  1020,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,  1021,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,
     547,   548,  1026,  1027,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,  1028,   565,  1029,
     567,   568,   569,   570,   571,   572,   573,   574,   575,  1030,
    1031,   578,  1032,   580,   581,   582,     0,   583,   584,   585,
    1033,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1035,     0,     0,     0,     0,  1036,     0,  2247,     0,  1037,
       0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,
     902,   903,   904,     0,     0,     0,     0,     0,     0,     0,
     905,   906,     0,   907,     0,     0,     0,     0,     0,     0,
     908,   909,     0,     0,   910,   911,   912,   913,     0,   914,
     915,     0,   916,   917,     0,     0,     0,     0,   918,     0,
       0,     0,   919,     0,     0,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   921,   922,   923,     0,   924,
     925,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   926,   927,   928,     0,   929,   930,     0,     0,
       0,   931,   932,   933,     0,     0,     0,     0,     0,     0,
       0,   934,     0,   935,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,   938,   939,     0,   940,     0,     0,     0,     0,
       0,   941,     0,   942,     0,     0,   943,     0,     0,   944,
       0,   946,     0,   947,   948,   949,     0,   950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,     0,     0,     0,   952,   953,   954,   955,
       0,     0,     0,     0,     0,     0,   956,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   957,   958,     0,
       0,     0,     0,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
       0,     0,     0,     0,     0,   962,   963,     0,   964,   965,
     966,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,   968,   969,   970,   971,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,   975,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   977,   171,
     172,   173,   174,   175,  2248,   978,   178,   179,   180,   181,
     182,   183,   184,   979,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   980,
     201,   202,   203,   204,   205,   206,   207,   208,   981,   210,
     982,   983,   212,   984,   985,   986,   987,   988,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   989,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   990,   991,   992,   246,   993,   994,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   995,   291,   292,   293,   294,
     295,   996,   297,   997,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   998,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   999,  1000,   333,
     334,   335,  1001,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,
    1007,   385,   386,   387,   388,   389,   390,   391,   392,  1008,
    1009,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,  1010,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
    1011,   425,   426,   427,   428,   429,  1012,  1013,   432,   433,
     434,   435,   436,   437,  1014,   439,   440,   441,   442,   443,
     444,  1015,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,  1016,   476,   477,   478,   479,   480,  1017,  1018,   483,
     484,   485,   486,   487,  1019,   489,   490,   491,   492,   493,
     494,  1020,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
    1021,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1022,
    1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,  1028,   565,  1029,   567,   568,   569,   570,   571,   572,
     573,   574,   575,  1030,  1031,   578,  1032,   580,   581,   582,
       0,   583,   584,   585,  1033,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
    2153,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2154,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,  2155,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,  1034,  1035,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,     0,     0,
    1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,   903,
     904,     0,     0,     0,     0,     0,     0,     0,   905,   906,
       0,   907,     0,     0,     0,     0,     0,     0,   908,   909,
       0,     0,   910,   911,   912,   913,     0,   914,   915,     0,
     916,   917,     0,     0,     0,     0,   918,     0,     0,     0,
     919,     0,     0,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   921,   922,   923,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     926,   927,   928,     0,   929,   930,     0,     0,     0,   931,
     932,   933,     0,     0,     0,     0,     0,     0,     0,   934,
       0,   935,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
     938,   939,     0,   940,     0,     0,     0,     0,     0,   941,
       0,   942,     0,     0,   943,     0,     0,   944,   945,   946,
       0,   947,   948,   949,     0,   950,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,   952,   953,   954,   955,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   958,     0,     0,     0,
       0,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,     0,     0,
       0,     0,     0,   962,   963,     0,   964,   965,   966,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,   969,   970,   971,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   972,   973,   974,     0,     0,     0,     0,
       0,   975,     0,   976,  1447,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   977,   171,   172,   173,
     174,   175,   176,   978,   178,   179,   180,   181,   182,   183,
     184,   979,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   980,   201,   202,
     203,   204,   205,   206,   207,   208,   981,   210,   982,   983,
     212,   984,   985,   986,   987,   988,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     989,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   990,   991,   992,   246,   993,   994,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   995,   291,   292,   293,   294,   295,   996,
     297,   997,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   998,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   999,  1000,   333,   334,   335,
    1001,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1002,   375,
    1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,
     386,   387,   388,   389,   390,   391,   392,  1008,  1009,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,  1010,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1011,   425,
     426,   427,   428,   429,  1012,  1013,   432,   433,   434,   435,
     436,   437,  1014,   439,   440,   441,   442,   443,   444,  1015,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  1016,
     476,   477,   478,   479,   480,  1017,  1018,   483,   484,   485,
     486,   487,  1019,   489,   490,   491,   492,   493,   494,  1020,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,  1021,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1022,  1023,  1024,
    1025,   546,   547,   548,  1026,  1027,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,  1028,
     565,  1029,   567,   568,   569,   570,   571,   572,   573,   574,
     575,  1030,  1031,   578,  1032,   580,   581,   582,     0,   583,
     584,   585,  1033,     0,     0,     0,     0,     0,     0,     0,
       0,  1034,  1035,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,
     900,   901,   902,   903,   904,     0,     0,     0,     0,     0,
       0,     0,   905,   906,     0,   907,     0,     0,     0,     0,
       0,     0,   908,   909,     0,     0,   910,   911,   912,   913,
       0,   914,   915,     0,   916,   917,     0,     0,     0,     0,
     918,     0,     0,     0,   919,     0,     0,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,   922,   923,
       0,   924,   925,     0,     0,     0,     0,     0,  2822,     0,
       0,     0,     0,     0,   926,   927,   928,     0,   929,   930,
       0,     0,     0,   931,   932,   933,     0,     0,     0,     0,
       0,     0,     0,   934,     0,   935,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   938,   939,     0,   940,     0,     0,
       0,     0,     0,   941,     0,   942,     0,     0,   943,     0,
       0,   944,   945,   946,     0,   947,   948,   949,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,   952,   953,
     954,   955,     0,     0,     0,     0,     0,     0,   956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   957,
     958,     0,     0,     0,     0,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,     0,     0,     0,     0,     0,   962,   963,     0,
     964,   965,   966,     0,     0,     0,   967,     0,     0,     0,
       0,     0,     0,     0,   968,   969,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   972,   973,   974,
       0,     0,     0,     0,     0,   975,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     977,   171,   172,   173,   174,   175,   176,   978,   178,   179,
     180,   181,   182,   183,   184,   979,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   980,   201,   202,   203,   204,   205,   206,   207,   208,
     981,   210,   982,   983,   212,   984,   985,   986,   987,   988,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   989,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   990,   991,   992,   246,
     993,   994,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   995,   291,   292,
     293,   294,   295,   996,   297,   997,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   998,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   999,
    1000,   333,   334,   335,  1001,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1002,   375,  1003,   377,   378,   379,   380,  1004,
    1005,  1006,  1007,   385,   386,   387,   388,   389,   390,   391,
     392,  1008,  1009,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,  1010,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1011,   425,   426,   427,   428,   429,  1012,  1013,
     432,   433,   434,   435,   436,   437,  1014,   439,   440,   441,
     442,   443,   444,  1015,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  1016,   476,   477,   478,   479,   480,  1017,
    1018,   483,   484,   485,   486,   487,  1019,   489,   490,   491,
     492,   493,   494,  1020,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,  1021,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,  1028,   565,  1029,   567,   568,   569,   570,
     571,   572,   573,   574,   575,  1030,  1031,   578,  1032,   580,
     581,   582,     0,   583,   584,   585,  1033,     0,     0,     0,
       0,     0,     0,     0,     0,  1034,  1035,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,
       0,     0,  1040,  1041,   900,   901,   902,   903,   904,     0,
       0,     0,     0,     0,     0,     0,   905,   906,     0,   907,
       0,     0,     0,     0,     0,     0,   908,   909,     0,     0,
     910,   911,   912,   913,     0,   914,   915,     0,   916,   917,
       0,     0,     0,     0,   918,     0,     0,     0,   919,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,   922,   923,     0,   924,   925,     0,     0,     0,
       0,     0,  2824,     0,     0,     0,     0,     0,   926,   927,
     928,     0,   929,   930,     0,     0,     0,   931,   932,   933,
       0,     0,     0,     0,     0,     0,     0,   934,     0,   935,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,   938,   939,
       0,   940,     0,     0,     0,     0,     0,   941,     0,   942,
       0,     0,   943,     0,     0,   944,   945,   946,     0,   947,
     948,   949,     0,   950,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,   952,   953,   954,   955,     0,     0,     0,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,   958,     0,     0,     0,     0,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,     0,     0,     0,     0,
       0,   962,   963,     0,   964,   965,   966,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   968,   969,
     970,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   972,   973,   974,     0,     0,     0,     0,     0,   975,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   977,   171,   172,   173,   174,   175,
     176,   978,   178,   179,   180,   181,   182,   183,   184,   979,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   980,   201,   202,   203,   204,
     205,   206,   207,   208,   981,   210,   982,   983,   212,   984,
     985,   986,   987,   988,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   989,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     990,   991,   992,   246,   993,   994,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   995,   291,   292,   293,   294,   295,   996,   297,   997,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   998,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   999,  1000,   333,   334,   335,  1001,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,  1002,   375,  1003,   377,
     378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,
     388,   389,   390,   391,   392,  1008,  1009,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,  1010,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1011,   425,   426,   427,
     428,   429,  1012,  1013,   432,   433,   434,   435,   436,   437,
    1014,   439,   440,   441,   442,   443,   444,  1015,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,  1016,   476,   477,
     478,   479,   480,  1017,  1018,   483,   484,   485,   486,   487,
    1019,   489,   490,   491,   492,   493,   494,  1020,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,  1021,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,
     547,   548,  1026,  1027,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,  1028,   565,  1029,
     567,   568,   569,   570,   571,   572,   573,   574,   575,  1030,
    1031,   578,  1032,   580,   581,   582,     0,   583,   584,   585,
    1033,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1035,     0,     0,     0,     0,  1036,     0,     0,     0,  1037,
       0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,
     902,   903,   904,     0,     0,     0,     0,     0,     0,     0,
     905,   906,     0,   907,     0,     0,     0,     0,     0,     0,
     908,   909,     0,     0,   910,   911,   912,   913,     0,   914,
     915,     0,   916,   917,     0,     0,     0,     0,   918,     0,
       0,     0,   919,     0,     0,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   921,   922,   923,     0,   924,
     925,     0,     0,     0,     0,     0,  2826,     0,     0,     0,
       0,     0,   926,   927,   928,     0,   929,   930,     0,     0,
       0,   931,   932,   933,     0,     0,     0,     0,     0,     0,
       0,   934,     0,   935,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,   938,   939,     0,   940,     0,     0,     0,     0,
       0,   941,     0,   942,     0,     0,   943,     0,     0,   944,
     945,   946,     0,   947,   948,   949,     0,   950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,     0,     0,     0,   952,   953,   954,   955,
       0,     0,     0,     0,     0,     0,   956,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   957,   958,     0,
       0,     0,     0,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
       0,     0,     0,     0,     0,   962,   963,     0,   964,   965,
     966,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,   968,   969,   970,   971,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,   975,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   977,   171,
     172,   173,   174,   175,   176,   978,   178,   179,   180,   181,
     182,   183,   184,   979,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   980,
     201,   202,   203,   204,   205,   206,   207,   208,   981,   210,
     982,   983,   212,   984,   985,   986,   987,   988,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   989,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   990,   991,   992,   246,   993,   994,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   995,   291,   292,   293,   294,
     295,   996,   297,   997,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   998,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   999,  1000,   333,
     334,   335,  1001,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,
    1007,   385,   386,   387,   388,   389,   390,   391,   392,  1008,
    1009,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,  1010,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
    1011,   425,   426,   427,   428,   429,  1012,  1013,   432,   433,
     434,   435,   436,   437,  1014,   439,   440,   441,   442,   443,
     444,  1015,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,  1016,   476,   477,   478,   479,   480,  1017,  1018,   483,
     484,   485,   486,   487,  1019,   489,   490,   491,   492,   493,
     494,  1020,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
    1021,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1022,
    1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,  1028,   565,  1029,   567,   568,   569,   570,   571,   572,
     573,   574,   575,  1030,  1031,   578,  1032,   580,   581,   582,
       0,   583,   584,   585,  1033,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,  3076,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,  3077,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,  1034,  1035,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,     0,     0,
    1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,   903,
     904,     0,     0,     0,     0,     0,     0,     0,   905,   906,
       0,   907,     0,     0,     0,     0,     0,     0,   908,   909,
       0,     0,   910,   911,   912,   913,     0,   914,   915,     0,
     916,   917,     0,     0,     0,     0,   918,     0,     0,     0,
    4681,     0,     0,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   921,   922,   923,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     926,   927,   928,     0,   929,   930,     0,     0,     0,   931,
     932,   933,     0,  3077,     0,     0,     0,     0,     0,   934,
       0,   935,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
     938,   939,     0,   940,     0,     0,     0,     0,     0,   941,
       0,   942,     0,     0,   943,     0,     0,   944,   945,   946,
       0,   947,   948,   949,     0,   950,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,   952,   953,   954,   955,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   958,     0,     0,     0,
       0,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,     0,     0,
       0,     0,     0,   962,   963,     0,   964,   965,   966,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,   969,   970,   971,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   972,   973,   974,     0,     0,     0,     0,
       0,   975,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   977,   171,   172,   173,
     174,   175,   176,   978,   178,   179,   180,   181,   182,   183,
     184,   979,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   980,   201,   202,
     203,   204,   205,   206,   207,   208,   981,   210,   982,   983,
     212,   984,   985,   986,   987,   988,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     989,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   990,   991,   992,   246,   993,   994,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   995,   291,   292,   293,   294,   295,   996,
     297,   997,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   998,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   999,  1000,   333,   334,   335,
    1001,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1002,   375,
    1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,
     386,   387,   388,   389,   390,   391,   392,  1008,  1009,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,  1010,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1011,   425,
     426,   427,   428,   429,  1012,  1013,   432,   433,   434,   435,
     436,   437,  1014,   439,   440,   441,   442,   443,   444,  1015,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  1016,
     476,   477,   478,   479,   480,  1017,  1018,   483,   484,   485,
     486,   487,  1019,   489,   490,   491,   492,   493,   494,  1020,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,  1021,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1022,  1023,  1024,
    1025,   546,   547,   548,  1026,  1027,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,  1028,
     565,  1029,   567,   568,   569,   570,   571,   572,   573,   574,
     575,  1030,  1031,   578,  1032,   580,   581,   582,     0,   583,
     584,   585,  1033,     0,     0,     0,     0,     0,     0,     0,
       0,  1034,  1035,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,
     900,   901,   902,   903,   904,     0,     0,     0,     0,     0,
       0,     0,   905,   906,     0,   907,     0,     0,     0,     0,
       0,     0,   908,   909,     0,     0,   910,   911,   912,   913,
       0,   914,   915,     0,   916,   917,     0,     0,     0,     0,
     918,     0,     0,     0,   919,     0,     0,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,   922,   923,
       0,   924,   925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   926,   927,   928,     0,   929,   930,
       0,     0,     0,   931,   932,   933,     0,     0,     0,     0,
       0,     0,     0,   934,     0,   935,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   938,   939,     0,   940,     0,     0,
       0,     0,     0,   941,     0,   942,     0,     0,   943,     0,
       0,   944,   945,   946,     0,   947,   948,   949,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,   952,   953,
     954,   955,     0,     0,     0,     0,     0,     0,   956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   957,
     958,     0,     0,     0,     0,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,     0,     0,     0,     0,     0,   962,   963,     0,
     964,   965,   966,     0,     0,     0,   967,     0,     0,     0,
       0,     0,     0,     0,   968,   969,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   972,   973,   974,
       0,     0,     0,     0,     0,   975,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     977,   171,   172,   173,   174,   175,   176,   978,   178,   179,
     180,   181,   182,   183,   184,   979,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   980,   201,   202,   203,   204,   205,   206,   207,   208,
     981,   210,   982,   983,   212,   984,   985,   986,   987,   988,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   989,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   990,   991,   992,   246,
     993,   994,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   995,   291,   292,
     293,   294,   295,   996,   297,   997,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   998,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   999,
    1000,   333,   334,   335,  1001,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1002,   375,  1003,   377,   378,   379,   380,  1004,
    1005,  1006,  1007,   385,   386,   387,   388,   389,   390,   391,
     392,  1008,  1009,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,  1010,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1011,   425,   426,   427,   428,   429,  1012,  1013,
     432,   433,   434,   435,   436,   437,  1014,   439,   440,   441,
     442,   443,   444,  1015,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  1016,   476,   477,   478,   479,   480,  1017,
    1018,   483,   484,   485,   486,   487,  1019,   489,   490,   491,
     492,   493,   494,  1020,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,  1021,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,  1028,   565,  1029,   567,   568,   569,   570,
     571,   572,   573,   574,   575,  1030,  1031,   578,  1032,   580,
     581,   582,     0,   583,   584,   585,  1033,     0,     0,     0,
       0,     0,     0,     0,     0,  1034,  1035,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,
       0,     0,  1040,  1041,   900,   901,   902,   903,   904,     0,
       0,     0,     0,     0,     0,     0,   905,   906,     0,   907,
       0,     0,     0,     0,     0,     0,   908,   909,     0,     0,
     910,   911,   912,   913,     0,   914,   915,     0,   916,   917,
       0,     0,     0,     0,   918,     0,     0,     0,   919,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,   922,   923,     0,   924,   925,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   926,   927,
     928,     0,   929,   930,     0,     0,     0,   931,   932,   933,
       0,     0,     0,     0,     0,     0,     0,   934,     0,   935,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,   938,   939,
       0,   940,     0,     0,     0,     0,     0,   941,     0,   942,
       0,     0,   943,     0,     0,   944,   945,   946,     0,   947,
     948,   949,     0,   950,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,   952,   953,   954,   955,     0,     0,     0,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,   958,     0,     0,     0,     0,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,     0,     0,     0,     0,
       0,   962,   963,     0,   964,   965,   966,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   968,   969,
     970,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   972,   973,   974,     0,     0,     0,     0,     0,   975,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   977,   171,   172,   173,   174,   175,
     176,   978,   178,   179,   180,   181,   182,   183,   184,   979,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   980,   201,   202,   203,   204,
     205,   206,   207,   208,   981,   210,   982,   983,   212,   984,
     985,   986,   987,   988,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   989,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     990,   991,   992,   246,   993,   994,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   995,   291,   292,   293,   294,   295,   996,   297,   997,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   998,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   999,  1000,   333,   334,   335,  1001,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,  1002,   375,  1003,   377,
     378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,
     388,   389,   390,   391,   392,  1008,  1009,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,  1010,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1011,   425,   426,   427,
     428,   429,  1012,  1013,   432,   433,   434,   435,   436,   437,
    1014,   439,   440,   441,   442,   443,   444,  1015,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,  1016,   476,   477,
     478,   479,   480,  1017,  1018,   483,   484,   485,   486,   487,
    1019,   489,   490,   491,   492,   493,   494,  1020,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,  1021,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,
     547,   548,  1026,  1027,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,  1028,   565,  1029,
     567,   568,   569,   570,   571,   572,   573,   574,   575,  1030,
    1031,   578,  1032,   580,   581,   582,     0,   583,   584,   585,
    1033,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1035,     0,     0,     0,     0,  1036,     0,     0,     0,  1474,
       0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,
     902,   903,   904,     0,     0,     0,     0,     0,     0,     0,
     905,   906,     0,   907,     0,     0,     0,     0,     0,     0,
     908,   909,     0,     0,   910,   911,   912,   913,     0,   914,
     915,     0,   916,   917,     0,     0,     0,     0,   918,     0,
       0,     0,   919,     0,     0,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   921,   922,   923,     0,   924,
     925,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   926,   927,   928,     0,   929,   930,     0,     0,
       0,   931,   932,   933,     0,     0,     0,     0,     0,     0,
       0,   934,     0,   935,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,   938,   939,     0,   940,     0,     0,     0,     0,
       0,   941,     0,   942,     0,     0,   943,     0,     0,   944,
     945,   946,     0,   947,   948,   949,     0,   950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,     0,     0,     0,   952,   953,   954,   955,
       0,     0,     0,     0,     0,     0,   956,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   957,   958,     0,
       0,     0,     0,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
       0,     0,     0,     0,     0,   962,   963,     0,   964,   965,
     966,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,   968,   969,   970,   971,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,   975,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   977,   171,
     172,   173,   174,   175,   176,   978,   178,   179,   180,   181,
     182,   183,   184,   979,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   980,
     201,   202,   203,   204,   205,   206,   207,   208,   981,   210,
     982,   983,   212,   984,   985,   986,   987,   988,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   989,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   990,   991,   992,   246,   993,   994,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   995,   291,   292,   293,   294,
     295,   996,   297,   997,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   998,  2024,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   999,  1000,   333,
     334,   335,  1001,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,
    1007,   385,   386,   387,   388,   389,   390,   391,   392,  1008,
    1009,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,  1010,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
    1011,   425,   426,   427,   428,   429,  1012,  1013,   432,   433,
     434,   435,   436,   437,  1014,   439,   440,   441,   442,   443,
     444,  1015,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,  1016,   476,   477,   478,   479,   480,  1017,  1018,   483,
     484,   485,   486,   487,  1019,   489,   490,   491,   492,   493,
     494,  1020,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
    1021,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1022,
    1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,  2025,   565,  1029,   567,   568,   569,   570,   571,   572,
     573,   574,   575,  1030,  1031,   578,  1032,   580,   581,   582,
       0,   583,   584,   585,  1033,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  2025,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,  1034,  1035,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,     0,     0,
    1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,   903,
     904,     0,     0,     0,     0,     0,     0,     0,   905,   906,
       0,   907,     0,     0,     0,     0,     0,     0,   908,   909,
       0,     0,   910,   911,   912,   913,     0,   914,   915,     0,
     916,   917,     0,     0,     0,     0,   918,     0,     0,     0,
     919,     0,     0,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   921,   922,   923,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     926,   927,   928,     0,   929,   930,     0,     0,     0,   931,
     932,   933,     0,     0,     0,     0,     0,     0,     0,   934,
       0,  3448,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
     938,   939,     0,   940,     0,     0,     0,     0,     0,   941,
       0,   942,     0,     0,   943,     0,     0,   944,   945,   946,
       0,   947,   948,   949,     0,   950,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,   952,   953,   954,   955,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   958,     0,     0,     0,
       0,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,     0,     0,
       0,     0,     0,   962,   963,     0,   964,   965,   966,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,   969,   970,   971,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   972,   973,   974,     0,     0,     0,     0,
       0,   975,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   977,   171,   172,   173,
     174,   175,   176,   978,   178,   179,   180,   181,   182,   183,
     184,   979,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   980,   201,   202,
     203,   204,   205,   206,   207,   208,   981,   210,   982,   983,
     212,   984,   985,   986,   987,   988,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     989,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   990,   991,   992,   246,   993,   994,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   995,   291,   292,   293,   294,   295,   996,
     297,   997,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   998,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   999,  1000,   333,   334,   335,
    1001,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1002,   375,
    1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,
     386,   387,   388,   389,   390,   391,   392,  1008,  1009,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,  1010,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1011,   425,
     426,   427,   428,   429,  1012,  1013,   432,   433,   434,   435,
     436,   437,  1014,   439,   440,   441,   442,   443,   444,  1015,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  1016,
     476,   477,   478,   479,   480,  1017,  1018,   483,   484,   485,
     486,   487,  1019,   489,   490,   491,   492,   493,   494,  1020,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,  1021,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1022,  1023,  1024,
    1025,   546,   547,   548,  1026,  1027,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,  1028,
     565,  1029,   567,   568,   569,   570,   571,   572,   573,   574,
     575,  1030,  1031,   578,  1032,   580,   581,   582,     0,   583,
     584,   585,  1033,     0,     0,     0,     0,     0,     0,     0,
       0,  1034,  1035,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,
     900,   901,   902,   903,   904,     0,     0,     0,     0,     0,
       0,     0,   905,   906,     0,   907,     0,     0,     0,     0,
       0,     0,   908,   909,     0,     0,   910,   911,   912,   913,
       0,   914,   915,     0,   916,   917,     0,     0,     0,     0,
     918,     0,     0,     0,   919,     0,     0,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,   922,   923,
       0,   924,   925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   926,   927,   928,     0,   929,   930,
       0,     0,     0,   931,   932,   933,     0,     0,     0,     0,
       0,     0,     0,   934,     0,  3470,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   938,   939,     0,   940,     0,     0,
       0,     0,     0,   941,     0,   942,     0,     0,   943,     0,
       0,   944,   945,   946,     0,   947,   948,   949,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,   952,   953,
     954,   955,     0,     0,     0,     0,     0,     0,   956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   957,
     958,     0,     0,     0,     0,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,     0,     0,     0,     0,     0,   962,   963,     0,
     964,   965,   966,     0,     0,     0,   967,     0,     0,     0,
       0,     0,     0,     0,   968,   969,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   972,   973,   974,
       0,     0,     0,     0,     0,   975,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     977,   171,   172,   173,   174,   175,   176,   978,   178,   179,
     180,   181,   182,   183,   184,   979,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   980,   201,   202,   203,   204,   205,   206,   207,   208,
     981,   210,   982,   983,   212,   984,   985,   986,   987,   988,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   989,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   990,   991,   992,   246,
     993,   994,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   995,   291,   292,
     293,   294,   295,   996,   297,   997,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   998,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   999,
    1000,   333,   334,   335,  1001,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1002,   375,  1003,   377,   378,   379,   380,  1004,
    1005,  1006,  1007,   385,   386,   387,   388,   389,   390,   391,
     392,  1008,  1009,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,  1010,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1011,   425,   426,   427,   428,   429,  1012,  1013,
     432,   433,   434,   435,   436,   437,  1014,   439,   440,   441,
     442,   443,   444,  1015,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  1016,   476,   477,   478,   479,   480,  1017,
    1018,   483,   484,   485,   486,   487,  1019,   489,   490,   491,
     492,   493,   494,  1020,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,  1021,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,  1028,   565,  1029,   567,   568,   569,   570,
     571,   572,   573,   574,   575,  1030,  1031,   578,  1032,   580,
     581,   582,     0,   583,   584,   585,  1033,     0,     0,     0,
       0,     0,     0,     0,     0,  1034,  1035,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,
       0,     0,  1040,  1041,   900,   901,   902,   903,   904,     0,
       0,     0,     0,     0,     0,     0,   905,   906,     0,   907,
       0,     0,     0,     0,     0,     0,   908,   909,     0,     0,
     910,   911,   912,   913,     0,   914,   915,     0,   916,   917,
       0,     0,     0,     0,   918,     0,     0,     0,   919,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,   922,   923,     0,   924,   925,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   926,   927,
     928,     0,   929,   930,     0,     0,     0,   931,   932,   933,
       0,     0,     0,     0,     0,     0,     0,   934,     0,   935,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,   938,   939,
    5855,   940,     0,     0,     0,     0,     0,   941,     0,   942,
       0,     0,   943,     0,     0,   944,     0,   946,     0,   947,
     948,   949,     0,   950,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,   952,   953,   954,   955,     0,     0,     0,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,   958,     0,     0,     0,     0,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,     0,     0,     0,     0,
       0,   962,   963,     0,   964,   965,   966,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   968,   969,
     970,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   972,   973,   974,     0,     0,     0,     0,     0,   975,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   977,   171,   172,   173,   174,   175,
     176,   978,   178,   179,   180,   181,   182,   183,   184,   979,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   980,   201,   202,   203,   204,
     205,   206,   207,   208,   981,   210,   982,   983,   212,   984,
     985,   986,   987,   988,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   989,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     990,   991,   992,   246,   993,   994,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   995,   291,   292,   293,   294,   295,   996,   297,   997,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   998,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   999,  1000,   333,   334,   335,  1001,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,  1002,   375,  1003,   377,
     378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,
     388,   389,   390,   391,   392,  1008,  1009,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,  1010,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1011,   425,   426,   427,
     428,   429,  1012,  1013,   432,   433,   434,   435,   436,   437,
    1014,   439,   440,   441,   442,   443,   444,  1015,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,  1016,   476,   477,
     478,   479,   480,  1017,  1018,   483,   484,   485,   486,   487,
    1019,   489,   490,   491,   492,   493,   494,  1020,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,  1021,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,
     547,   548,  1026,  1027,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,  1028,   565,  1029,
     567,   568,   569,   570,   571,   572,   573,   574,   575,  1030,
    1031,   578,  1032,   580,   581,   582,     0,   583,   584,   585,
    1033,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1035,     0,     0,     0,     0,  1036,     0,     0,     0,  1037,
       0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,
     902,   903,   904,     0,     0,     0,     0,     0,     0,     0,
     905,   906,     0,   907,     0,     0,     0,     0,     0,     0,
     908,   909,     0,     0,   910,   911,   912,   913,     0,   914,
     915,     0,   916,   917,     0,     0,     0,     0,   918,     0,
       0,     0,   919,     0,     0,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   921,   922,   923,     0,   924,
     925,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   926,   927,   928,     0,   929,   930,     0,     0,
       0,   931,   932,   933,     0,     0,     0,     0,     0,     0,
       0,   934,     0,  1440,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,   938,   939,     0,   940,     0,     0,     0,     0,
       0,   941,     0,   942,     0,     0,   943,     0,     0,   944,
       0,   946,     0,   947,   948,   949,     0,   950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,     0,     0,     0,   952,   953,   954,   955,
       0,     0,     0,     0,     0,     0,   956,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   957,   958,     0,
       0,     0,     0,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
       0,     0,     0,     0,     0,   962,   963,     0,   964,   965,
     966,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,   968,   969,   970,   971,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,   975,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   977,   171,
     172,   173,   174,   175,   176,   978,   178,   179,   180,   181,
     182,   183,   184,   979,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   980,
     201,   202,   203,   204,   205,   206,   207,   208,   981,   210,
     982,   983,   212,   984,   985,   986,   987,   988,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   989,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   990,   991,   992,   246,   993,   994,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   995,   291,   292,   293,   294,
     295,   996,   297,   997,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   998,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   999,  1000,   333,
     334,   335,  1001,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,
    1007,   385,   386,   387,   388,   389,   390,   391,   392,  1008,
    1009,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,  1010,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
    1011,   425,   426,   427,   428,   429,  1012,  1013,   432,   433,
     434,   435,   436,   437,  1014,   439,   440,   441,   442,   443,
     444,  1015,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,  1016,   476,   477,   478,   479,   480,  1017,  1018,   483,
     484,   485,   486,   487,  1019,   489,   490,   491,   492,   493,
     494,  1020,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
    1021,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1022,
    1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,  1028,   565,  1029,   567,   568,   569,   570,   571,   572,
     573,   574,   575,  1030,  1031,   578,  1032,   580,   581,   582,
       0,   583,   584,   585,  1033,     0,     0,     0,     0,     0,
       0,     0,     0,  1441,  1442,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,  1578,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,  1441,  1442,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,     0,     0,
    1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,   903,
     904,     0,     0,     0,     0,     0,     0,     0,   905,   906,
       0,   907,     0,     0,     0,     0,     0,     0,   908,   909,
       0,     0,   910,   911,   912,   913,     0,   914,   915,     0,
     916,   917,     0,     0,     0,     0,   918,     0,     0,     0,
     919,     0,     0,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   921,   922,   923,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     926,   927,   928,     0,   929,   930,     0,     0,     0,   931,
     932,   933,     0,     0,     0,     0,     0,     0,     0,   934,
       0,  1580,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
     938,   939,     0,   940,     0,     0,     0,     0,     0,   941,
       0,   942,     0,     0,   943,     0,     0,   944,     0,   946,
       0,   947,   948,   949,     0,   950,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,   952,   953,   954,   955,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   958,     0,     0,     0,
       0,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,     0,     0,
       0,     0,     0,   962,   963,     0,   964,   965,   966,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,   969,   970,   971,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   972,   973,   974,     0,     0,     0,     0,
       0,   975,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   977,   171,   172,   173,
     174,   175,   176,   978,   178,   179,   180,   181,   182,   183,
     184,   979,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   980,   201,   202,
     203,   204,   205,   206,   207,   208,   981,   210,   982,   983,
     212,   984,   985,   986,   987,   988,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     989,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   990,   991,   992,   246,   993,   994,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   995,   291,   292,   293,   294,   295,   996,
     297,   997,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   998,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   999,  1000,   333,   334,   335,
    1001,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1002,   375,
    1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,
     386,   387,   388,   389,   390,   391,   392,  1008,  1009,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,  1010,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1011,   425,
     426,   427,   428,   429,  1012,  1013,   432,   433,   434,   435,
     436,   437,  1014,   439,   440,   441,   442,   443,   444,  1015,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  1016,
     476,   477,   478,   479,   480,  1017,  1018,   483,   484,   485,
     486,   487,  1019,   489,   490,   491,   492,   493,   494,  1020,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,  1021,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1022,  1023,  1024,
    1025,   546,   547,   548,  1026,  1027,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,  1028,
     565,  1029,   567,   568,   569,   570,   571,   572,   573,   574,
     575,  1030,  1031,   578,  1032,   580,   581,   582,     0,   583,
     584,   585,  1033,     0,     0,     0,     0,     0,     0,     0,
       0,  1441,  1442,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,     0,     0,  1038,  1039,     0,     0,  1040,  1041,
     900,   901,   902,   903,   904,     0,     0,     0,     0,     0,
       0,     0,   905,   906,     0,   907,     0,     0,     0,     0,
       0,     0,   908,   909,     0,     0,   910,   911,   912,   913,
       0,   914,   915,     0,   916,   917,     0,     0,     0,     0,
     918,     0,     0,     0,   919,     0,     0,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,   922,   923,
       0,   924,   925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   926,   927,   928,     0,   929,   930,
       0,     0,     0,   931,   932,   933,     0,     0,     0,     0,
       0,     0,     0,   934,     0,   935,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   936,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   938,   939,     0,   940,     0,     0,
       0,     0,     0,   941,     0,   942,     0,     0,   943,     0,
       0,   944,     0,   946,     0,   947,   948,   949,     0,   950,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,   952,   953,
     954,   955,     0,     0,     0,     0,     0,     0,   956,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   957,
     958,     0,     0,     0,     0,     0,     0,     0,   959,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   961,     0,     0,     0,     0,     0,   962,   963,     0,
     964,   965,   966,     0,     0,     0,   967,     0,     0,     0,
       0,     0,     0,     0,   968,   969,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   972,   973,   974,
       0,     0,     0,     0,     0,   975,     0,   976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     977,   171,   172,   173,   174,   175,   176,   978,   178,   179,
     180,   181,   182,   183,   184,   979,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   980,   201,   202,   203,   204,   205,   206,   207,   208,
     981,   210,   982,   983,   212,   984,   985,   986,   987,   988,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   989,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   990,   991,   992,   246,
     993,   994,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   995,   291,   292,
     293,   294,   295,   996,   297,   997,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   998,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   999,
    1000,   333,   334,   335,  1001,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1002,   375,  1003,   377,   378,   379,   380,  1004,
    1005,  1006,  1007,   385,   386,   387,   388,   389,   390,   391,
     392,  1008,  1009,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,  1010,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1011,   425,   426,   427,   428,   429,  1012,  1013,
     432,   433,   434,   435,   436,   437,  1014,   439,   440,   441,
     442,   443,   444,  1015,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  1016,   476,   477,   478,   479,   480,  1017,
    1018,   483,   484,   485,   486,   487,  1019,   489,   490,   491,
     492,   493,   494,  1020,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,  1021,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,  1027,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,  1028,   565,  1029,   567,   568,   569,   570,
     571,   572,   573,   574,   575,  1030,  1031,   578,  1032,   580,
     581,   582,     0,   583,   584,   585,  1033,     0,     0,     0,
       0,     0,     0,     0,     0,  1034,  1035,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,     0,     0,  1038,  1039,
       0,     0,  1040,  1041,   900,   901,   902,   903,   904,     0,
       0,     0,     0,     0,     0,     0,   905,   906,     0,   907,
       0,     0,     0,     0,     0,     0,   908,   909,     0,     0,
     910,   911,   912,   913,     0,   914,   915,     0,   916,   917,
       0,     0,     0,     0,   918,     0,     0,     0,   919,     0,
       0,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   921,   922,   923,     0,   924,   925,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   926,   927,
     928,     0,   929,   930,     0,     0,     0,   931,   932,   933,
       0,     0,     0,     0,     0,     0,     0,   934,     0,  2267,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   936,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,   938,   939,
       0,   940,     0,     0,     0,     0,     0,   941,     0,   942,
       0,     0,   943,     0,     0,   944,     0,   946,     0,   947,
     948,   949,     0,   950,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,   952,   953,   954,   955,     0,     0,     0,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,   958,     0,     0,     0,     0,     0,
       0,     0,   959,     0,     0,   960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,     0,     0,     0,     0,
       0,   962,   963,     0,   964,   965,   966,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   968,   969,
     970,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   972,   973,   974,     0,     0,     0,     0,     0,   975,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   977,   171,   172,   173,   174,   175,
     176,   978,   178,   179,   180,   181,   182,   183,   184,   979,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   980,   201,   202,   203,   204,
     205,   206,   207,   208,   981,   210,   982,   983,   212,   984,
     985,   986,   987,   988,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   989,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     990,   991,   992,   246,   993,   994,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   995,   291,   292,   293,   294,   295,   996,   297,   997,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   998,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   999,  1000,   333,   334,   335,  1001,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,  1002,   375,  1003,   377,
     378,   379,   380,  1004,  1005,  1006,  1007,   385,   386,   387,
     388,   389,   390,   391,   392,  1008,  1009,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,  1010,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1011,   425,   426,   427,
     428,   429,  1012,  1013,   432,   433,   434,   435,   436,   437,
    1014,   439,   440,   441,   442,   443,   444,  1015,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,  1016,   476,   477,
     478,   479,   480,  1017,  1018,   483,   484,   485,   486,   487,
    1019,   489,   490,   491,   492,   493,   494,  1020,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,  1021,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,  1022,  1023,  1024,  1025,   546,
     547,   548,  1026,  1027,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,  1028,   565,  1029,
     567,   568,   569,   570,   571,   572,   573,   574,   575,  1030,
    1031,   578,  1032,   580,   581,   582,     0,   583,   584,   585,
    1033,     0,     0,     0,     0,     0,     0,     0,     0,  1034,
    1035,     0,     0,     0,     0,  1036,     0,     0,     0,  1037,
       0,     0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,
     902,   903,   904,     0,     0,     0,     0,     0,     0,     0,
     905,   906,     0,   907,     0,     0,     0,     0,     0,     0,
     908,   909,     0,     0,   910,   911,   912,   913,     0,   914,
     915,     0,   916,   917,     0,     0,     0,     0,   918,     0,
       0,     0,   919,     0,     0,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   921,   922,   923,     0,   924,
     925,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   926,   927,   928,     0,   929,   930,     0,     0,
       0,   931,   932,   933,     0,     0,     0,     0,     0,     0,
       0,   934,     0,  2269,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,   938,   939,     0,   940,     0,     0,     0,     0,
       0,   941,     0,   942,     0,     0,   943,     0,     0,   944,
       0,   946,     0,   947,   948,   949,     0,   950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,     0,     0,     0,   952,   953,   954,   955,
       0,     0,     0,     0,     0,     0,   956,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   957,   958,     0,
       0,     0,     0,     0,     0,     0,   959,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   961,
       0,     0,     0,     0,     0,   962,   963,     0,   964,   965,
     966,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,   968,   969,   970,   971,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,   975,     0,   976,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   977,   171,
     172,   173,   174,   175,   176,   978,   178,   179,   180,   181,
     182,   183,   184,   979,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   980,
     201,   202,   203,   204,   205,   206,   207,   208,   981,   210,
     982,   983,   212,   984,   985,   986,   987,   988,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   989,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   990,   991,   992,   246,   993,   994,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   995,   291,   292,   293,   294,
     295,   996,   297,   997,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   998,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   999,  1000,   333,
     334,   335,  1001,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1002,   375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,
    1007,   385,   386,   387,   388,   389,   390,   391,   392,  1008,
    1009,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,  1010,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
    1011,   425,   426,   427,   428,   429,  1012,  1013,   432,   433,
     434,   435,   436,   437,  1014,   439,   440,   441,   442,   443,
     444,  1015,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,  1016,   476,   477,   478,   479,   480,  1017,  1018,   483,
     484,   485,   486,   487,  1019,   489,   490,   491,   492,   493,
     494,  1020,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
    1021,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,  1022,
    1023,  1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,  1028,   565,  1029,   567,   568,   569,   570,   571,   572,
     573,   574,   575,  1030,  1031,   578,  1032,   580,   581,   582,
       0,   583,   584,   585,  1033,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   901,   902,   903,   904,     0,     0,     0,     0,
       0,     0,     0,   905,   906,     0,   907,     0,     0,     0,
       0,     0,     0,   908,   909,     0,     0,   910,   911,   912,
     913,     0,   914,   915,     0,   916,   917,     0,     0,     0,
       0,   918,     0,     0,     0,   919,     0,     0,   920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   921,   922,
     923,     0,   924,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   926,   927,   928,     0,   929,
     930,     0,     0,     0,   931,   932,   933,     0,     0,     0,
       0,     0,     0,     0,   934,     0,  1440,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,   938,   939,     0,   940,     0,
       0,     0,     0,     0,   941,     0,   942,     0,     0,   943,
       0,     0,     0,     0,   946,     0,   947,   948,   949,     0,
     950,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,   952,
     953,   954,   955,     0,     0,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     957,   958,     0,     0,     0,     0,     0,     0,     0,   959,
       0,     0,   960,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   961,     0,     0,     0,     0,     0,   962,   963,
       0,   964,   965,   966,     0,     0,     0,   967,     0,     0,
       0,     0,     0,     0,     0,   968,   969,   970,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,   975,     0,   976,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   977,   171,   172,   173,   174,   175,   176,   978,   178,
     179,   180,   181,   182,   183,   184,   979,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   980,   201,   202,   203,   204,   205,   206,   207,
     208,   981,   210,   982,   983,   212,   984,   985,   986,   987,
     988,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   989,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   990,   991,   992,
     246,   993,   994,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   995,   291,
     292,   293,   294,   295,   996,   297,   997,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   998,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     999,  1000,   333,   334,   335,  1001,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,  1002,   375,  1003,   377,   378,   379,   380,
    1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,   390,
     391,   392,  1008,  1009,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,  1010,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,  1011,   425,   426,   427,   428,   429,  1012,
    1013,   432,   433,   434,   435,   436,   437,  1014,   439,   440,
     441,   442,   443,   444,  1015,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  1016,   476,   477,   478,   479,   480,
    1017,  1018,   483,   484,   485,   486,   487,  1019,   489,   490,
     491,   492,   493,   494,  1020,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,  1021,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,  1026,
    1027,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,  1028,   565,  1029,   567,   568,   569,
     570,   571,   572,   573,   574,   575,  1030,  1031,   578,  1032,
     580,   581,   582,   901,   583,   584,   585,  1033,     0,     0,
       0,     0,     0,     0,     0,     0,  5634,  5635,     0,     0,
       0,     0,     0,     0,     0,     0,  5636,     0,     0,     0,
    1039,     0,     0,  1040,  1041,     0,     0,     0,     0,     0,
       0,     0,   918,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   923,     0,     0,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     929,   930,     0,     0,     0,  1477,  1478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     943,     0,     0,     0,     0,     0,     0,     0,   948,   949,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,     0,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,  1479,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  2301,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,  2718,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  2302,   543,   544,  2303,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  2972,   583,   584,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2719,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   678,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1117,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2719,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,   678,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,  1119,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,  1120,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,  1121,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,  1122,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1123,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,  1124,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,  1125,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,  1126,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  1127,   579,   580,   581,   582,  1117,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1118,     0,
    1128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,  1119,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,  1120,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
    1121,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
    1122,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,  1123,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,  1124,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,  1125,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,  1127,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   814,   815,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1128,     0,     0,
       0,     0,     0,     0,     0,     0,   816,     0,     0,     0,
       0,   817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   819,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   820,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
     821,     0,     0,     0,     0,   822,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,     0,     0,     0,     0,     0,     0,   823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   824,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   825,     0,     0,     0,     0,
       0,     0,     0,   826,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,   827,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   828,   829,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   830,   272,   273,
     274,   275,   831,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   832,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     833,   441,   442,   443,   834,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   835,   462,   463,   464,   465,   836,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   837,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   838,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,  1109,
     815,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   816,     0,     0,     0,     0,   817,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   819,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   820,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,   821,     0,
       0,     0,     0,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   825,     0,     0,     0,     0,     0,     0,
       0,   826,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,   827,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   828,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,  1110,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   830,   272,   273,   274,   275,
     831,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     832,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   833,   441,
     442,   443,  1111,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   835,
     462,   463,   464,   465,   836,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   837,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    1711,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   838,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     748,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,  4690,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1801,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1477,
    1478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     4,   583,
     584,   585,   586,     0,     0,     0,     0,   858,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1802,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   859,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,   860,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   861,     0,     0,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   863,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,     0,   163,
       0,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   178,   179,   180,   181,   182,   183,
     184,   185,     0,   865,     0,     0,   189,   190,   191,   192,
     193,     0,     0,   196,   197,   198,   199,     0,     0,     0,
     203,   204,   205,   206,   207,   866,   209,   210,   211,     0,
     212,     0,     0,     0,     0,     0,     0,   218,     0,   220,
       0,   222,   223,     0,   225,   226,   227,   228,   229,   230,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,     0,   258,   259,
     260,   261,     0,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,     0,     0,   277,     0,   867,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
       0,     0,     0,     0,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   300,   301,     0,   303,   304,     0,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   868,     0,
       0,     0,   418,   419,     0,   421,   422,   423,   424,     0,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   463,     0,   465,
     466,     0,   468,   469,     0,   471,   472,   473,   474,   475,
     476,     0,   478,   479,   480,   481,   482,   483,   484,     0,
     486,   487,   488,     0,   490,   491,   492,   493,     0,   495,
     496,     0,     0,   499,     0,     0,   502,   503,   504,     0,
     506,     0,   508,   509,   510,   511,     0,   512,   513,   514,
       0,   516,   517,  4283,   519,     0,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,     0,   542,   543,   544,
     545,   546,   547,   548,   549,     0,   551,   552,   553,     0,
     555,   556,   557,   558,     0,     0,   561,   562,     0,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   712,     0,   580,   581,     0,     0,   583,
       0,   585,   586,     0,     0,     0,     0,   157,   158,     0,
       0,     0,  3072,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5395,     0,     0,     0,  3073,     0,     0,
       0,     0,     0,     0,  4284,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -2527,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   713,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    39,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,  4285,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  4283,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4286,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   712,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,  3072,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3073,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    4285,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,  4337,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,  4286,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,  1664,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   748,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1666,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,  3929,  3930,     0,  1667,     0,     0,  3931,  3932,
       0,     0,     0,     0,     0,     0,     0,     0,  3933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3934,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3935,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3938,  3939,     0,  3940,     0,     0,     0,     0,     0,     0,
       0,  3941,  3942,  3943,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3944,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3945,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3946,     0,     0,     0,     0,     0,  3947,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3948,  3949,  3950,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3951,  3952,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,  5087,   190,  5088,  5089,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,  5090,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,  5091,   243,
    5092,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,  5093,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,  5094,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,  5095,  5096,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,  5097,   328,
     329,   330,   331,   332,   333,   334,   335,  5098,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,  5099,  5100,  5101,   385,   386,   387,   388,
     389,  5102,  5103,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,  5104,  5105,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,  5106,  5107,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
    5108,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,  5109,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,  5110,   540,   541,  5111,   543,   544,  5112,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
    5113,   569,   570,   571,   572,   573,   574,   575,   576,   577,
    3360,   579,   580,   581,   582,  1680,   583,   584,   585,  5114,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1681,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   748,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  1664,   583,   584,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   748,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,  1664,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   748,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,  1237,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1238,  1239,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1240,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1296,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     4,   583,   584,   585,   586,     0,     0,     0,
       0,   858,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -453,
    -453,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     859,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,   860,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,    15,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     861,     0,     0,     0,     0,     0,     0,   862,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,   863,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      38,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,     0,   163,     0,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,     0,   178,   179,
     180,   181,   182,   183,   184,   185,     0,   865,     0,     0,
     189,   190,   191,   192,   193,     0,     0,   196,   197,   198,
     199,     0,     0,     0,   203,   204,   205,   206,   207,   866,
     209,   210,   211,     0,   212,     0,     0,     0,     0,     0,
       0,   218,     0,   220,     0,   222,   223,     0,   225,   226,
     227,   228,   229,   230,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,  -453,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,     0,
       0,   277,     0,   867,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,     0,     0,     0,     0,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   300,   301,     0,
     303,   304,     0,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   868,     0,     0,     0,   418,   419,     0,   421,
     422,   423,   424,     0,   426,   427,   428,   429,   430,   431,
       0,     0,     0,     0,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   463,     0,   465,   466,     0,   468,   469,     0,   471,
     472,   473,   474,   475,   476,     0,   478,   479,   480,   481,
     482,   483,   484,     0,   486,   487,   488,     0,   490,   491,
     492,   493,     0,   495,   496,     0,     0,   499,     0,     0,
     502,   503,   504,     0,   506,     0,   508,   509,   510,   511,
       0,   512,   513,   514,     0,   516,   517,     0,   519,     0,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
       4,   542,   543,   544,   545,   546,   547,   548,   549,   858,
     551,   552,   553,     0,   555,   556,   557,   558,     0,     0,
     561,   562,     0,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,     0,     0,   580,
     581,     0,     0,   583,     0,   585,   586,  -473,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   859,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,   860,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   861,     0,
       0,     0,     0,     0,     0,   862,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,   863,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  -473,     0,    38,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
       0,   163,     0,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,     0,   178,   179,   180,   181,
     182,   183,   184,   185,     0,   865,     0,     0,   189,   190,
     191,   192,   193,     0,     0,   196,   197,   198,   199,     0,
       0,     0,   203,   204,   205,   206,   207,   866,   209,   210,
     211,     0,   212,     0,     0,     0,     0,     0,     0,   218,
       0,   220,     0,   222,   223,     0,   225,   226,   227,   228,
     229,   230,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,     0,
     258,   259,   260,   261,  -473,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,     0,     0,   277,
       0,   867,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,     0,     0,     0,     0,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   300,   301,     0,   303,   304,
       0,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     868,     0,     0,     0,   418,   419,     0,   421,   422,   423,
     424,     0,   426,   427,   428,   429,   430,   431,     0,     0,
       0,     0,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   463,
       0,   465,   466,     0,   468,   469,     0,   471,   472,   473,
     474,   475,   476,     0,   478,   479,   480,   481,   482,   483,
     484,     0,   486,   487,   488,     0,   490,   491,   492,   493,
       0,   495,   496,     0,     0,   499,     0,     0,   502,   503,
     504,     0,   506,     0,   508,   509,   510,   511,     0,   512,
     513,   514,     0,   516,   517,     0,   519,     0,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,     4,   542,
     543,   544,   545,   546,   547,   548,   549,   858,   551,   552,
     553,     0,   555,   556,   557,   558,     0,     0,   561,   562,
       0,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,     0,     0,   580,   581,     0,
       0,   583,     0,   585,   586,  -470,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   859,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,   860,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   861,     0,     0,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   863,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -470,     0,    38,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,     0,   163,
       0,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   178,   179,   180,   181,   182,   183,
     184,   185,     0,   865,     0,     0,   189,   190,   191,   192,
     193,     0,     0,   196,   197,   198,   199,     0,     0,     0,
     203,   204,   205,   206,   207,   866,   209,   210,   211,     0,
     212,     0,     0,     0,     0,     0,     0,   218,     0,   220,
       0,   222,   223,     0,   225,   226,   227,   228,   229,   230,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,     0,   258,   259,
     260,   261,  -470,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,     0,     0,   277,     0,   867,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
       0,     0,     0,     0,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   300,   301,     0,   303,   304,     0,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   868,     0,
       0,     0,   418,   419,     0,   421,   422,   423,   424,     0,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   463,     0,   465,
     466,     0,   468,   469,     0,   471,   472,   473,   474,   475,
     476,     0,   478,   479,   480,   481,   482,   483,   484,     0,
     486,   487,   488,     0,   490,   491,   492,   493,     0,   495,
     496,     0,     0,   499,     0,     0,   502,   503,   504,     0,
     506,     0,   508,   509,   510,   511,     0,   512,   513,   514,
       0,   516,   517,     0,   519,     0,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,     4,   542,   543,   544,
     545,   546,   547,   548,   549,   858,   551,   552,   553,     0,
     555,   556,   557,   558,     0,     0,   561,   562,     0,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,     0,     0,   580,   581,     0,     0,   583,
       0,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   859,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,   860,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   861,     0,     0,     0,     0,     0,
       0,   862,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,   863,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    38,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,     0,   163,     0,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,     0,   178,   179,   180,   181,   182,   183,   184,   185,
       0,   865,     0,     0,   189,   190,   191,   192,   193,     0,
       0,   196,   197,   198,   199,     0,     0,     0,   203,   204,
     205,   206,   207,   866,   209,   210,   211,     0,   212,     0,
       0,     0,     0,     0,     0,   218,     0,   220,     0,   222,
     223,     0,   225,   226,   227,   228,   229,   230,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,     0,   258,   259,   260,   261,
    1426,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,     0,     0,     0,   277,     0,   867,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,     0,     0,
       0,     0,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   300,   301,     0,   303,   304,     0,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,     0,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   868,     0,     0,     0,
     418,   419,     0,   421,   422,   423,   424,     0,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   463,     0,   465,   466,     0,
     468,   469,     0,   471,   472,   473,   474,   475,   476,     0,
     478,   479,   480,   481,   482,   483,   484,     0,   486,   487,
     488,     0,   490,   491,   492,   493,     0,   495,   496,     0,
       0,   499,     0,     0,   502,   503,   504,     0,   506,     0,
     508,   509,   510,   511,     0,   512,   513,   514,     0,   516,
     517,     0,   519,     0,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,     4,   542,   543,   544,   545,   546,
     547,   548,   549,   858,   551,   552,   553,     0,   555,   556,
     557,   558,     0,     0,   561,   562,     0,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,     0,     0,   580,   581,     0,     0,   583,     0,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   859,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   860,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   861,     0,     0,     0,     0,     0,     0,   862,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,   863,   864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    38,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,     0,   163,     0,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,     0,
     178,   179,   180,   181,   182,   183,   184,   185,     0,   865,
       0,     0,   189,   190,   191,   192,   193,     0,     0,   196,
     197,   198,   199,     0,     0,     0,   203,   204,   205,   206,
     207,   866,   209,   210,   211,     0,   212,     0,     0,     0,
       0,     0,     0,   218,     0,   220,     0,   222,   223,     0,
     225,   226,   227,   228,   229,   230,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,     0,   258,   259,   260,   261,  -475,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
       0,     0,     0,   277,     0,   867,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,     0,     0,     0,     0,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   300,
     301,     0,   303,   304,     0,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
       0,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   868,     0,     0,     0,   418,   419,
       0,   421,   422,   423,   424,     0,   426,   427,   428,   429,
     430,   431,     0,     0,     0,     0,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   463,     0,   465,   466,     0,   468,   469,
       0,   471,   472,   473,   474,   475,   476,     0,   478,   479,
     480,   481,   482,   483,   484,     0,   486,   487,   488,     0,
     490,   491,   492,   493,     0,   495,   496,     0,     0,   499,
       0,     0,   502,   503,   504,     0,   506,     0,   508,   509,
     510,   511,     0,   512,   513,   514,     0,   516,   517,     0,
     519,     0,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,     4,   542,   543,   544,   545,   546,   547,   548,
     549,   858,   551,   552,   553,     0,   555,   556,   557,   558,
       0,     0,   561,   562,     0,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,     0,
       0,   580,   581,     0,     0,   583,     0,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     859,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,   860,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,    15,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     861,     0,     0,     0,     0,     0,     0,   862,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,   863,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      38,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,     0,   163,     0,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,     0,   178,   179,
     180,   181,   182,   183,   184,   185,     0,   865,     0,     0,
     189,   190,   191,   192,   193,     0,     0,   196,   197,   198,
     199,     0,     0,     0,   203,   204,   205,   206,   207,   866,
     209,   210,   211,     0,   212,     0,     0,     0,     0,     0,
       0,   218,     0,   220,     0,   222,   223,     0,   225,   226,
     227,   228,   229,   230,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,  3325,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,     0,
       0,   277,     0,   867,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,     0,     0,     0,     0,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   300,   301,     0,
     303,   304,     0,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   868,     0,     0,     0,   418,   419,     0,   421,
     422,   423,   424,     0,   426,   427,   428,   429,   430,   431,
       0,     0,     0,     0,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   463,     0,   465,   466,     0,   468,   469,     0,   471,
     472,   473,   474,   475,   476,     0,   478,   479,   480,   481,
     482,   483,   484,     0,   486,   487,   488,     0,   490,   491,
     492,   493,     0,   495,   496,     0,     0,   499,     0,     0,
     502,   503,   504,     0,   506,     0,   508,   509,   510,   511,
       0,   512,   513,   514,     0,   516,   517,     0,   519,     0,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
       4,   542,   543,   544,   545,   546,   547,   548,   549,   858,
     551,   552,   553,     0,   555,   556,   557,   558,     0,     0,
     561,   562,     0,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,     0,     0,   580,
     581,     0,     0,   583,     0,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   859,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,   860,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   861,     0,
       0,     0,     0,     0,     0,   862,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,   863,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    38,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
       0,   163,     0,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,     0,   178,   179,   180,   181,
     182,   183,   184,   185,     0,   865,     0,     0,   189,   190,
     191,   192,   193,     0,     0,   196,   197,   198,   199,     0,
       0,     0,   203,   204,   205,   206,   207,   866,   209,   210,
     211,     0,   212,     0,     0,     0,     0,     0,     0,   218,
       0,   220,     0,   222,   223,     0,   225,   226,   227,   228,
     229,   230,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,     0,
     258,   259,   260,   261,  3378,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,     0,     0,   277,
       0,   867,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,     0,     0,     0,     0,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   300,   301,     0,   303,   304,
       0,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     868,     0,     0,     0,   418,   419,     0,   421,   422,   423,
     424,     0,   426,   427,   428,   429,   430,   431,     0,     0,
       0,     0,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   463,
       0,   465,   466,     0,   468,   469,     0,   471,   472,   473,
     474,   475,   476,     0,   478,   479,   480,   481,   482,   483,
     484,     0,   486,   487,   488,     0,   490,   491,   492,   493,
       0,   495,   496,     0,     0,   499,     0,     0,   502,   503,
     504,     0,   506,     0,   508,   509,   510,   511,     0,   512,
     513,   514,     0,   516,   517,     0,   519,     0,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,     4,   542,
     543,   544,   545,   546,   547,   548,   549,   858,   551,   552,
     553,     0,   555,   556,   557,   558,     0,     0,   561,   562,
       0,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,     0,     0,   580,   581,     0,
       0,   583,     0,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   859,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,   860,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   861,     0,     0,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   863,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,     0,   163,
       0,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   178,   179,   180,   181,   182,   183,
     184,   185,     0,   865,     0,     0,   189,   190,   191,   192,
     193,     0,     0,   196,   197,   198,   199,     0,     0,     0,
     203,   204,   205,   206,   207,   866,   209,   210,   211,     0,
     212,     0,     0,     0,     0,     0,     0,   218,     0,   220,
       0,   222,   223,     0,   225,   226,   227,   228,   229,   230,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,     0,   258,   259,
     260,   261,  3632,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,     0,     0,   277,     0,   867,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
       0,     0,     0,     0,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   300,   301,     0,   303,   304,     0,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   868,     0,
       0,     0,   418,   419,     0,   421,   422,   423,   424,     0,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   463,     0,   465,
     466,     0,   468,   469,     0,   471,   472,   473,   474,   475,
     476,     0,   478,   479,   480,   481,   482,   483,   484,     0,
     486,   487,   488,     0,   490,   491,   492,   493,     0,   495,
     496,     0,     0,   499,     0,     0,   502,   503,   504,     0,
     506,     0,   508,   509,   510,   511,     0,   512,   513,   514,
       0,   516,   517,     0,   519,     0,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,     4,   542,   543,   544,
     545,   546,   547,   548,   549,   858,   551,   552,   553,     0,
     555,   556,   557,   558,     0,     0,   561,   562,     0,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,     0,     0,   580,   581,     0,     0,   583,
       0,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   859,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,   860,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   861,     0,     0,     0,     0,     0,
       0,   862,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,   863,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    38,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,     0,   163,     0,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,     0,   178,   179,   180,   181,   182,   183,   184,   185,
       0,   865,     0,     0,   189,   190,   191,   192,   193,     0,
       0,   196,   197,   198,   199,     0,     0,     0,   203,   204,
     205,   206,   207,   866,   209,   210,   211,     0,   212,     0,
       0,     0,     0,     0,     0,   218,     0,   220,     0,   222,
     223,     0,   225,   226,   227,   228,   229,   230,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,     0,   258,   259,   260,   261,
    3636,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,     0,     0,     0,   277,     0,   867,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,     0,     0,
       0,     0,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   300,   301,     0,   303,   304,     0,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,     0,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   868,     0,     0,     0,
     418,   419,     0,   421,   422,   423,   424,     0,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   463,     0,   465,   466,     0,
     468,   469,     0,   471,   472,   473,   474,   475,   476,     0,
     478,   479,   480,   481,   482,   483,   484,     0,   486,   487,
     488,     0,   490,   491,   492,   493,     0,   495,   496,     0,
       0,   499,     0,     0,   502,   503,   504,     0,   506,     0,
     508,   509,   510,   511,     0,   512,   513,   514,     0,   516,
     517,     0,   519,     0,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,     4,   542,   543,   544,   545,   546,
     547,   548,   549,   858,   551,   552,   553,     0,   555,   556,
     557,   558,     0,     0,   561,   562,     0,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,     0,     0,   580,   581,     0,     0,   583,     0,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   859,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,   860,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,    15,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   861,     0,     0,     0,     0,     0,     0,   862,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,   863,   864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    38,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,     0,   163,     0,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,     0,
     178,   179,   180,   181,   182,   183,   184,   185,     0,   865,
       0,     0,   189,   190,   191,   192,   193,     0,     0,   196,
     197,   198,   199,     0,     0,     0,   203,   204,   205,   206,
     207,   866,   209,   210,   211,     0,   212,     0,     0,     0,
       0,     0,     0,   218,     0,   220,     0,   222,   223,     0,
     225,   226,   227,   228,   229,   230,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,     0,   258,   259,   260,   261,  4004,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
       0,     0,     0,   277,     0,   867,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,     0,     0,     0,     0,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   300,
     301,     0,   303,   304,     0,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
       0,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   868,     0,     0,     0,   418,   419,
       0,   421,   422,   423,   424,     0,   426,   427,   428,   429,
     430,   431,     0,     0,     0,     0,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   463,     0,   465,   466,     0,   468,   469,
       0,   471,   472,   473,   474,   475,   476,     0,   478,   479,
     480,   481,   482,   483,   484,     0,   486,   487,   488,     0,
     490,   491,   492,   493,     0,   495,   496,     0,     0,   499,
       0,     0,   502,   503,   504,     0,   506,     0,   508,   509,
     510,   511,     0,   512,   513,   514,     0,   516,   517,     0,
     519,     0,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,     4,   542,   543,   544,   545,   546,   547,   548,
     549,   858,   551,   552,   553,     0,   555,   556,   557,   558,
       0,     0,   561,   562,     0,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,     0,
       0,   580,   581,     0,     0,   583,     0,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     859,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,   860,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,    15,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     861,     0,     0,     0,     0,     0,     0,   862,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,   863,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      38,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,     0,   163,     0,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,     0,   178,   179,
     180,   181,   182,   183,   184,   185,     0,   865,     0,     0,
     189,   190,   191,   192,   193,     0,     0,   196,   197,   198,
     199,     0,     0,     0,   203,   204,   205,   206,   207,   866,
     209,   210,   211,     0,   212,     0,     0,     0,     0,     0,
       0,   218,     0,   220,     0,   222,   223,     0,   225,   226,
     227,   228,   229,   230,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,  4955,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,     0,
       0,   277,     0,   867,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,     0,     0,     0,     0,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   300,   301,     0,
     303,   304,     0,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   868,     0,     0,     0,   418,   419,     0,   421,
     422,   423,   424,     0,   426,   427,   428,   429,   430,   431,
       0,     0,     0,     0,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   463,     0,   465,   466,     0,   468,   469,     0,   471,
     472,   473,   474,   475,   476,     0,   478,   479,   480,   481,
     482,   483,   484,     0,   486,   487,   488,     0,   490,   491,
     492,   493,     0,   495,   496,     0,     0,   499,     0,     0,
     502,   503,   504,     0,   506,     0,   508,   509,   510,   511,
       0,   512,   513,   514,     0,   516,   517,     0,   519,     0,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
       4,   542,   543,   544,   545,   546,   547,   548,   549,   858,
     551,   552,   553,     0,   555,   556,   557,   558,     0,     0,
     561,   562,     0,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,     0,     0,   580,
     581,     0,     0,   583,     0,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   859,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,   860,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   861,     0,
       0,     0,     0,     0,     0,   862,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,   863,   864,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    38,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
       0,   163,     0,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,     0,   178,   179,   180,   181,
     182,   183,   184,   185,     0,   865,     0,     0,   189,   190,
     191,   192,   193,     0,     0,   196,   197,   198,   199,     0,
       0,     0,   203,   204,   205,   206,   207,   866,   209,   210,
     211,     0,   212,     0,     0,     0,     0,     0,     0,   218,
       0,   220,     0,   222,   223,     0,   225,   226,   227,   228,
     229,   230,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,     0,
     258,   259,   260,   261,  -457,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,     0,     0,   277,
       0,   867,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,     0,     0,     0,     0,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   300,   301,     0,   303,   304,
       0,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     868,     0,     0,     0,   418,   419,     0,   421,   422,   423,
     424,     0,   426,   427,   428,   429,   430,   431,     0,     0,
       0,     0,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   463,
       0,   465,   466,     0,   468,   469,     0,   471,   472,   473,
     474,   475,   476,     0,   478,   479,   480,   481,   482,   483,
     484,     0,   486,   487,   488,     0,   490,   491,   492,   493,
       0,   495,   496,     0,     0,   499,     0,     0,   502,   503,
     504,     0,   506,     0,   508,   509,   510,   511,     0,   512,
     513,   514,     0,   516,   517,     0,   519,     0,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,     4,   542,
     543,   544,   545,   546,   547,   548,   549,   858,   551,   552,
     553,     0,   555,   556,   557,   558,     0,     0,   561,   562,
       0,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,     0,     0,   580,   581,     0,
       0,   583,     0,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   859,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,   860,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   861,     0,     0,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   863,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,     0,   163,
       0,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   178,   179,   180,   181,   182,   183,
     184,   185,     0,   865,     0,     0,   189,   190,   191,   192,
     193,     0,     0,   196,   197,   198,   199,     0,     0,     0,
     203,   204,   205,   206,   207,   866,   209,   210,   211,     0,
     212,     0,     0,     0,     0,     0,     0,   218,     0,   220,
       0,   222,   223,     0,   225,   226,   227,   228,   229,   230,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,     0,   258,   259,
     260,   261,     0,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,     0,     0,   277,     0,   867,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
       0,     0,     0,     0,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   300,   301,     0,   303,   304,     0,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   868,     0,
       0,     0,   418,   419,     0,   421,   422,   423,   424,     0,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   463,     0,   465,
     466,     0,   468,   469,     0,   471,   472,   473,   474,   475,
     476,     0,   478,   479,   480,   481,   482,   483,   484,     0,
     486,   487,   488,     0,   490,   491,   492,   493,     0,   495,
     496,     0,     0,   499,     0,     0,   502,   503,   504,     0,
     506,     0,   508,   509,   510,   511,     0,   512,   513,   514,
       0,   516,   517,     0,   519,     0,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,     4,   542,   543,   544,
     545,   546,   547,   548,   549,   858,   551,   552,   553,     0,
     555,   556,   557,   558,     0,     0,   561,   562,     0,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,     0,     0,   580,   581,     0,     0,   583,
       0,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   859,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,   860,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   861,     0,     0,     0,     0,     0,
       0,   862,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,     0,     0,   863,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    38,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,     0,   163,     0,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,     0,   178,   179,   180,   181,   182,   183,   184,   185,
       0,   865,     0,     0,   189,   190,   191,   192,   193,     0,
       0,   196,   197,   198,   199,     0,     0,     0,   203,   204,
     205,   206,   207,   866,   209,   210,   211,     0,   212,     0,
       0,     0,     0,     0,     0,   218,     0,   220,     0,   222,
     223,     0,   225,   226,   227,   228,   229,   230,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,     0,   258,   259,   260,   261,
       0,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,     0,     0,     0,   277,     0,   867,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,     0,     0,
       0,     0,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   300,   301,     0,   303,   304,     0,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,     0,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   868,     0,     0,     0,
     418,   419,     0,   421,   422,   423,   424,     0,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   463,     0,   465,   466,     0,
     468,   469,     0,   471,   472,   473,   474,   475,   476,     0,
     478,   479,   480,   481,   482,   483,   484,     0,   486,   487,
     488,     0,   490,   491,   492,   493,     0,   495,   496,     0,
       0,   499,     0,     0,   502,   503,   504,     0,   506,     0,
     508,   509,   510,   511,     0,   512,   513,   514,     4,   516,
     517,     0,   519,     0,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,     0,   542,   543,   544,   545,   546,
     547,   548,   549,     0,   551,   552,   553,     0,   555,   556,
     557,   558,     0,     0,   561,  1646,     0,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,     0,    13,   580,   581,     0,     0,   583,     0,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,   863,   864,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,     0,   163,
       0,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   178,   179,   180,   181,   182,   183,
     184,   185,     0,   865,     0,     0,   189,   190,   191,   192,
     193,     0,     0,   196,   197,   198,   199,     0,     0,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,     0,
     212,     0,     0,     0,     0,     0,     0,   218,     0,   220,
       0,   222,   223,     0,   225,   226,   227,   228,   229,   230,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,     0,   258,   259,
     260,   261,     0,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,     0,     0,     0,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
       0,     0,     0,     0,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   300,   301,     0,   303,   304,     0,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,     0,     0,
       0,     0,   418,   419,     0,   421,   422,   423,   424,     0,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   463,     0,   465,
     466,     0,   468,   469,     0,   471,   472,   473,   474,   475,
     476,     0,   478,   479,   480,   481,   482,   483,   484,     0,
     486,   487,   488,     0,   490,   491,   492,   493,     0,   495,
     496,     0,     0,   499,     0,     0,   502,   503,   504,     0,
     506,     0,   508,   509,   510,   511,     0,   512,   513,   514,
       0,   516,   517,     0,   519,     0,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,     0,   542,   543,   544,
     545,   546,   547,   548,   549,     0,   551,   552,   553,     0,
     555,   556,   557,   558,  3356,  3357,   561,   562,     0,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,     0,     0,   580,   581,     0,     0,   583,
       0,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,  3358,  3359,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,  3360,   579,   580,   581,   582,     0,   583,   584,   585,
     586,  1296,   817,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   748,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,  1296,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   748,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   817,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  2077,     0,     0,
       0,  4774,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3753,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3754,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3755,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3756,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  2077,     0,     0,     0,  5751,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3753,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3754,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3755,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3756,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,  2077,     0,     0,     0,  5819,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2078,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3753,
       0,     0,     0,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3754,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3755,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3756,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,  2984,   583,   584,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,  1657,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,  1657,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
    2361,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  3065,   583,   584,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,  4842,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,  4850,   583,   584,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,  2998,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,     0,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  2999,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,  2220,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5948,     0,     0,
       0,     0,     0,  2221,  5949,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1678,
     748,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2235,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3153,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,  2220,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  1477,  1478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2221,  5949,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1802,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    39,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,  2220,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,  1477,  1478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3551,     0,     0,     0,     0,     0,
    2221,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,  1479,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1647,     0,     0,     0,     0,  1480,     0,     0,
       0,     0,     0,     0,  1040,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,  1477,  1478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   678,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,  1479,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1040,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,  2220,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2221,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,  2719,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     678,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,  4824,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4425,     0,     0,
       0,     0,     0,     0,  4286,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4286,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   678,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     726,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   727,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   728,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   678,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4286,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  2740,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2278,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   661,   662,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5227,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5228,   638,  5229,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1414,   583,
     584,   585,   586,  1415,     0,     0,     0,     0,     0,     0,
       0,     0,  2741,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,  1416,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1346,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,  2694,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,  1477,
    1478,     0,     0,     0,     0,     0,     0,     0,     0,  3915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,  4341,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  1477,  1478,     0,
       0,     0,     0,     0,     0,     0,     0,  4647,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,  5156,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,  5274,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1666,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,  1477,
    1478,     0,  1667,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2395,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2396,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2397,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,  2398,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,  1477,  1478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2395,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   951,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3898,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2397,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,  2398,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  1477,  1478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2395,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   951,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2397,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,  2398,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   637,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   638,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   638,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,  1477,  1478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1523,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4221,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5546,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   673,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  1477,  1478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,  1823,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2372,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,  2485,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,  2486,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,  3360,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,     0,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,     0,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,  2999,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,     0,   163,     0,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,     0,
     178,   179,   180,   181,   182,   183,   184,   185,     0,     0,
       0,     0,   189,   190,   191,   192,   193,     0,     0,   196,
     197,   198,   199,     0,     0,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,     0,   212,     0,     0,     0,
       0,     0,     0,   218,     0,   220,     0,   222,   223,     0,
     225,   226,   227,   228,   229,   230,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,     0,   258,   259,   260,   261,     0,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
       0,     0,     0,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,     0,     0,     0,     0,     0,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   300,
     301,     0,   303,   304,     0,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
       0,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   157,   158,     0,     0,   418,   419,
       0,   421,   422,   423,   424,     0,   426,   427,   428,   429,
     430,   431,     0,     0,     0,     0,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   463,     0,   465,   466,     0,   468,   469,
       0,   471,   472,   473,   474,   475,   476,     0,   478,   479,
     480,   481,   482,   483,   484,     0,   486,   487,   488,     0,
     490,   491,   492,   493,     0,   495,   496,     0,     0,   499,
       0,     0,   502,   503,   504,     0,   506,     0,   508,   509,
     510,   511,     0,   512,   513,   514,     0,   516,   517,     0,
     519,     0,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,     0,   542,   543,   544,   545,   546,   547,   548,
     549,     0,   551,   552,   553,     0,   555,   556,   557,   558,
       0,     0,   561,   562,     0,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,     0,
       0,   580,   581,     0,     0,   583,     0,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1423,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,     0,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
       0,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,     0,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   157,   158,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     0,   542,   543,   544,   545,   546,   547,   548,   549,
       0,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,     0,   163,     0,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,     0,   178,   179,
     180,   181,   182,   183,   184,   185,     0,     0,     0,     0,
     189,   190,   191,   192,   193,     0,     0,   196,   197,   198,
     199,     0,     0,     0,   203,   204,   205,   206,   207,     0,
     209,   210,   211,     0,   212,     0,     0,     0,     0,     0,
       0,   218,     0,   220,     0,   222,   223,     0,   225,   226,
     227,   228,   229,   230,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,     0,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,     0,     0,
       0,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,     0,     0,     0,     0,     0,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   300,   301,     0,
     303,   304,     0,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,     0,     0,     0,     0,   418,   419,     0,   421,
     422,   423,   424,     0,   426,   427,   428,   429,   430,   431,
       0,     0,     0,     0,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   463,     0,   465,   466,     0,   468,   469,     0,   471,
     472,   473,   474,   475,   476,     0,   478,   479,   480,   481,
     482,   483,   484,     0,   486,   487,   488,     0,   490,   491,
     492,   493,     0,   495,   496,     0,     0,   499,     0,     0,
     502,   503,   504,     0,   506,     0,   508,   509,   510,   511,
       0,   512,   513,   514,     0,   516,   517,     0,   519,     0,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
       0,   542,   543,   544,   545,   546,   547,   548,   549,     0,
     551,   552,   553,     0,   555,   556,   557,   558,     0,     0,
     561,   562,     0,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,     0,     0,   580,
     581,     0,     0,   583,     0,   585,   586
};

static const yytype_int16 yycheck[] =
{
       3,    41,   119,   148,  1497,   144,   653,  1626,   652,   653,
     858,  1275,   860,   861,   862,  1274,  1645,  1275,  1459,   867,
    1409,   146,    25,   869,   632,  1159,   737,    30,    21,  1638,
     156,    34,  1177,   646,    37,  1351,  1716,  1586,   646,  1967,
      42,  1716,  1975,  1177,   652,    48,     0,  2449,    51,  1903,
    1901,    54,  1466,  1573,   711,    58,    49,  1288,   715,   716,
    1874,  2908,    55,  1877,  1876,  2684,   652,  1685,   672,  2760,
    2761,  3132,  1687,  3280,  1475,   652,  1701,  1702,  3171,  3245,
    1878,   652,  2750,   652,  1122,  1123,  1124,  3245,  2558,   938,
    3173,   807,  3503,  1131,  3324,  2774,   691,  2776,  1394,   694,
     743,  3707,  3814,  3026,   621,    31,  1100,   110,  2447,  3522,
     621,  2514,  1289,  3184,  1363,  1870,  2047,  1289,  1945,  1612,
    1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,
    1623,  1624,   900,   650,   137,   138,  1706,  3195,   141,   650,
     632,   144,   145,  4308,  1638,  3120,  3183,  1234,  3504,  1909,
    2777,  3245,  1592,  3504,   646,  1801,  1726,  2960,  2961,   156,
    2470,  3251,  3741,  3221,  3222,  1605,  1606,  2682,  1608,  1609,
     156,   156,  3804,   156,  1799,  3900,   785,  4197,  4431,  3804,
    3804,  1751,  1752,    11,  4544,     6,     9,    10,  3397,  4916,
    2682,    11,  1801,     6,   743,    12,  2613,  2008,   138,  2010,
    2011,   141,    93,     6,  4440,  1921,  1835,    50,  3805,  3045,
    3807,    17,    26,  3810,    95,     6,  4132,    28,  3054,    11,
      74,    10,  2613,  2605,    17,  3624,    32,  3824,    34,  3287,
    3288,    26,     9,    10,    11,  1423,     9,    10,    86,    32,
    1327,    34,    42,    61,  4708,   105,  2878,    51,    65,  1965,
     858,  2672,   860,   861,   862,   177,  1102,   105,    81,   867,
      80,   869,    80,  3702,  4413,  2682,  1034,  1035,  1036,  3294,
      93,    91,  1156,    91,    97,     9,    10,  1045,   194,  3495,
     153,    61,    63,  3551,  4526,   118,    61,    61,    93,    57,
     128,  2682,   125,  3398,  1178,    27,   263,   177,   263,   177,
    3697,   177,   235,   126,    81,  1934,   110,  1801,    81,   132,
    3939,  3940,    44,   263,  3943,  3728,    32,   117,    80,  2944,
      97,  3950,    86,    17,    97,   105,   177,  3956,   128,    91,
     105,   105,    17,   115,    80,   135,   263,    61,    32,   120,
      34,   298,   177,   166,  3267,    91,    61,    81,    57,   126,
     105,   293,   114,   126,   187,   132,    63,   149,   181,   132,
     183,   374,   146,    97,   164,    83,   858,   100,   860,   861,
     862,  1365,   182,   298,   938,   867,    69,   869,     9,    10,
      89,   105,  4165,  2442,   244,  4110,    86,   151,  4769,   166,
     105,    80,   126,   166,  3026,  2734,   105,  1391,   132,   105,
      12,  4495,    91,   121,   181,  2594,   183,  5116,    58,   220,
    3395,  3396,   353,   120,    69,   207,   218,   177,  3403,   983,
    3405,   235,  3407,   155,   272,   225,   193,   105,  3243,  2058,
     235,  4651,   166,  3225,   373,  3528,   217,   146,  3221,  3222,
     268,  3838,    32,  4537,    34,   235,   361,  3397,    57,   230,
      81,    86,  3402,    65,  4166,   217,   256,   194,  3408,  4553,
      17,  3051,  4556,  4557,   433,   174,    97,  1179,     6,   162,
    4685,  4686,   207,   173,   124,    32,  1040,    34,   153,   302,
      89,   606,   621,   608,   609,   610,   611,   180,   613,   614,
     567,   230,   617,   618,  1102,   126,   105,   290,   291,   280,
      81,   132,   722,   298,  3287,  3288,   287,   162,   298,   149,
     217,   650,  2323,  2324,  2325,  2326,    97,   298,   324,   207,
      76,    11,   105,   230,    15,   302,   559,   666,    80,   302,
     376,   324,    14,   168,   169,   166,   342,   146,   173,    91,
     230,   183,   348,   682,   764,   126,   632,  5508,  4784,   342,
     181,   132,   183,     5,  1850,   348,   149,  4538,   276,   209,
     646,   114,   351,   230,   273,   174,   652,    28,   374,   527,
    5531,    80,   272,   280,   207,   235,   235,  1836,  1173,    31,
     287,   374,    91,   631,   263,   166,   138,   123,  1197,  4949,
     298,   298,  4200,  3800,   283,   140,   149,   287,   600,  5063,
    1257,   604,  1259,  1260,  1261,  1262,  1263,   608,   324,   391,
    1102,   298,   615,  3536,   207,  1464,  3210,   620,   621,   207,
    1658,    73,  3712,  1881,  4300,  2558,   765,   708,   248,   138,
     324,  1480,   348,   602,   125,  3267,  5890,   272,  1902,   708,
     643,  1679,  1206,  3736,  1360,  1876,   137,   650,   342,   652,
      93,   230,   514,   386,   348,   139,  3739,   283,   114,   146,
    1654,  5915,   739,   666,   273,   201,   261,   806,     6,   230,
     374,   302,  1921,  1441,  1442,   678,   640,   168,  1672,   682,
     683,   226,   684,   261,   283,   810,   811,   174,   769,   691,
    2488,   480,   694,   696,  4936,   697,   230,   730,   283,   291,
     769,   293,   641,  2762,   171,  1699,   235,   710,   287,   235,
     298,  2329,   713,   490,   655,  2330,  1965,   169,   644,  1332,
     204,   769,   213,   356,  1332,  3934,   287,  3936,  1337,   283,
    4779,  4537,  1909,  1982,  1879,  3944,   694,  1909,  3832,   295,
     743,  2553,   745,   478,   296,  1879,   235,  4553,   235,   762,
    4556,  4557,   721,   287,   712,   601,   208,  1366,   348,   220,
     400,  3970,   765,  3610,   261,  2314,  1315,   324,  4836,    33,
     773,   235,   858,   234,   860,   861,   862,  4356,    61,  3294,
    3989,   867,   785,   869,   787,   342,   268,   296,   626,  1638,
     478,   348,   795,   283,   797,   762,   799,   800,   801,   802,
     803,   804,  3294,   806,  5024,   770,  4205,   764,  3225,  5518,
    4209,   298,   762,   630,   747,  2255,  2256,   374,  2258,  2259,
     762,  1705,   555,   361,  1708,   865,   261,  2228,  2229,   514,
    1439,   757,  3890,  5048,  3225,   762,  1720,   762,  2252,  1723,
    1332,  3223,   764,  1727,  1361,  1394,   762,   762,  1452,  2419,
     617,  2039,   655,   495,   857,   298,   859,   532,  2046,  1627,
     800,   801,   802,   866,   655,   868,  3891,  4306,  3289,   601,
    1754,  1755,  1756,   764,  1961,  4504,  4792,  3294,  2594,   805,
     883,  4664,   808,   764,   764,   728,   764,   619,   764,   762,
    3995,   680,  4160,   753,  4988,  4111,   664,  2613,  4527,   702,
    1464,   633,  4531,  3294,  3536,   753,  5055,  2718,   762,   715,
    4539,  5147,   766,   764,  4327,  1479,  1480,  1521,  3543,   747,
    5647,    49,   715,   655,   747,   748,   749,   747,  4653,   764,
     763,  4847,   727,   747,  1538,   752,  5317,  1541,  2693,  1543,
     763,   762,   747,  1547,  1548,  1549,  3931,   739,   768,   762,
     768,  1555,  1801,   764,   764,   747,  2672,   747,    49,   207,
     742,   725,   764,   769,   697,  4946,  2682,   767,   752,   753,
     747,   748,   749,   753,   747,   748,   749,  5219,   753,   753,
    3930,   762,  3932,  1122,  3934,  1124,  3936,   764,  3803,  1128,
    1129,  3976,  3977,  3978,  3944,  3787,  3981,   764,   753,   715,
     338,  3951,  5963,  3953,   764,  3344,   768,  3196,   492,  3994,
    3960,  4619,  1655,   747,   748,   749,  1102,   717,   630,  1158,
    3970,   715,   768,   762,  3974,   762,   493,   677,  4425,   753,
    3980,  2025,  3622,  3623,  1691,  5395,  1039,  1749,   753,  3989,
    3990,  3991,  3992,  3993,   382,   763,   384,   753,   690,   602,
     645,  4967,  1272,   857,   763,   762,   764,   763,   764,   752,
     753,   754,   755,   756,   757,   769,   261,  2696,  1632,  5046,
    5285,  5286,   762,   201,  1638,   753,  5329,   764,  2707,   768,
     344,  1724,   717,   762,  4760,   763,   764,   747,   747,   372,
    2904,   374,  5008,  5009,   555,   762,  5145,  1100,  1101,   754,
     755,   756,   757,  1106,  1950,  4765,  1655,  3890,   728,   769,
     769,   689,   568,  1116,  3708,  5183,   747,   748,   749,  1122,
     358,  1124,  5216,   708,  5218,  1128,  1129,   171,   411,  3057,
    3762,  3763,   130,   261,  3766,  3767,   767,   214,   764,   477,
    3772,  3773,   270,   769,   370,  1662,   739,  1273,  4561,  5065,
     728,  1662,  1716,   605,   763,  1158,   439,  5621,   715,  5623,
    5624,  2972,  4245,  1280,   763,   764,   747,   748,   749,  3801,
     753,  1173,   663,  1175,   306,  1724,   261,   769,  2727,   130,
     763,   764,  4988,   762,   312,    14,   287,   137,   526,  1192,
    1901,  5492,   689,  1196,  1197,  3939,  3940,   298,  1793,  3943,
    1857,   762,  1810,  1860,   688,  1921,  3950,  1864,  1211,  1818,
     764,   328,  4625,  1253,  4627,   769,   768,   261,   747,  1222,
     346,   747,  1361,   720,  1810,  1763,  1821,  4859,   762,   493,
      99,  1234,  4322,  1810,  4859,  4859,   574,  1801,  4817,  1810,
     769,  1810,  3040,   769,   299,   300,  1332,   186,  5128,  1965,
    4308,  1254,  4323,  5537,   689,   636,  4422,  5277,   747,   768,
     747,  4344,   358,  4860,  4422,   752,   753,    93,    93,  1913,
    2415,  1274,   263,  4248,  4673,  4674,  1273,  5741,  5742,  2128,
     769,  2415,   419,   747,  5748,    10,   457,  1273,  1273,  1292,
    1273,   574,   110,   111,   422,  2333,    69,  1101,    32,  2337,
     263,  1850,  1106,  1306,   263,   769,  2799,  2953,  2572,   114,
    5035,  4667,  1315,  1316,  2308,  2309,  4667,    32,  1810,   447,
    1323,  1324,  2360,  4854,  1327,  3179,   664,   610,  4422,  1255,
    1256,  3182,  1849,   358,  1337,  2512,  3646,   351,   341,  4262,
    2512,  1344,  1950,  1346,  2953,  2594,   296,   685,  3028,  4272,
    4273,  3031,  3032,  4200,   632,   472,  3031,  3032,  1361,  4756,
    5159,  5825,  1365,  1366,  3178,  2983,  3126,  4576,   646,  4205,
    3787,   462,   620,  4209,   652,   672,  3891,     6,   114,  2695,
     433,   762,  1995,  1323,  1993,  1994,   433,  1995,  1391,   162,
     168,  1394,  1196,  4196,  3012,   114,  3787,  1400,   646,  3891,
     444,   143,   149,   577,   521,    97,   387,   180,  3810,   472,
    5216,  1414,  5218,  2962,    63,  3566,  3567,  3568,  3569,  2715,
     279,  5081,   569,  2672,   564,  5085,  5086,  3254,   149,   555,
     149,     6,  4829,  2682,  4831,   673,  1439,  4834,  4065,    68,
     132,    63,  2055,  4840,  4841,   304,  2054,  2055,  2941,   493,
    1589,  5331,  3383,  4490,  5431,   458,  5433,  4854,  1950,  2953,
     458,  5090,  5763,   236,   237,   283,   480,  5632,   413,  5075,
     409,  3041,   463,  1205,  3891,    93,  5275,   282,   555,  2919,
    3196,   572,  2922,  3940,  1216,   711,  5402,  1626,   579,   318,
     661,  5775,   168,    68,   689,   558,   587,   234,   120,  2383,
    3891,  2385,  1306,  1995,  2918,  5447,  2947,   458,  5450,  3225,
     122,  2925,  1316,  3916,  3917,  3918,  3919,   645,  3316,  2057,
    1324,   347,   347,  1662,  2408,   143,   138,  2928,  2929,  5520,
     762,  3160,  5448,   728,   766,  3055,  2623,  2421,  2422,  1542,
    1344,   673,  1346,   268,  5709,  5710,   282,    10,  1551,   602,
     287,   369,    15,   564,  1594,   602,  3311,   291,  4641,  1562,
     645,   298,  2054,  2055,  2128,  2129,  4466,  4467,  4468,   660,
    1573,    10,  5737,  3289,   555,  2343,    15,   673,  3294,   321,
     858,  4390,   860,   861,   862,  3924,  1589,   164,   762,   867,
     446,   869,   720,  4930,   731,  4227,  1400,  4582,   161,  5181,
     728,  4586,   361,  2167,   689,  4062,   565,   433,   433,   435,
     435,  4420,   675,    15,   110,   111,   579,   246,   247,   210,
     579,   722,   769,  1626,   764,  1628,  4576,   256,   375,   720,
    4262,   280,   249,   348,  3314,  5166,   639,    28,   443,  3314,
    4272,  4273,   420,   206,  1647,   689,  5306,   764,   673,   518,
     519,  1654,  1655,   522,   523,   524,  2220,  5599,   280,  1662,
    1663,   762,   125,  1802,  5606,   483,   680,   730,   721,  1672,
    2234,   246,   247,  2904,   137,    61,   657,   328,    73,   400,
     112,   256,   673,  1686,  1687,   248,   125,  3501,  2542,  1692,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,   137,   525,
     525,  1704,  1841,   110,   111,   168,   169,   443,  2702,   764,
    1849,   764,  1851,  1858,  1859,  4808,  5316,   764,  1721,  1722,
     576,  1724,    36,   125,  1810,  1727,   671,  4810,   189,   168,
     169,   911,   912,   913,   351,   137,   115,   114,  1542,   460,
     201,  5605,   461,  1746,   420,   698,   438,  1551,    18,   702,
     213,   558,  1692,   764,  1694,  1695,  1696,  1697,  1562,  3610,
    4504,   567,  4833,   340,  1704,   399,   168,   169,   200,  5166,
     673,  2357,  4619,  5170,   213,  5357,   602,   602,    92,  1918,
    2357,  5772,  1722,  4527,    18,   201,  2357,  4531,  2357,   559,
     318,  1793,   972,   485,   653,  4539,   442,  3611,   654,  1802,
     261,   115,  2319,   392,  5141,   394,   369,  5144,  2319,  1812,
     737,   213,  1814,  3306,  5526,  1818,   130,  4496,   381,  1821,
    1823,   472,   725,   320,  1102,  2438,   328,  5240,    33,   220,
    2438,   460,   248,   277,  2398,   105,   106,   596,  1841,   234,
     217,   475,   559,  1647,   320,  3286,  1849,  1850,  1851,  1852,
    1853,  1854,  1855,  1856,   270,    32,   548,    34,  1445,  1446,
     138,  5725,  2708,   480,  1950,  2357,  2523,  1454,  2463,  2526,
     521,   105,   106,   369,  5474,   454,   189,  2534,  2594,   193,
    2537,  2735,  2491,   602,    61,   460,   200,    92,   201,  1693,
     708,   298,  5834,  5835,  1698,  5104,  1700,  4299,  4300,  1486,
     592,  1488,   288,   289,   182,  2751,  2470,   558,  2472,  1995,
     438,  2759,  2760,  2761,   493,  1918,    69,  1504,  1505,  3599,
    1507,   484,  1924,   730,   386,   369,   442,     0,  1515,  1516,
     689,    79,  1519,   739,    82,   441,   553,  1940,   764,  2977,
    2978,  1944,  1746,   589,  5174,   704,  2438,  3196,   261,  3126,
     447,    80,  3570,  3571,  3126,  5352,  2672,    93,  1961,   184,
     730,   628,   369,  3108,  3002,  5376,  2682,  3585,  2054,  2055,
     472,   447,   125,  1976,  3108,  1978,  2970,  1980,  1981,   752,
     753,   754,   755,   756,   757,   722,   447,   483,  2982,  4889,
    1993,  1994,   555,   263,   764,   200,  3312,  2000,  2562,    61,
     386,   581,  3551,    63,  2007,  2008,   422,  2010,  2011,   162,
     325,   100,   148,   730,   590,     9,    10,  4168,  4169,   521,
     407,  4830,  2025,  3168,   675,   762,  2029,   180,  3548,   263,
     112,   179,  2035,    57,  3168,  4844,   665,   481,   667,  2042,
    3289,  3337,  3338,  3339,  3340,  3294,  4855,   764,  4857,  2052,
    2053,  1855,  1856,   367,  1332,   747,   748,   749,  5151,  4277,
     120,  4464,   747,   680,  4282,    89,  4685,  4686,  2617,   648,
    4993,  3787,   277,   589,  3514,   461,   483,  3517,   514,   730,
     216,   105,   588,   236,   237,  3930,   311,    81,   137,    15,
     665,   666,   667,   668,   399,    83,   676,    83,  3896,   230,
    2708,  4769,   769,    97,  2953,     9,    10,     6,   423,   698,
    5746,   173,   701,  2726,   262,    42,  1296,  5701,  2726,  4387,
    5704,  4389,   146,   740,  4392,  5110,  5111,  5112,   747,  5114,
    4398,  4399,   126,   121,   447,   121,  1940,  5087,   132,   526,
    2285,   496,  2750,  2751,  5094,  3990,  3991,  4415,  3697,   729,
     174,  2759,  2760,  2761,  5104,    18,   287,   217,  5108,    57,
     399,   297,   584,  5113,  2750,   601,  2715,   298,     6,    68,
     475,   348,   166,  2750,  2778,  3891,  1980,    81,    95,  2750,
    2319,  2750,  2699,   204,  2788,   540,   438,   181,  2699,   183,
     117,    89,     6,    97,    57,  2334,  2199,    57,    83,   125,
     663,   128,  2205,  2007,  2008,   226,  2010,  2011,   135,   747,
    4680,   137,  3058,   584,   263,  1066,  2708,  3063,  2221,   655,
     280,   138,   126,    86,   663,  2029,    89,   100,   132,    89,
      68,  2035,   118,   485,  2726,  3493,   121,   164,   298,   125,
     662,  2845,   105,   106,   416,   105,  1097,   296,   146,   273,
    5311,   769,  5313,   138,    68,   128,    69,    36,  2750,  2751,
      30,   663,   166,  4114,    34,   182,   580,  2759,  2760,  2761,
    5854,  2357,  2876,  5909,  5910,   230,   174,   181,   123,   183,
       6,    33,   230,   146,    36,    57,   146,   213,   276,   283,
     276,   662,   615,   138,   708,     6,  2298,   182,   225,   708,
     472,   187,   165,   555,  2443,  2308,  2309,  2310,   302,   182,
     173,   174,   125,    92,   174,   369,  2319,    89,   673,   295,
    2323,  2324,  2325,  2326,  2327,  2328,  2912,  2330,  2971,   256,
    2934,  2334,   287,   334,   335,  2912,   115,   182,  5832,   287,
      92,  2912,    68,  2912,    96,     6,   669,  5194,   762,   162,
      11,   130,  2438,   762,    15,  2357,   201,    68,  4760,   217,
    5484,  4993,    95,   115,   115,  2368,    17,   180,   130,  2372,
     371,  2935,  3016,   687,   146,   273,  5870,  2379,   130,   130,
    3611,  2384,   263,    34,  5878,  2387,   558,  4201,    95,  2953,
     112,   276,   125,   560,   561,  2199,  5457,    57,   302,  5523,
     263,  2205,   174,   100,     6,  2544,   168,   169,  3016,   272,
     273,   274,   413,   273,  5908,  4213,   123,  2420,   472,  2564,
    2912,   200,  2971,   236,   237,  2428,  5058,  5634,  5635,  5048,
    3016,   138,  2372,  2436,    95,   138,  2439,  2440,   200,  3016,
    2443,  2444,  2445,  3932,  2384,  3016,    12,  3016,   200,  3938,
    3058,  3596,  3941,   762,    83,  3063,  2573,   123,  4860,  3948,
     769,  2463,  3596,    93,  3028,  2468,    68,  3031,  3032,  3033,
     637,  3182,   138,  1309,  1310,   182,   787,  3741,   762,   182,
    3196,  2407,    17,  3741,    35,   769,   146,   405,  2491,   241,
     110,   111,   121,   804,   412,  3341,    47,    32,   552,    65,
    4354,   273,  4353,   675,   558,   250,  2310,  1343,   138,   138,
     130,   501,   502,   143,   174,   277,   182,   262,  2521,  2323,
    2324,  2325,  2326,   386,  2527,   277,   516,   328,  2531,    57,
    5000,   394,  1810,  2536,   604,  4349,  2528,  4351,  4350,   763,
     764,  2544,  2534,  2130,  3390,   615,  2133,  2550,   168,   169,
     445,  3545,   182,   182,   146,   609,   100,   291,   730,   293,
    2699,    89,  2701,   640,  2151,   234,  3058,  4835,   369,  5735,
    4185,  3063,   649,  3289,  5632,  2162,  5734,   654,  3294,  2581,
     200,  2521,   174,    49,   479,   753,  2588,  2589,   367,   590,
     123,  3629,   764,    26,  4219,   763,    57,   750,   751,   752,
     753,   754,   755,   756,   757,   762,   607,   369,  4157,   753,
     722,  4160,   769,   273,  2617,   367,  2420,  3913,   146,   763,
    2623,   675,  2708,   613,   614,   168,   169,   762,   328,  4030,
    4031,   632,  2436,   434,   769,  2774,   149,  2776,    10,    83,
    2726,  2445,  3891,  3256,    49,   753,   174,   276,  3256,   115,
    4100,  5709,  5710,  4094,  4104,   763,   764,   277,  4059,   554,
     714,   326,  5723,  5724,  2750,  2751,  5285,  5286,  3706,   369,
     671,   472,  1950,  2759,  2760,  2761,   730,   121,   403,  5737,
     634,   301,  2685,  4084,  2687,   146,   762,   569,   762,   656,
    5537,    96,  4212,   769,   138,   769,  2699,   762,  2701,  2702,
    5783,    95,  4331,   117,   769,   656,     9,    10,  4149,  5400,
     115,   762,  2715,   174,   128,  2718,   416,  1995,   769,   481,
     521,   135,  3606,  2527,  5839,  5840,   444,   328,   763,   764,
     762,     9,    10,  3341,   434,   201,   690,   769,   182,   693,
     635,   701,   702,  4144,   704,   273,   706,  4680,   768,   369,
    3314,   552,   261,   747,   748,   749,   112,   558,   762,   946,
     649,  1225,     9,    10,  3256,   769,   720,  1231,  1232,  5884,
     764,  2774,   472,  2776,   728,   115,  2054,  2055,    81,   966,
     763,   764,  3390,   115,    17,   115,   973,   974,  3337,  3338,
    3339,  3340,  4643,    84,    97,   769,  1386,  1387,   719,    32,
    1390,   580,   261,    81,   270,   763,   764,   499,   769,   501,
     502,   225,   273,   644,  1989,   416,   422,    95,   728,    97,
     248,   521,   762,   126,   516,    58,  2912,  4216,   580,   132,
       9,    10,   276,    76,    81,   698,   241,    70,   701,   763,
     764,   268,   256,   747,   748,   749,     5,   710,   126,  3341,
      97,    95,   552,    84,   132,   675,   261,    90,   558,   763,
     764,   481,   125,   166,   594,  3429,   763,   764,   461,   763,
     764,   472,   277,   634,   675,   763,   764,  5970,   181,   126,
     183,   571,  4402,   762,    67,   132,  5969,  2890,   166,   689,
    4439,   124,   763,   764,   763,   764,   763,   764,  3390,   268,
    4164,   177,    81,   181,   177,   183,  4164,  3511,   687,   764,
    2912,   413,  3476,   114,  2718,   768,   321,   343,    97,   166,
     521,   613,   614,  3566,  3567,  3568,  3569,  2930,  5775,   730,
    3016,   763,   764,  4164,   181,   687,   183,   750,   751,   752,
     753,   754,   755,   756,   757,   518,   519,   126,   334,   522,
     523,   524,   771,   132,  2957,   762,   422,   558,   762,  2962,
     763,   764,    76,    77,  2967,   763,   764,  2970,  2971,  2972,
     763,   764,  3058,   763,   764,   675,   762,  3063,   161,  2982,
     762,   447,   763,   764,   762,   168,   169,   166,   763,   764,
     194,  4480,    34,  4482,   399,   763,   764,   763,   764,   302,
    4812,   722,   181,   762,   183,     9,    10,   763,   764,  3855,
     752,   753,  4501,  3016,  3153,  3658,   762,  3566,  3567,  3568,
    3569,   762,  4511,   206,   302,     9,    10,  2981,   163,   495,
     730,   763,   764,    49,  4523,  3599,  5438,   722,  5440,   762,
    4658,  4659,    32,   762,  3183,  3184,   279,   762,  4193,   763,
     764,  4540,  3055,   763,   764,   302,   110,   111,   291,  4193,
     762,     9,    10,   762,   764,   248,   762,  5000,    58,   763,
     764,   762,  3716,   762,   675,   763,   764,    81,   762,  2357,
      70,   762,  3646,   763,   764,     9,    10,   763,   764,   763,
     764,   762,  4356,    97,  3233,   763,   764,    81,  4356,   762,
      90,  3762,  3763,   762,   762,  3766,  3767,   763,   764,  3658,
     762,  3772,  3773,    97,   763,   764,   736,   762,  4156,  4350,
    4640,   762,   126,   302,   590,   763,   764,   762,   132,   730,
     762,  3134,  3135,    81,   124,   763,   764,  3140,   763,   764,
     762,  4457,   126,  4181,  4182,   762,  3149,   762,   132,    97,
    3153,   763,   764,  2957,   763,   764,  4004,    81,   762,   392,
    2438,   394,   166,   764,   762,   631,   763,   764,  2972,   188,
    3256,  3735,   762,    97,   762,  3891,   762,   181,   126,   183,
    3183,  3184,   166,   649,   132,   201,   369,   762,    69,   763,
     764,   763,   764,   763,   764,   763,   764,   181,   381,   183,
    3140,   762,   126,   763,   764,   763,   764,   762,   132,   762,
    3212,  3213,  3214,  3215,   762,  3217,  3218,   762,   166,   209,
     188,   763,   764,  5074,   690,   762,   631,   693,  1566,  1567,
    3233,   762,   248,   181,   188,   183,   763,   764,   763,   764,
     645,   762,   166,   762,   649,   762,  3249,  3855,   762,  4508,
     762,     9,    10,   115,   720,  3341,  4515,   181,   762,   183,
     763,   764,   728,  3265,  3266,   762,  3268,   762,  3270,  3271,
    3272,  3273,  3274,  3275,  3276,  4689,  3278,  4666,   762,  3281,
     762,   162,   762,  3285,   763,   764,   762,  4487,   693,   279,
     762,  4971,   763,   764,    42,   762,  4971,   762,   302,   180,
     762,   484,   762,  4562,  3390,   321,   762,  4507,   763,   764,
     763,   764,   762,   546,   762,   720,  4516,   762,   302,   735,
     763,   764,  4522,    81,   763,   764,   763,   764,  3331,    69,
    3134,  3135,  4532,  3336,  3337,  3338,  3339,  3340,  5192,    97,
    3343,  4541,  4542,  5194,   762,  3149,  5160,   369,   763,   764,
     763,   764,   762,  2034,   302,   236,   237,   763,   764,   762,
    4618,     9,    10,  3855,  3913,   763,   764,   762,   126,   117,
     763,   764,   555,   762,   132,   762,   263,   762,   302,   762,
     128,  3498,  4646,   399,   762,  3530,   762,   135,  4646,   762,
    4003,   762,   762,   194,   416,  4003,  4004,   762,  5007,   762,
    2575,  2576,   392,   762,   394,   762,   422,   762,   166,   762,
      57,  4852,   762,   762,   762,  4646,   164,  2592,   762,  4650,
     653,   762,   162,   181,   408,   183,   762,  2602,  2603,   177,
    2708,   447,   769,    81,     9,    10,  4040,   762,   762,   762,
     180,   762,    89,  4481,   747,   748,   749,   762,  2726,    97,
     472,   762,   762,   762,   747,   194,   496,   764,   105,  5387,
     763,   764,   571,   110,   111,   177,    95,  4868,   701,   747,
     748,   749,  2750,  2751,  3477,   177,   656,   225,   126,   495,
     234,  2759,  2760,  2761,   132,   769,   764,   769,   769,   769,
     769,   724,  2667,  2668,  2669,  2670,   236,   237,   769,   146,
     747,   748,   749,   769,   395,   769,    81,   369,   256,   769,
     769,  4003,  4004,   762,   376,   673,   763,   764,   166,   421,
     138,    93,    97,  4127,   673,  4168,  4169,   174,  3531,   391,
     552,   662,  4136,   181,   689,   183,   558,   496,   415,  3343,
    4184,    93,  3545,   764,   302,  3548,   764,   283,   343,   662,
     764,   126,   377,  4817,   416,   545,   546,   132,   764,  4817,
       9,    10,   764,  3566,  3567,  3568,  3569,   566,   747,   748,
     749,   747,  5121,   464,   684,    80,  4184,   728,   447,  3718,
    3583,  3584,   447,   287,   763,   764,   763,   609,   762,   230,
      61,   166,   391,  3738,  5408,   770,     5,   570,  4184,   390,
       4,   728,   769,   413,    14,   296,   181,  4184,   183,   769,
     764,   177,   769,  4184,   416,  4184,   408,   630,   689,  4168,
    4169,   763,   762,   112,   295,   493,   273,  3744,   548,   645,
      95,  3634,    81,   649,  2912,  3638,   123,   295,   529,   762,
     531,  4298,  4353,   768,   148,   536,  5255,   764,    97,     6,
     762,   413,   763,   675,   302,  3658,  5176,   763,   520,   763,
      68,   764,   319,  3666,   769,   763,  5295,  3670,   763,   763,
    5299,   533,   635,   769,   690,    93,    93,   126,   763,   763,
     763,   298,   769,   132,  5538,   762,  5537,   137,   762,   100,
     552,  3694,   714,   771,  3697,   764,   764,   268,   193,   764,
      93,  4547,   769,   764,   720,    34,   764,  3710,   730,   600,
     754,   701,   728,   673,   686,  3718,  3719,   166,   125,   476,
    5534,  5535,  4379,  5403,  5404,   436,    93,   302,  5403,  5404,
    3733,  3733,   181,   764,   183,   421,   673,   764,  3016,   762,
     770,   125,   764,   747,   748,   749,   764,  4391,   193,   346,
     214,   496,   643,   496,   496,   345,   343,   764,   496,   763,
     764,   496,   352,   747,   748,   749,   496,   764,   747,  3855,
    3710,   268,    84,   659,    42,  5268,   582,   728,   368,  3905,
    3058,    26,    95,   754,   764,  3063,   763,   762,   378,   379,
     380,     9,    10,   404,   466,   764,   466,   581,   388,   747,
     748,   749,   763,  3843,    29,   295,   764,   719,   282,   688,
       9,    10,  2493,   675,   764,   763,   764,  5446,   182,    95,
     764,   764,   762,   747,   748,   749,   268,   116,   690,   123,
      59,   636,   763,   763,   763,  3838,   413,   763,   754,   763,
     764,   732,   763,    95,   763,   763,   753,     9,    10,   117,
     763,   762,   743,   302,   763,   763,  4469,   763,  5672,   763,
     128,  4469,  3666,    81,  5483,   763,  3670,   135,   763,   750,
     751,   752,   753,   754,   755,   756,   757,   769,  4916,    97,
     763,   763,    81,   235,   764,   763,  3889,   762,   764,   763,
     762,   764,  3895,   764,   764,   168,   164,   763,    97,   763,
     757,   762,   193,   762,   361,   763,   747,   263,   126,   177,
    3913,     9,    10,    33,   132,   577,    36,  4003,  4004,    81,
       9,    10,  4530,   263,   263,   268,   762,   126,    99,    95,
     764,  4642,    93,   132,    93,    97,   762,   490,   528,  4547,
     762,   764,   769,   764,  4530,   769,   763,    95,   166,   769,
     425,  5560,   542,  4530,   226,   769,   601,   225,  5217,  4530,
     234,  4530,  5776,   181,   126,   183,   764,   166,    62,     6,
     132,    42,    92,   177,   764,   764,    96,  4469,  3256,    93,
     177,   718,   181,    81,   183,   263,   125,   280,   256,   747,
     748,   749,    81,   100,   764,   115,  3999,   763,   762,    97,
     544,   248,   248,   298,   166,   763,   764,   644,    97,   248,
     130,   751,   752,   753,   754,   755,   756,   757,   248,   181,
     248,   183,   177,  3198,  3199,    93,  3201,  3202,   126,   762,
    5550,   264,   747,   747,   132,   764,   719,   126,  4530,    17,
    5429,   747,   747,   132,   747,   283,   117,   747,   747,  4895,
     747,   747,   642,   747,   747,  4547,   495,   128,   747,   747,
     747,   138,   747,  3341,   135,   747,   747,   747,   166,   747,
     747,   747,   747,   193,     9,    10,    72,   166,  5519,   747,
     200,   747,   316,   181,   302,   183,   268,   268,   678,  4092,
     769,   764,   181,   164,   183,   769,   268,   764,  4184,   747,
     748,   749,   692,   302,   769,  4762,   177,  5252,  5372,   739,
    4767,  4768,  3390,   493,  5372,   763,   764,  3292,  5252,  4122,
     375,   241,   268,   123,   768,   763,   769,   122,   122,  5570,
    4269,   763,   110,   111,  4137,  4137,   763,   763,     9,    10,
     302,  5372,   763,   188,   769,   769,    81,  4150,   763,   753,
     753,   763,    26,   763,   225,   763,   762,   277,  4161,   764,
    4163,  4769,    97,   762,  4167,  4168,  4169,   682,   321,   268,
    5428,   230,   747,   748,   749,   571,    95,    95,    95,    95,
     263,  4184,  4185,  4769,  4323,   256,   478,  4332,   763,   764,
     263,   126,  4769,   207,   764,   769,   753,   132,  4769,   425,
    4769,   174,     9,    10,   302,   128,   762,   128,   185,  4212,
      81,    11,   283,   302,  2895,   762,   764,  4220,   747,   747,
     530,   764,    92,   316,   177,   764,    97,   769,   651,    26,
     763,   166,   104,   769,   764,   762,   263,   391,   263,   391,
     263,   215,    11,  4807,   762,  4247,   181,   367,   183,   762,
    5509,  5510,   762,  5512,   100,   126,   221,   769,   754,    93,
     763,   132,  5782,  4265,  4266,   571,  4269,  4880,   754,  4394,
    5711,   268,  4880,  4275,    81,   177,  5540,  4769,   114,   456,
    4283,  4284,  5540,  4286,   764,   768,  5132,  4895,   174,   408,
      97,   124,   762,   762,   762,   166,   124,  5790,   747,   748,
     749,   763,  5533,   763,   763,  4308,  4308,   763,   769,  5540,
     181,   762,   183,   182,   769,   764,   764,   764,   230,   126,
    4323,  4929,   763,   763,   762,   132,   763,   763,   763,    26,
     762,   747,  4335,   762,  4337,  4337,   216,   763,   230,   769,
      95,    95,   763,  4929,   763,   207,   128,   128,   763,    94,
     764,  4490,  4929,   297,   207,  5201,   762,  4496,  4929,   166,
    4929,   762,  5073,   762,   762,   541,  4368,   302,   747,   764,
     391,   404,   726,   404,   181,  4378,   183,   193,   764,   762,
     762,   762,   263,  4469,  5230,   534,   734,  4390,  4880,   763,
     193,   367,   193,   268,   193,  4388,  5837,  4400,  5657,  4402,
    5659,  5660,    26,  4895,  4407,  4408,  5899,  4971,  4401,   193,
    4413,   129,   129,   690,  5678,   193,  4409,  4420,   193,  5939,
    5678,  5078,  4425,  4416,   402,  4418,  4419,   690,   578,  4432,
     193,   302,   193,  5953,  4437,   193,   268,  4929,   416,  5959,
     418,  3122,    11,  5481,  4530,  5965,   425,  5678,   345,  5680,
     226,    99,   410,   488,   374,   352,     9,    10,   199,   762,
     580,  4547,   762,   563,    61,    93,    93,   174,    26,   298,
     448,   368,   232,   763,   490,   763,   763,   763,   763,   630,
    4284,   378,   379,   380,   182,   463,    26,  4490,   139,   764,
     193,   388,  4432,  4496,   763,   302,  3671,  3672,  3673,  3674,
    3675,   763,  3677,  3678,  3679,  3680,  3681,   764,  3683,  3684,
    3685,  3686,  3687,  3688,  3689,  3690,  3691,  3692,   496,   128,
    3695,  3696,  4525,   764,  5132,  5371,   128,   763,    81,   747,
     748,   749,   764,   432,    94,  3216,   514,   143,   738,   762,
     762,   212,   763,   763,    97,   764,   764,   177,   747,   748,
     749,    11,  5400,   769,   628,   763,   662,   763,   174,   764,
     763,   174,   726,   112,  5602,   764,  4705,   687,   130,    94,
     726,   200,   591,   126,   177,   153,   177,  3855,   369,   132,
    3261,   471,  3263,  3264,   264,   747,   748,   749,  3269,   571,
     425,   123,   298,  5201,   374,   563,  3277,     9,    10,   293,
     293,  3282,   764,  4407,   211,   762,    17,   138,   484,  5647,
     534,   601,   124,   166,    32,   670,   594,   764,   763,   763,
     763,   763,  5230,   601,   764,   763,   763,   763,   181,  4632,
     183,   528,   763,   611,     9,    10,  3811,  4640,    26,   763,
    5132,  3816,   763,   769,   283,   542,   624,   283,   563,   747,
     748,   749,   762,  5691,   763,    10,   764,   762,   747,   748,
     749,   762,   130,   130,    11,   762,   764,   763,    11,    81,
     762,   641,  5931,   361,   764,   764,   763,   655,    11,   764,
     658,   123,   130,  4769,   764,    97,   298,   763,   373,   655,
     130,   261,   408,  4696,  4833,   673,   304,   279,   747,   769,
       9,    10,  4705,    93,  4707,  4708,    81,  4709,    93,  5201,
     174,   764,   763,   534,   126,   763,   431,   763,   762,   283,
     132,   763,    97,  4725,   283,  4003,  4004,    10,  5336,   268,
     627,   405,   570,   762,   762,   283,    33,   769,  5230,  4779,
     764,   763,    67,   769,   177,   642,     9,    10,   763,   302,
     762,   126,   769,  4756,   166,   764,   769,   132,   769,  4876,
    4763,   769,  4765,  5371,   769,   343,   769,  4770,   769,   181,
     769,   183,    81,   140,    84,   261,   769,   769,   769,  5426,
     769,   678,  4785,   769,  4824,    84,  4788,  4827,    97,   298,
     762,   166,  5400,   280,  4880,   692,     9,    10,   571,   445,
     174,   763,   763,   763,   589,   636,   181,   426,   183,  4895,
     589,   389,   747,   748,   749,   762,   762,   126,    81,   762,
     349,   763,   762,   132,   174,   763,  4829,  4830,  4831,   764,
    4833,  4834,  4825,  4836,    97,   764,   151,  4840,  4841,  5403,
    5404,  4844,   301,  4929,  5336,    91,    26,    26,    79,   563,
      26,  4854,  4855,    61,  4857,    61,   670,   166,   763,   769,
    4863,    10,   763,   126,   681,   763,   696,   762,    81,   132,
     177,  4873,   181,   762,   183,  4878,   747,   748,   749,  5371,
     762,   130,   687,   726,    97,   130,   173,   280,   322,    61,
     302,    11,   470,   764,   563,    26,    26,    26,  4901,     9,
      10,   123,   763,   166,   414,   571,  4184,    33,  5400,  4949,
      33,   636,   762,   126,   404,   404,   416,   762,   181,   132,
     183,   575,    93,   763,  5962,   762,   170,   302,   722,   571,
     769,   571,   682,   143,   321,   762,  5583,   762,    11,   762,
     747,   748,   749,   762,   764,   763,  4949,   762,    93,   762,
    4953,   408,    26,   166,   532,    26,   762,   764,   769,  4763,
     762,    34,   315,   177,   226,   177,   764,   280,   181,    63,
     183,    81,   550,   551,   769,   763,   763,   555,   556,   557,
     763,   466,    75,    26,   636,   174,   114,    97,    61,  2981,
     762,   234,  1777,   302,   764,   874,  3639,  3283,  1215,  4886,
    4882,  4884,  1175,  3137,  1864,  2534,  5445,  3783,  5153,  5137,
    5651,  5502,  5843,  5016,     9,    10,   126,  1301,  4787,  4953,
    5324,  4929,   132,  5222,  5027,  5332,  5237,  5395,  4544,  3383,
    1637,  2472,  3646,  5336,  3329,   778,  4470,   110,   111,   302,
    4004,  2053,  2633,  5046,  2054,   623,  5132,  2056,  5692,  2055,
    1982,  5453,  5055,  5121,  5304,  3837,   166,   130,  4146,  1342,
    5063,  3245,  4848,  5014,  1927,  4632,  5069,  4150,  2293,  5072,
    5699,   181,  5268,   183,  5018,  5785,  5899,  5863,  5081,  4254,
    5901,  5583,  5085,  5086,  3697,  5322,    81,  4162,  4646,   302,
    2512,  3832,  4267,   671,  4425,   168,   169,  5805,  4756,  3838,
     173,  5840,    97,  5636,   177,  5145,  5646,  5523,  4062,  3940,
    5956,  3995,  5649,  5692,  5168,  5201,  3797,  3798,  3799,  4489,
    4497,  3481,  4101,  4096,  4104,  5128,  5869,   200,   632,    86,
     634,   126,    86,  5834,  5307,  5835,  5726,   132,  5606,  5599,
    5296,  4515,   646,  3837,  5230,  4422,  1189,  3119,   652,   653,
    1320,  5368,  5155,  3115,   658,     9,    10,  5688,  5167,  2623,
    1964,  3343,  2310,  5166,  3925,  2734,  1278,  5170,   672,  1832,
    2445,   166,  3742,  5176,  3496,  5373,  3857,  3858,  4817,  3860,
    5183,  2572,  5678,  5328,  1275,  1894,   181,  3169,   183,  4137,
    2844,  4469,   302,  2840,   747,   748,   749,  1570,  3530,  4136,
    1628,  1480,  3056,  3615,   277,  1448,  3050,  4667,  5211,  4116,
    3044,   764,  5591,  5442,  5867,  4696,  5868,  1454,  3728,  5222,
    5155,  5224,  5154,  3520,  5007,  5560,  3599,    81,   301,  5176,
    5153,  5003,  5047,  2553,  3718,    86,  2685,  1400,  2727,  4640,
    3209,  4245,  1647,    97,  4214,  4212,  5782,   656,   795,  1976,
    5336,   796,  4530,  2416,  5901,   653,   329,   653,  5375,  1712,
     110,  2417,  3039,  1273,  5058,  3928,  2466,  1822,  5069,  4547,
    1404,  5897,   126,   777,  5920,  5342,  5316,  5516,   132,  5959,
    5320,  5965,   971,  3616,  4161,  5371,  2439,  3014,  2912,  4184,
     652,   652,  2993,  5296,  2235,  2361,   369,  1656,  1849,  2994,
    1109,  2035,   650,  5306,  3796,  2617,  5309,   302,  1396,  3331,
    5208,  3129,   166,  2970,  5400,   688,  3843,  1223,  5321,  3610,
    4203,  4670,    86,    86,  3044,    86,  5683,   181,  5331,   183,
      53,    54,    55,    56,  2528,   747,   748,   749,    -1,     9,
      10,    -1,    -1,   847,  5483,    -1,    -1,    -1,  5956,  5352,
      -1,    -1,   764,    -1,   858,  5395,   860,   861,   862,    -1,
      -1,  5364,    -1,   867,    -1,   869,    -1,    -1,    -1,  5362,
      -1,    -1,   747,   748,   749,    -1,   449,    -1,    -1,  5382,
    5383,    -1,    -1,    -1,   107,   108,   109,    -1,    -1,   764,
      -1,    -1,  5395,     9,    10,    -1,   900,    -1,    -1,    -1,
      -1,   905,  4083,    -1,    -1,    -1,    -1,  5211,   481,    -1,
      -1,    81,    -1,    -1,    -1,  5418,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4105,    -1,    -1,    97,  5431,    -1,
    5433,   935,    -1,    -1,  5474,   158,   159,    -1,   747,   748,
     749,   945,    -1,    -1,    -1,    -1,    -1,    -1,   302,  5452,
      -1,    -1,  5492,    -1,    -1,   764,   126,    -1,    -1,    -1,
      -1,    -1,   132,    -1,  5956,    81,    -1,    -1,  5470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5483,    97,    -1,    -1,   747,   748,   749,     9,    10,    -1,
      -1,  4769,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,
      -1,   764,    -1,    -1,  5507,    -1,   229,    -1,    -1,    -1,
     126,   181,    -1,   183,    -1,    -1,   132,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1034,  1035,  1036,  1037,   747,   748,   749,    -1,    -1,    -1,
      -1,  1045,    -1,    -1,    -1,    -1,    -1,  5550,    -1,  5552,
     166,   764,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    81,
    5364,    -1,    -1,    -1,    -1,   181,  5683,   183,    -1,    -1,
      -1,    -1,    -1,  5712,   647,    97,  4257,  4258,  4259,    -1,
     303,    -1,  4263,  4264,    -1,     9,    10,  4268,    -1,    -1,
    4271,    -1,    -1,  4274,  5596,    -1,    -1,    -1,  1102,    -1,
    4281,    -1,  4880,    -1,   126,    -1,    -1,    -1,    -1,  5649,
     132,    -1,  5615,    -1,    -1,    -1,    -1,  4895,  5621,    -1,
    5623,  5624,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5632,
    5632,    -1,   302,    -1,    -1,    -1,    -1,   747,   748,   749,
      -1,    -1,    -1,    -1,   166,    -1,    -1,  5650,    -1,  5652,
      -1,  4929,    -1,    -1,   764,    -1,    -1,    81,    -1,   181,
      -1,   183,    -1,   736,    -1,    -1,  5805,    -1,    -1,    -1,
      -1,    -1,   395,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5688,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5699,  5842,    -1,  1203,
      -1,  1205,   126,    -1,  5706,  5707,    -1,    -1,   132,  5712,
      -1,    -1,    -1,    -1,    -1,     9,    10,    -1,    -1,    -1,
      -1,    -1,  5861,  5763,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5737,  5737,    -1,    -1,  5741,  5742,
      -1,   464,   166,    -1,    -1,  5748,    -1,    -1,    -1,    -1,
      -1,    -1,   747,   748,   749,    -1,    -1,   181,    -1,   183,
      -1,    -1,    -1,    -1,  5767,    -1,    -1,    -1,    -1,   764,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5782,
     302,    -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,
      -1,    -1,  5794,    -1,    -1,  5797,    -1,    -1,    -1,  5839,
    5840,    -1,  5805,    97,  5943,    -1,   529,    -1,   531,    -1,
    5949,    -1,    -1,   536,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5966,  5825,    -1,    -1,  1329,    -1,  1331,  1332,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,    -1,
      -1,  5844,    -1,    -1,  5884,    -1,  5650,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5132,    -1,    -1,    -1,  5861,    -1,
      -1,    -1,    -1,  4544,  5867,  5868,    -1,    -1,    -1,    -1,
    5956,    -1,   166,    -1,    -1,    -1,    -1,   600,   302,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,
      -1,  5894,    -1,   747,   748,   749,    -1,    -1,  1402,    -1,
    1404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     764,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     643,    -1,    -1,  5201,    -1,    -1,  1430,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5939,  1441,  1442,    -1,
    5943,    -1,    -1,  1447,    -1,    -1,  5949,  1451,  1452,  1453,
    5953,    -1,  5230,    -1,    -1,    -1,  5959,    -1,  1462,  1463,
      -1,    -1,  5965,    -1,  1468,    -1,  1470,  1471,  1472,  1473,
    1474,    -1,  1476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1487,    -1,  1489,    -1,    -1,  1492,  1493,
      -1,  1495,  1496,  1497,    -1,  1499,  1500,  1501,    -1,    -1,
      -1,    -1,  1506,    -1,    -1,  1509,    -1,    -1,   302,   732,
      -1,    -1,    -1,  1517,  1518,    -1,  1520,  1521,  1522,    -1,
     743,  1525,  1526,  1527,  1528,  1529,  1530,  1531,    -1,  1533,
    1534,  1535,  1536,  1537,  1538,    -1,  1540,  1541,    -1,  1543,
    1544,  1545,  1546,  1547,  1548,  1549,    -1,    -1,  1552,  1553,
    1554,  1555,    -1,  1557,  1558,  1559,    -1,  1561,  5336,  1563,
      -1,  1565,    -1,    -1,    -1,  1569,  1570,  1571,    -1,    -1,
    1574,  1575,  1576,  1577,  1578,    -1,  1580,   747,   748,   749,
      -1,     9,    10,  1587,    -1,    -1,    -1,    -1,  1592,    -1,
      -1,    -1,    -1,  5371,   764,  1599,    -1,    -1,    -1,  1603,
    1604,  1605,  1606,    -1,  1608,  1609,    -1,    -1,  1612,  1613,
    1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,
    1624,    -1,  5400,  1627,    -1,    -1,    -1,    11,    -1,    -1,
      -1,   747,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,
      -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    42,    -1,
      -1,     5,    -1,     7,     8,    -1,  1670,    -1,    -1,    97,
      -1,  1675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1685,    -1,    -1,    -1,    -1,    -1,    31,    -1,    33,
      -1,     9,    10,    -1,    -1,    39,    80,    -1,   126,    83,
      -1,  4882,    -1,  4884,   132,  4886,    -1,    91,    -1,    93,
      -1,    -1,     9,    10,    -1,    -1,   100,    61,    -1,    -1,
     104,    -1,    -1,    -1,    -1,   747,   748,   749,    -1,    73,
     114,    -1,    -1,   117,    -1,    -1,    80,   121,   166,   123,
      -1,    -1,   764,    -1,   128,    -1,    -1,    91,    -1,  1753,
      -1,   135,    -1,   181,   138,   183,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    81,    -1,    -1,   110,   111,  4949,    -1,
      -1,   115,  1776,    -1,    -1,    -1,    -1,    -1,    -1,    97,
     164,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   143,
      97,    -1,    -1,    -1,    -1,    -1,  1810,    -1,   126,    -1,
      -1,    -1,    -1,    -1,   132,    -1,    -1,   201,  4999,    -1,
      -1,    -1,    -1,   747,   748,   749,    -1,    -1,    -1,   126,
      -1,  5012,    -1,    -1,   178,   132,    -1,    -1,   182,    -1,
     764,   225,    -1,    -1,    -1,    -1,   190,    -1,   166,   193,
     234,    -1,    -1,    -1,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,   181,    -1,   183,    -1,    -1,    -1,   166,
      -1,   215,   256,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   181,    -1,   183,    42,    -1,    -1,
      -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,   282,   283,
    5575,  5576,    -1,  5578,  5579,  5580,  5581,   251,   252,   253,
      -1,    -1,   296,    -1,   298,    -1,    -1,   301,    -1,    -1,
       9,    10,  5597,    -1,    -1,    80,    -1,    -1,    83,    -1,
      -1,    -1,   276,    -1,    -1,    -1,    91,    -1,    93,    -1,
      -1,    -1,    -1,     9,    10,   100,  1950,    -1,    -1,   104,
      -1,    -1,    -1,   747,   748,   749,    -1,   301,    -1,    -1,
      -1,    -1,   117,    -1,    -1,    -1,   121,    -1,   123,    -1,
     764,    -1,    -1,   128,    -1,    -1,    -1,   321,    -1,    -1,
     135,    -1,    -1,   138,   302,   329,    -1,   331,   143,    -1,
      -1,  1995,    81,    -1,    -1,     9,    10,    -1,    -1,     9,
      10,    -1,    -1,     9,    10,   302,   350,    -1,    97,   164,
      -1,    -1,    -1,   357,    -1,    81,    -1,    -1,    -1,    -1,
    2024,    -1,   177,    -1,    -1,   369,    -1,   182,    -1,    -1,
    5705,    97,   376,  5708,  2038,    -1,    -1,   126,    -1,    -1,
      -1,  5716,    -1,   132,    -1,    -1,   201,   391,    -1,    -1,
    2054,  2055,  2056,    -1,    -1,  2059,    -1,   401,    -1,   443,
     126,   405,   406,  2067,  2068,    -1,   132,    81,   412,    -1,
     225,    81,   416,    -1,    -1,    81,    -1,   166,    -1,   234,
     424,    -1,    -1,    97,    -1,    -1,    -1,    97,    -1,    -1,
      -1,    97,   181,    -1,   183,    -1,    -1,    -1,    -1,   443,
     166,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,   181,   126,   183,   132,    -1,
     126,   276,   132,    -1,    -1,   469,   132,    -1,   283,   473,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,   296,    -1,   298,    -1,    -1,   301,    -1,    -1,  2153,
    2154,  2155,   166,    -1,    -1,    -1,   166,    -1,    -1,    -1,
     166,     9,    10,    -1,    -1,    -1,    -1,   181,    -1,   183,
      -1,   181,    -1,   183,    -1,   181,   520,   183,  5956,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,
      -1,   535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   302,  5395,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,     9,    10,  2231,    -1,   573,
      -1,    -1,    -1,    81,    -1,   579,   302,    -1,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,  2252,    97,
      -1,  2255,  2256,   132,  2258,  2259,    -1,    -1,    -1,    -1,
      -1,    -1,   606,  2267,    -1,  2269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   617,   618,   619,    -1,    -1,   126,    -1,
      -1,    -1,    -1,    -1,   132,     9,    10,   166,   302,    -1,
      -1,    -1,   302,  2297,   638,    -1,   302,    81,     9,    10,
      -1,   645,   181,    -1,   183,    -1,    -1,    -1,  2312,    -1,
      81,    -1,    -1,    97,    -1,    -1,    -1,    -1,   166,   747,
     748,   749,    -1,    -1,    -1,  2329,    97,    -1,    -1,    -1,
      -1,   675,    -1,   181,    -1,   183,   764,    -1,    -1,  2343,
      -1,    -1,   126,    -1,    -1,    -1,   690,   691,   132,    -1,
     734,    -1,    -1,  2357,  2358,   126,    -1,    81,    -1,   703,
      -1,   132,   706,   747,    -1,    -1,    -1,    -1,     9,    10,
      81,    -1,    -1,    97,    -1,    -1,  2380,    -1,    -1,   763,
     764,    -1,   166,   767,   768,    -1,    97,    -1,    -1,    -1,
      -1,     9,    10,    -1,    -1,   166,    -1,   181,    -1,   183,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,    -1,
     181,    -1,   183,    -1,    -1,   126,    -1,    -1,    -1,    -1,
      -1,   132,    -1,   302,   768,    -1,    -1,     9,    10,   747,
     748,   749,     9,    10,  2438,    -1,    -1,    -1,    -1,    -1,
      81,    -1,   166,    -1,    -1,    -1,   764,    -1,    -1,    -1,
     747,   748,   749,  2457,   302,   166,    97,   181,    -1,   183,
      -1,    -1,  2466,    81,    -1,    -1,    -1,   764,    -1,    -1,
     181,    -1,   183,     9,    10,    -1,    -1,    -1,    -1,    97,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,
      -1,   132,    -1,    -1,     9,    10,    -1,    -1,    -1,    81,
      -1,    -1,    -1,    -1,    81,     9,    10,    -1,   126,    -1,
      -1,    -1,    -1,    -1,   132,    97,    -1,    -1,   302,    -1,
      97,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,
      -1,   302,    -1,     9,    10,    -1,    -1,    -1,    -1,    -1,
     181,    -1,   183,    -1,   126,    81,    -1,    -1,   166,   126,
     132,  5732,    -1,    -1,    -1,   132,    -1,    -1,  2562,    -1,
      -1,    97,    -1,   181,    -1,   183,    81,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    81,   302,   734,
      -1,    -1,    97,    -1,   166,    -1,    -1,    -1,    -1,   166,
     126,   302,   747,    97,    -1,    -1,   132,    -1,    -1,   181,
      -1,   183,    -1,    -1,   181,    81,   183,    -1,   763,   764,
      -1,   126,   767,   768,    -1,    -1,    -1,   132,    -1,    -1,
      -1,    97,   126,    -1,    -1,  2629,    -1,    -1,   132,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,
     126,   166,    -1,    -1,    -1,    -1,   132,    -1,   747,   748,
     749,   302,   166,    -1,    -1,    -1,   181,    -1,   183,    -1,
      -1,    -1,    -1,    -1,    -1,   764,    -1,   181,    -1,   183,
      -1,   747,   748,   749,   302,  2689,    -1,    -1,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,
      -1,    -1,    -1,    -1,  2708,   181,    -1,   183,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     302,    -1,  2726,    -1,    -1,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   747,   748,   749,    -1,   747,   748,   749,
      -1,   747,   748,   749,    -1,    -1,  2750,  2751,    -1,    -1,
     764,    -1,    -1,    -1,   764,  2759,  2760,  2761,   764,    -1,
      -1,    -1,  2766,    -1,    -1,  2769,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2786,    -1,  2788,    -1,  2790,   302,  2792,  2793,
    2794,  2795,  2796,  2797,    -1,  2799,    -1,    -1,   302,    -1,
      -1,    -1,    -1,  2807,    -1,  2809,    -1,    -1,  2812,  2813,
    2814,  2815,    -1,    -1,  2818,  2819,    -1,    -1,  2822,    -1,
    2824,    -1,  2826,    -1,  2828,    -1,   302,    -1,  2832,    -1,
      -1,     9,    10,    -1,    -1,    -1,  2840,    -1,  2842,    -1,
    2844,  2845,  2846,  2847,  2848,    -1,    -1,  2851,  2852,  2853,
      -1,  2855,    -1,    -1,  2858,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,   747,   748,
     749,    -1,  2876,    -1,    -1,  2879,    -1,  2881,  2882,  2883,
      -1,    -1,  2886,     9,    10,   764,    -1,    -1,  2892,    -1,
      -1,    -1,    -1,  2897,     9,    10,    -1,    -1,    -1,   747,
     748,   749,    -1,    81,    -1,    -1,    -1,    -1,  2912,  2913,
      -1,    -1,    -1,    -1,    -1,  2919,   764,    -1,  2922,    97,
      -1,  2925,    -1,    -1,    -1,    -1,     9,    10,    -1,    -1,
    2934,    -1,  2936,    -1,    -1,    -1,    -1,  2941,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     9,    10,   126,    -1,
      -1,    -1,    -1,    -1,   132,    81,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   747,   748,   749,    81,    -1,    -1,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   747,   748,   749,  2983,
     764,    -1,    97,    -1,    -1,    -1,    -1,    -1,   166,    -1,
      -1,    -1,    -1,   764,    -1,    -1,    -1,    -1,    81,    -1,
     126,    -1,    -1,   181,    -1,   183,   132,    -1,  3012,    -1,
      -1,   126,  3016,    -1,    97,    -1,    -1,   132,    81,    -1,
      -1,     9,    10,   747,   748,   749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    97,    -1,   747,   748,   749,   763,
     166,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,
      -1,   166,   763,    -1,  3058,   181,    -1,   183,    -1,  3063,
      -1,    -1,    -1,   126,    -1,    -1,   181,    -1,   183,   132,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,   181,    -1,
     183,    -1,    -1,   166,    -1,    -1,   747,   748,   749,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,
     183,    -1,   763,    -1,   302,    -1,    -1,    -1,    -1,   747,
     748,   749,  3136,     9,    10,    -1,    -1,    -1,   126,    -1,
      -1,    -1,    -1,    -1,   132,   763,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3159,    -1,    -1,     9,    10,
      -1,    -1,    -1,    -1,    -1,   747,   748,   749,    -1,  3173,
     747,   748,   749,    -1,    -1,    -1,   302,    -1,   166,    -1,
      -1,   763,    -1,    -1,    -1,    -1,   763,   302,    -1,     9,
      10,  3195,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,     9,    10,
      -1,   747,   748,   749,    -1,    -1,    -1,  3221,  3222,   302,
      -1,    97,    -1,    -1,    -1,    -1,    -1,   763,     9,    10,
      81,    -1,   747,   748,   749,    -1,    -1,    -1,    -1,   302,
      -1,  3245,    -1,   747,   748,   749,    97,    -1,   763,    -1,
     126,    -1,  3256,  3257,    -1,    -1,   132,    -1,    -1,   763,
      -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   747,   748,   749,    -1,   126,    -1,    97,    -1,    -1,
      81,   132,    -1,  3287,  3288,    -1,    -1,   763,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    97,    -1,    -1,    -1,
      81,    -1,  3306,    -1,    -1,   181,   126,   183,    -1,    -1,
      -1,    -1,   132,    -1,   302,   166,    97,    -1,    -1,    -1,
       9,    10,    -1,    -1,  3328,   126,    -1,    -1,    -1,    -1,
     181,   132,   183,    -1,    -1,    -1,    -1,  3341,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   126,   166,    -1,     9,    10,
      -1,   132,    -1,    -1,    -1,    -1,    -1,    -1,     9,    10,
      -1,   181,    -1,   183,    -1,   166,    -1,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3381,    -1,    -1,
     181,    -1,   183,    -1,    -1,   166,  3390,  3391,    -1,    -1,
    3394,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     181,    -1,   183,    -1,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,  3417,  3418,    -1,    -1,    -1,    -1,    -1,
      81,     9,    10,    -1,    -1,    -1,   302,    -1,    -1,    -1,
      81,    -1,    -1,    -1,    -1,    -1,    97,   126,  3442,    81,
    3444,    -1,  3446,   132,  3448,    -1,    97,    -1,    -1,    -1,
      -1,   302,    -1,    -1,    -1,    97,    -1,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,   126,  3470,    -1,    -1,    -1,
      -1,   132,    -1,    -1,    -1,   126,    -1,   166,    -1,    -1,
      -1,   132,   302,    -1,   126,     9,    10,  3491,  3492,    -1,
     132,    -1,   181,    81,   183,    -1,    -1,    -1,    -1,    -1,
      -1,   302,    -1,    -1,    -1,   166,    -1,  3511,    -1,    97,
    3514,    -1,    -1,  3517,    -1,   166,    -1,    -1,  3522,    -1,
     181,   302,   183,    -1,   166,    -1,    -1,    -1,    -1,    81,
     181,  3535,   183,    -1,    -1,    -1,    -1,    -1,   126,   181,
      -1,   183,    -1,    -1,   132,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     9,    10,    81,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3570,  3571,    -1,   747,
     748,   749,    -1,    97,   126,    -1,    -1,    -1,   166,    -1,
     132,  3585,     9,    10,    -1,   763,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,     9,
      10,    -1,    -1,   302,   166,    -1,    -1,    -1,    -1,    -1,
      -1,   747,   748,   749,    -1,    -1,    -1,    81,    -1,   181,
      -1,   183,   747,   748,   749,  3639,    -1,   763,    -1,    -1,
      -1,   302,   166,    97,    -1,     9,    10,    -1,   763,    -1,
      -1,   302,    -1,    -1,    81,    -1,    -1,   181,    -1,   183,
     302,    -1,    -1,    -1,   747,   748,   749,    -1,    -1,    -1,
      97,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,    -1,
     763,    81,    -1,    -1,   747,   748,   749,    -1,    -1,    -1,
      -1,    -1,     9,    10,    -1,    -1,    -1,    97,  3702,   126,
     763,    -1,    -1,  3707,    -1,   132,    -1,    -1,    -1,    -1,
       9,    10,   166,    -1,   302,    -1,    -1,    81,    -1,     9,
      10,    -1,    -1,    -1,  3728,    -1,   126,   181,    -1,   183,
      -1,    -1,   132,    97,    -1,  3739,    -1,    -1,    -1,   166,
      -1,    -1,     9,    10,    -1,    -1,     9,    10,    -1,    -1,
     302,     9,    10,    -1,   181,    -1,   183,    -1,    -1,   747,
     748,   749,   126,    -1,    81,    -1,   166,    -1,   132,    -1,
      -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,   302,    -1,
      97,   181,    81,   183,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    -1,   166,    -1,    -1,    -1,    -1,    97,    -1,   126,
      -1,    -1,    -1,    -1,    81,   132,    -1,   181,    81,   183,
      -1,    -1,    -1,    81,    -1,    -1,    -1,   126,  3832,    -1,
      97,    -1,    -1,   132,    97,    -1,   126,    -1,    -1,    97,
      -1,    -1,   132,    -1,    -1,    -1,    -1,    -1,   302,   166,
      -1,  3855,     9,    10,    -1,    -1,    -1,    -1,    -1,   126,
      -1,    -1,    -1,   126,   181,   132,   183,   166,   126,   132,
      -1,   747,   748,   749,   132,   302,   166,    -1,    -1,    -1,
      -1,    -1,   181,    -1,   183,    -1,  3890,   763,    -1,    -1,
      -1,   181,    -1,   183,    -1,    -1,   747,   748,   749,   166,
      -1,    -1,   302,   166,    -1,     9,    10,    -1,   166,    -1,
      -1,    -1,   763,    -1,   181,    -1,   183,    -1,   181,    -1,
     183,    -1,    -1,   181,    81,   183,    -1,   747,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,    -1,
      97,    -1,    -1,   763,     9,    10,   747,   748,   749,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   763,    -1,    -1,    -1,   747,   748,   749,   126,
      -1,    -1,    -1,    -1,    -1,   132,    -1,    81,    -1,    -1,
      -1,    -1,   763,    -1,    -1,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    97,    -1,    -1,    -1,     9,    10,  4003,
    4004,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,   166,
      -1,    -1,   302,    -1,    -1,    -1,    81,    -1,    -1,    -1,
       9,    10,   126,    -1,   181,    -1,   183,    -1,   132,    -1,
      -1,    -1,    97,  4037,  4038,   302,  4040,    -1,    -1,   302,
      -1,    -1,    -1,    -1,   302,    -1,  4050,    -1,  4052,    -1,
      -1,  4055,    -1,    -1,    -1,    -1,    -1,    -1,   747,   748,
     749,   126,   166,    -1,  4068,    -1,  4070,   132,  4072,    81,
    4074,    -1,    -1,    -1,   763,    -1,    -1,   181,    -1,   183,
      -1,    -1,    -1,  4087,  4088,    97,   747,   748,   749,    -1,
      -1,    -1,    81,    -1,    -1,    -1,   747,   748,   749,    -1,
      -1,   166,   763,    -1,    -1,   747,   748,   749,    97,    -1,
      -1,    -1,   763,    -1,   126,    -1,   181,    -1,   183,    -1,
     132,   763,    -1,  4127,    -1,    -1,    -1,     9,    10,    -1,
      -1,    -1,  4136,    -1,     9,    10,    -1,   126,    -1,    -1,
      -1,    -1,    -1,   132,    -1,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,   747,
     748,   749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,
      -1,   183,    -1,    -1,    -1,   763,    -1,   166,    -1,    -1,
    4184,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,    -1,   183,   747,   748,   749,   302,    81,
      -1,     9,    10,    -1,    -1,    -1,    81,    -1,     9,    10,
    4214,   763,    -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    97,   747,   748,   749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,    -1,   763,
      -1,  4245,    -1,    -1,   126,    -1,    -1,     9,    10,    -1,
     132,   126,    -1,    81,    -1,    -1,    -1,   132,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,
      -1,     9,    10,    81,    -1,    -1,    -1,    -1,    -1,    -1,
      81,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,    97,
     302,   166,    -1,   747,   748,   749,    97,    -1,   126,   181,
      -1,   183,  4306,    -1,   132,    -1,   181,    -1,   183,   763,
      -1,    -1,    -1,   302,    -1,    -1,    -1,    -1,   126,    81,
     747,   748,   749,  4327,   132,   126,    -1,    -1,    -1,    -1,
    4334,   132,    -1,    -1,    -1,    97,   763,    -1,   166,    -1,
    4344,    -1,    -1,    81,    -1,     9,    10,   747,   748,   749,
      -1,    -1,    -1,   181,    -1,   183,    -1,    -1,   166,    97,
      -1,    -1,    -1,   763,   126,   166,    -1,    -1,    -1,    -1,
     132,    -1,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,
     181,    -1,   183,   747,   748,   749,    -1,    -1,   126,    -1,
      -1,    -1,    -1,    -1,   132,     9,    10,    -1,    -1,   763,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     9,    10,    81,  4422,   181,
     302,   183,    -1,    -1,    -1,  4429,  4430,   302,   166,    -1,
     747,   748,   749,    97,    -1,    -1,     9,    10,    -1,     9,
      10,    -1,    -1,   181,    -1,   183,   763,    -1,   747,   748,
     749,    -1,    -1,    -1,    -1,    -1,    -1,   747,   748,   749,
      -1,    -1,   126,    -1,   763,  4469,    -1,    81,   132,    -1,
      -1,    -1,    -1,   763,   302,    -1,    -1,    -1,    -1,    -1,
     747,   748,   749,    97,   747,   748,   749,    81,    -1,   747,
     748,   749,    -1,    -1,   302,    -1,   763,    -1,    -1,    -1,
     763,   302,   166,    97,    -1,   763,    -1,    -1,    81,    -1,
      -1,    81,   126,    -1,    -1,    -1,    -1,   181,   132,   183,
      -1,    -1,    -1,    -1,    97,    -1,  4530,    97,    -1,  4533,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,    -1,
     302,    -1,    -1,  4547,     9,    10,    -1,    -1,     9,    10,
      11,    -1,   166,   126,    -1,    -1,   126,  4561,    -1,   132,
      -1,    -1,   132,    -1,   302,    -1,    -1,   181,    -1,   183,
      -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,
     747,   748,   749,   166,    -1,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     9,    10,   763,    -1,   181,    -1,
     183,   181,    -1,   183,    -1,    -1,    81,    -1,    -1,    -1,
      81,  4625,    -1,  4627,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    97,    -1,    -1,    -1,    97,  4641,   302,    -1,
      -1,    -1,    -1,   747,   748,   749,    -1,    -1,    53,    54,
      55,    56,    -1,    -1,  4658,  4659,    -1,    -1,    -1,   763,
      -1,   126,    -1,    -1,    -1,   126,    -1,   132,    -1,    -1,
      -1,   132,    -1,  4677,     9,    10,    81,    -1,    -1,    -1,
      -1,    -1,   747,   748,   749,     9,    10,    -1,   302,    -1,
      -1,   264,    97,    -1,    -1,    -1,    81,    -1,   763,    -1,
      -1,   166,   107,   108,   109,   166,    -1,    -1,   302,    -1,
      95,    -1,    97,     9,    10,    -1,   181,    -1,   183,    -1,
     181,   126,   183,    -1,    -1,   295,    -1,   132,    -1,   302,
      -1,    -1,   302,     9,    10,   747,   748,   749,     9,    10,
      11,   126,    -1,    -1,    -1,    -1,    81,   132,    -1,    -1,
      -1,   763,    -1,   158,   159,    -1,    -1,    81,   747,   748,
     749,   166,    97,    -1,    -1,  4769,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    97,   763,    -1,   181,    -1,   183,    -1,
      -1,   166,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,
    4794,   126,    -1,    -1,    -1,    -1,   181,   132,   183,   264,
      -1,    97,   126,    -1,    -1,    81,  4810,    -1,   132,    -1,
      81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,
      -1,    97,    -1,    -1,   229,    -1,    97,    -1,    -1,    -1,
     126,   166,    -1,    -1,    -1,    -1,   132,   302,    -1,    -1,
      -1,   302,   166,    -1,    -1,    -1,   181,    -1,   183,    -1,
     126,    -1,    -1,    -1,    -1,   126,   132,   181,    -1,   183,
      -1,   132,    -1,    -1,    -1,   747,   748,   749,    -1,    -1,
     166,    -1,   747,   748,   749,    -1,  4880,     9,    10,    -1,
      -1,   763,    -1,    -1,    -1,   181,    -1,   183,   763,    -1,
     166,  4895,    -1,    -1,    -1,   166,    -1,   302,   303,    -1,
       9,    10,    11,    -1,    -1,   181,    -1,   183,    -1,    -1,
     181,    -1,   183,    -1,    -1,    -1,    -1,   302,    -1,   747,
     748,   749,    -1,    -1,    -1,  4929,    -1,    -1,    -1,   264,
       9,    10,    -1,    -1,    -1,   763,    -1,    -1,    -1,   747,
     748,   749,    -1,    -1,    -1,    -1,   747,   748,   749,    81,
      -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,
      -1,    -1,   763,    95,    -1,    97,    -1,   302,    -1,    -1,
    4974,    -1,    81,    -1,    -1,    -1,    -1,    -1,   302,    -1,
      -1,    -1,    -1,    -1,    -1,   747,   748,   749,    97,    -1,
     395,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,  5003,
     132,   763,    81,    -1,    -1,    -1,   302,    -1,    -1,   747,
     748,   749,    -1,    -1,    -1,    -1,    -1,   126,    97,    -1,
      -1,    -1,    -1,   132,    -1,   763,   302,    -1,    -1,    -1,
      -1,   302,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,   181,
      -1,   183,    -1,   132,    -1,    -1,    -1,   166,    -1,   464,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,  5075,   181,  5077,   183,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   747,   748,   749,    34,   166,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,
      -1,    -1,   181,    -1,   183,   634,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    61,    -1,    -1,    -1,   413,    -1,    -1,
      -1,    -1,    -1,    -1,   529,    -1,   531,    -1,  5132,   658,
      -1,   536,    -1,   747,   748,   749,    -1,    -1,    -1,    61,
      -1,    15,    -1,   672,    18,    -1,    -1,    -1,    -1,   763,
      -1,    -1,    -1,   747,   748,   749,    -1,   110,   111,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,   763,
     302,    -1,    -1,    -1,   747,   748,   749,   747,   748,   749,
      -1,    -1,   130,    57,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,   302,    -1,   600,    -1,  5201,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,
      -1,    -1,    86,    -1,    -1,    89,    -1,    -1,    -1,    -1,
     168,   169,    -1,   302,    -1,   173,  5230,    -1,    -1,   177,
      -1,   105,   106,    -1,    -1,    -1,  5240,    -1,   643,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   168,   169,   777,    -1,
      -1,   173,   200,    -1,    -1,   177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5268,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,  5278,    -1,  5280,    -1,   200,    -1,
      -1,    -1,   747,   748,   749,    -1,   747,   748,   749,    -1,
      -1,   165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,
      -1,    -1,  5316,    -1,    -1,    -1,  5320,    -1,   847,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   732,    -1,   277,
      -1,    -1,  5336,    -1,    -1,    -1,    -1,    -1,   743,    -1,
      -1,    -1,   747,   748,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   301,    -1,   277,    -1,    -1,    -1,    -1,
      -1,    -1,   747,   748,   749,    -1,    -1,  5371,    -1,    -1,
      -1,   900,    -1,    -1,    -1,    -1,   905,    -1,    -1,   301,
      -1,   329,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,  5400,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,   935,   329,    -1,   938,
      -1,    -1,   747,   748,   749,    -1,   945,    -1,    -1,    71,
      -1,   369,    -1,   747,   748,   749,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5447,    -1,    -1,  5450,   369,    -1,   402,
      -1,   747,   748,   749,   983,    -1,    -1,    -1,    -1,    -1,
      -1,   113,    -1,   416,    -1,   418,    -1,    -1,    -1,    -1,
    5474,   747,   748,   749,    -1,    -1,   747,   748,   749,    -1,
    5484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5492,    -1,
       7,    -1,    -1,    -1,    -1,   448,    -1,    -1,   150,    -1,
      -1,    -1,    -1,    -1,    -1,  1034,  1035,  1036,  1037,    -1,
     463,  1040,   386,    -1,    -1,    -1,  1045,    -1,    -1,  5523,
     394,    -1,    -1,    -1,    41,  5529,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   481,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   496,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,   481,
      -1,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5594,    -1,    -1,    -1,    -1,  5599,    -1,    -1,   115,    -1,
      -1,    -1,  5606,   120,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   747,   748,   749,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,
      -1,    -1,  5636,    -1,    -1,    -1,    -1,    -1,   747,   748,
     749,   594,    -1,    -1,    -1,  5649,    -1,    -1,   601,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   611,    -1,
      -1,    -1,    -1,    -1,    -1,  5669,    -1,    -1,   747,   748,
     749,   624,    -1,    -1,  1203,    -1,    -1,  1206,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,   647,
      -1,    -1,   655,    -1,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
     673,   238,  5726,    -1,    -1,   647,  5730,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,  5763,
      -1,    -1,    -1,   280,   281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5783,
      -1,    -1,    -1,    -1,    -1,    -1,  5790,    -1,   736,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1329,    -1,  1331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   736,   467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   698,    -1,    -1,   701,  5832,    -1,
    5834,  5835,    -1,    -1,    -1,    -1,   710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,   500,   501,
     502,   503,   504,    -1,   506,   507,   508,   509,   510,   511,
     512,   513,    -1,   515,   516,   517,  5870,    -1,    -1,    -1,
      -1,    -1,    -1,  1402,  5878,  1404,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5899,    -1,    -1,    -1,    -1,
      -1,  1430,    -1,    -1,  5908,   422,    -1,    -1,    -1,    -1,
     427,    -1,  1441,  1442,    -1,    -1,    -1,    -1,  1447,    -1,
     437,    -1,  1451,  1452,  1453,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1462,  1463,  1464,    -1,    -1,    -1,  1468,
      -1,  1470,  1471,  1472,  1473,  1474,    -1,  1476,    -1,    -1,
    1479,  1480,  5956,    -1,    -1,    -1,    -1,    -1,  1487,    -1,
    1489,   613,   614,  1492,  1493,  5969,  1495,  1496,  1497,    -1,
    1499,  1500,  1501,    -1,    -1,    -1,    -1,  1506,    -1,    -1,
    1509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1517,  1518,
      -1,  1520,  1521,  1522,    -1,    -1,  1525,  1526,  1527,  1528,
    1529,  1530,  1531,    -1,  1533,  1534,  1535,  1536,  1537,  1538,
      -1,  1540,  1541,    -1,  1543,  1544,  1545,  1546,  1547,  1548,
    1549,    -1,    -1,  1552,  1553,  1554,  1555,    -1,  1557,  1558,
    1559,    -1,  1561,    -1,  1563,    -1,  1565,    -1,    -1,    -1,
    1569,  1570,  1571,    -1,    -1,  1574,  1575,  1576,  1577,  1578,
      -1,  1580,    -1,    -1,    -1,    -1,    -1,    -1,  1587,    -1,
      -1,    -1,    -1,  1592,    -1,    -1,    -1,    -1,    -1,    -1,
    1599,    -1,   634,    -1,  1603,  1604,  1605,  1606,   595,  1608,
    1609,    -1,    -1,  1612,  1613,  1614,  1615,  1616,  1617,  1618,
    1619,  1620,  1621,  1622,  1623,  1624,   658,    -1,  1627,   616,
      -1,    -1,    -1,  1632,   621,    -1,    -1,    -1,    -1,  1638,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,     8,    -1,
      -1,    -1,    -1,    -1,    -1,   652,    -1,    -1,    -1,    -1,
      -1,  1670,    -1,    -1,    -1,    -1,  1675,    27,    -1,    29,
      -1,    31,    -1,    33,    -1,    -1,  1685,    -1,    -1,    -1,
      32,    41,    34,    -1,    -1,    -1,   683,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    63,    -1,    65,    66,  1716,    -1,    61,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    -1,   777,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,  1753,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,    -1,    -1,    -1,   110,   111,
     120,    -1,    -1,   115,    -1,    -1,    -1,  1776,    -1,    -1,
      -1,   131,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,  1801,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   847,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   192,   193,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   202,   203,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   214,   215,   216,   217,    -1,   219,
      -1,    -1,    -1,   905,   224,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,   238,   239,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   935,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,   190,   945,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,    -1,
     280,    -1,   282,    -1,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,   298,    -1,
      -1,    -1,    -1,    -1,    -1,   305,    -1,    -1,    -1,   301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   334,    -1,   336,   329,    -1,   331,
      -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,   276,    -1,
     350,    -1,    -1,    -1,    -1,  1037,   348,    -1,   350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,   301,    -1,  2024,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,  2038,
      -1,    -1,    -1,    -1,    -1,    -1,   396,    -1,    -1,   391,
      -1,   329,    -1,   331,    -1,    -1,    -1,  2056,   408,   401,
    2059,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2067,  2068,
      -1,    -1,   350,    -1,   416,    -1,    -1,   427,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     440,   369,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,
      -1,    -1,    -1,   453,    -1,    -1,   456,    -1,    -1,   459,
      -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   401,   474,    -1,    -1,    -1,    -1,  2128,
    2129,   473,    -1,    -1,    -1,    -1,    -1,    -1,   416,    -1,
      -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2153,  2154,  2155,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2167,    -1,
      -1,  1203,    -1,    -1,    -1,    -1,    -1,    -1,   520,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   533,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   573,  2231,    -1,    -1,  2234,    -1,   579,    -1,    -1,
     590,    -1,   520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2252,    -1,   533,  2255,  2256,    -1,  2258,
    2259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2267,   619,
    2269,    -1,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     640,    -1,    -1,    -1,    -1,   573,   638,  1329,  2297,  1331,
      -1,   579,   652,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2312,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   671,    -1,    -1,   674,    -1,    -1,    -1,    -1,    -1,
    2329,    -1,    -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2343,    -1,    -1,    -1,   690,   691,
      -1,    -1,    -1,    -1,    -1,    -1,   706,    -1,    -1,  2358,
     638,   703,    -1,    -1,    -1,    -1,   716,   645,    -1,    -1,
    1402,    -1,  1404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   741,    -1,    -1,    -1,    -1,    -1,   675,  1430,  2398,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   690,   691,    -1,  1447,    -1,    -1,    -1,  1451,
      -1,  1453,   764,    -1,    -1,   703,    -1,    -1,    -1,    -1,
    1462,  1463,    -1,    -1,    -1,    -1,  1468,    -1,  1470,  1471,
    1472,  1473,  1474,    -1,  1476,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1487,    -1,  1489,  2457,    -1,
    1492,  1493,    -1,  1495,  1496,    -1,    -1,  1499,  1500,  1501,
      -1,  2470,    -1,  2472,  1506,    -1,    -1,  1509,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1517,  1518,    -1,  1520,    -1,
    1522,    -1,    -1,  1525,  1526,  1527,  1528,  1529,  1530,  1531,
      -1,  1533,  1534,  1535,  1536,  1537,    -1,    -1,  1540,  1541,
      -1,    -1,  1544,  1545,  1546,    -1,    -1,    -1,    -1,    -1,
    1552,  1553,  1554,    -1,    -1,  1557,  1558,  1559,    -1,  1561,
      -1,  1563,    -1,  1565,    -1,    -1,    -1,  1569,  1570,  1571,
      -1,    -1,  1574,  1575,  1576,  1577,  1578,    -1,  1580,    -1,
      -1,    -1,    -1,    -1,    -1,  1587,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2562,    -1,    -1,    -1,  1599,    -1,    -1,
      -1,  1603,  1604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2629,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1670,    -1,
      -1,    -1,    -1,  1675,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1685,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1776,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2766,    -1,    -1,
    2769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2778,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2786,    -1,  2788,
      -1,  2790,    -1,  2792,  2793,  2794,  2795,  2796,  2797,    -1,
    2799,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2807,    -1,
    2809,    -1,    -1,  2812,  2813,  2814,  2815,    -1,    -1,  2818,
    2819,    -1,    -1,  2822,    -1,  2824,    -1,  2826,    -1,  2828,
      -1,    -1,    -1,  2832,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2840,    -1,  2842,    -1,  2844,  2845,  2846,  2847,  2848,
      -1,    -1,  2851,  2852,  2853,    -1,  2855,    -1,    -1,  2858,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2871,    -1,    -1,     7,     8,  2876,    -1,    -1,
    2879,    -1,  2881,  2882,  2883,    -1,    -1,  2886,    -1,    -1,
      32,    -1,    34,  2892,    -1,    27,    -1,    29,  2897,    31,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,  2913,    -1,    -1,    -1,    -1,    61,
    2919,    -1,    -1,  2922,    -1,    -1,  2925,    -1,    -1,    -1,
      -1,    63,    -1,    65,    66,  2934,  2935,  2936,    -1,    -1,
      -1,    73,  2941,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2953,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    -1,    99,   110,   111,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
     112,    -1,    -1,    -1,  2983,    -1,    -1,    -1,   120,    -1,
      -1,    -1,  2024,    -1,    -1,   137,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,    -1,    -1,  2038,    -1,    -1,   141,
      -1,   143,    -1,  3012,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2056,    -1,    -1,  2059,    -1,  3028,
      -1,    -1,  3031,  3032,  3033,  2067,  2068,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     202,   203,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,   219,    -1,    -1,
      -1,    -1,   224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,   238,   239,    -1,   251,
     252,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2153,  2154,  2155,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,    -1,   280,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,
    3159,    -1,    -1,    -1,    -1,   297,   298,    -1,    -1,    -1,
      -1,    -1,    -1,   305,  3173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   329,    -1,   331,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   334,    -1,   336,    -1,   348,    -1,   350,    -1,
      -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,   350,    -1,
    2252,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,   376,  2267,    -1,  2269,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3257,   401,
      -1,    -1,    -1,    -1,   396,  2297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   416,    -1,   408,    -1,    -1,    -1,
    2312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   427,    -1,  2329,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3306,   440,    -1,
      -1,    -1,    -1,    -1,    -1,  3314,    -1,    -1,    -1,    -1,
      -1,   453,    -1,    -1,   456,    -1,  2358,   459,    -1,  3328,
      -1,   473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   474,    -1,    -1,    -1,    -1,    -1,  2380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   520,    -1,
      -1,    -1,  3381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   533,  3391,    -1,    -1,  3394,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3417,  3418,
      -1,    -1,    -1,    -1,    -1,  2457,    -1,    -1,    -1,    -1,
    3429,   573,    -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,
      -1,    -1,    -1,  3442,    -1,  3444,    -1,  3446,    -1,  3448,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3470,    -1,    -1,    -1,    -1,    -1,  3476,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   619,    -1,    -1,
     622,    -1,  3491,  3492,    -1,    -1,   638,    -1,    -1,    -1,
     632,    -1,    -1,   645,    -1,    -1,    -1,    -1,   640,    -1,
      -1,    -1,  3511,    -1,    -1,  3514,    -1,    -1,  3517,    -1,
     652,    -1,    -1,  3522,    -1,    -1,    -1,    -1,    -1,    -1,
    2562,    -1,    -1,   675,    -1,    -1,  3535,    -1,    -1,   671,
      -1,    -1,   674,    -1,    -1,    -1,    -1,    -1,   690,   691,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   703,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3570,  3571,    -1,   706,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   716,    -1,  3585,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2629,    -1,    -1,
    3599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   741,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3639,    -1,    -1,    -1,    -1,    -1,    -1,  3646,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2689,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    -1,    -1,    -1,    31,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,  3728,
      -1,    -1,    -1,    -1,  2766,    -1,  3735,  2769,    -1,    -1,
    3739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    65,    66,    -1,  2786,    -1,    -1,    -1,  2790,    73,
    2792,  2793,  2794,  2795,  2796,  2797,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2807,    -1,  2809,    -1,    -1,
    2812,  2813,  2814,  2815,    -1,    99,  2818,  2819,    -1,    -1,
    2822,    -1,  2824,    -1,  2826,    -1,  2828,    -1,    -1,    -1,
    2832,    -1,    -1,    -1,    -1,    -1,   120,    -1,  2840,    -1,
    2842,    -1,  2844,    -1,  2846,  2847,  2848,   131,    -1,  2851,
    2852,  2853,    -1,  2855,    -1,    -1,  2858,   141,    -1,   143,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2879,    -1,  2881,
    2882,  2883,    -1,    -1,  2886,    -1,    -1,    -1,    -1,    -1,
    2892,    -1,    -1,    -1,   178,  2897,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,   193,
      -1,  2913,    -1,    -1,    -1,    -1,    -1,    -1,   202,   203,
      -1,    -1,    -1,  2925,    -1,    -1,    -1,    -1,    -1,    -1,
     214,   215,    -1,   217,  2936,   219,    -1,    -1,    -1,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,   238,   239,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   278,    -1,   280,    -1,   282,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3012,    -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,    -1,
      -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   336,    -1,    -1,    -1,    -1,    -1,    -1,   343,
      -1,    -1,    -1,    -1,    -1,    -1,   350,    -1,  4037,  4038,
      -1,  4040,    16,    17,    -1,    -1,    -1,    -1,    22,    23,
      -1,  4050,    -1,  4052,    -1,    -1,  4055,   371,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4068,
      -1,  4070,    -1,  4072,    -1,  4074,    -1,    -1,    -1,    -1,
      -1,    -1,   396,    -1,    58,    -1,    -1,    -1,  4087,  4088,
      -1,    -1,    -1,    -1,   408,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   427,    -1,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   440,  3159,  4127,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4136,    -1,   453,
      -1,  3173,   456,    -1,    -1,   459,    -1,    -1,    -1,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,   145,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   155,   156,   157,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4214,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4245,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   265,   266,   267,    -1,    -1,  3328,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   619,    -1,    -1,   622,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   290,   291,   632,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   640,    -1,  4327,    -1,
      -1,    -1,    -1,    -1,    -1,  4334,    -1,    -1,   652,    -1,
      -1,    -1,    -1,    -1,    -1,  4344,    -1,    -1,    -1,  3381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   671,    -1,  3391,
     674,    -1,  3394,   337,    -1,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,    -1,    -1,  3417,  3418,    -1,    -1,    -1,
      16,    17,   706,    -1,    -1,    -1,    22,    23,    -1,    -1,
      -1,    -1,   716,    -1,    -1,    -1,    32,    -1,    -1,    -1,
    3442,    -1,  3444,    -1,  3446,    -1,  3448,    -1,   392,    -1,
     394,    -1,    -1,    -1,    -1,    -1,    -1,   741,    -1,    -1,
    4429,  4430,    58,    32,    -1,    34,    -1,    -1,  3470,    -1,
      -1,    -1,    -1,   417,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3491,
    3492,    -1,    61,    -1,    90,   439,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   450,   451,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3522,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,
      -1,    -1,    -1,  3535,    -1,    -1,    -1,    -1,   482,    -1,
      -1,   110,   111,    -1,    -1,    -1,   115,   491,   144,   145,
      -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   155,
     156,   157,    -1,    -1,  4533,    -1,    -1,    -1,  3570,  3571,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,
      -1,    -1,    -1,  3585,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4561,   537,   538,   539,    -1,    -1,    -1,    -1,
      -1,   545,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   209,    -1,    -1,    -1,   561,   562,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3639,   234,    -1,
      -1,   585,   586,    -1,   240,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4625,    -1,  4627,    -1,
     604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   265,
     266,   267,  4641,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,  4658,
    4659,    -1,   636,    -1,   290,   291,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,  4677,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3728,    -1,    -1,    -1,
      -1,    -1,   301,    -1,    -1,    -1,    -1,  3739,    -1,    -1,
      -1,   337,    -1,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,   695,    -1,    -1,   698,    -1,    -1,   701,    -1,   355,
     329,    -1,   331,    -1,   708,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   348,
     724,   350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,   394,   743,
     369,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   417,   391,    -1,    -1,  4794,    -1,    -1,    -1,    -1,
      -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,  4807,    -1,
      -1,  4810,    -1,   439,    -1,    -1,    -1,   416,    -1,    -1,
      -1,    -1,    -1,    -1,   450,   451,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    16,    17,
      -1,    -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,   537,   538,   539,    -1,    -1,    -1,    -1,    -1,   545,
     546,   520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,   533,   561,   562,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4971,    -1,   573,  4974,    -1,    -1,   604,    -1,
     579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5003,  4037,  4038,    -1,    -1,    -1,
     636,    -1,    -1,    -1,    -1,    -1,   144,   145,  4050,   147,
    4052,    -1,    -1,  4055,    -1,    -1,    -1,   155,   156,   157,
      -1,    -1,    -1,    -1,    -1,    -1,  4068,    -1,  4070,   638,
    4072,    -1,  4074,    -1,    -1,    -1,   645,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4087,  4088,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   695,
      -1,    -1,   698,    -1,    -1,   701,   675,    -1,  5077,    -1,
      -1,   209,   708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   690,   691,    -1,    -1,    -1,    -1,    -1,   724,    -1,
      -1,    -1,    -1,    -1,   703,    -1,   234,    -1,    -1,    -1,
       6,    -1,   240,    -1,    -1,    -1,    -1,   743,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,   265,   266,   267,
      -1,    -1,    -1,    -1,    40,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   290,   291,    -1,    -1,    -1,    -1,    -1,    65,
      66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   337,
      -1,   339,   340,  4245,   110,   111,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,   129,    -1,    -1,     5,    -1,     7,    -1,
      -1,  5240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,   392,    -1,   394,    -1,    -1,  5268,
      39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5278,
      -1,  5280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   417,
      -1,    -1,    61,    -1,    -1,  4327,    -1,    -1,    -1,    -1,
      -1,    -1,  4334,    -1,    73,   201,    -1,    -1,    -1,    -1,
      -1,   439,  4344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   491,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4429,  4430,    -1,
      -1,    -1,    -1,    -1,  5403,  5404,    -1,    -1,    -1,   537,
     538,   539,    -1,   182,    -1,    -1,   312,   545,   546,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   327,    -1,   561,   562,    -1,    -1,    -1,    -1,    -1,
     336,    -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,   348,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   359,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,    -1,
      -1,    -1,   251,   252,   253,  5484,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4533,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   415,
     416,    -1,    -1,   419,  5523,   421,    -1,    -1,    -1,  4561,
    5529,    -1,   301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     446,   447,   321,    -1,    -1,    -1,    -1,    -1,   454,   455,
     329,    -1,   331,    -1,    -1,    -1,    -1,   695,    -1,    -1,
     698,    -1,    -1,   701,    -1,   471,    -1,    -1,    -1,    -1,
      -1,   350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4625,    -1,  4627,   724,   493,    -1,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,  4641,
      -1,    -1,    -1,    -1,    -1,   743,    -1,    -1,   514,    -1,
      -1,    -1,   391,    -1,    -1,    -1,  4658,  4659,    -1,    -1,
      -1,    -1,   401,    -1,    -1,    -1,   405,  5636,    -1,    -1,
      -1,    -1,    -1,   412,    -1,  4677,    -1,   416,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5669,    -1,    -1,   569,   443,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   583,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   594,    -1,
      -1,   597,   598,    -1,   473,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,   612,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   520,   648,    -1,    -1,    -1,    -1,    -1,    -1,   655,
      -1,    -1,  4794,    -1,   533,    -1,   535,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   673,  4810,   675,
      -1,    -1,    -1,    -1,  5783,    -1,    -1,    -1,    -1,    -1,
      -1,  5790,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   573,    -1,    -1,    -1,    -1,    -1,
     579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   725,
      -1,    -1,    -1,    -1,    -1,   731,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   638,
      -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5899,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   690,   691,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   703,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4974,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5969,  5003,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5077,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5240,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5278,    -1,  5280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5529,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5636,    -1,    -1,    -1,   101,   102,
     103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5669,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
      -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,
      -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,
     173,   174,    -1,   176,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5783,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,  5969,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,     6,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,
      -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,
      -1,   170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,
      -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      25,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,   269,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
     151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,
      -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,
      -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,
      -1,   292,    -1,   294,   295,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    95,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,   168,   169,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    95,    -1,    -1,    -1,    -1,    -1,   101,   102,
     103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
      -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,
      -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,
      -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,
      -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,
     169,   170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,
      -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,   114,    -1,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
     151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,
      -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,
      -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,
      -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,   168,   169,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,
     103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
      -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,
      -1,    -1,   165,    -1,    -1,   168,   169,   170,    -1,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,
      -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,
     169,   170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,
      -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
     151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,
      -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,   170,
      -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,
      -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,   168,   169,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,
     103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
     153,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,
      -1,    -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,
      -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,
      -1,   170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,
      -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
     765,   766,    -1,    -1,   769,   770,    17,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
     151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,
      -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,   170,
      -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,
      -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,
      17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,    -1,
      -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,    -1,
      -1,   168,    -1,   170,    -1,   172,   173,   174,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
     217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,   286,
      -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,
      -1,    -1,   769,   770,    17,    18,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,   102,
     103,    -1,   105,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,   122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
      -1,   154,    -1,    -1,    -1,    -1,    -1,   160,    -1,   162,
      -1,    -1,   165,    -1,    -1,   168,    -1,   170,    -1,   172,
     173,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,    -1,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,   217,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,   228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,   272,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   285,   286,    -1,    -1,    -1,    -1,    -1,   292,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,
     753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,    18,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    -1,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,
      -1,   160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,
      -1,   170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,
      -1,    -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,
     769,   770,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,   105,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,    -1,
      -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,   165,
      -1,    -1,    -1,    -1,   170,    -1,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,   205,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,   255,
      -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    18,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,
     766,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    24,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    24,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    32,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    32,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,   281,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,     6,
       7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,   281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
       6,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,     6,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    35,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    29,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    38,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,    -1,    -1,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,
      -1,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,    -1,
      -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,
     461,    -1,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,    -1,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,    -1,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
     581,   582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,    -1,   618,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,   630,
     631,    -1,   633,   634,   635,   636,   637,   638,   639,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,   650,
     651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,   670,
      -1,   672,   673,    36,   675,    -1,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,    -1,   698,   699,   700,
     701,   702,   703,   704,   705,    -1,   707,   708,   709,    -1,
     711,   712,   713,   714,    -1,    -1,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,    96,    -1,   736,   737,    -1,    -1,   740,
      -1,   742,   743,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   764,    -1,    -1,    -1,   130,    -1,    -1,
      -1,    -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    36,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    11,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    17,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,    16,    17,    -1,   747,    -1,    -1,    22,    23,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,   145,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   155,   156,   157,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   265,   266,   267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   290,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    17,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    17,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    17,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    18,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    45,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,    -1,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    29,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    76,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,    -1,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,    -1,    -1,
     337,   338,   339,   340,   341,    -1,    -1,   344,   345,   346,
     347,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,
      -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
      -1,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,   455,    -1,
     457,   458,    -1,    -1,   461,    -1,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,    -1,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,   581,   582,   583,   584,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
      -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,    -1,   633,   634,   635,   636,
     637,   638,   639,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,
     657,   658,   659,    -1,   661,    -1,   663,   664,   665,   666,
      -1,   668,   669,   670,    -1,   672,   673,    -1,   675,    -1,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
      29,   698,   699,   700,   701,   702,   703,   704,   705,    38,
     707,   708,   709,    -1,   711,   712,   713,   714,    -1,    -1,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,    -1,    -1,   736,
     737,    -1,    -1,   740,    -1,   742,   743,    76,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,    -1,    -1,   337,   338,
     339,   340,   341,    -1,    -1,   344,   345,   346,   347,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,   370,    -1,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,    -1,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,    -1,   457,   458,
      -1,    -1,   461,    -1,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,   581,   582,   583,   584,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,    -1,   618,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,    -1,   633,   634,   635,   636,   637,   638,
     639,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,
     659,    -1,   661,    -1,   663,   664,   665,   666,    -1,   668,
     669,   670,    -1,   672,   673,    -1,   675,    -1,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,    29,   698,
     699,   700,   701,   702,   703,   704,   705,    38,   707,   708,
     709,    -1,   711,   712,   713,   714,    -1,    -1,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,    -1,    -1,   736,   737,    -1,
      -1,   740,    -1,   742,   743,    76,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,    -1,    -1,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,
      -1,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,    -1,
      -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,
     461,    -1,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,    -1,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,    -1,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
     581,   582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,    -1,   618,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,   630,
     631,    -1,   633,   634,   635,   636,   637,   638,   639,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,   650,
     651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,   670,
      -1,   672,   673,    -1,   675,    -1,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,    29,   698,   699,   700,
     701,   702,   703,   704,   705,    38,   707,   708,   709,    -1,
     711,   712,   713,   714,    -1,    -1,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,
      -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
     223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,    -1,    -1,   337,   338,   339,   340,   341,    -1,
      -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,    -1,
      -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    -1,    -1,    -1,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,    -1,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,    -1,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,   581,   582,
     583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,    -1,   618,    -1,   620,   621,    -1,
     623,   624,    -1,   626,   627,   628,   629,   630,   631,    -1,
     633,   634,   635,   636,   637,   638,   639,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,   650,   651,    -1,
      -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,
     663,   664,   665,   666,    -1,   668,   669,   670,    -1,   672,
     673,    -1,   675,    -1,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,    29,   698,   699,   700,   701,   702,
     703,   704,   705,    38,   707,   708,   709,    -1,   711,   712,
     713,   714,    -1,    -1,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,    -1,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
      -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,   344,
     345,   346,   347,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,
      -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
     455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,    -1,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,    -1,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,   581,   582,   583,   584,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,    -1,   618,    -1,   620,   621,    -1,   623,   624,
      -1,   626,   627,   628,   629,   630,   631,    -1,   633,   634,
     635,   636,   637,   638,   639,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,   650,   651,    -1,    -1,   654,
      -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,   664,
     665,   666,    -1,   668,   669,   670,    -1,   672,   673,    -1,
     675,    -1,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,    29,   698,   699,   700,   701,   702,   703,   704,
     705,    38,   707,   708,   709,    -1,   711,   712,   713,   714,
      -1,    -1,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,    -1,
      -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,    -1,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,    -1,    -1,
     337,   338,   339,   340,   341,    -1,    -1,   344,   345,   346,
     347,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,
      -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
      -1,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,   455,    -1,
     457,   458,    -1,    -1,   461,    -1,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,    -1,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,   581,   582,   583,   584,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
      -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,    -1,   633,   634,   635,   636,
     637,   638,   639,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,
     657,   658,   659,    -1,   661,    -1,   663,   664,   665,   666,
      -1,   668,   669,   670,    -1,   672,   673,    -1,   675,    -1,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
      29,   698,   699,   700,   701,   702,   703,   704,   705,    38,
     707,   708,   709,    -1,   711,   712,   713,   714,    -1,    -1,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,    -1,    -1,   736,
     737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,    -1,    -1,   337,   338,
     339,   340,   341,    -1,    -1,   344,   345,   346,   347,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,   370,    -1,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,    -1,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,    -1,   457,   458,
      -1,    -1,   461,    -1,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,   581,   582,   583,   584,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,    -1,   618,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,    -1,   633,   634,   635,   636,   637,   638,
     639,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,
     659,    -1,   661,    -1,   663,   664,   665,   666,    -1,   668,
     669,   670,    -1,   672,   673,    -1,   675,    -1,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,    29,   698,
     699,   700,   701,   702,   703,   704,   705,    38,   707,   708,
     709,    -1,   711,   712,   713,   714,    -1,    -1,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,    -1,    -1,   736,   737,    -1,
      -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,    -1,    -1,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,
      -1,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,    -1,
      -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,
     461,    -1,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,    -1,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,    -1,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
     581,   582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,    -1,   618,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,   630,
     631,    -1,   633,   634,   635,   636,   637,   638,   639,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,   650,
     651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,   670,
      -1,   672,   673,    -1,   675,    -1,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,    29,   698,   699,   700,
     701,   702,   703,   704,   705,    38,   707,   708,   709,    -1,
     711,   712,   713,   714,    -1,    -1,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,
      -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
     223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,    -1,    -1,   337,   338,   339,   340,   341,    -1,
      -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,    -1,
      -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    -1,    -1,    -1,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,    -1,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,    -1,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,   581,   582,
     583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,    -1,   618,    -1,   620,   621,    -1,
     623,   624,    -1,   626,   627,   628,   629,   630,   631,    -1,
     633,   634,   635,   636,   637,   638,   639,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,   650,   651,    -1,
      -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,
     663,   664,   665,   666,    -1,   668,   669,   670,    -1,   672,
     673,    -1,   675,    -1,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,    29,   698,   699,   700,   701,   702,
     703,   704,   705,    38,   707,   708,   709,    -1,   711,   712,
     713,   714,    -1,    -1,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,    -1,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
      -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,   344,
     345,   346,   347,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,
      -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
     455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,    -1,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,    -1,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,   581,   582,   583,   584,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,    -1,   618,    -1,   620,   621,    -1,   623,   624,
      -1,   626,   627,   628,   629,   630,   631,    -1,   633,   634,
     635,   636,   637,   638,   639,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,   650,   651,    -1,    -1,   654,
      -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,   664,
     665,   666,    -1,   668,   669,   670,    -1,   672,   673,    -1,
     675,    -1,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,    29,   698,   699,   700,   701,   702,   703,   704,
     705,    38,   707,   708,   709,    -1,   711,   712,   713,   714,
      -1,    -1,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,    -1,
      -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,    -1,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,    -1,    -1,
     337,   338,   339,   340,   341,    -1,    -1,   344,   345,   346,
     347,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,
      -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
      -1,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,   455,    -1,
     457,   458,    -1,    -1,   461,    -1,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,    -1,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,   581,   582,   583,   584,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
      -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,    -1,   633,   634,   635,   636,
     637,   638,   639,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,
     657,   658,   659,    -1,   661,    -1,   663,   664,   665,   666,
      -1,   668,   669,   670,    -1,   672,   673,    -1,   675,    -1,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
      29,   698,   699,   700,   701,   702,   703,   704,   705,    38,
     707,   708,   709,    -1,   711,   712,   713,   714,    -1,    -1,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,    -1,    -1,   736,
     737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,    -1,    -1,   337,   338,
     339,   340,   341,    -1,    -1,   344,   345,   346,   347,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,   370,    -1,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,    -1,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,    -1,   457,   458,
      -1,    -1,   461,    -1,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,   581,   582,   583,   584,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,    -1,   618,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,    -1,   633,   634,   635,   636,   637,   638,
     639,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,
     659,    -1,   661,    -1,   663,   664,   665,   666,    -1,   668,
     669,   670,    -1,   672,   673,    -1,   675,    -1,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,    29,   698,
     699,   700,   701,   702,   703,   704,   705,    38,   707,   708,
     709,    -1,   711,   712,   713,   714,    -1,    -1,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,    -1,    -1,   736,   737,    -1,
      -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,    -1,    -1,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,
      -1,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,    -1,
      -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,
     461,    -1,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,    -1,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,    -1,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
     581,   582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,    -1,   618,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,   630,
     631,    -1,   633,   634,   635,   636,   637,   638,   639,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,   650,
     651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,   670,
      -1,   672,   673,    -1,   675,    -1,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,    29,   698,   699,   700,
     701,   702,   703,   704,   705,    38,   707,   708,   709,    -1,
     711,   712,   713,   714,    -1,    -1,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,
      -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
     223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,    -1,    -1,   337,   338,   339,   340,   341,    -1,
      -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,    -1,
      -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    -1,    -1,    -1,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,    -1,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,    -1,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,   581,   582,
     583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,    -1,   618,    -1,   620,   621,    -1,
     623,   624,    -1,   626,   627,   628,   629,   630,   631,    -1,
     633,   634,   635,   636,   637,   638,   639,    -1,   641,   642,
     643,    -1,   645,   646,   647,   648,    -1,   650,   651,    -1,
      -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,
     663,   664,   665,   666,    -1,   668,   669,   670,    29,   672,
     673,    -1,   675,    -1,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,    -1,   698,   699,   700,   701,   702,
     703,   704,   705,    -1,   707,   708,   709,    -1,   711,   712,
     713,   714,    -1,    -1,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,    -1,    93,   736,   737,    -1,    -1,   740,    -1,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,    -1,    -1,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
     361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,
      -1,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,    -1,
      -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,
     461,    -1,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,    -1,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,    -1,    -1,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
     581,   582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,    -1,   618,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,   630,
     631,    -1,   633,   634,   635,   636,   637,   638,   639,    -1,
     641,   642,   643,    -1,   645,   646,   647,   648,    -1,   650,
     651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,
     661,    -1,   663,   664,   665,   666,    -1,   668,   669,   670,
      -1,   672,   673,    -1,   675,    -1,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,    -1,   698,   699,   700,
     701,   702,   703,   704,   705,    -1,   707,   708,   709,    -1,
     711,   712,   713,   714,    37,    38,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,
      -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    45,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    46,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    57,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    57,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    61,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    61,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    61,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    61,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    61,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,    -1,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,    -1,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,
      -1,    -1,    -1,   769,   770,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   770,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,    -1,
     769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   105,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   168,   169,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   243,   244,   245,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    95,   740,
     741,   742,   743,   100,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   753,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    95,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,   747,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   200,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,    -1,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,    -1,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,    -1,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,    -1,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,    -1,
      -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,   344,
     345,   346,   347,    -1,    -1,    -1,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,   361,    -1,    -1,    -1,
      -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      -1,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
     455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,    -1,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   110,   111,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,   581,   582,   583,   584,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,    -1,   618,    -1,   620,   621,    -1,   623,   624,
      -1,   626,   627,   628,   629,   630,   631,    -1,   633,   634,
     635,   636,   637,   638,   639,    -1,   641,   642,   643,    -1,
     645,   646,   647,   648,    -1,   650,   651,    -1,    -1,   654,
      -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,   664,
     665,   666,    -1,   668,   669,   670,    -1,   672,   673,    -1,
     675,    -1,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,    -1,   698,   699,   700,   701,   702,   703,   704,
     705,    -1,   707,   708,   709,    -1,   711,   712,   713,   714,
      -1,    -1,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,    -1,
      -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,    -1,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   110,   111,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    -1,   698,   699,   700,   701,   702,   703,   704,   705,
      -1,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,    -1,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,    -1,    -1,
     337,   338,   339,   340,   341,    -1,    -1,   344,   345,   346,
     347,    -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,
      -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    -1,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,   455,    -1,
     457,   458,    -1,    -1,   461,    -1,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,    -1,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,    -1,    -1,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,   581,   582,   583,   584,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
      -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,    -1,   633,   634,   635,   636,
     637,   638,   639,    -1,   641,   642,   643,    -1,   645,   646,
     647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,
     657,   658,   659,    -1,   661,    -1,   663,   664,   665,   666,
      -1,   668,   669,   670,    -1,   672,   673,    -1,   675,    -1,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
      -1,   698,   699,   700,   701,   702,   703,   704,   705,    -1,
     707,   708,   709,    -1,   711,   712,   713,   714,    -1,    -1,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,    -1,    -1,   736,
     737,    -1,    -1,   740,    -1,   742,   743
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    63,    65,
      66,    73,    80,    93,    99,   112,   120,   131,   141,   143,
     148,   178,   192,   193,   202,   203,   214,   215,   216,   217,
     219,   224,   234,   238,   239,   278,   280,   282,   297,   298,
     305,   334,   336,   343,   350,   371,   396,   408,   427,   440,
     453,   456,   459,   474,   590,   619,   622,   632,   640,   652,
     671,   674,   706,   716,   741,   773,   776,   777,   778,   779,
     780,   783,   790,   792,   805,   853,   898,   899,   906,   907,
     923,   924,   955,   976,   994,  1059,  1121,  1171,  1269,  1316,
    1319,  1329,  1334,  1340,  1353,  1356,  1362,  1365,  1370,  1377,
    1389,  1636,  1638,  1650,  1653,  1684,  1692,  1706,  1713,  1727,
    1731,  1732,  1736,  1750,  1758,  1762,  1768,  1769,  1770,  1802,
    1803,  1851,  1881,  1888,  1890,  1897,  1900,  1937,  1939,  1944,
    1945,  1946,  1947,  2001,  2010,  2011,  2012,    49,   201,   321,
     399,   447,   495,   645,   649,   690,   720,  1270,  1972,  1973,
    1974,  1975,   171,   444,   493,  1364,  1734,   110,   111,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   361,   362,   363,   364,   365,   366,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   740,   741,   742,   743,  1822,  1824,  1831,
    1838,  1843,  1844,  1845,  1846,  1847,  1848,  1849,  1850,   956,
     514,  1357,   183,   495,   690,  1693,    49,   115,   201,   270,
     422,   447,   495,   631,   649,   690,   693,   720,   728,  1649,
     997,   846,   925,  1651,  1763,   115,   391,   742,  1775,   261,
     689,  1884,   995,  1364,  1172,  1060,  1759,   234,   244,   895,
     900,   902,  1831,   640,   720,  1884,   999,  1654,   900,   901,
     846,   672,  1852,  1714,   900,  1889,  1685,  1831,   996,   210,
    1805,   168,   169,  1444,  1938,   263,   770,  1825,   115,  1884,
     737,  1941,  1637,   468,  1831,  1364,   386,   908,   769,  1819,
    1821,  1831,   791,   584,   662,  1831,  1364,  1751,  1941,  1831,
       6,   655,   702,     6,   655,  1707,   584,   662,   334,   335,
     371,   413,   590,   607,   632,   671,  2004,     0,    80,   774,
     590,    49,    96,   241,   277,   631,   720,   821,  1248,  1249,
    1250,  1649,  1972,  1973,  1974,  1975,   433,   444,   577,  1733,
    1734,  1819,  1831,   230,   287,   762,  1390,  1960,  1284,  1831,
     847,  1831,   747,   747,   847,   100,   112,  1648,   136,  1825,
    1831,  1833,  1002,  1003,  1006,  1029,  1831,  1648,  1308,  1309,
     248,  1433,  1976,  1977,  1972,   747,  1884,  1389,  1650,  1653,
    1684,  1692,  1730,   769,   854,   295,   957,   958,   961,   965,
     803,   804,  1825,   728,  1354,  1884,   217,   100,  1004,  1029,
     114,   149,   461,   602,  1695,  1704,  1705,  1648,   112,  1647,
    1648,  1648,  1648,  1648,   100,  1648,  1648,  1029,  1648,  1648,
     645,  1884,   979,  1831,     6,     7,    41,    46,    63,    73,
      99,   115,   120,   143,   212,   230,   238,   270,   280,   281,
     422,   427,   437,   595,   599,   616,   621,   652,   683,  1833,
    1901,  1905,  1906,  1908,  1910,  1911,   950,   951,   149,   400,
     460,  1656,   457,   661,  1764,   123,  1771,  1882,    38,    87,
      98,   127,   134,   222,   223,   334,   356,   430,   569,   873,
     921,   922,   923,   926,   927,   928,   929,   933,   934,   935,
     936,   937,   945,   946,   947,   948,   969,   971,   972,   974,
     981,   987,  1824,  1832,  1839,  1846,  1848,  1849,  1850,  1884,
      17,    18,    19,    20,    21,    29,    30,    32,    39,    40,
      43,    44,    45,    46,    48,    49,    51,    52,    57,    61,
      64,    84,    85,    86,    88,    89,   101,   102,   103,   105,
     106,   110,   111,   112,   120,   122,   135,   146,   151,   152,
     154,   160,   162,   165,   168,   169,   170,   172,   173,   174,
     176,   191,   195,   196,   197,   198,   205,   216,   217,   225,
     228,   248,   254,   255,   257,   258,   259,   263,   271,   272,
     273,   274,   284,   285,   286,   292,   294,   317,   324,   332,
     348,   357,   359,   360,   362,   363,   364,   365,   366,   381,
     393,   394,   395,   397,   398,   444,   450,   452,   464,   486,
     487,   491,   529,   531,   536,   537,   538,   539,   548,   549,
     565,   579,   585,   586,   593,   600,   630,   636,   637,   643,
     650,   679,   698,   699,   700,   701,   705,   706,   720,   722,
     732,   733,   735,   743,   752,   753,   758,   762,   765,   766,
     769,   770,  1439,  1440,  1441,  1445,  1457,  1459,  1460,  1461,
    1462,  1463,  1464,  1465,  1466,  1467,  1468,  1469,  1477,  1481,
    1482,  1483,  1484,  1485,  1487,  1490,  1794,  1797,  1799,  1800,
    1801,  1816,  1823,  1824,  1831,  1838,    26,  1061,    17,   514,
    1719,  1760,   345,   352,   368,   378,   379,   380,   388,   528,
     542,   642,   678,   692,   903,   905,   722,   896,   902,  1831,
     846,  1366,   873,   984,   149,   400,  1657,  1691,   902,     6,
     316,   599,  1898,  1899,  1906,  1908,  1853,    32,    61,   348,
     454,   493,   543,   579,   631,   648,   702,   734,   770,  1211,
    1824,  1829,  1831,  1842,  1843,  1844,  1845,  1847,  1848,  1849,
    1850,  1856,  1868,  1872,     6,    40,    41,    50,   115,   129,
     201,   261,   312,   327,   336,   348,   359,   383,   416,   419,
     421,   446,   447,   454,   455,   471,   493,   514,   569,   583,
     594,   597,   598,   612,   648,   655,   675,   731,  1211,  1247,
    1715,  1719,  1720,  1722,  1731,  1824,  1869,   902,  1884,  1691,
     982,  1439,  1804,   326,  1941,  1833,  1371,  1330,    10,  1942,
    1439,  1510,   781,   782,   784,  1737,   403,  1831,   569,   207,
     356,   769,  1833,  1831,  1825,    95,  1335,   514,   601,   655,
    1752,  1753,   268,  1942,   656,   803,   207,   298,  1320,  1321,
    1322,   656,   803,   261,  1708,  1831,  1825,    18,   105,   106,
     263,  1795,  1796,  1826,  2003,  2003,  2003,   444,  2002,  2003,
    2003,   768,  1831,   112,  1120,  1120,  1120,   649,   830,   115,
     115,   115,   261,   645,   201,   270,   422,  1976,   320,   447,
     320,   447,  1972,  1729,  1728,  1415,  1416,  1961,   762,  1392,
    1393,  1394,    83,   121,   276,  1948,  1950,  1954,  1955,  1272,
     719,  1273,   769,   527,   694,   712,    45,  1833,  1834,  1835,
    1905,  1274,  1008,  1030,  1831,    84,  1279,  1278,     5,    31,
      73,   169,   208,   605,  1031,   846,   261,   114,   568,  1310,
    1311,  1312,   644,   422,   728,  1976,  1833,  1341,  1831,   762,
     857,   966,    76,   968,  1439,   965,   268,  1355,  1642,  1643,
    1819,  1007,  1030,     5,    95,  1696,    95,  1696,  1697,  1701,
    1702,  1831,  1704,  1831,    84,  1831,   847,   847,   847,  1831,
    1030,   846,  1833,  1040,  1720,   846,  1640,  1648,  1648,   998,
     125,   980,   594,  1909,   634,   634,   690,   693,   720,   728,
     762,  1438,   461,   571,  1913,   689,  1915,  1912,    50,   728,
    1914,   177,   353,   655,   268,   177,   764,   413,  1439,   114,
    1307,   376,   601,  1765,  1766,   343,   149,   375,  1777,  1819,
    1885,  1886,   295,  1832,    95,   100,   548,  1831,  1832,  1832,
    1832,   975,  1831,   295,  1832,  1831,   413,   922,   768,   777,
     930,   949,  1831,    93,   148,   216,   297,   334,   771,  1363,
     122,   752,   753,  1462,   762,   762,   762,   295,  1439,  1513,
    1514,   762,   762,   762,   762,   762,  1438,  1438,  1438,   762,
    1437,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,  1439,   762,   110,   111,   360,
     762,  1511,  1512,  1816,  1823,  1838,   762,   762,   762,   762,
    1439,  1437,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   194,   762,   762,   762,   762,  1437,   762,
     263,  1796,  1438,  1437,  1437,   762,   762,   762,   762,   762,
     762,   762,   762,   174,  1823,   762,   762,   762,   762,   762,
     762,   762,   263,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     722,   762,   762,   762,   762,   762,   722,   762,   762,   762,
     762,   762,   762,   762,   263,   762,   762,   762,   263,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   122,  1462,
     122,  1462,  1462,  1173,  1439,  1966,  1967,  1831,  1823,  1491,
       9,    10,    81,    97,   126,   132,   166,   181,   183,   302,
     747,   748,   749,  1442,  1443,  1446,    15,   125,   137,   213,
     663,  1444,    69,   162,   180,   236,   237,   750,   751,   752,
     753,   754,   755,   756,   757,  1462,    34,   163,   188,   188,
     735,  1826,   769,   762,   194,  1062,   496,   764,   747,  1826,
    1367,  1834,  1836,  1368,  1369,  1819,   718,   123,  1644,  1658,
    1659,  1819,  1909,   571,   177,    95,   177,    61,  1831,  1855,
    1871,   234,   631,   769,    17,    61,   235,   747,  1212,  1213,
    1667,  1833,    93,  1667,  1878,  1667,  1833,  1858,   770,  1833,
      17,    61,  1215,  1216,  1833,  1667,   769,  1859,  1857,   656,
     762,    49,   201,   261,   270,   312,   422,   447,   645,   720,
     728,   137,   296,  1726,   358,   673,   673,   306,   673,   421,
    1726,     6,  1132,  1833,   138,  1604,  1605,  1606,    95,   125,
    1721,  1723,   358,   673,    93,   673,   689,   662,     6,   338,
     382,   384,   477,   526,   574,   664,   685,  1709,  1710,  1711,
     803,   463,   673,   804,  1604,  1726,  1723,   496,   415,   361,
     596,   689,   704,    93,  1431,   673,   725,  1307,   408,  1806,
    1807,  1811,  1831,   977,   764,  1372,  1373,  1374,  1375,  1819,
    1642,   346,   555,   214,   555,  1943,   764,   785,  1439,   283,
     786,    17,   402,   416,   418,   448,   463,   496,   514,   594,
     601,   611,   624,   655,   658,   673,  1738,  1743,  1744,  1824,
    1884,    35,   770,   909,   910,   911,   912,  1823,    11,   747,
    1572,  1573,  1891,  1831,   662,   781,   728,  1332,  1884,  1755,
     343,  1754,   764,   640,  1831,  1943,  1323,  1324,  1323,   567,
     739,   377,   764,  1323,  1323,  1643,   764,   566,  2006,   684,
    2007,   747,   128,   626,  2005,    80,   775,  1444,  1831,   846,
     846,  1120,  1120,  1120,  1120,  1120,  1120,   815,   814,   816,
     728,   447,   819,   447,   817,  1976,  1730,  1735,  1795,  1831,
      95,   123,   182,  1404,  1413,  1414,  1417,  1418,  1419,  1600,
    1606,  1632,  1956,     6,    68,   246,   247,   256,   460,   665,
     666,   667,   668,  1421,  1426,  1427,  1971,   762,  1664,  1673,
    1392,   763,  1960,   230,     6,    68,  1958,  1956,    61,  1117,
    1118,  1129,  1130,  1220,   391,   848,  1831,  1438,   770,   848,
       5,  1009,  1819,   570,   390,  1026,  1026,  1026,     4,  1834,
    1835,  1836,  1921,  1925,  1819,  1312,   399,   475,   847,  1819,
     728,  1342,  1343,  1643,   769,   855,   858,   859,  1439,  1439,
     873,   413,   959,   793,  1642,    93,   347,   433,   435,   525,
     602,   764,  1358,  1359,  1360,  1009,  1026,  1819,    14,  1694,
    1645,  1646,  1820,  1831,   296,  1575,   764,  1698,   769,  1703,
     177,   769,  1040,  1904,  1906,   558,   730,  1041,  1042,   416,
    1836,  1920,  1642,  1641,  1639,   408,   630,   978,   689,   763,
     762,  1926,  1926,  1926,  1926,  1836,  1921,   189,   201,   261,
     447,  1907,   422,   427,   437,   595,   616,   621,   652,   683,
    1911,   112,   264,  1658,   465,   720,  1439,  1767,  1767,  1378,
     493,  1776,  1573,   559,   730,   764,  1883,   931,   932,   295,
    1831,   548,    95,   123,   874,   931,   295,   762,   944,   148,
     768,  1439,   764,   990,   988,   993,   989,   973,  1642,   762,
       6,  1501,  1574,  1501,  1501,  1439,  1514,    76,   295,   413,
    1439,  1510,  1439,    68,  1501,  1574,   763,    57,    89,   105,
     146,   174,   273,   763,  1614,  1618,  1619,   763,  1439,  1439,
    1816,   763,  1966,    53,    54,    55,    56,   107,   108,   109,
     158,   159,   229,   303,   395,   464,   529,   531,   536,   600,
     643,   732,   743,  1569,  1570,  1439,    68,  1493,  1439,  1439,
    1439,  1439,  1439,  1569,  1439,  1823,  1512,   319,   764,   769,
      68,  1501,  1439,    68,  1501,  1439,  1439,  1439,   763,  1439,
    1439,  1441,   763,  1439,  1439,  1439,   763,   635,  1501,  1501,
    1439,    68,  1501,    25,   133,   269,  1439,  1458,  1501,  1501,
    1439,  1439,    68,  1501,  1439,  1510,  1439,   769,  1439,  1439,
    1439,  1454,  1455,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1510,   392,   394,   698,   701,  1571,  1439,  1439,
    1510,  1819,  1510,  1439,  1439,  1439,  1510,  1510,  1510,    93,
    1819,  1439,  1439,  1439,  1510,    93,  1439,  1439,  1439,   763,
    1439,  1819,  1439,  1439,  1570,  1570,  1439,  1458,  1439,   763,
     360,   769,  1817,  1831,  1439,  1439,  1439,  1439,  1439,  1439,
     763,   764,  1802,  1439,   769,   770,  1492,  1833,  1440,    86,
     173,   272,   717,  1444,  1439,  1439,  1439,     6,   323,  1440,
    1447,  1440,   762,  1440,  1440,   137,    15,   125,   137,   213,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,   122,  1441,   122,
    1441,  1441,  1441,  1441,  1441,  1217,  1833,  1462,   762,  1489,
    1585,  1831,   762,   100,  1823,  1470,   445,   479,   554,   635,
    1456,   139,   204,   492,   688,  1063,  1067,    14,   268,  1761,
     905,   394,   698,   701,   904,  1490,  1799,  1816,   764,   268,
     764,  1883,   985,  1659,  1655,   193,  1529,  1530,   764,    93,
    1836,  1835,  1922,   189,   201,   447,  1907,   769,   769,  1667,
     764,  1854,  1906,  1831,    34,  1218,  1439,  1836,   263,   565,
     579,  1879,     6,    17,    61,   177,  1439,  1880,   207,   478,
    1873,  1874,  1875,  1876,   454,   493,   648,  1870,  1667,  1880,
    1831,   702,  1860,  1871,   764,  1862,   673,   754,  1120,   847,
    1819,   847,   306,   847,   847,   847,  1819,  1836,  1819,  1431,
    1431,   847,  1726,  1721,   358,   673,  1726,   125,  1724,   496,
     540,   673,  1718,  1718,   146,   174,   226,   273,   360,  1607,
    1608,  1797,  1823,  1726,  1831,   847,  1726,  1835,  1721,  1726,
    1825,   476,   686,   436,    93,  1712,   764,   421,   673,  1819,
    1723,  1721,  1721,  1439,  1726,  1726,  1726,   762,   766,  1516,
    1517,  1518,  1519,  1520,  1531,  1532,  1533,  1534,   983,   764,
     762,  1809,   874,   770,   125,   764,   193,  1383,  1385,  1386,
     433,   602,  1331,   346,   214,  1439,   786,   787,   496,   496,
     496,   496,   343,   496,   803,   496,   764,  1431,  1739,   904,
     914,  1833,   764,   747,  1824,  1828,  1837,  1843,  1844,  1845,
    1846,  1847,  1848,  1849,  1850,   438,   548,  1831,  1892,  1893,
    1825,  1333,  1642,   268,  1757,   803,  1753,  1831,  1318,   615,
     669,  1325,  1326,  1317,   659,  1322,  1883,  1795,   582,  2008,
    1833,    84,   811,  1904,  1921,  1833,  1831,  1831,  1831,  1819,
    1819,  1120,  1998,  1433,  1986,   834,  1433,  1120,   820,   822,
     824,  1120,  1992,  1995,   818,   822,  1120,   728,    74,  1420,
    1517,   186,   409,  1627,  1628,  1633,    26,    93,   143,  1428,
     201,  1622,  1632,  1956,  1428,  1575,  1604,  1417,  1418,   754,
    1429,  1430,  1433,  1427,  1674,   764,   763,  1950,  1954,  1410,
    1413,  1418,  1415,  1951,  1118,    34,  1211,   404,   161,   206,
     248,   369,   381,   484,   555,   850,   852,  1833,   608,   713,
    1027,  1028,   472,  1023,  1024,  1025,  1032,  1040,  1042,  1280,
     762,  1825,   328,   521,  1017,  1018,  1019,  1032,  1033,  1034,
    1040,  1042,  1010,  1011,  1017,   466,   218,   764,  1929,  1883,
    1277,  1276,  1819,   764,   581,  1344,  1831,   857,   763,   764,
     967,    29,   295,   960,   962,    71,   113,   150,   467,   497,
     498,   500,   501,   502,   503,   504,   506,   507,   508,   509,
     510,   511,   512,   513,   515,   516,   517,   613,   614,   794,
     795,   802,    93,  1361,   719,  1643,  1359,   369,   552,   609,
     714,  1020,  1021,  1022,  1032,  1036,  1037,  1038,  1039,  1040,
    1042,   282,  1005,  1529,   688,   764,  1699,   769,  1703,  1576,
    1599,  1600,  1702,    95,   754,  1831,  1819,  1831,  1041,   764,
    1667,  1668,   764,    28,   220,  1313,  1642,  1642,   873,   762,
     938,   941,  1831,  1927,  1928,   268,   298,  1903,    24,   754,
    1819,  1831,  1919,  1919,  1919,  1919,   952,  1652,  1439,  1836,
    1379,  1380,  1381,  1382,  1819,   116,   149,   207,   739,  1887,
     105,   753,  1611,  1613,  1886,  1439,   931,   123,   636,  1831,
      59,   872,   875,   931,   938,   939,   943,  1831,   979,   981,
     984,   982,   874,  1883,  1439,   763,  1502,   763,   763,   264,
     413,  1439,  1439,    11,   283,   763,   283,   764,  1478,   763,
     754,   763,   764,   764,   763,   763,    95,   763,  1480,   763,
     764,   763,   764,   764,   764,   764,   753,   764,   763,   762,
    1816,  1823,  1501,   763,   763,  1501,   763,   764,   763,   764,
     763,   763,   125,   764,   764,   764,   763,   763,    95,   764,
    1501,   763,    95,  1439,    95,  1439,    95,  1439,    95,   763,
     763,   763,   764,   763,  1501,   763,   763,   763,   763,  1823,
     764,   763,   764,   763,   764,   764,   764,   764,   764,   763,
     763,   764,   764,   764,   763,   764,   763,   763,   764,   763,
     763,   763,   763,   763,   763,   763,   763,  1819,   763,   763,
     763,   764,   763,  1819,   763,   763,   764,   763,   764,   764,
     763,   764,   764,   764,   763,   763,   764,  1823,  1831,   763,
     769,   763,   764,    11,   490,   764,  1236,   764,   763,  1569,
    1569,  1510,   230,   762,  1959,  1960,  1962,  1963,  1964,  1965,
     767,  1823,  1870,   235,    86,   173,   272,   717,   762,    10,
    1439,  1966,   420,  1440,  1440,   762,  1440,  1440,  1439,  1439,
    1586,   193,  1588,   762,   762,   769,  1433,  1474,  1475,  1476,
     361,   762,  1072,  1073,  1065,  1072,  1066,   577,  1075,   130,
     458,  1439,  1825,   747,  1836,  1836,  1369,   268,  1439,   234,
     287,   722,   762,  1050,  1660,  1663,  1802,   762,    99,  1906,
      95,   764,    24,  1919,  1919,  1919,  1919,  1831,  1831,  1880,
    1871,    93,    93,  1667,    61,  1217,  1219,  1667,   762,   762,
     567,   739,   490,   764,   764,   769,   769,   769,    61,   734,
    1824,  1825,  1830,  1840,  1843,  1844,  1845,  1846,  1847,  1849,
    1850,  1439,  1667,  1873,  1861,  1863,  1864,   763,  1831,   847,
    1825,  1439,  1726,   847,  1726,  1825,    95,  1725,   425,  1823,
     226,   564,   764,   769,   846,  1726,   601,  1604,  1711,  1724,
    1721,  1819,  1726,  1726,  1551,  1831,    42,   117,   128,   135,
     164,   225,   256,  1527,  1528,   234,   764,  1819,   873,  1807,
    1810,  1831,  1808,   872,  1833,    61,  1376,  1831,  1374,  1819,
    1058,  1385,   115,   130,  1245,  1387,    61,   114,   788,   789,
    1439,  1679,  1680,    62,  1746,   803,  1744,  1642,  1745,   912,
     915,   916,   911,   560,   561,   637,   913,    97,   132,   438,
     485,   548,   592,   747,   748,   749,  1894,  1896,  1575,  1642,
     433,   602,   721,  1336,  1337,  1338,  1613,     6,  1756,   764,
     718,  1327,   764,    93,  2009,  1116,  1117,   298,  1902,  1929,
     831,   283,   708,  1258,   177,   177,   806,   807,   847,  1120,
    1120,  1819,   823,   825,  1992,  1995,   847,  1831,   823,  1120,
     263,  1827,  1827,   770,  1629,  1630,  1631,  1831,  1833,  1601,
     280,   125,  1831,  1622,  1632,  1405,   100,  1579,  1599,   764,
    1439,  1814,  1823,  1433,  1676,  1678,   762,  1671,  1410,   230,
     762,  1391,  1960,  1668,  1668,   544,   248,   248,   644,  1825,
     248,   248,   248,  1825,  1825,  1668,   764,  1025,   153,   343,
     389,   470,   532,   550,   551,   555,   556,   557,   623,   671,
     827,   828,    49,   462,   572,   579,   587,   660,   720,   832,
     833,  1668,  1668,   764,  1019,  1012,  1013,  1032,  1033,  1034,
      26,   298,   727,  1923,   249,   351,   480,   553,   680,   740,
    1917,  1918,  1925,   298,  1932,  1271,   177,   842,  1281,   762,
    1978,  1275,  1343,    93,   856,  1439,   264,   963,   962,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   764,   719,  1668,  1668,  1668,  1668,   764,
    1022,   495,   434,  1014,  1015,  1016,  1032,  1033,  1034,  1035,
    1038,  1039,  1040,  1042,   698,   702,  1422,  1423,  1464,  1646,
    1831,   283,  1831,  1439,   138,  1610,  1517,   769,  1703,  1883,
    1906,  1131,  1833,  1836,  1883,   413,   888,   889,   942,    72,
     763,   764,  1921,   316,  1919,   769,   769,   268,   268,   268,
     268,   873,  1660,   764,  1383,  1385,  1827,   739,   493,   375,
      57,    89,   146,   174,   273,   123,    37,    38,   429,   430,
     734,   881,   882,   883,   885,   891,   918,   919,  1824,  1841,
    1843,  1844,  1845,  1846,  1847,  1848,  1849,  1850,   413,   922,
     768,   940,   763,   764,   991,   970,   986,  1832,   986,   986,
     872,   764,  1439,  1439,   264,    17,    32,    58,    70,    90,
     124,   279,   291,   392,   394,   546,   653,   701,   724,  1503,
    1507,  1508,  1212,  1212,  1503,  1510,   763,   122,   122,  1439,
    1510,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1441,   769,
     763,   763,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
     763,  1439,    95,  1439,    95,  1439,    95,  1439,   122,  1439,
     763,  1455,  1439,  1454,  1510,  1439,  1439,  1439,  1439,  1439,
    1515,  1439,  1439,  1439,  1439,  1510,   146,   752,  1611,  1615,
     122,  1439,  1439,  1439,  1439,  1439,   769,   769,  1831,  1439,
      17,    32,  1231,  1232,  1233,  1234,  1235,  1614,  1613,   763,
    1439,   753,   753,  1540,  1541,  1542,   762,  1401,  1402,  1403,
    1428,  1956,  1539,  1948,  1957,  1968,  1830,  1439,  1966,  1440,
     763,   764,   763,  1440,    10,  1439,  1966,   420,  1569,  1569,
    1587,  1831,    26,   763,  1486,  1509,  1510,  1823,  1439,   763,
     764,   762,  1081,  1441,  1073,   122,   138,  1107,  1614,   682,
    1076,   321,  1068,  1064,   904,   268,  1819,   413,  1661,  1664,
    1664,   763,  1109,  1662,  1802,  1812,  1813,  1817,  1831,   230,
    1568,  1831,   571,  1920,  1835,  1919,    95,    95,    95,    95,
    1667,  1667,   776,  1836,  1880,   263,   263,   207,   620,   646,
    1877,  1875,  1874,   769,   769,  1667,  1880,  1862,   764,  1866,
    1868,  1872,   419,   731,  1611,  1616,  1716,  1608,  1609,   425,
    1608,  1608,  1823,   174,  1725,  1575,  1721,   230,   287,  1535,
    1543,  1544,  1545,  1546,  1551,  1552,  1967,  1516,   128,   128,
     185,  1554,   135,   225,  1527,  1554,  1516,  1687,  1688,  1817,
    1518,  1529,   413,   763,   764,    11,   413,  1384,   762,   764,
     747,    93,   298,  1740,  1741,   747,   764,  1895,  1604,    95,
    1339,  1337,  1326,   499,   802,  1328,  1613,   530,   316,  1932,
      92,   341,   458,   639,  1264,  1264,   177,  1819,  1819,   115,
     137,   190,   251,   252,   253,   276,   301,   329,   331,   350,
     369,   376,   391,   401,   416,   473,   483,   520,   533,   573,
     579,   638,   645,   675,   690,   691,   703,   762,  1044,  1048,
    1122,  1124,  1125,  1128,  1129,  1130,  1824,   826,   827,  1999,
    1987,   847,   812,  1996,   628,  1819,  1634,  1833,   764,   769,
    1439,  1602,  1815,  1883,   651,  1623,  1949,  1950,    26,   104,
    1577,  1604,  1430,  1434,  1434,   769,  1680,   763,   764,  1672,
    1428,  1415,   762,  1396,  1397,  1950,  1954,  1219,  1213,   391,
     391,   399,   475,   105,   146,   174,   273,  1043,  1617,  1618,
    1824,  1025,  1668,  1668,    26,  1668,  1670,  1668,   153,   532,
     298,  1668,  1669,  1669,   828,  1825,  1825,  1825,  1825,  1613,
    1825,  1825,   763,   764,  1043,  1043,  1019,   764,  1013,   263,
     579,  1833,   263,   263,   263,    10,  1916,   518,   519,   522,
     523,   524,  1930,  1931,     5,     7,     8,    31,    33,    39,
      73,   143,   178,   182,   193,   215,   321,   357,   405,   406,
     412,   424,   443,   469,   535,   606,   617,   618,   619,   706,
    1056,  1123,  1125,  1285,  1289,  1291,  1294,  1300,  1301,  1302,
    1304,  1305,  1596,   373,   641,   215,  1282,  1831,  1979,    11,
    1978,     6,   361,  1345,   857,   873,  1439,   762,   762,  1613,
     762,  1613,  1613,  1825,  1825,  1616,  1825,  1613,  1825,  1825,
    1825,  1825,  1825,  1825,  1825,  1613,  1825,   387,   555,   657,
    1800,  1825,  1613,   795,  1825,  1614,  1043,  1043,  1022,   100,
    1668,   764,  1016,   263,  1441,   769,  1517,  1703,   226,  1608,
     221,  1700,  1575,  1313,    93,   890,   763,  1439,   941,  1928,
     298,  1934,   571,   268,   754,   754,  1921,  1921,  1921,  1921,
     953,   177,  1681,  1381,  1819,  1385,   114,  1388,  1772,    16,
      17,    22,    23,    32,    58,    70,    90,   124,   144,   145,
     147,   155,   156,   157,   175,   209,   234,   240,   265,   266,
     267,   290,   291,   337,   339,   340,   355,   392,   394,   417,
     439,   450,   451,   482,   491,   537,   538,   539,   545,   546,
     561,   562,   585,   586,   604,   636,   695,   698,   701,   708,
     724,   743,  1177,  1179,  1180,  1182,  1183,  1184,  1185,  1186,
    1187,  1188,  1189,  1190,  1191,  1192,   456,    35,    47,   764,
     768,  1439,   939,   408,   413,  1439,  1439,   762,  1197,  1198,
    1198,   762,  1194,  1195,  1197,   762,  1195,  1200,   124,  1197,
    1198,  1198,   124,  1198,  1197,   763,   763,   763,   763,  1479,
    1439,  1439,   763,   182,  1495,   763,   763,   764,   764,   763,
     764,   763,   125,  1471,  1472,  1823,   763,   763,   763,   763,
     764,   763,    93,   763,   763,   764,  1439,  1439,  1439,  1439,
     763,   763,    11,  1448,   763,    11,   763,   763,   764,   763,
     764,   763,   764,   763,   764,   763,   763,   763,   763,   146,
     174,   174,   763,   764,  1439,   763,   763,   764,   764,   763,
    1823,  1831,   769,   763,   762,  1226,  1226,    12,    65,   630,
     752,  1228,  1229,  1230,   764,   764,   763,  1439,  1439,  1418,
    1969,  1970,  1971,  1401,   763,  1960,   230,  1428,  1958,  1537,
    1963,  1964,   769,   763,  1510,  1440,   763,   764,   763,  1440,
    1588,  1580,  1815,   182,  1488,   763,   762,  1434,  1476,  1069,
    1070,  1071,  1831,   763,  1439,  1616,    26,   762,  1083,   747,
     762,  1073,  1836,   216,  1665,  1666,  1817,   762,  1663,   763,
     763,   764,   230,   769,  1110,  1111,   763,   764,    95,    95,
    1922,  1922,  1922,  1922,  1880,  1880,   763,   763,   370,   711,
     207,  1831,  1831,  1880,  1865,  1867,    57,    89,   146,   174,
     273,  1604,  1609,  1717,  1726,  1553,  1547,   763,  1954,  1957,
    1428,  1956,  1519,  1803,   767,   128,  1554,  1554,  1531,   128,
     177,   283,   764,  1686,  1667,    94,  1424,   297,  1831,   762,
     762,   200,  1565,  1566,  1567,  1831,   789,   762,  1742,   207,
     345,   352,   368,   378,   379,   380,   388,   528,   542,   627,
     642,   678,   692,   917,   916,   762,   541,   747,   764,  1835,
     391,  1819,   809,   810,   404,  1819,  1668,  1668,  1668,  1668,
    1668,   726,  1668,  1668,  1668,  1668,  1668,   404,  1668,  1668,
    1668,  1668,  1668,  1668,  1668,  1668,  1668,  1668,   407,   526,
    1831,  1668,  1668,    36,   137,   580,   769,  1109,  1136,  1137,
    1138,  1139,  1140,  1148,  1149,  1153,  1154,  1155,  1245,  1249,
    1250,  1818,  1831,  1054,  1055,  1056,   764,  1124,  1667,  1122,
     762,   870,   847,   835,  1978,   762,   868,    58,   124,   209,
     677,  1135,   813,  1211,  1214,  1630,  1831,   764,    12,    65,
    1603,   534,   762,  1580,  1578,   734,  1582,    11,  1435,  1825,
    1831,   754,  1823,  1434,  1433,  1675,  1677,  1680,  1406,  1414,
    1417,  1418,  1396,   763,   230,  1395,  1960,  1615,  1615,  1615,
    1615,  1615,  1615,   833,  1013,   263,    11,   283,  1924,  1917,
    1613,  1613,  1613,  1800,   752,  1611,  1612,  1930,    36,   193,
     367,   580,   687,  1140,  1148,  1149,  1306,  1306,   193,  1306,
     193,   268,    36,    92,   193,   580,   687,  1152,  1245,  1306,
    1668,   193,    26,  1058,    11,   268,   747,  1315,  1668,   193,
     129,   690,   129,   193,   690,  1306,   193,   578,   193,   193,
     193,  1123,   764,  1055,  1289,   762,  1139,  1444,  1940,   325,
     423,   836,   268,   405,   412,   838,   763,   764,  1980,  1981,
      11,     6,   762,  1346,   964,   798,   799,  1613,   800,   801,
    1613,   796,   797,  1613,  1831,  1043,  1016,  1831,  1575,   425,
     226,  1429,  1389,    99,  1921,  1929,  1929,  1929,  1929,    76,
      77,   954,   410,  1388,   488,   114,   217,  1778,  1197,  1199,
    1198,   374,  1197,  1204,  1205,  1194,   199,  1194,  1204,    17,
      34,   324,   342,   715,  1181,  1205,  1211,  1221,  1222,  1224,
      32,   290,  1181,  1187,  1189,  1204,  1181,  1194,   762,  1204,
    1181,  1197,  1199,  1181,  1198,   762,  1194,  1204,    32,   291,
     291,   293,  1194,  1197,   708,   762,   880,  1198,  1198,  1198,
     563,  1197,  1198,    61,   920,  1194,   293,  1199,  1199,  1197,
    1197,  1198,  1200,    93,    93,   884,  1831,   873,   970,    57,
     146,   174,   273,  1504,   174,   174,  1505,  1506,   763,  1569,
    1569,    26,   232,  1494,  1439,  1439,  1510,   164,   340,   763,
     298,  1473,  1439,  1439,  1439,  1569,    58,    70,    90,   124,
     209,   279,   392,   394,   545,   546,   701,  1187,  1188,  1449,
    1450,  1451,  1452,  1503,  1439,  1439,  1439,  1439,    86,   272,
    1613,  1621,  1569,  1439,  1439,  1831,  1614,   763,  1236,  1231,
    1229,  1231,  1232,  1613,  1429,  1971,   763,  1954,  1541,  1538,
    1831,   763,  1510,   182,  1589,   764,  1603,    26,   763,  1509,
    1435,   763,   764,  1569,  1067,   193,  1084,  1085,  1614,  1069,
     764,  1667,  1052,  1053,  1663,  1812,  1110,   754,  1831,  1113,
    1417,  1418,  1956,  1421,  1058,  1831,  1922,  1922,  1667,  1667,
    1866,  1871,  1604,  1548,  1549,  1664,  1424,  1536,  1539,  1428,
    1965,  1516,  1531,   128,   128,  1516,  1531,  1521,  1522,  1688,
    1575,    61,  1679,     6,    11,    15,    95,  1425,  1573,  1431,
       6,  1290,  1298,  1299,  1831,   763,   764,  1616,  1747,  1748,
     432,   143,  1677,  1825,   802,   738,   808,   762,   762,  1668,
      61,  1613,  1620,    61,  1613,    61,  1613,    61,  1613,  1126,
    1616,  1613,  1613,  1825,  1825,  1668,  1613,  1833,   438,   485,
     555,  1134,  1613,  1616,  1616,    61,  1613,  1825,    61,   372,
     374,   411,   439,   574,   610,  1133,  1620,  1613,  1620,  1267,
    1818,  1819,    94,  1831,   763,   763,   764,    33,    92,   200,
     277,  1151,  1244,   212,  1238,  1120,  1245,  1246,  1246,  1156,
     769,  1049,  1778,  1124,    61,  1617,  1825,  1831,   871,   849,
      14,   318,  1000,   177,    11,   869,   628,  1993,   662,  1978,
    1213,  1635,  1815,  1883,  1433,  1624,  1625,  1626,   299,   300,
    1581,  1439,  1489,  1583,  1584,  1825,  1831,   769,  1680,   763,
     764,  1428,  1956,  1428,   763,  1950,  1954,  1415,  1411,  1414,
    1418,  1825,   174,   174,   112,  1120,   726,   112,  1119,  1647,
    1364,  1647,  1290,  1211,  1647,   130,  1648,    94,   726,   200,
    1647,  1647,    61,  1831,  1364,  1597,  1598,  1817,  1057,  1819,
      61,  1831,  1364,  1299,  1647,  1364,  1364,  1364,  1290,     5,
      73,  1302,  1136,   318,   438,  1314,   591,  1439,  1439,   177,
     842,   847,   177,   369,   843,  1831,  1802,  1980,  1347,   471,
     264,   763,   764,   763,   764,   763,   764,   425,   571,  1929,
     298,  1933,  1933,  1933,  1933,   873,   950,  1682,   123,  1204,
    1203,  1667,  1204,   279,   304,   653,  1196,  1196,  1221,  1219,
    1223,  1224,  1212,    17,  1222,  1225,   374,  1206,  1204,  1181,
    1196,  1268,  1795,  1204,  1268,  1196,   293,  1196,  1204,   563,
     877,   878,   879,  1831,   920,  1181,   876,   918,  1181,  1196,
    1439,   211,  1193,  1223,  1225,  1181,  1204,  1196,  1196,   886,
     894,   895,  1613,   762,   887,   413,   763,   763,   763,   763,
    1223,   764,  1223,  1223,   763,   763,  1496,  1815,  1795,   138,
    1497,  1498,  1499,   763,   764,   763,   484,   534,   601,   763,
     763,   763,   763,  1194,   124,  1198,    32,  1198,  1453,   763,
     763,   763,   763,   764,   763,   763,   763,  1227,   763,   764,
    1418,  1539,   763,    26,   204,   226,  1590,  1591,  1815,  1815,
     763,  1071,   670,  1108,   130,   458,  1086,   763,   764,   763,
    1666,  1680,  1950,  1954,  1112,  1113,  1418,   769,  1114,  1428,
    1956,  1114,  1429,  1880,  1880,  1421,  1573,  1537,  1968,   177,
    1524,  1531,  1531,   177,  1526,  1439,   762,  1599,   563,  1423,
    1423,  1563,  1564,  1966,   763,   764,  1566,   763,   764,    10,
    1749,   763,  1833,   762,  1265,  1266,  1831,  1265,  1825,   762,
    1825,   763,   762,  1046,  1047,  1045,  1138,   762,   130,   130,
    1246,  1120,  1819,  1267,  1831,  1120,  1120,   337,   339,   340,
     355,   392,   394,   417,   439,   450,   451,   482,   491,   537,
     538,   539,   545,   546,   561,   562,   585,   586,   604,   647,
     695,   698,   701,   724,   743,   918,  1157,  1178,  1179,  1831,
      11,  1115,   118,   125,   187,   864,   865,   866,   867,   850,
     851,  1940,  2000,    63,   120,   280,  1001,   641,  1980,   860,
     861,   862,   863,  1831,  1994,   849,  1825,    11,   361,  1779,
    1603,  1439,   763,   764,    11,   764,   754,  1434,  1680,  1407,
    1411,  1444,  1364,  1444,  1818,  1290,  1818,  1287,  1213,  1818,
    1647,  1298,   130,  1818,  1818,  1290,   764,  1603,  1061,  1614,
     298,  1155,  1290,  1295,  1290,   763,  1831,  1569,   655,  1825,
     408,  1283,   230,   762,  1960,  1982,  1350,  1831,     6,   762,
    1348,   873,   799,   801,   797,  1933,    99,  1930,  1935,  1936,
     130,   261,  1831,   304,   279,  1203,   763,   764,   763,   876,
    1177,   763,   764,   920,   769,   747,  1225,   184,   243,   245,
     892,   893,   894,   897,  1444,  1831,   861,    93,    93,   174,
     764,  1603,   763,  1500,  1608,  1439,   534,   431,  1223,  1616,
     763,  1613,  1599,  1602,   763,    15,   386,   394,   698,   701,
     710,  1592,  1593,  1799,  1603,  1603,  1613,  1068,   762,  1074,
    1087,  1831,  1085,  1114,   754,  1051,  1429,   763,  1523,   283,
    1525,   283,  1568,  1610,  1423,    10,   268,  1561,  1562,  1432,
    1299,  1748,   405,   570,  1265,   763,   764,  1603,   762,   763,
    1745,  1831,  1950,  1954,  1122,  1439,  1120,  1267,  1831,   762,
    1239,   283,  1257,   708,  1267,  1267,  1159,   769,  1150,  1151,
    1158,   769,  1050,   763,   764,   863,    67,   922,   177,   836,
     763,   764,   636,   708,  1177,  1177,  1997,  1980,    79,    82,
     179,   262,  1780,  1781,   140,  1782,  1434,  1626,  1585,  1584,
    1949,  1428,    84,  1292,    84,    73,   234,  1155,  1358,  1218,
    1818,  1313,  1286,  1598,   261,  1314,  1296,  1298,  1288,   837,
     844,   845,  1415,   762,  1399,  1400,  1948,  1952,  1954,   298,
    1983,   763,   764,  1349,   571,  1936,   280,  1819,  1223,  1795,
    1223,   920,   878,  1831,   174,   764,   922,   445,   763,   889,
     992,   763,  1815,   564,   764,   763,   763,   763,  1604,   710,
    1593,  1594,  1799,   636,   589,   426,  1595,   589,   762,  1081,
    1077,    61,   288,   289,   386,   461,  1088,  1949,  1550,  1424,
    1439,   762,  1439,   762,   763,  1423,  1423,   114,   282,   443,
    1556,  1557,  1560,   763,   349,   762,   763,  1883,  1266,   174,
    1883,   763,   764,  1054,   763,  1267,  1257,   708,  1240,  1831,
     151,  1241,  1264,  1141,  1264,  1143,  1144,   200,   277,   301,
     369,   481,   736,  1160,  1161,  1170,  1208,  1209,  1210,  1237,
    1444,  1824,  1179,    34,    61,   173,   177,   329,   449,   647,
    1164,  1166,  1201,  1202,  1209,  1831,  1127,  1128,   866,    91,
     829,  1433,   841,   842,   863,   708,   880,   563,   921,    26,
      26,    79,    26,  1781,   250,   262,  1783,  1784,  1818,   577,
     762,  1293,    61,    61,  1314,  1364,  1819,  1297,  1336,   670,
     839,   922,  1408,  1417,  1418,  1956,  1399,   763,   230,  1398,
    1960,  1958,    33,   344,   493,  1831,   200,  1351,  1352,  1831,
    1683,  1529,   769,   893,   986,  1603,  1608,  1608,  1428,   442,
      10,   442,   100,   386,   555,   697,  1079,  1080,  1831,   763,
     681,  1082,  1090,   696,   115,   369,   376,   391,   520,   533,
     552,   690,  1104,  1105,  1106,  1720,  1418,  1573,  1568,  1568,
    1245,  1245,  1557,   832,  1883,   298,   369,   483,  1252,  1256,
    1260,  1263,  1824,  1603,   763,  1253,  1255,  1260,  1262,  1831,
    1049,  1147,  1145,  1264,   763,   764,   446,   576,   654,   177,
    1242,   762,  1142,   762,   762,   130,  1825,   687,  1209,   726,
     130,   173,  1667,  1217,   752,   753,   762,  1174,  1175,  1176,
    1459,  1798,  1824,   280,   322,    61,    11,   374,  1202,  1207,
    1988,   838,   563,  1831,   829,  1795,  1795,    26,  1795,    26,
      26,  1784,  1151,  1614,  1084,  1176,  1058,   123,  1439,   414,
     840,   829,  1956,  1428,  1428,   763,  1952,  1954,  1415,  1412,
    1417,  1418,  1956,  1953,   571,    33,    33,   763,   764,  1689,
    1690,  1817,  1773,  1831,  1594,   636,   184,   311,   763,   764,
    1614,   762,  1092,  1094,  1089,   404,  1668,  1668,   404,  1668,
    1668,  1668,  1668,   762,  1099,  1106,   416,   763,   763,    93,
    1555,  1555,   763,   283,   708,  1251,  1254,  1259,  1260,  1261,
     575,  1825,  1668,  1303,  1304,  1305,  1263,  1667,  1303,  1262,
     763,   762,   762,  1146,  1831,    63,   280,  1265,   762,  1265,
    1265,    61,  1617,  1825,  1831,  1800,  1800,  1173,   170,   722,
     636,  1174,  1203,  1201,  1819,   843,  1831,   769,  1795,  1795,
    1795,   763,   762,  1439,  1428,  1409,  1412,  1956,  1982,   571,
     571,  1352,   764,  1667,  1214,  1078,  1080,   762,  1093,  1094,
    1095,   153,  1091,  1094,  1668,  1825,  1825,  1668,  1617,  1617,
    1614,  1833,   682,  1100,  1101,  1668,   100,   128,   182,  1559,
    1558,  1264,  1264,  1303,  1261,  1824,  1613,  1305,  1304,    61,
    1617,  1825,  1831,  1265,  1265,   762,    28,   220,   234,   555,
    1243,  1243,   763,  1265,   763,   763,   763,   762,  1436,   413,
     671,  1165,    93,   408,   769,  1831,  1084,  1952,  1428,  1690,
    1680,  1774,  1082,   763,   764,   153,  1097,  1098,  1441,  1825,
    1825,  1102,   763,   764,  1131,    26,    26,   762,   762,   763,
     763,  1265,    61,   173,   315,   177,   177,  1251,   763,  1252,
    1253,   763,  1614,  1162,  1163,  1208,  1162,   581,   676,   729,
    1167,  1433,   844,  1831,   769,   763,   226,  1785,  1094,   764,
    1096,  1103,  1833,  1101,  1565,  1567,  1238,  1251,   763,   280,
      63,  1251,   763,  1208,  1168,  1169,  1170,  1989,  1831,   466,
    1779,  1098,   763,  1104,   763,   763,  1251,  1243,  1243,  1170,
      75,    26,  1782,   636,  1795,   114,  1786,  1990,   174,   762,
    1788,   441,   588,  1984,  1985,   140,   226,  1787,   763,   770,
    1789,  1790,  1817,   234,  1791,  1833,  1991,  1833,   763,   764,
    1792,  1793,  1817,   922,  1790,   764,  1667,   829,  1793,  1433,
    1680,  1434
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   772,   773,   774,   773,   773,   775,   775,   776,   776,
     776,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   778,   779,
     779,   780,   782,   781,   784,   783,   785,   783,   786,   787,
     786,   788,   788,   789,   791,   790,   793,   792,   794,   794,
     795,   795,   795,   795,   795,   795,   795,   795,   795,   795,
     795,   795,   795,   795,   795,   795,   795,   795,   795,   795,
     796,   796,   796,   797,   798,   798,   798,   799,   800,   800,
     800,   801,   802,   802,   802,   802,   802,   802,   802,   803,
     803,   804,   806,   805,   807,   805,   808,   805,   809,   805,
     810,   805,   811,   805,   812,   805,   813,   805,   814,   805,
     815,   805,   816,   805,   817,   805,   818,   805,   819,   805,
     820,   805,   805,   805,   805,   805,   821,   805,   822,   823,
     824,   824,   825,   825,   826,   826,   827,   827,   828,   828,
     828,   828,   828,   828,   828,   828,   828,   828,   828,   828,
     828,   828,   829,   829,   831,   830,   832,   832,   833,   833,
     833,   833,   833,   833,   833,   835,   834,   837,   836,   836,
     838,   838,   838,   838,   839,   839,   840,   840,   841,   841,
     842,   843,   843,   845,   844,   846,   847,   847,   848,   848,
     849,   849,   850,   850,   850,   850,   850,   850,   850,   851,
     851,   852,   852,   854,   853,   855,   853,   856,   853,   857,
     857,   858,   858,   859,   859,   860,   860,   861,   861,   862,
     863,   863,   863,   863,   863,   863,   864,   864,   865,   865,
     866,   867,   867,   867,   867,   869,   868,   871,   870,   872,
     872,   873,   873,   874,   874,   875,   876,   876,   876,   877,
     878,   879,   879,   880,   881,   882,   882,   882,   882,   883,
     883,   883,   884,   883,   886,   885,   887,   887,   888,   890,
     889,   891,   891,   891,   891,   892,   892,   893,   894,   894,
     895,   896,   896,   897,   897,   897,   897,   897,   897,   898,
     898,   899,   900,   900,   901,   901,   902,   902,   903,   903,
     904,   904,   904,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   906,   907,   908,   908,   909,
     909,   910,   910,   911,   912,   912,   913,   913,   913,   914,
     915,   915,   916,   917,   917,   917,   917,   917,   917,   917,
     917,   917,   917,   917,   917,   917,   918,   918,   919,   919,
     920,   920,   921,   921,   921,   921,   921,   922,   922,   922,
     922,   922,   922,   922,   922,   922,   922,   923,   923,   923,
     923,   925,   924,   927,   926,   928,   928,   930,   929,   929,
     932,   931,   933,   933,   933,   933,   934,   934,   934,   934,
     935,   936,   937,   938,   940,   939,   942,   941,   943,   943,
     944,   944,   945,   946,   946,   946,   947,   947,   948,   949,
     949,   951,   952,   953,   950,   954,   954,   954,   956,   955,
     958,   959,   957,   957,   960,   960,   961,   961,   963,   964,
     962,   966,   967,   965,   968,   968,   969,   970,   970,   971,
     973,   972,   975,   974,   977,   976,   978,   978,   979,   980,
     980,   980,   981,   983,   982,   985,   984,   986,   988,   987,
     989,   987,   990,   991,   992,   987,   993,   987,   995,   994,
     996,   994,   997,   998,   994,   999,   994,  1000,  1000,  1001,
    1001,  1001,  1002,  1003,  1004,  1005,  1005,  1006,  1006,  1007,
    1008,  1009,  1009,  1011,  1010,  1012,  1012,  1012,  1013,  1013,
    1013,  1014,  1015,  1015,  1015,  1016,  1016,  1016,  1016,  1016,
    1016,  1016,  1016,  1017,  1018,  1018,  1018,  1019,  1019,  1019,
    1019,  1019,  1020,  1021,  1021,  1021,  1022,  1022,  1022,  1022,
    1022,  1022,  1022,  1023,  1024,  1024,  1024,  1025,  1025,  1025,
    1026,  1027,  1028,  1029,  1030,  1031,  1031,  1031,  1032,  1033,
    1034,  1035,  1036,  1037,  1038,  1039,  1040,  1041,  1041,  1042,
    1042,  1043,  1043,  1045,  1044,  1044,  1044,  1046,  1044,  1047,
    1044,  1044,  1048,  1048,  1049,  1049,  1051,  1050,  1050,  1050,
    1052,  1050,  1053,  1050,  1054,  1055,  1055,  1057,  1056,  1058,
    1060,  1059,  1062,  1061,  1063,  1064,  1063,  1063,  1063,  1065,
    1063,  1063,  1066,  1063,  1067,  1067,  1068,  1068,  1069,  1069,
    1070,  1070,  1071,  1072,  1073,  1074,  1075,  1075,  1076,  1077,
    1076,  1078,  1076,  1079,  1079,  1080,  1081,  1082,  1082,  1083,
    1083,  1084,  1084,  1086,  1085,  1087,  1088,  1089,  1088,  1090,
    1088,  1088,  1088,  1088,  1091,  1091,  1092,  1092,  1093,  1093,
    1095,  1096,  1094,  1097,  1097,  1098,  1098,  1099,  1099,  1100,
    1100,  1102,  1101,  1103,  1104,  1104,  1105,  1105,  1106,  1106,
    1106,  1106,  1106,  1106,  1106,  1106,  1106,  1107,  1107,  1107,
    1108,  1108,  1109,  1111,  1110,  1112,  1112,  1113,  1113,  1114,
    1115,  1115,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1119,
    1120,  1120,  1121,  1121,  1122,  1122,  1123,  1123,  1124,  1124,
    1124,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1125,  1126,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1127,  1127,  1128,  1129,  1130,  1131,  1132,  1133,  1133,  1133,
    1133,  1133,  1133,  1133,  1134,  1134,  1134,  1135,  1135,  1135,
    1135,  1136,  1137,  1137,  1138,  1138,  1138,  1138,  1139,  1139,
    1141,  1140,  1142,  1140,  1143,  1140,  1144,  1140,  1145,  1140,
    1146,  1140,  1147,  1140,  1148,  1149,  1150,  1150,  1151,  1152,
    1152,  1153,  1153,  1154,  1156,  1155,  1158,  1157,  1159,  1157,
    1160,  1160,  1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,
    1164,  1164,  1165,  1164,  1164,  1164,  1166,  1166,  1167,  1167,
    1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,  1170,  1170,
    1172,  1171,  1173,  1173,  1173,  1174,  1175,  1175,  1176,  1176,
    1177,  1178,  1178,  1179,  1179,  1179,  1179,  1179,  1180,  1180,
    1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,  1181,  1181,
    1181,  1181,  1182,  1182,  1182,  1182,  1182,  1182,  1182,  1182,
    1183,  1183,  1183,  1183,  1183,  1184,  1184,  1184,  1184,  1184,
    1184,  1184,  1184,  1184,  1184,  1184,  1184,  1184,  1184,  1184,
    1184,  1185,  1185,  1186,  1186,  1186,  1186,  1186,  1186,  1186,
    1186,  1187,  1188,  1188,  1189,  1189,  1190,  1190,  1190,  1190,
    1190,  1191,  1191,  1191,  1191,  1191,  1192,  1192,  1192,  1193,
    1193,  1194,  1194,  1194,  1195,  1196,  1196,  1196,  1196,  1196,
    1196,  1197,  1197,  1197,  1197,  1198,  1198,  1199,  1199,  1200,
    1200,  1201,  1201,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1203,  1203,  1204,  1204,  1205,  1206,  1207,  1208,  1208,  1208,
    1209,  1209,  1209,  1209,  1209,  1209,  1210,  1210,  1211,  1211,
    1212,  1212,  1213,  1213,  1214,  1214,  1215,  1215,  1216,  1216,
    1217,  1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1221,
    1222,  1223,  1223,  1224,  1224,  1224,  1224,  1224,  1224,  1225,
    1225,  1227,  1226,  1228,  1228,  1229,  1230,  1230,  1230,  1230,
    1231,  1232,  1233,  1233,  1234,  1235,  1235,  1236,  1236,  1237,
    1237,  1238,  1239,  1239,  1240,  1240,  1241,  1241,  1241,  1241,
    1242,  1242,  1242,  1242,  1242,  1243,  1243,  1243,  1243,  1243,
    1244,  1244,  1245,  1245,  1246,  1246,  1247,  1247,  1247,  1248,
    1248,  1249,  1250,  1251,  1251,  1252,  1252,  1253,  1253,  1254,
    1254,  1255,  1255,  1256,  1256,  1257,  1257,  1258,  1258,  1258,
    1259,  1259,  1260,  1260,  1260,  1260,  1260,  1260,  1261,  1261,
    1262,  1263,  1263,  1264,  1264,  1264,  1265,  1265,  1266,  1266,
    1267,  1267,  1268,  1268,  1270,  1271,  1269,  1272,  1269,  1269,
    1273,  1269,  1274,  1269,  1275,  1269,  1276,  1269,  1277,  1269,
    1269,  1269,  1269,  1269,  1278,  1269,  1269,  1279,  1280,  1269,
    1281,  1281,  1281,  1281,  1282,  1282,  1283,  1283,  1284,  1284,
    1285,  1285,  1285,  1285,  1285,  1285,  1285,  1285,  1285,  1285,
    1286,  1285,  1285,  1287,  1285,  1288,  1285,  1285,  1285,  1285,
    1285,  1289,  1290,  1290,  1292,  1291,  1293,  1293,  1293,  1295,
    1294,  1296,  1297,  1296,  1298,  1298,  1299,  1300,  1300,  1301,
    1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,
    1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,  1302,
    1302,  1302,  1302,  1302,  1302,  1302,  1302,  1303,  1303,  1303,
    1303,  1303,  1304,  1304,  1305,  1305,  1306,  1306,  1307,  1307,
    1309,  1308,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,
    1313,  1314,  1314,  1314,  1315,  1315,  1315,  1315,  1317,  1316,
    1318,  1316,  1316,  1316,  1319,  1320,  1320,  1321,  1321,  1322,
    1322,  1322,  1324,  1323,  1325,  1325,  1326,  1326,  1326,  1327,
    1327,  1327,  1328,  1328,  1330,  1329,  1331,  1331,  1331,  1332,
    1333,  1332,  1335,  1334,  1336,  1336,  1337,  1337,  1338,  1338,
    1338,  1339,  1339,  1341,  1340,  1342,  1342,  1343,  1344,  1344,
    1345,  1345,  1346,  1347,  1346,  1348,  1349,  1348,  1350,  1350,
    1350,  1351,  1351,  1351,  1352,  1352,  1353,  1353,  1354,  1355,
    1354,  1357,  1356,  1358,  1358,  1359,  1359,  1360,  1360,  1360,
    1360,  1360,  1360,  1361,  1361,  1363,  1362,  1364,  1364,  1364,
    1366,  1365,  1365,  1367,  1367,  1368,  1368,  1369,  1371,  1370,
    1372,  1372,  1373,  1373,  1374,  1375,  1376,  1376,  1378,  1377,
    1379,  1379,  1380,  1380,  1381,  1382,  1384,  1383,  1386,  1385,
    1387,  1387,  1388,  1388,  1389,  1390,  1390,  1390,  1390,  1390,
    1390,  1390,  1391,  1391,  1391,  1391,  1391,  1391,  1391,  1393,
    1392,  1394,  1392,  1392,  1395,  1395,  1397,  1396,  1396,  1398,
    1398,  1400,  1399,  1399,  1402,  1401,  1403,  1401,  1401,  1405,
    1404,  1404,  1407,  1406,  1406,  1408,  1409,  1408,  1408,  1408,
    1410,  1410,  1411,  1411,  1412,  1412,  1412,  1413,  1413,  1413,
    1414,  1414,  1414,  1414,  1414,  1416,  1415,  1417,  1418,  1418,
    1419,  1420,  1420,  1421,  1421,  1422,  1422,  1422,  1423,  1423,
    1423,  1424,  1424,  1425,  1425,  1425,  1425,  1426,  1426,  1427,
    1427,  1427,  1428,  1428,  1428,  1429,  1429,  1429,  1430,  1430,
    1431,  1432,  1433,  1434,  1435,  1435,  1435,  1435,  1435,  1436,
    1436,  1436,  1437,  1437,  1437,  1438,  1438,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1442,  1442,
    1443,  1443,  1444,  1444,  1445,  1445,  1446,  1446,  1446,  1446,
    1446,  1446,  1447,  1447,  1448,  1448,  1449,  1449,  1449,  1450,
    1450,  1450,  1450,  1450,  1450,  1451,  1451,  1451,  1453,  1452,
    1452,  1454,  1455,  1455,  1456,  1456,  1456,  1456,  1457,  1458,
    1458,  1458,  1458,  1458,  1458,  1458,  1458,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1460,  1460,  1460,  1461,
    1461,  1462,  1462,  1462,  1462,  1462,  1462,  1463,  1463,  1464,
    1464,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,
    1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,  1465,
    1465,  1465,  1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,
    1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,
    1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,  1466,
    1466,  1466,  1466,  1466,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1470,  1469,  1469,  1469,  1471,  1471,  1472,  1472,  1473,  1473,
    1474,  1474,  1475,  1475,  1476,  1477,  1477,  1477,  1477,  1477,
    1477,  1477,  1478,  1479,  1477,  1477,  1477,  1477,  1477,  1477,
    1477,  1477,  1477,  1477,  1477,  1480,  1477,  1481,  1481,  1482,
    1482,  1483,  1483,  1483,  1483,  1483,  1483,  1483,  1483,  1483,
    1483,  1483,  1483,  1483,  1484,  1486,  1485,  1485,  1487,  1487,
    1488,  1489,  1491,  1490,  1492,  1492,  1492,  1492,  1493,  1493,
    1494,  1494,  1495,  1495,  1496,  1496,  1497,  1497,  1498,  1499,
    1500,  1500,  1500,  1502,  1501,  1503,  1504,  1503,  1505,  1503,
    1506,  1503,  1503,  1503,  1503,  1507,  1507,  1507,  1507,  1507,
    1507,  1507,  1507,  1508,  1508,  1508,  1509,  1509,  1510,  1510,
    1511,  1511,  1512,  1512,  1513,  1513,  1514,  1514,  1515,  1515,
    1516,  1516,  1517,  1518,  1518,  1519,  1519,  1520,  1521,  1520,
    1522,  1520,  1520,  1523,  1520,  1524,  1520,  1520,  1525,  1520,
    1526,  1520,  1520,  1527,  1527,  1527,  1528,  1528,  1529,  1529,
    1530,  1531,  1531,  1533,  1532,  1534,  1534,  1535,  1535,  1536,
    1535,  1535,  1535,  1535,  1537,  1537,  1538,  1537,  1539,  1540,
    1542,  1541,  1543,  1544,  1544,  1545,  1547,  1546,  1549,  1550,
    1548,  1551,  1552,  1553,  1554,  1554,  1555,  1555,  1555,  1555,
    1556,  1556,  1558,  1557,  1559,  1557,  1560,  1560,  1561,  1562,
    1561,  1564,  1563,  1565,  1565,  1566,  1566,  1567,  1567,  1568,
    1568,  1569,  1569,  1569,  1569,  1569,  1569,  1569,  1569,  1569,
    1569,  1569,  1569,  1570,  1570,  1570,  1570,  1570,  1570,  1570,
    1570,  1570,  1571,  1571,  1571,  1571,  1572,  1572,  1572,  1573,
    1573,  1574,  1574,  1575,  1576,  1575,  1577,  1578,  1577,  1579,
    1579,  1580,  1580,  1581,  1581,  1581,  1582,  1582,  1583,  1583,
    1584,  1586,  1585,  1587,  1587,  1588,  1588,  1589,  1589,  1590,
    1590,  1591,  1591,  1592,  1592,  1593,  1593,  1593,  1594,  1594,
    1594,  1595,  1595,  1595,  1595,  1595,  1595,  1596,  1597,  1597,
    1598,  1599,  1599,  1601,  1600,  1602,  1602,  1603,  1603,  1603,
    1604,  1604,  1605,  1606,  1606,  1606,  1607,  1607,  1607,  1608,
    1608,  1608,  1608,  1608,  1608,  1609,  1610,  1610,  1610,  1610,
    1611,  1611,  1612,  1612,  1613,  1613,  1613,  1613,  1613,  1613,
    1614,  1614,  1614,  1614,  1614,  1615,  1615,  1615,  1615,  1616,
    1616,  1616,  1616,  1616,  1617,  1617,  1617,  1617,  1617,  1618,
    1619,  1619,  1620,  1620,  1621,  1621,  1621,  1623,  1622,  1624,
    1624,  1625,  1625,  1626,  1628,  1627,  1629,  1629,  1630,  1631,
    1631,  1631,  1632,  1634,  1635,  1633,  1633,  1633,  1637,  1636,
    1639,  1638,  1638,  1638,  1638,  1638,  1638,  1638,  1638,  1640,
    1638,  1638,  1638,  1638,  1638,  1638,  1641,  1638,  1642,  1642,
    1643,  1644,  1645,  1645,  1646,  1647,  1647,  1648,  1648,  1649,
    1649,  1651,  1652,  1650,  1654,  1655,  1653,  1656,  1656,  1656,
    1656,  1657,  1657,  1658,  1658,  1659,  1660,  1660,  1660,  1661,
    1660,  1662,  1662,  1663,  1663,  1663,  1664,  1664,  1665,  1665,
    1666,  1667,  1667,  1668,  1668,  1669,  1669,  1670,  1670,  1672,
    1671,  1674,  1673,  1675,  1675,  1676,  1676,  1677,  1677,  1678,
    1678,  1679,  1679,  1680,  1680,  1681,  1682,  1683,  1681,  1685,
    1686,  1684,  1687,  1687,  1688,  1688,  1689,  1689,  1690,  1691,
    1691,  1693,  1692,  1694,  1694,  1695,  1695,  1696,  1697,  1698,
    1697,  1699,  1697,  1700,  1700,  1701,  1701,  1702,  1702,  1703,
    1703,  1704,  1704,  1705,  1705,  1705,  1707,  1706,  1708,  1708,
    1709,  1709,  1710,  1710,  1711,  1711,  1711,  1711,  1711,  1711,
    1711,  1711,  1711,  1712,  1712,  1714,  1713,  1715,  1715,  1715,
    1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1716,  1715,  1717,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,
    1715,  1715,  1715,  1715,  1715,  1715,  1715,  1715,  1718,  1718,
    1718,  1719,  1719,  1720,  1720,  1721,  1721,  1722,  1722,  1723,
    1723,  1724,  1724,  1725,  1725,  1726,  1726,  1726,  1728,  1727,
    1729,  1727,  1730,  1730,  1730,  1730,  1730,  1731,  1731,  1732,
    1733,  1733,  1733,  1734,  1734,  1735,  1735,  1735,  1737,  1736,
    1739,  1738,  1738,  1740,  1740,  1741,  1742,  1741,  1743,  1743,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1745,  1745,  1746,  1746,
    1747,  1747,  1747,  1748,  1749,  1749,  1751,  1750,  1752,  1752,
    1754,  1753,  1755,  1753,  1753,  1756,  1756,  1757,  1757,  1759,
    1758,  1760,  1761,  1761,  1763,  1762,  1764,  1764,  1764,  1765,
    1765,  1765,  1766,  1766,  1767,  1767,  1768,  1769,  1771,  1772,
    1773,  1774,  1770,  1775,  1775,  1776,  1776,  1777,  1777,  1777,
    1778,  1778,  1778,  1779,  1779,  1780,  1780,  1781,  1781,  1781,
    1781,  1782,  1782,  1783,  1783,  1784,  1784,  1785,  1785,  1786,
    1786,  1787,  1787,  1788,  1788,  1788,  1789,  1789,  1790,  1790,
    1791,  1791,  1792,  1792,  1793,  1794,  1794,  1794,  1794,  1795,
    1795,  1796,  1796,  1796,  1797,  1797,  1797,  1798,  1798,  1799,
    1799,  1799,  1799,  1799,  1799,  1799,  1799,  1799,  1799,  1800,
    1800,  1800,  1800,  1800,  1801,  1801,  1801,  1802,  1802,  1804,
    1803,  1805,  1805,  1806,  1806,  1808,  1807,  1809,  1809,  1810,
    1810,  1811,  1812,  1812,  1813,  1813,  1814,  1814,  1815,  1816,
    1816,  1816,  1816,  1816,  1817,  1817,  1817,  1817,  1817,  1818,
    1818,  1818,  1818,  1819,  1819,  1819,  1820,  1820,  1821,  1822,
    1822,  1823,  1823,  1823,  1824,  1825,  1826,  1827,  1828,  1828,
    1829,  1829,  1830,  1830,  1830,  1831,  1831,  1832,  1832,  1833,
    1833,  1833,  1834,  1834,  1834,  1835,  1835,  1836,  1837,  1837,
    1837,  1837,  1837,  1837,  1837,  1837,  1838,  1838,  1838,  1838,
    1838,  1838,  1838,  1838,  1838,  1839,  1839,  1839,  1839,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1840,  1841,  1841,  1841,
    1841,  1841,  1841,  1841,  1841,  1841,  1842,  1842,  1842,  1842,
    1842,  1842,  1842,  1842,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1843,  1844,
    1844,  1844,  1844,  1844,  1844,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1846,  1846,  1846,  1847,  1847,
    1847,  1848,  1848,  1848,  1849,  1849,  1849,  1849,  1849,  1849,
    1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,
    1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,
    1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,  1850,
    1850,  1852,  1851,  1853,  1854,  1851,  1855,  1855,  1857,  1856,
    1858,  1856,  1859,  1856,  1861,  1860,  1860,  1862,  1862,  1864,
    1863,  1865,  1863,  1867,  1866,  1866,  1868,  1868,  1868,  1869,
    1869,  1869,  1869,  1870,  1870,  1870,  1870,  1871,  1871,  1871,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1873,  1873,  1873,  1873,  1874,
    1875,  1876,  1876,  1877,  1877,  1877,  1877,  1878,  1878,  1879,
    1879,  1879,  1880,  1880,  1880,  1880,  1880,  1882,  1881,  1883,
    1883,  1883,  1884,  1884,  1885,  1885,  1886,  1887,  1887,  1887,
    1887,  1887,  1889,  1888,  1890,  1890,  1891,  1890,  1892,  1892,
    1893,  1893,  1894,  1894,  1894,  1894,  1895,  1894,  1896,  1896,
    1896,  1896,  1896,  1897,  1898,  1898,  1898,  1898,  1898,  1898,
    1898,  1898,  1899,  1899,  1900,  1901,  1901,  1901,  1901,  1901,
    1901,  1901,  1902,  1902,  1903,  1903,  1904,  1904,  1905,  1906,
    1906,  1907,  1907,  1908,  1908,  1909,  1909,  1910,  1910,  1912,
    1911,  1913,  1911,  1914,  1911,  1915,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1916,  1916,  1917,  1917,  1918,  1918,
    1918,  1919,  1919,  1919,  1919,  1920,  1920,  1921,  1921,  1922,
    1922,  1923,  1923,  1924,  1924,  1925,  1925,  1925,  1925,  1925,
    1926,  1926,  1927,  1927,  1928,  1929,  1929,  1929,  1929,  1929,
    1930,  1930,  1930,  1930,  1930,  1931,  1931,  1932,  1932,  1933,
    1933,  1934,  1934,  1935,  1935,  1936,  1936,  1938,  1937,  1939,
    1940,  1940,  1941,  1941,  1942,  1942,  1942,  1943,  1943,  1943,
    1944,  1945,  1945,  1945,  1946,  1947,  1948,  1948,  1948,  1949,
    1949,  1951,  1950,  1953,  1952,  1955,  1954,  1956,  1956,  1957,
    1958,  1958,  1958,  1959,  1959,  1961,  1960,  1962,  1963,  1963,
    1964,  1964,  1965,  1965,  1965,  1966,  1967,  1968,  1969,  1969,
    1970,  1970,  1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,
    1972,  1972,  1973,  1974,  1975,  1975,  1975,  1976,  1976,  1977,
    1977,  1978,  1978,  1979,  1979,  1981,  1980,  1982,  1982,  1982,
    1982,  1982,  1982,  1982,  1983,  1983,  1983,  1983,  1984,  1984,
    1985,  1985,  1987,  1988,  1989,  1990,  1991,  1986,  1992,  1994,
    1993,  1996,  1997,  1995,  1999,  2000,  1998,  2001,  2001,  2001,
    2001,  2001,  2001,  2002,  2002,  2003,  2003,  2003,  2004,  2004,
    2004,  2005,  2005,  2005,  2006,  2006,  2007,  2008,  2007,  2009,
    2009,  2010,  2010,  2011,  2011,  2012
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     0,     2,     0,     4,     0,     5,     0,     0,
       3,     3,     1,     1,     0,     3,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     1,
       0,     1,     3,     1,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     1,     0,     7,     0,     8,     0,    15,     0,    14,
       0,    14,     0,     6,     0,    10,     0,    11,     0,     5,
       0,     5,     0,     5,     0,     5,     0,     6,     0,     5,
       0,     6,     7,     6,     4,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     2,
       1,     3,     2,     1,     3,     3,     3,     1,     1,     1,
       1,     3,     0,     1,     0,    12,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       4,     0,     2,     0,     3,     0,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     1,     1,
       2,     3,     3,     0,     4,     0,     6,     0,     8,     0,
       3,     0,     1,     3,     1,     0,     1,     3,     1,     1,
       2,     6,     8,     5,     7,     3,     0,     1,     3,     1,
       2,     0,     1,     1,     1,     0,     4,     0,     4,     0,
       3,     2,     3,     0,     3,     2,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     6,     4,     1,
       4,     1,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     3,     0,     3,     1,     3,
       0,     3,     3,     3,     4,     5,     2,     4,     2,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     0,     6,
       0,     0,     4,     1,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     2,     0,     1,     1,
       0,     7,     0,     5,     0,     7,     0,     1,     2,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     7,     3,     3,     0,     5,     0,
       5,     1,     2,     4,     0,     4,     0,     7,     5,     3,
       0,     5,     0,     5,     1,     0,     1,     0,     4,     0,
       0,     3,     0,     6,     6,     0,     4,     2,     2,     0,
       3,     2,     0,     3,     0,     1,     0,     3,     0,     1,
       1,     3,     1,     4,     3,     3,     0,     2,     0,     0,
       7,     0,    10,     1,     3,     1,     1,     0,     2,     0,
       3,     1,     3,     0,     6,     1,     0,     0,     4,     0,
       3,     1,     1,     1,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     4,     2,
       0,     2,     5,     0,     3,     1,     1,     2,     1,     1,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     3,
       0,     3,     1,     3,     0,     1,     1,     2,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     6,     1,     1,     3,     4,     4,     2,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     1,
       0,     1,     2,     4,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     2,
       0,     9,     0,    10,     0,     9,     0,     9,     0,    10,
       0,    11,     0,    10,     2,     7,     0,     1,     4,     0,
       1,     0,     1,     2,     0,     4,     0,     3,     0,     3,
       0,     1,     2,     1,     0,     1,     2,     1,     0,     1,
       2,     3,     0,     6,     5,     5,     0,     2,     0,     1,
       1,     1,     0,     1,     2,     1,     1,     2,     2,     1,
       0,     3,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     3,
       3,     2,     1,     1,     3,     3,     3,     3,     0,     1,
       2,     2,     3,     3,     2,     3,     3,     4,     3,     3,
       3,     1,     2,     2,     2,     2,     3,     3,     2,     3,
       2,     2,     3,     3,     2,     3,     2,     2,     2,     2,
       2,     5,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     2,     1,     2,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     2,     0,
       3,     0,     1,     1,     5,     0,     1,     1,     1,     2,
       2,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     4,     1,     3,     2,     1,
       0,     2,     0,     1,     2,     2,     2,     2,     2,     1,
       1,     3,     3,     3,     3,     2,     1,     2,     2,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     0,     1,     2,     1,     1,
       2,     0,     1,     1,     2,     1,     2,     2,     1,     0,
       1,     0,     4,     1,     1,     1,     0,     1,     2,     1,
       1,     2,     1,     3,     3,     1,     1,     0,     2,     0,
       1,     5,     0,     3,     3,     1,     0,     2,     2,     2,
       0,     3,     3,     6,     6,     1,     1,     2,     2,     2,
       2,     2,     1,     1,     0,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     2,     1,     2,     0,     2,     0,     2,     2,
       2,     2,     3,     2,     3,     3,     3,     3,     1,     1,
       1,     1,     3,     1,     1,     1,     4,     2,     1,     4,
       0,     1,     1,     3,     0,     0,     8,     0,     5,     7,
       0,     5,     0,     5,     0,    10,     0,     9,     0,    11,
       3,     4,     3,     3,     0,     8,     7,     0,     0,     7,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       0,     2,     2,     2,     2,     1,     1,     1,     4,     4,
       0,     6,     4,     0,     5,     0,     6,     4,     3,     1,
       7,     2,     1,     1,     0,     6,     0,     3,     2,     0,
       5,     0,     0,     6,     1,     3,     1,     1,     3,     3,
       3,     2,     2,     4,     2,     7,     6,     5,     5,     4,
       5,     4,     4,     2,     2,     7,     6,     3,     5,     1,
       1,     1,     1,     1,     3,     3,     3,     0,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     2,     0,     1,     2,     1,     1,     1,     0,     1,
       1,     0,     2,     1,     0,     1,     1,     1,     0,     6,
       0,     5,     4,     4,     3,     0,     1,     1,     3,     3,
       2,     2,     0,     2,     1,     3,     0,     1,     1,     0,
       2,     4,     1,     3,     0,     5,     0,     1,     1,     3,
       0,     4,     0,     4,     0,     1,     1,     2,     1,     1,
       1,     0,     2,     0,     5,     1,     3,     2,     0,     3,
       1,     4,     1,     0,     4,     1,     0,     4,     0,     1,
       3,     0,     1,     3,     1,     1,     2,     6,     3,     0,
       4,     0,     3,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     0,     2,     0,     6,     0,     1,     1,
       0,     4,     4,     3,     5,     1,     3,     4,     0,     6,
       1,     1,     1,     3,     2,     3,     1,     1,     0,     6,
       1,     1,     1,     3,     3,     4,     0,     6,     0,     2,
       0,     4,     0,     2,     2,     3,     1,     2,     2,     3,
       4,     4,     3,     1,     2,     2,     3,     4,     4,     0,
       3,     0,     5,     3,     4,     2,     0,     2,     3,     4,
       2,     0,     2,     3,     0,     2,     0,     7,     3,     0,
       4,     2,     0,     4,     2,     2,     0,     4,     2,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     2,     3,
       1,     4,     2,     2,     3,     0,     3,     5,     0,     1,
       2,     1,     1,     0,     1,     0,     1,     1,     2,     1,
       2,     0,     2,     3,     1,     4,     4,     2,     1,     1,
       1,     1,     0,     3,     5,     3,     1,     1,     3,     4,
       0,     0,     0,     0,     0,     2,     2,     1,     1,     0,
       2,     3,     0,     2,     3,     0,     2,     3,     3,     3,
       2,     3,     4,     3,     4,     3,     4,     3,     4,     3,
       3,     6,     1,     5,     6,     5,     7,     6,     8,     5,
       6,     4,     3,     5,     4,     6,     3,     4,     1,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     6,
       6,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       2,     1,     1,     1,     2,     1,     2,     2,     0,     3,
       1,     4,     1,     3,     1,     1,     1,     1,     3,     1,
       4,     4,     4,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     6,     4,
       4,     7,     6,     3,     4,     6,     6,     4,     4,     4,
       4,     4,     4,     6,     8,    10,     1,     1,     3,     1,
       3,     1,     2,     2,     2,     2,     2,     1,     3,     4,
       6,     4,     6,     2,     2,     4,     4,     4,    10,     6,
       8,     6,     4,     4,     6,     4,     3,     4,     1,     4,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     8,
       6,     6,     6,     6,     2,     6,     6,     8,     8,     6,
       8,     6,     2,     8,     8,     4,     2,     2,     2,     6,
       6,     4,     4,     8,     4,     4,     4,     4,     3,     8,
       6,     8,     4,     6,     4,     6,     4,     4,     4,     6,
       8,     4,     3,     6,     4,     6,     5,     8,     7,    10,
       1,     6,     4,     4,     4,     4,     4,     6,     4,     6,
       0,     5,     6,     8,     2,     3,     0,     4,     0,     3,
       0,     1,     1,     3,     4,     4,     5,     4,     4,     4,
       5,     4,     0,     0,     7,     4,     5,     4,     5,     4,
       4,     4,     4,     4,     5,     0,     9,     3,     3,     1,
       1,     3,     3,     3,     3,     3,     4,     4,     4,     6,
       4,     6,     4,     6,     5,     0,     7,     4,     4,     4,
       4,     1,     0,     3,     3,     1,     3,     5,     0,     1,
       0,     2,     0,     3,     4,     2,     0,     1,     1,     2,
       1,     3,     3,     0,     3,     2,     0,     4,     0,     4,
       0,     4,     2,     1,     1,     1,     1,     2,     1,     2,
       2,     1,     2,     1,     2,     2,     0,     1,     1,     3,
       1,     3,     1,     3,     4,     5,     1,     3,     3,     3,
       1,     1,     1,     1,     4,     1,     3,     3,     0,     6,
       0,     8,     4,     0,     8,     0,    10,     6,     0,     8,
       0,    10,     6,     1,     2,     1,     1,     2,     0,     1,
       5,     1,     1,     0,     6,     6,     9,     1,     2,     0,
       4,     2,     3,     3,     1,     1,     0,     3,     2,     1,
       0,     3,     2,     1,     1,     3,     0,     3,     0,     0,
       5,     0,     1,     0,     0,     1,     0,     2,     3,     3,
       1,     1,     0,     7,     0,     7,     1,     2,     0,     0,
       2,     0,     2,     0,     1,     1,     1,     1,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     0,     0,     3,     0,     0,     3,     0,
       4,     4,     2,     0,     1,     1,     0,     2,     3,     1,
       3,     0,     7,     0,     1,     0,     3,     0,     3,     0,
       3,     1,     1,     1,     4,     2,     2,     2,     1,     2,
       2,     0,     3,     2,     2,     3,     3,     3,     3,     1,
       2,     0,     1,     0,     4,     4,     2,     0,     1,     1,
       0,     1,     1,     2,     5,     4,     1,     3,     3,     1,
       3,     1,     1,     1,     1,     1,     0,     2,     3,     4,
       0,     1,     2,     2,     2,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     6,     0,
       1,     3,     1,     3,     0,     2,     3,     1,     1,     2,
       1,     3,     2,     0,     0,     7,     2,     1,     0,     3,
       0,     8,     7,     4,     6,     4,     4,     5,     5,     0,
       6,     4,     4,     5,     6,     4,     0,     6,     1,     3,
       1,     2,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     0,     0,     8,     0,     0,     6,     0,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     3,     4,     0,
       3,     3,     1,     2,     2,     1,     3,     1,     3,     1,
       3,     1,     1,     0,     1,     1,     1,     1,     1,     0,
       4,     0,     4,     0,     1,     0,     1,     3,     1,     5,
       3,     1,     1,     1,     1,     0,     0,     0,     7,     0,
       0,    11,     3,     1,     3,     3,     3,     1,     3,     0,
       1,     0,     3,     0,     3,     2,     3,     3,     5,     0,
       5,     0,     6,     0,     2,     1,     3,     2,     4,     0,
       2,     0,     2,     1,     1,     1,     0,     5,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     5,     2,     1,     1,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     4,     4,     3,     3,     3,     2,     3,     2,
       3,     3,     3,     3,     4,     3,     2,     3,     3,     3,
       3,     4,     3,     3,     4,     3,     3,     3,     1,     1,
       1,     1,     1,     0,     1,     0,     2,     0,     1,     1,
       1,     0,     2,     0,     2,     0,     3,     3,     0,     4,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     0,     3,     0,     1,     1,     0,     4,
       0,     4,     1,     0,     1,     4,     0,     3,     3,     1,
       2,     2,     2,     2,     3,     3,     2,     1,     1,     1,
       1,     2,     1,     1,     1,     2,     0,     1,     0,     5,
       0,     1,     3,     1,     0,     3,     0,     3,     3,     1,
       0,     4,     0,     3,     2,     0,     1,     0,     2,     0,
       3,     3,     2,     2,     0,     4,     0,     1,     1,     2,
       2,     3,     0,     1,     1,     2,     1,     2,     0,     0,
       0,     0,    22,     1,     1,     0,     1,     0,     1,     1,
       0,     1,     1,     0,     2,     2,     1,     3,     4,     3,
       3,     0,     2,     2,     1,     3,     3,     0,     4,     0,
       3,     1,     1,     0,     3,     2,     3,     1,     1,     2,
       0,     2,     3,     1,     5,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     2,     2,     0,     1,     0,
       4,     0,     1,     1,     3,     0,     9,     0,     3,     1,
       3,     1,     1,     1,     3,     5,     3,     5,     1,     1,
       3,     4,     5,     4,     1,     3,     4,     4,     5,     1,
       5,     3,     2,     1,     3,     2,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     0,     0,     7,     1,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     2,     0,     2,     0,
       2,     0,     4,     0,     3,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     3,     5,     5,
       3,     5,     5,     4,     6,     8,     8,     2,     3,     3,
       3,     5,     2,     3,     3,     1,     1,     3,     3,     1,
       3,     2,     2,     2,     2,     2,     1,     1,     3,     1,
       4,     4,     1,     1,     1,     1,     1,     0,     5,     0,
       2,     1,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     2,     0,     3,     4,     3,     0,     7,     1,     2,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     1,
       1,     1,     1,     3,     6,     6,     6,     6,     7,     7,
       5,     3,     4,     1,     3,     8,     8,     8,     8,     9,
       6,     4,     0,     3,     0,     3,     1,     3,     2,     1,
       1,     0,     1,     1,     2,     0,     1,     1,     3,     0,
       3,     0,     3,     0,     3,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     2,     0,     1,     3,     1,     2,     2,
       2,     1,     3,     3,     1,     1,     3,     1,     3,     1,
       3,     1,     1,     1,     1,     4,     5,     4,     6,     1,
       0,     3,     3,     1,     1,     0,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     0,     2,     0,
       2,     0,     3,     2,     1,     2,     1,     0,     3,     1,
       0,     1,     0,     1,     0,     3,     2,     0,     1,     2,
       4,     4,     5,     4,     2,     3,     1,     1,     1,     0,
       1,     0,     4,     0,     4,     0,     2,     2,     1,     2,
       0,     1,     1,     1,     1,     0,     3,     3,     3,     4,
       2,     3,     1,     1,     2,     4,     0,     0,     0,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     3,     3,     3,     0,     1,     3,
       3,     0,     3,     1,     3,     0,     4,     3,     1,     2,
       2,     3,     4,     4,     0,     3,     4,     4,     1,     1,
       0,     2,     0,     0,     0,     0,     0,    20,     6,     0,
       3,     0,     0,     9,     0,     0,     8,     4,     4,     3,
       4,     3,     3,     0,     3,     1,     3,     5,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     0,     3,     0,
       2,     5,     3,     3,     3,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 2250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 26229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 26256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 26265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 26275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 26288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 26294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 26303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 26313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 26330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 2414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 26342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 26353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 26372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 26382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 26390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 26404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 26412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 26420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 26467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 26475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 26483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 26491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 26499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 26516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 26524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 26612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 26631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 26639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 26649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 26659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 26669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 26679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 26688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 26700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 26728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 26771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 26861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 26873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2859 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 26949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 26963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 26989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 27023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 27031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 27037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2911 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 27055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR)))
            {
              my_yyabort_error((ER_INVALID_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(GROUP_AGGREGATE);
          }
#line 27067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 27079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_AGGREGATE; }
#line 27091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 27170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2998 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 27182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 3006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 27194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 3014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 27206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 3022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 3030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 3038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 27246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 3050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 27263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 3065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 3065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 3069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 27285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 3076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 27291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 3086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 27300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 3091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 27309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 3096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 27318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 3101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 27327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 3106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 27336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 3111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 27345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 3116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 27353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 3123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 3144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 3155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 3162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 3168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 3170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 3176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 27429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 27498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 27534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 27548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 27564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 27612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 27660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 27764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd,
                                                                (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].ident_sys),
                                                                (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar),
                                                                (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 27812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyvsp[0].spvar)->mode=(yyvsp[-1].spvar_mode); }
#line 27818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 27836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 27842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 27894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (unlikely(Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 27907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 27913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 27956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 27985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 27993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 28005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 28015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 28025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 28035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 28046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 28054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-5].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, true)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 28068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 28077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 28108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 28120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 28126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 28138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 28156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 28172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 28235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(cond->type != sp_condition_value::SQLSTATE))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 28321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 28333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 28347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 28413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 28419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 28425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 28431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 28437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 28443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 28449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 28455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 28461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 28467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 28473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 28479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 28504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 28576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 28586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 28728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 28744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 28766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 28772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 28782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 28788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 28800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 28881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 29007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 29016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 29038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 29076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 29082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 29091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            lex->sphead->m_flags|= sp_head::HAS_AGGREGATE_INSTR;
            sp_instr_agg_cfetch *i=
              new (thd->mem_root) sp_instr_agg_cfetch(sp->instructions(),
                                                      lex->spcont);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
         }
#line 29140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 29205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 29241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 29251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 29305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 29323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 29329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 29352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[-1].ident_sys); }
#line 29435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 29441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 29447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 29457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 29465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 29482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 29501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 29522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 29531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 29539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 29550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 29560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 29596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 29602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 29621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 29699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4917 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4936 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 29806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 29812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 29818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 29824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 29830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 29845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 29853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 29931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 29940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 29949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 29958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 29967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 29976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 29985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 30014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 30025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 30037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 30046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 30057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 30072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5342 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 30078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 30096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 30108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 30129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 30135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 30141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 30165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 30173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 30179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 30191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 30211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 5447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 30232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 30248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 5477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 30265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 5489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 5494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 30277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 5500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 30288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 5507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 30294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 5508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 5510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 5512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 30320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 5518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 30329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 5523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 30335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 5525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 30344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 5535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 30356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 5540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 30362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 5542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 30380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 5558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 5559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 5563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 5564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 5569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 30419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 5583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 30429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 5593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 30441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 5604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 30450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 5612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 5614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 5626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 5628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 30482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 5629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 5632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 30498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 5637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 5641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 5642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 5647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 30531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 30544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 30563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 30577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 30650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 30670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 30687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 30710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 30725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 30734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 30755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 30814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 30853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 30884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 30929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 31023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 31039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 31069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 31079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 31089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 31095 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 31113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 31119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 31125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 31141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 31156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 31164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 31178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 31207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 31215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 31227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 31283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 31291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 31307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 31323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 31342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 31351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 31360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 31369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 31378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 31387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 31396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6342 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 31540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 31549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 31558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 31566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 31592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 31601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 31610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 31619 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 31625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 31631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 31637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 31647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 31656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 31665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6505 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 31720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 31740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 31749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 31765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 31776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6587 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 31830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 31854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 31860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 31872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 31880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 31892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6633 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 31898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 32008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 32038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 32046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 32055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 32061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 32067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6757 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 32096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 32102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 32108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 32128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 32151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 32157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 32219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 32228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 32237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 32325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 32333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 32346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 32357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 32399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 32416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 32425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6999 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 32431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 32437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 32457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 32465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 32498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 32518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 32536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 32601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 32607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 32618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 32629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 32637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 32646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 32727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 32733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32757 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 32772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 32778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 32784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 32790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 32796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 32802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 32808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 32814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 32820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 32826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 32892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 32898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 32904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 32910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 32916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7251 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 32926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 32944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 32952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 32958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 32964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 32976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 32994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 33042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 33048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 33054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 33060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 33066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 33084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 33090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 33101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 33107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 33128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 33134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 33140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 33152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 33188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 33234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 33258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 33268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 33278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 33323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 33367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7517 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 33415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 33424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 33436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 33448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7536 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 33454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 33460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 33466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].charset))
              Lex->charset= (yyvsp[-1].charset); // CHARACTER SET cs COLLATE DEFAULT
            else
            {
              if (!my_charset_same((yyvsp[0].charset), (yyvsp[-1].charset)))
                my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                  (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
              Lex->charset= (yyvsp[0].charset);
            }
          }
#line 33482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= (yyvsp[0].charset); }
#line 33488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 33494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 33500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 33512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 33530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 33536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 33554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 33560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 33569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 33577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 33589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 33600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 33632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 33638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 33668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 33674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 33680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 33686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7707 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 33766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 33772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 33820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 33832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7754 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7770 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 33932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 33938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 33972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7844 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 34005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 34011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 34092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 34107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 34121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 34130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 34143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 34155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 34167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 34178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 34190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8004 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 34201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 34252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 34270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 34279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 34288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 34297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 34306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 34316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 34322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-4].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 34331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 34345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 34360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 34414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 34432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 34466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 34476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 34506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 8252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 34546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 8259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 8271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 8294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 34592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 8301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 34600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 8310 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 8322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 8328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 34631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 8333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 34639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 8340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 8353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 34660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 8357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 34668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 8361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 34677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 8368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 8369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 8374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 8396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 8403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 8408 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 34727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 8412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 8419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 34746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 8423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 8429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 8437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 8444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 34791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 8454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 8465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 34820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 8475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 8486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 8496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 8502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 8508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 34880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 8515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 34890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 8521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 34908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 8535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 8549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 8554 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 34943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 8558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 34952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 8565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 34961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 34970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 34978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 8590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 34987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 8608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 35032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 35038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 35044 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 35050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 35059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 35065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 35071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 35077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 35083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8678 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 35137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 8687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 35154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 8693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 8695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 35207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 8743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8754 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 35261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 8766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 35279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 35285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 8783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 35304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 35312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 35335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 35341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 35347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 8849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8859 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 35421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 35433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 35473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 35502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 35519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 8950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 35559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 8972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 35570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 8982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 35581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 35591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 35661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 35667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 35679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 35807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 35817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 35853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 35863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 35901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 35911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 35929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 35941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 9283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 35949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 9287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 9291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 35969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 9300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 9313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 35989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 9321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 9334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 36009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 9342 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 36017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 9350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 36025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 36034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 36042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 36051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 36057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 9384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 9394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 9401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 36093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 36101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 36109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 9419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 36117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 36125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 9463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 36137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 36145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 9499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 36155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 9514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 36165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 36173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 36181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 36189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 36201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 36209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 36217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 36241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 36249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9580 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 9593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 36286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 9610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 36307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 9631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 36318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 36330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 9651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 36345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 9665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 36354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 9670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 36377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 9691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 36385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 36393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 9703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 36401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 9709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 9715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 36415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 9717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 9718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 9719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 9723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 9969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 9977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 37078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 37084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 37090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 37096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 37102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 37108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 37129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 37159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 37165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 37171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 37189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 37195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 37201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 37207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 37221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 37230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 37254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 37265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 37274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 37280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 37286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 37292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 37298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 37307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 37319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 37325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 37337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 37343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10325 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 37361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 10331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10349 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 37405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 37467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 10443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 37547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 10449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 10458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 37845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 37857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 10778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 10784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 10789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 10799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 10828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 38119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 10889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 10906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 10912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 10918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 10924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 10930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 10937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 10943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38276 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 10949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 10958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 10969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 10976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 10988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 10995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 38355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 38700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 38718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 38724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 38784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 38869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11392 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 39007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 39209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 39256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 39275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11675 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 39297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 39309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 39349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 39355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 11733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 11762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 11769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 39460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 39755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 39797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 39817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 39841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 39849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 39870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 39903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 39914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 39926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 39950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 39962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 39980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            TABLE_LIST *tl= (yyval.table_list);
            Select->add_joined_table(tl);
            if ((yyvsp[-2].num))
              tl->vers_conditions= Lex->vers_conditions;
          }
#line 39999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 40068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 40091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 40121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 40127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 40133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_braces(0);
          }
#line 40141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 40153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 40161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 40201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_start_derived())
              MYSQL_YYABORT;
          }
#line 40210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 40220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 40241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 40249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 40255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 40265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 40278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 40298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 40310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 40316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 40322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 40328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 40336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 40344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 40350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 40356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 40362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12505 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 40374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 40380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12517 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 40395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 40422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 40428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 40434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 40440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 40446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 40452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 40542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 40548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 12570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 12571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 40566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 40582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 40590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 40610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 12704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 40717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 40772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 40778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 12764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 40792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 40802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 40841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 40875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 40881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 40887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 40909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 12870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!first_sl->next_select() && first_sl->tvc &&
                           unit->add_fake_select_lex(thd)))
                 MYSQL_YYABORT;
              else if (unlikely(!unit->is_unit_op() &&
                                (first_sl->order_list.elements ||
                                 first_sl->select_limit) &&
                                unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
             }
          }
#line 40959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

          }
#line 40967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 40991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12936 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 40997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 41003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces &&
                sel->master_unit()->fake_select_lex)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 41030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 12969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 41068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 41079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 41090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13004 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 41116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 41155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 41164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 41175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 41181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 41187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41277 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 41361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 41367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 41373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 41379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 41415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 41424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 41459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 41492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 41500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 41576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 41586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 41624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 13391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 41744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 41753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 41762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 13426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 41806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 41829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 41838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 41846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 41854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 41866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 41877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 41886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 41907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 41916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 41939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 41962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 42001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 13600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 13636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 13645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 13650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 42202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 42252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 42260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 42268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13773 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 42279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 13781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 42302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 13813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 42322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 42331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 42369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 42386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 42394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 42408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 42449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 42538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 42657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 42686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 42709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 42721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 42733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 42745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 42757 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14158 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 42795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 42801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 42861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 42872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 42881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 42890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 42899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 42923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 42929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 42935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 42946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 42958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 42964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 42976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 42987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 42998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 43010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 43020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 43029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 43041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 43053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 43065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14325 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 43073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 43082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 43093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 43102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 43134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 43144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 43154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 43166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 43175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43208 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 43266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 43289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 43313 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 43319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 43325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 43331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 43337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 43343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 43349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 43361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 43407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 43413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 43422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 43430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 43436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 43480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14613 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14678 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14707 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 43676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14756 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 43747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 43753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 43759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 43795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 43801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 43827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 43837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 43851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 43862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 43874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 43882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 43912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 43922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 43942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 43951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 43957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 43967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14915 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            mysql_init_select(lex);

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 43983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 14927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 43998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 44015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 14951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 14955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 44031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 44037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 44043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 44049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 44055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 44085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 44091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 44097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 15003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 44106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 15008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 44117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 15015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 44126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 15020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 44135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 15038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 44144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 15043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 44153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 15050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 15052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 44165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 15058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 44174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 15065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 15066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 15070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 15071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 15072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 15077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 15079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 15083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 44222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 15085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 15093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 15094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 15104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 15117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 15122 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 15127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 44283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 15132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 44292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 15140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 44304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 15147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 44310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 15153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 44368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 15198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 44378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 15204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 15213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 44422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= 0; }
#line 44611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 44619 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->with_cte_resolution= true;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
          }
#line 44634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15388 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 44655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].with_element_head), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 44685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if ((yyval.with_element_head) == NULL)
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 44730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 15563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 15565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 15600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 15610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 15616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 15625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 15641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 44983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 15646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 44992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 15679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 45055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 15712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 15721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 45108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 45142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 45154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 15790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 45164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 16396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 45184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16408 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_init();
          }
#line 45192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 45204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 16420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 16436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 16442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 45227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 16446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 16451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 16461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 16467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 16481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 16485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 16490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 16494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 16503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 16511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 16512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 16513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 16517 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 16518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 16519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 16520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 16524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 16525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 16526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 16527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 16533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 16538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 16543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 16552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 16557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 16562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 16567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 16572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 16577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 16582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 16587 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 16601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 16612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 16631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 16649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 16661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3123:
#line 16669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3124:
#line 16674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 16697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 16716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 16733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 16734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 16738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 16739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 16740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 16741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 16746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 45685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 16760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 45691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 16764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 45697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 16765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 45703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 16767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 45714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 16776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 16777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 45726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 16779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 16785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 16791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 16802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 16810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 16815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 16817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 45790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 16823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 45800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 16831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 16832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 16842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 45832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 16860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 16861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 16863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 16867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 45858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 16868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 16873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 16881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 16890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 16900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 16910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 16928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 45947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 16941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 45953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 16942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 45959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 16946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 16947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 16951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 16952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 16953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 45989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 16954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 45995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 16956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 16964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 16968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 46019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 16969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 46025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 16970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 46031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 16971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 46037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 16972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 46043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 16979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 46059 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 46107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 46156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 46166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 46176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 46186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 46225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 46231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 46237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 46243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 46272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46295 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 17182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 46316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 17183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 17185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 46328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 17186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 17188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 46340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 17189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 17191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 46352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 17192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 46364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 17194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 17195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 46376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 17196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 46382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 17197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 46388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 17198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 46394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 17199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 46400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 17200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 46406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 17201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 46412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 17202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 46418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 17203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 46424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 17204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 17205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 46436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 17206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 46442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 17207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 46448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 17208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 46454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3243:
#line 17209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 46460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3244:
#line 17210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 46466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3245:
#line 17211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 46472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3246:
#line 17212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 46478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 17213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 46484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 46490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 17215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 46496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 17216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 46502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 17217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 46508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 17218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 17219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 17224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 17234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 17241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 17248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 17258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 17268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 17277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 17286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46619 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 17299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 17304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 17312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 17317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 17325 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 17330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 17341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 46684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 17348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 46693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 17353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 46703 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 17359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 46713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 17365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 17370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 46728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 17384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 46758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 17414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 46766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 17418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 46774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 17422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 46782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 17426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 46790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 17433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 46800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 17439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 46810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 17445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 46820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 17451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 46830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 17457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 46840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 17465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 17466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 17470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 17476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 17477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 17481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 17482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 17486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 17487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 17491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 17492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 17497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 17502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 17507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 46932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 17515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 46938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 17516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 46944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 17520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 17521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 17526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 17527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 17528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 17533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 17534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= UNION_TYPE; }
#line 47064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= INTERSECT_TYPE; }
#line 47070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= EXCEPT_TYPE; }
#line 47076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3329:
#line 17606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3331:
#line 17612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 47091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3332:
#line 17617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 47103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 47112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3334:
#line 17633 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
          }
#line 47120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3335:
#line 17639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 47138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3336:
#line 17653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 47147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 17669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 47156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17678 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 47174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
	  }
#line 47194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 47204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 47212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 47263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 47286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 47316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 17800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 47322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 47334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 47340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 47346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 47352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17813 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 47362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 47372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 47378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 17840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 47393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 47404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 47410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 17870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 47416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3376:
#line 17871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 47422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 17875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 47428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 17876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 47434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 17880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 17892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;

          }
#line 47502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3394:
#line 17944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 17945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 17946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 17965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 17972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 17981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 17990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3404:
#line 17996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 18001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 18005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3407:
#line 18025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $21 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 47642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3408:
#line 18059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 47658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3409:
#line 18075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 47669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3410:
#line 18082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 47679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 18092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 47690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 18101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 18109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 47711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 18117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 47722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 18125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 18130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 47740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 18140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 47748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 18144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 47756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 18148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 47764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 18152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 47772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 18156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 47780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 18160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 47789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 18167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 47795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 18169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 47812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 18185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 47823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 18192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 47834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 18199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 47845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 18208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 18209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 18210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 18214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 18215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 47875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 18216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 47881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 18220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 18221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 47893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 18226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 18228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 47905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 18233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 18234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 47917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 18239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 18246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 18256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 47949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 18262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 18273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 47968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 47972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
