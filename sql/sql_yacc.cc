/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif


/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int LEX::case_stmt_action_expr(Item* expr)
{
  int case_expr_id= spcont->register_case_expr();
  sp_instr_set_case_expr *i;

  if (spcont->push_case_expr_id(case_expr_id))
    return 1;

  i= new (thd->mem_root)
    sp_instr_set_case_expr(sphead->instructions(), spcont, case_expr_id, expr,
                           this);

  sphead->add_cont_backpatch(i);
  return sphead->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int LEX::case_stmt_action_when(Item *when, bool simple)
{
  uint ip= sphead->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new (thd->mem_root)
         Item_case_expr(thd, spcont->get_current_case_expr_id());

#ifdef DBUG_ASSERT_EXISTS
    if (var)
    {
      var->m_sp= sphead;
    }
#endif

    expr= new (thd->mem_root) Item_func_eq(thd, var, when);
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, expr, this);
  }
  else
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, when, this);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return
    !MY_TEST(i) ||
    sphead->push_backpatch(thd, i, spcont->push_label(thd, &empty_clex_str, 0)) ||
    sphead->add_cont_backpatch(i) ||
    sphead->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int LEX::case_stmt_action_then()
{
  uint ip= sphead->instructions();
  sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, spcont);
  if (!MY_TEST(i) || sphead->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sphead->backpatch(spcont->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to after END CASE
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sphead->push_backpatch(thd, i, spcont->last_label());
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

bool
LEX::set_system_variable(enum enum_var_type var_type,
                         sys_var *sysvar, const LEX_CSTRING *base_name,
                         Item *val)
{
  set_var *setvar;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (spcont && sysvar == Sys_autocommit_ptr)
    sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), sysvar->name.str);
    return TRUE;
  }

  if (!(setvar= new (thd->mem_root) set_var(thd, var_type, sysvar,
                                            base_name, val)))
    return TRUE;

  return var_list.push_back(setvar, thd->mem_root);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

bool LEX::set_trigger_new_row(const LEX_CSTRING *name, Item *val)
{
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new (thd->mem_root) Item_null(thd);

  DBUG_ASSERT(trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (trg_chistics.event == TRG_EVENT_INSERT ||
               trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(thd, current_context(),
                               Item_trigger_field::NEW_ROW,
                               name, UPDATE_ACL, FALSE);

  if (unlikely(trg_fld == NULL))
    return TRUE;

  sp_fld= new (thd->mem_root)
        sp_instr_set_trigger_field(sphead->instructions(),
                                   spcont, trg_fld, val, this);

  if (unlikely(sp_fld == NULL))
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
Item_splocal*
LEX::create_item_for_sp_var(const Lex_ident_cli_st *cname, sp_variable *spvar)
{
  const Sp_rcontext_handler *rh;
  Item_splocal *item;
  const char *start_in_q= cname->pos();
  const char *end_in_q= cname->end();
  uint pos_in_q, len_in_q;
  Lex_ident_sys name(thd, cname);

  if (name.is_null())
    return NULL;  // EOM

  /* If necessary, look for the variable. */
  if (spcont && !spvar)
    spvar= find_variable(&name, &rh);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spcont && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= (uint)(start_in_q - sphead->m_tmp_query);
  len_in_q= (uint)(end_in_q - start_in_q);

  item= new (thd->mem_root)
    Item_splocal(thd, rh, &name, spvar->offset, spvar->type_handler(),
                 pos_in_q, len_in_q);

#ifdef DBUG_ASSERT_EXISTS
  if (item)
    item->m_sp= sphead;
#endif

  return item;
}

/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(thd, left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(thd, left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(thd, left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select
          statement uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
                       is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool LEX::add_select_to_union_list(bool is_union_distinct,
                                   enum sub_select_type type,
                                   bool is_top_level)
{
  const char *type_name= (type == INTERSECT_TYPE ? "INTERSECT" :
                     (type == EXCEPT_TYPE ? "EXCEPT" : "UNION"));
  /*
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "INTO");
    return TRUE;
  }
  if (current_select->order_list.first && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ORDER BY");
    return TRUE;
  }

  if (current_select->explicit_limit && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "LIMIT");
    return TRUE;
  }
  if (current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    thd->parse_error();
    return TRUE;
  }
  if (!is_union_distinct && (type == INTERSECT_TYPE || type == EXCEPT_TYPE))
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ALL");
    return TRUE;
  }
  /*
    Priority implementation, but also trying to keep things as flat
    as possible */
  if (type == INTERSECT_TYPE &&
      (current_select->linkage != INTERSECT_TYPE &&
       current_select != current_select->master_unit()->first_select())
     && !(thd->variables.sql_mode & MODE_ORACLE))
  {
    /*
      This and previous SELECTs should go one level down because of
      priority
    */
    SELECT_LEX *prev= exclude_last_select();
    if (add_unit_in_brackets(prev))
      return TRUE;
    return add_select_to_union_list(is_union_distinct, type, 0);
  }
  else
  {
    check_automatic_up(type);
  }
  /* This counter shouldn't be incremented for UNION parts */
  nest_level--;
  if (mysql_new_select(this, 0, NULL))
    return TRUE;
  mysql_init_select(this);
  current_select->linkage= type;
  current_select->with_all_modifier= !is_union_distinct;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    current_select->master_unit()->union_distinct= current_select;
  else
    DBUG_ASSERT(type == UNION_TYPE);
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    if (no_lookahead)
        lex->sphead->m_tmp_query= lip->get_ptr();
    else
        lex->sphead->m_tmp_query= lip->get_tok_end();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    sp_head *sp= lex->sphead;

    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      LEX_STRING qbuff;
      sp_instr_stmt *i;
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      if (!(i= new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex->spcont, lex)))
        return true;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      if (no_lookahead)
        qbuff.length= lip->get_ptr() - sp->m_tmp_query;
      else
        qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

      if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                          qbuff.length + 5)))
        return true;

      strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
              qbuff.length);
      qbuff.length+= 4;
      i->m_query= qbuff;
      if (sp->add_instr(i))
        return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}

void LEX::add_key_to_list(LEX_CSTRING *field_name,
                          enum Key::Keytype type, bool check_exists)
{
  Key *key;
  MEM_ROOT *mem_root= thd->mem_root;
  key= new (mem_root)
        Key(type, &null_clex_str, HA_KEY_ALG_UNDEF, false,
             DDL_options(check_exists ?
                         DDL_options::OPT_IF_NOT_EXISTS :
                         DDL_options::OPT_NONE));
  key->columns.push_back(new (mem_root) Key_part_spec(field_name, 0),
                         mem_root);
  alter_info.key_list.push_back(key, mem_root);
}

bool LEX::add_alter_list(const char *name, Virtual_column_info *expr,
                         bool exists)
{
  MEM_ROOT *mem_root= thd->mem_root;
  Alter_column *ac= new (mem_root) Alter_column(name, expr, exists);
  if (unlikely(ac == NULL))
    return true;
  alter_info.alter_list.push_back(ac, mem_root);
  alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
  return false;
}

void LEX::init_last_field(Column_definition *field,
                          const LEX_CSTRING *field_name,
                          const CHARSET_INFO *cs)
{
  last_field= field;

  field->field_name= *field_name;

  /* reset LEX fields that are used in Create_field::set_and_check() */
  charset= cs;
}


bool LEX::set_bincmp(CHARSET_INFO *cs, bool bin)
{
  /*
     if charset is NULL - we're parsing a field declaration.
     we cannot call find_bin_collation for a field here, because actual
     field charset is determined in get_sql_field_charset() much later.
     so we only set a flag.
  */
  if (!charset)
  {
    charset= cs;
    last_field->flags|= bin ? BINCMP_FLAG : 0;
    return false;
  }

  charset= bin ? find_bin_collation(cs ? cs : charset)
               :                    cs ? cs : charset;
  return charset == NULL;
}

#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


Virtual_column_info *add_virtual_expression(THD *thd, Item *expr)
{
  Virtual_column_info *v= new (thd->mem_root) Virtual_column_info();
  if (unlikely(!v))
     return 0;
   v->expr= expr;
   v->utf8= 0;  /* connection charset */
   return v;
}


#line 831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.hh".  */
#ifndef YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
# define YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FORCE_LOOKAHEAD = 346,
    FOREIGN = 347,
    FOR_SYM = 348,
    FOR_SYSTEM_TIME_SYM = 349,
    FROM = 350,
    FULLTEXT_SYM = 351,
    GE = 352,
    GOTO_ORACLE_SYM = 353,
    GRANT = 354,
    GROUP_SYM = 355,
    GROUP_CONCAT_SYM = 356,
    LAG_SYM = 357,
    LEAD_SYM = 358,
    HAVING = 359,
    HEX_NUM = 360,
    HEX_STRING = 361,
    HOUR_MICROSECOND_SYM = 362,
    HOUR_MINUTE_SYM = 363,
    HOUR_SECOND_SYM = 364,
    IDENT = 365,
    IDENT_QUOTED = 366,
    IF_SYM = 367,
    IGNORE_DOMAIN_IDS_SYM = 368,
    IGNORE_SYM = 369,
    INDEX_SYM = 370,
    INFILE = 371,
    INNER_SYM = 372,
    INOUT_SYM = 373,
    INSENSITIVE_SYM = 374,
    INSERT = 375,
    INTERSECT_SYM = 376,
    INTERVAL_SYM = 377,
    INTO = 378,
    INT_SYM = 379,
    IN_SYM = 380,
    IS = 381,
    ITERATE_SYM = 382,
    JOIN_SYM = 383,
    KEYS = 384,
    KEY_SYM = 385,
    KILL_SYM = 386,
    LE = 387,
    LEADING = 388,
    LEAVE_SYM = 389,
    LEFT = 390,
    LEX_HOSTNAME = 391,
    LIKE = 392,
    LIMIT = 393,
    LINEAR_SYM = 394,
    LINES = 395,
    LOAD = 396,
    LOCATOR_SYM = 397,
    LOCK_SYM = 398,
    LONGBLOB = 399,
    LONGTEXT = 400,
    LONG_NUM = 401,
    LONG_SYM = 402,
    LOOP_SYM = 403,
    LOW_PRIORITY = 404,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 405,
    MATCH = 406,
    MAX_SYM = 407,
    MAXVALUE_SYM = 408,
    MEDIAN_SYM = 409,
    MEDIUMBLOB = 410,
    MEDIUMINT = 411,
    MEDIUMTEXT = 412,
    MINUTE_MICROSECOND_SYM = 413,
    MINUTE_SECOND_SYM = 414,
    MIN_SYM = 415,
    MODIFIES_SYM = 416,
    MOD_SYM = 417,
    MYSQL_CONCAT_SYM = 418,
    NATURAL = 419,
    NCHAR_STRING = 420,
    NE = 421,
    NEG = 422,
    NOT2_SYM = 423,
    NOT_SYM = 424,
    NOW_SYM = 425,
    NO_WRITE_TO_BINLOG = 426,
    NTILE_SYM = 427,
    NULL_SYM = 428,
    NUM = 429,
    NUMERIC_SYM = 430,
    NTH_VALUE_SYM = 431,
    ON = 432,
    OPTIMIZE = 433,
    OPTIONALLY = 434,
    ORACLE_CONCAT_SYM = 435,
    OR2_SYM = 436,
    ORDER_SYM = 437,
    OR_SYM = 438,
    OTHERS_ORACLE_SYM = 439,
    OUTER = 440,
    OUTFILE = 441,
    OUT_SYM = 442,
    OVER_SYM = 443,
    PACKAGE_ORACLE_SYM = 444,
    PAGE_CHECKSUM_SYM = 445,
    PARAM_MARKER = 446,
    PARSE_VCOL_EXPR_SYM = 447,
    PARTITION_SYM = 448,
    PERCENT_ORACLE_SYM = 449,
    PERCENT_RANK_SYM = 450,
    PERCENTILE_CONT_SYM = 451,
    PERCENTILE_DISC_SYM = 452,
    POSITION_SYM = 453,
    PRECISION = 454,
    PRIMARY_SYM = 455,
    PROCEDURE_SYM = 456,
    PURGE = 457,
    RAISE_ORACLE_SYM = 458,
    RANGE_SYM = 459,
    RANK_SYM = 460,
    READS_SYM = 461,
    READ_SYM = 462,
    READ_WRITE_SYM = 463,
    REAL = 464,
    RECURSIVE_SYM = 465,
    REF_SYSTEM_ID_SYM = 466,
    REFERENCES = 467,
    REGEXP = 468,
    RELEASE_SYM = 469,
    RENAME = 470,
    REPEAT_SYM = 471,
    REPLACE = 472,
    REQUIRE_SYM = 473,
    RESIGNAL_SYM = 474,
    RESTRICT = 475,
    RETURNING_SYM = 476,
    RETURN_MARIADB_SYM = 477,
    RETURN_ORACLE_SYM = 478,
    REVOKE = 479,
    RIGHT = 480,
    ROWS_SYM = 481,
    ROWTYPE_ORACLE_SYM = 482,
    ROW_NUMBER_SYM = 483,
    SECOND_MICROSECOND_SYM = 484,
    SELECT_SYM = 485,
    SENSITIVE_SYM = 486,
    SEPARATOR_SYM = 487,
    SERVER_OPTIONS = 488,
    SET = 489,
    SET_VAR = 490,
    SHIFT_LEFT = 491,
    SHIFT_RIGHT = 492,
    SHOW = 493,
    SIGNAL_SYM = 494,
    SMALLINT = 495,
    SPATIAL_SYM = 496,
    SPECIFIC_SYM = 497,
    SQLEXCEPTION_SYM = 498,
    SQLSTATE_SYM = 499,
    SQLWARNING_SYM = 500,
    SQL_BIG_RESULT = 501,
    SQL_SMALL_RESULT = 502,
    SQL_SYM = 503,
    SSL_SYM = 504,
    STARTING = 505,
    STATS_AUTO_RECALC_SYM = 506,
    STATS_PERSISTENT_SYM = 507,
    STATS_SAMPLE_PAGES_SYM = 508,
    STDDEV_SAMP_SYM = 509,
    STD_SYM = 510,
    STRAIGHT_JOIN = 511,
    SUBSTRING = 512,
    SUM_SYM = 513,
    SYSDATE = 514,
    TABLE_REF_PRIORITY = 515,
    TABLE_SYM = 516,
    TERMINATED = 517,
    TEXT_STRING = 518,
    THEN_SYM = 519,
    TINYBLOB = 520,
    TINYINT = 521,
    TINYTEXT = 522,
    TO_SYM = 523,
    TRAILING = 524,
    TRIGGER_SYM = 525,
    TRIM = 526,
    TRUE_SYM = 527,
    ULONGLONG_NUM = 528,
    UNDERSCORE_CHARSET = 529,
    UNDO_SYM = 530,
    UNION_SYM = 531,
    UNIQUE_SYM = 532,
    UNLOCK_SYM = 533,
    UNSIGNED = 534,
    UPDATE_SYM = 535,
    USAGE = 536,
    USE_SYM = 537,
    USING = 538,
    UTC_DATE_SYM = 539,
    UTC_TIMESTAMP_SYM = 540,
    UTC_TIME_SYM = 541,
    VALUES = 542,
    VALUES_IN_SYM = 543,
    VALUES_LESS_SYM = 544,
    VARBINARY = 545,
    VARCHAR = 546,
    VARIANCE_SYM = 547,
    VARYING = 548,
    VAR_SAMP_SYM = 549,
    WHEN_SYM = 550,
    WHERE = 551,
    WHILE_SYM = 552,
    WITH = 553,
    WITH_CUBE_SYM = 554,
    WITH_ROLLUP_SYM = 555,
    WITH_SYSTEM_SYM = 556,
    XOR = 557,
    YEAR_MONTH_SYM = 558,
    ZEROFILL = 559,
    IMPOSSIBLE_ACTION = 560,
    BODY_MARIADB_SYM = 561,
    ELSEIF_ORACLE_SYM = 562,
    ELSIF_MARIADB_SYM = 563,
    EXCEPTION_ORACLE_SYM = 564,
    GOTO_MARIADB_SYM = 565,
    OTHERS_MARIADB_SYM = 566,
    PACKAGE_MARIADB_SYM = 567,
    RAISE_MARIADB_SYM = 568,
    ROWTYPE_MARIADB_SYM = 569,
    ACTION = 570,
    ADMIN_SYM = 571,
    ADDDATE_SYM = 572,
    AFTER_SYM = 573,
    AGAINST = 574,
    AGGREGATE_SYM = 575,
    ALGORITHM_SYM = 576,
    ALWAYS_SYM = 577,
    ANY_SYM = 578,
    ASCII_SYM = 579,
    AT_SYM = 580,
    ATOMIC_SYM = 581,
    AUTHORS_SYM = 582,
    AUTOEXTEND_SIZE_SYM = 583,
    AUTO_INC = 584,
    AUTO_SYM = 585,
    AVG_ROW_LENGTH = 586,
    AVG_SYM = 587,
    BACKUP_SYM = 588,
    BEGIN_MARIADB_SYM = 589,
    BEGIN_ORACLE_SYM = 590,
    BINLOG_SYM = 591,
    BIT_SYM = 592,
    BLOCK_SYM = 593,
    BOOL_SYM = 594,
    BOOLEAN_SYM = 595,
    BTREE_SYM = 596,
    BYTE_SYM = 597,
    CACHE_SYM = 598,
    CASCADED = 599,
    CATALOG_NAME_SYM = 600,
    CHAIN_SYM = 601,
    CHANGED = 602,
    CHARSET = 603,
    CHECKPOINT_SYM = 604,
    CHECKSUM_SYM = 605,
    CIPHER_SYM = 606,
    CLASS_ORIGIN_SYM = 607,
    CLIENT_SYM = 608,
    CLOB_MARIADB_SYM = 609,
    CLOB_ORACLE_SYM = 610,
    CLOSE_SYM = 611,
    COALESCE = 612,
    CODE_SYM = 613,
    COLLATION_SYM = 614,
    COLON_ORACLE_SYM = 615,
    COLUMNS = 616,
    COLUMN_ADD_SYM = 617,
    COLUMN_CHECK_SYM = 618,
    COLUMN_CREATE_SYM = 619,
    COLUMN_DELETE_SYM = 620,
    COLUMN_GET_SYM = 621,
    COLUMN_SYM = 622,
    COLUMN_NAME_SYM = 623,
    COMMENT_SYM = 624,
    COMMITTED_SYM = 625,
    COMMIT_SYM = 626,
    COMPACT_SYM = 627,
    COMPLETION_SYM = 628,
    COMPRESSED_SYM = 629,
    CONCURRENT = 630,
    CONNECTION_SYM = 631,
    CONSISTENT_SYM = 632,
    CONSTRAINT_CATALOG_SYM = 633,
    CONSTRAINT_NAME_SYM = 634,
    CONSTRAINT_SCHEMA_SYM = 635,
    CONTAINS_SYM = 636,
    CONTEXT_SYM = 637,
    CONTRIBUTORS_SYM = 638,
    CPU_SYM = 639,
    CUBE_SYM = 640,
    CURRENT_SYM = 641,
    CURRENT_POS_SYM = 642,
    CURSOR_NAME_SYM = 643,
    CYCLE_SYM = 644,
    DATAFILE_SYM = 645,
    DATA_SYM = 646,
    DATETIME = 647,
    DATE_FORMAT_SYM = 648,
    DATE_SYM = 649,
    DAY_SYM = 650,
    DEALLOCATE_SYM = 651,
    DECODE_MARIADB_SYM = 652,
    DECODE_ORACLE_SYM = 653,
    DEFINER_SYM = 654,
    DELAYED_SYM = 655,
    DELAY_KEY_WRITE_SYM = 656,
    DES_KEY_FILE = 657,
    DIAGNOSTICS_SYM = 658,
    DIRECTORY_SYM = 659,
    DISABLE_SYM = 660,
    DISCARD = 661,
    DISK_SYM = 662,
    DO_SYM = 663,
    DUMPFILE = 664,
    DUPLICATE_SYM = 665,
    DYNAMIC_SYM = 666,
    ENABLE_SYM = 667,
    END = 668,
    ENDS_SYM = 669,
    ENGINES_SYM = 670,
    ENGINE_SYM = 671,
    ENUM = 672,
    ERROR_SYM = 673,
    ERRORS = 674,
    ESCAPE_SYM = 675,
    EVENTS_SYM = 676,
    EVENT_SYM = 677,
    EVERY_SYM = 678,
    EXCHANGE_SYM = 679,
    EXAMINED_SYM = 680,
    EXCLUDE_SYM = 681,
    EXECUTE_SYM = 682,
    EXCEPTION_MARIADB_SYM = 683,
    EXIT_MARIADB_SYM = 684,
    EXIT_ORACLE_SYM = 685,
    EXPANSION_SYM = 686,
    EXPORT_SYM = 687,
    EXTENDED_SYM = 688,
    EXTENT_SIZE_SYM = 689,
    FAST_SYM = 690,
    FAULTS_SYM = 691,
    FILE_SYM = 692,
    FIRST_SYM = 693,
    FIXED_SYM = 694,
    FLUSH_SYM = 695,
    FOLLOWS_SYM = 696,
    FOLLOWING_SYM = 697,
    FORCE_SYM = 698,
    FORMAT_SYM = 699,
    FOUND_SYM = 700,
    FULL = 701,
    FUNCTION_SYM = 702,
    GENERAL = 703,
    GENERATED_SYM = 704,
    GEOMETRYCOLLECTION = 705,
    GEOMETRY_SYM = 706,
    GET_FORMAT = 707,
    GET_SYM = 708,
    GLOBAL_SYM = 709,
    GRANTS = 710,
    HANDLER_SYM = 711,
    HARD_SYM = 712,
    HASH_SYM = 713,
    HELP_SYM = 714,
    HIGH_PRIORITY = 715,
    HISTORY_SYM = 716,
    HOST_SYM = 717,
    HOSTS_SYM = 718,
    HOUR_SYM = 719,
    ID_SYM = 720,
    IDENTIFIED_SYM = 721,
    IGNORE_SERVER_IDS_SYM = 722,
    IMMEDIATE_SYM = 723,
    IMPORT = 724,
    INCREMENT_SYM = 725,
    INDEXES = 726,
    INITIAL_SIZE_SYM = 727,
    INSERT_METHOD = 728,
    INSTALL_SYM = 729,
    INVOKER_SYM = 730,
    IO_SYM = 731,
    IPC_SYM = 732,
    ISOLATION = 733,
    ISOPEN_SYM = 734,
    ISSUER_SYM = 735,
    INVISIBLE_SYM = 736,
    JSON_SYM = 737,
    KEY_BLOCK_SIZE = 738,
    LANGUAGE_SYM = 739,
    LAST_SYM = 740,
    LAST_VALUE = 741,
    LASTVAL_SYM = 742,
    LEAVES = 743,
    LESS_SYM = 744,
    LEVEL_SYM = 745,
    LINESTRING = 746,
    LIST_SYM = 747,
    LOCAL_SYM = 748,
    LOCKS_SYM = 749,
    LOGFILE_SYM = 750,
    LOGS_SYM = 751,
    MASTER_CONNECT_RETRY_SYM = 752,
    MASTER_DELAY_SYM = 753,
    MASTER_GTID_POS_SYM = 754,
    MASTER_HOST_SYM = 755,
    MASTER_LOG_FILE_SYM = 756,
    MASTER_LOG_POS_SYM = 757,
    MASTER_PASSWORD_SYM = 758,
    MASTER_PORT_SYM = 759,
    MASTER_SERVER_ID_SYM = 760,
    MASTER_SSL_CAPATH_SYM = 761,
    MASTER_SSL_CA_SYM = 762,
    MASTER_SSL_CERT_SYM = 763,
    MASTER_SSL_CIPHER_SYM = 764,
    MASTER_SSL_CRL_SYM = 765,
    MASTER_SSL_CRLPATH_SYM = 766,
    MASTER_SSL_KEY_SYM = 767,
    MASTER_SSL_SYM = 768,
    MASTER_SYM = 769,
    MASTER_USER_SYM = 770,
    MASTER_USE_GTID_SYM = 771,
    MASTER_HEARTBEAT_PERIOD_SYM = 772,
    MAX_CONNECTIONS_PER_HOUR = 773,
    MAX_QUERIES_PER_HOUR = 774,
    MAX_ROWS = 775,
    MAX_SIZE_SYM = 776,
    MAX_UPDATES_PER_HOUR = 777,
    MAX_STATEMENT_TIME_SYM = 778,
    MAX_USER_CONNECTIONS_SYM = 779,
    MEDIUM_SYM = 780,
    MEMORY_SYM = 781,
    MERGE_SYM = 782,
    MESSAGE_TEXT_SYM = 783,
    MICROSECOND_SYM = 784,
    MIGRATE_SYM = 785,
    MINUTE_SYM = 786,
    MINVALUE_SYM = 787,
    MIN_ROWS = 788,
    MODE_SYM = 789,
    MODIFY_SYM = 790,
    MONTH_SYM = 791,
    MULTILINESTRING = 792,
    MULTIPOINT = 793,
    MULTIPOLYGON = 794,
    MUTEX_SYM = 795,
    MYSQL_SYM = 796,
    MYSQL_ERRNO_SYM = 797,
    NAMES_SYM = 798,
    NAME_SYM = 799,
    NATIONAL_SYM = 800,
    NCHAR_SYM = 801,
    NEW_SYM = 802,
    NEXT_SYM = 803,
    NEXTVAL_SYM = 804,
    NOCACHE_SYM = 805,
    NOCYCLE_SYM = 806,
    NODEGROUP_SYM = 807,
    NONE_SYM = 808,
    NOTFOUND_SYM = 809,
    NO_SYM = 810,
    NOMAXVALUE_SYM = 811,
    NOMINVALUE_SYM = 812,
    NO_WAIT_SYM = 813,
    NOWAIT_SYM = 814,
    NUMBER_MARIADB_SYM = 815,
    NUMBER_ORACLE_SYM = 816,
    NVARCHAR_SYM = 817,
    OF_SYM = 818,
    OFFSET_SYM = 819,
    OLD_PASSWORD_SYM = 820,
    ONE_SYM = 821,
    ONLY_SYM = 822,
    ONLINE_SYM = 823,
    OPEN_SYM = 824,
    OPTIONS_SYM = 825,
    OPTION = 826,
    OWNER_SYM = 827,
    PACK_KEYS_SYM = 828,
    PAGE_SYM = 829,
    PARSER_SYM = 830,
    PARTIAL = 831,
    PARTITIONS_SYM = 832,
    PARTITIONING_SYM = 833,
    PASSWORD_SYM = 834,
    PERIOD_SYM = 835,
    PERSISTENT_SYM = 836,
    PHASE_SYM = 837,
    PLUGINS_SYM = 838,
    PLUGIN_SYM = 839,
    POINT_SYM = 840,
    POLYGON = 841,
    PORT_SYM = 842,
    PRECEDES_SYM = 843,
    PRECEDING_SYM = 844,
    PREPARE_SYM = 845,
    PRESERVE_SYM = 846,
    PREV_SYM = 847,
    PREVIOUS_SYM = 848,
    PRIVILEGES = 849,
    PROCESS = 850,
    PROCESSLIST_SYM = 851,
    PROFILE_SYM = 852,
    PROFILES_SYM = 853,
    PROXY_SYM = 854,
    QUARTER_SYM = 855,
    QUERY_SYM = 856,
    QUICK = 857,
    RAW_MARIADB_SYM = 858,
    RAW_ORACLE_SYM = 859,
    READ_ONLY_SYM = 860,
    REBUILD_SYM = 861,
    RECOVER_SYM = 862,
    REDOFILE_SYM = 863,
    REDO_BUFFER_SIZE_SYM = 864,
    REDUNDANT_SYM = 865,
    RELAY = 866,
    RELAYLOG_SYM = 867,
    RELAY_LOG_FILE_SYM = 868,
    RELAY_LOG_POS_SYM = 869,
    RELAY_THREAD = 870,
    RELOAD = 871,
    REMOVE_SYM = 872,
    REORGANIZE_SYM = 873,
    REPAIR = 874,
    REPEATABLE_SYM = 875,
    REPLICATION = 876,
    RESET_SYM = 877,
    RESTART_SYM = 878,
    RESOURCES = 879,
    RESTORE_SYM = 880,
    RESUME_SYM = 881,
    RETURNED_SQLSTATE_SYM = 882,
    RETURNS_SYM = 883,
    REUSE_SYM = 884,
    REVERSE_SYM = 885,
    ROLE_SYM = 886,
    ROLLBACK_SYM = 887,
    ROLLUP_SYM = 888,
    ROUTINE_SYM = 889,
    ROWCOUNT_SYM = 890,
    ROW_SYM = 891,
    ROW_COUNT_SYM = 892,
    ROW_FORMAT_SYM = 893,
    RTREE_SYM = 894,
    SAVEPOINT_SYM = 895,
    SCHEDULE_SYM = 896,
    SCHEMA_NAME_SYM = 897,
    SECOND_SYM = 898,
    SECURITY_SYM = 899,
    SEQUENCE_SYM = 900,
    SERIALIZABLE_SYM = 901,
    SERIAL_SYM = 902,
    SESSION_SYM = 903,
    SERVER_SYM = 904,
    SETVAL_SYM = 905,
    SHARE_SYM = 906,
    SHUTDOWN = 907,
    SIGNED_SYM = 908,
    SIMPLE_SYM = 909,
    SLAVE = 910,
    SLAVES = 911,
    SLAVE_POS_SYM = 912,
    SLOW = 913,
    SNAPSHOT_SYM = 914,
    SOCKET_SYM = 915,
    SOFT_SYM = 916,
    SONAME_SYM = 917,
    SOUNDS_SYM = 918,
    SOURCE_SYM = 919,
    SQL_BUFFER_RESULT = 920,
    SQL_CACHE_SYM = 921,
    SQL_CALC_FOUND_ROWS = 922,
    SQL_NO_CACHE_SYM = 923,
    SQL_THREAD = 924,
    STARTS_SYM = 925,
    START_SYM = 926,
    STATEMENT_SYM = 927,
    STATUS_SYM = 928,
    STOP_SYM = 929,
    STORAGE_SYM = 930,
    STORED_SYM = 931,
    STRING_SYM = 932,
    SUBCLASS_ORIGIN_SYM = 933,
    SUBDATE_SYM = 934,
    SUBJECT_SYM = 935,
    SUBPARTITIONS_SYM = 936,
    SUBPARTITION_SYM = 937,
    SUPER_SYM = 938,
    SUSPEND_SYM = 939,
    SWAPS_SYM = 940,
    SWITCHES_SYM = 941,
    SYSTEM = 942,
    SYSTEM_TIME_SYM = 943,
    TABLES = 944,
    TABLESPACE = 945,
    TABLE_CHECKSUM_SYM = 946,
    TABLE_NAME_SYM = 947,
    TEMPORARY = 948,
    TEMPTABLE_SYM = 949,
    TEXT_SYM = 950,
    THAN_SYM = 951,
    TIES_SYM = 952,
    TIMESTAMP = 953,
    TIMESTAMP_ADD = 954,
    TIMESTAMP_DIFF = 955,
    TIME_SYM = 956,
    TRANSACTION_SYM = 957,
    TRANSACTIONAL_SYM = 958,
    TRIGGERS_SYM = 959,
    TRIM_ORACLE = 960,
    TRUNCATE_SYM = 961,
    TYPES_SYM = 962,
    TYPE_SYM = 963,
    UDF_RETURNS_SYM = 964,
    UNBOUNDED_SYM = 965,
    UNCOMMITTED_SYM = 966,
    UNDEFINED_SYM = 967,
    UNDOFILE_SYM = 968,
    UNDO_BUFFER_SIZE_SYM = 969,
    UNICODE_SYM = 970,
    UNINSTALL_SYM = 971,
    UNKNOWN_SYM = 972,
    UNTIL_SYM = 973,
    UPGRADE_SYM = 974,
    USER_SYM = 975,
    USE_FRM = 976,
    VALUE_SYM = 977,
    VARCHAR2_MARIADB_SYM = 978,
    VARCHAR2_ORACLE_SYM = 979,
    VARIABLES = 980,
    VERSIONING_SYM = 981,
    VIA_SYM = 982,
    VIEW_SYM = 983,
    VIRTUAL_SYM = 984,
    WAIT_SYM = 985,
    WARNINGS = 986,
    WEEK_SYM = 987,
    WEIGHT_STRING_SYM = 988,
    WINDOW_SYM = 989,
    WITHIN = 990,
    WITHOUT = 991,
    WORK_SYM = 992,
    WRAPPER_SYM = 993,
    WRITE_SYM = 994,
    X509_SYM = 995,
    XA_SYM = 996,
    XML_SYM = 997,
    YEAR_SYM = 998,
    CONDITIONLESS_JOIN = 999,
    ON_SYM = 1000,
    PREC_BELOW_NOT = 1001,
    LOW_PRIORITY_NOT = 1002,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1003,
    USER = 1004,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1005
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_element_head *with_element_head;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_view_suid view_suid;
  enum sub_select_type unit_type;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (THD *thd);

#endif /* !YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  707
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   97363

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  773
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1242
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3446
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5973

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1005

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,     2,     2,     2,   757,   752,     2,
     763,   764,   755,   754,   765,   753,   770,   756,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   772,   769,
     750,   748,   749,     2,   771,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   758,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   767,   751,   768,   759,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   760,   761,   762
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2249,  2249,  2259,  2258,  2283,  2290,  2292,  2296,  2297,
    2298,  2303,  2304,  2305,  2306,  2307,  2308,  2309,  2310,  2311,
    2312,  2313,  2314,  2315,  2316,  2317,  2318,  2319,  2320,  2321,
    2322,  2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,
    2332,  2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,
    2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,
    2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2363,  2372,
    2373,  2377,  2389,  2389,  2399,  2398,  2407,  2406,  2417,  2419,
    2419,  2430,  2431,  2435,  2447,  2446,  2463,  2462,  2471,  2472,
    2476,  2480,  2484,  2488,  2492,  2496,  2506,  2511,  2515,  2519,
    2523,  2527,  2531,  2536,  2540,  2545,  2573,  2577,  2581,  2586,
    2589,  2591,  2592,  2596,  2602,  2604,  2605,  2609,  2615,  2617,
    2618,  2622,  2629,  2633,  2648,  2652,  2658,  2664,  2670,  2680,
    2684,  2688,  2702,  2701,  2732,  2731,  2787,  2784,  2797,  2795,
    2808,  2806,  2818,  2817,  2832,  2830,  2842,  2840,  2849,  2848,
    2853,  2852,  2857,  2856,  2861,  2860,  2867,  2866,  2873,  2872,
    2877,  2876,  2882,  2889,  2896,  2900,  2904,  2904,  2910,  2921,
    2932,  2933,  2937,  2939,  2942,  2943,  2947,  2948,  2952,  2957,
    2963,  2969,  2977,  2983,  2989,  2997,  3005,  3013,  3021,  3029,
    3037,  3049,  3065,  3065,  3069,  3068,  3080,  3081,  3085,  3090,
    3095,  3100,  3105,  3110,  3115,  3123,  3122,  3155,  3154,  3161,
    3168,  3169,  3175,  3181,  3191,  3197,  3203,  3205,  3212,  3213,
    3217,  3227,  3228,  3236,  3236,  3281,  3295,  3300,  3308,  3309,
    3313,  3314,  3319,  3321,  3323,  3325,  3327,  3329,  3331,  3337,
    3338,  3342,  3346,  3354,  3353,  3364,  3363,  3374,  3373,  3386,
    3388,  3391,  3393,  3397,  3401,  3408,  3410,  3414,  3415,  3419,
    3427,  3432,  3439,  3445,  3450,  3455,  3463,  3465,  3469,  3470,
    3474,  3478,  3479,  3480,  3481,  3486,  3485,  3498,  3497,  3509,
    3510,  3514,  3515,  3520,  3523,  3535,  3540,  3546,  3552,  3561,
    3573,  3577,  3583,  3595,  3599,  3606,  3616,  3624,  3632,  3643,
    3644,  3651,  3653,  3652,  3671,  3670,  3684,  3686,  3691,  3701,
    3700,  3716,  3717,  3718,  3719,  3724,  3726,  3731,  3746,  3754,
    3758,  3778,  3779,  3783,  3787,  3793,  3799,  3805,  3811,  3821,
    3826,  3834,  3842,  3857,  3863,  3864,  3870,  3873,  3877,  3885,
    3902,  3904,  3922,  3928,  3930,  3932,  3934,  3936,  3938,  3940,
    3942,  3944,  3946,  3948,  3950,  3955,  3963,  3979,  3980,  3985,
    3991,  4000,  4007,  4016,  4025,  4030,  4039,  4041,  4043,  4052,
    4057,  4064,  4073,  4082,  4084,  4086,  4088,  4090,  4092,  4094,
    4096,  4098,  4100,  4102,  4104,  4106,  4111,  4112,  4120,  4132,
    4147,  4148,  4161,  4162,  4163,  4164,  4165,  4169,  4170,  4171,
    4172,  4173,  4174,  4175,  4176,  4177,  4178,  4182,  4183,  4184,
    4185,  4190,  4189,  4200,  4200,  4253,  4254,  4259,  4258,  4271,
    4284,  4284,  4288,  4293,  4298,  4304,  4313,  4318,  4323,  4329,
    4339,  4347,  4355,  4363,  4373,  4372,  4391,  4390,  4406,  4412,
    4420,  4421,  4425,  4433,  4438,  4443,  4451,  4452,  4467,  4485,
    4501,  4520,  4522,  4538,  4520,  4557,  4559,  4560,  4565,  4564,
    4634,  4636,  4634,  4644,  4649,  4650,  4654,  4655,  4660,  4664,
    4659,  4684,  4688,  4683,  4706,  4716,  4720,  4724,  4725,  4729,
    4740,  4738,  4755,  4754,  4769,  4768,  4785,  4786,  4790,  4798,
    4803,  4810,  4819,  4834,  4833,  4850,  4849,  4869,  4878,  4877,
    4885,  4884,  4893,  4898,  4907,  4892,  4917,  4916,  4927,  4926,
    4936,  4935,  4946,  4953,  4945,  4970,  4969,  4981,  4983,  4988,
    4990,  4992,  5009,  5014,  5020,  5027,  5028,  5036,  5042,  5051,
    5057,  5063,  5064,  5068,  5068,  5073,  5074,  5075,  5079,  5080,
    5081,  5085,  5089,  5090,  5091,  5095,  5096,  5097,  5098,  5099,
    5100,  5101,  5102,  5106,  5110,  5111,  5112,  5116,  5117,  5118,
    5119,  5120,  5124,  5128,  5129,  5130,  5134,  5135,  5136,  5137,
    5138,  5139,  5140,  5144,  5148,  5149,  5150,  5154,  5155,  5156,
    5161,  5169,  5177,  5185,  5198,  5211,  5216,  5221,  5229,  5237,
    5245,  5253,  5261,  5269,  5277,  5287,  5297,  5307,  5309,  5313,
    5318,  5328,  5329,  5342,  5341,  5344,  5350,  5352,  5351,  5354,
    5353,  5355,  5369,  5370,  5374,  5375,  5386,  5384,  5391,  5396,
    5398,  5397,  5400,  5399,  5404,  5441,  5442,  5447,  5446,  5462,
    5477,  5476,  5494,  5493,  5499,  5507,  5506,  5509,  5511,  5514,
    5513,  5522,  5525,  5524,  5533,  5534,  5540,  5541,  5558,  5559,
    5563,  5564,  5568,  5582,  5592,  5603,  5612,  5613,  5626,  5628,
    5627,  5632,  5630,  5641,  5642,  5646,  5660,  5672,  5673,  5686,
    5695,  5717,  5718,  5723,  5722,  5746,  5758,  5774,  5773,  5788,
    5787,  5801,  5806,  5811,  5831,  5849,  5853,  5880,  5892,  5893,
    5898,  5907,  5897,  5932,  5933,  5937,  5948,  5967,  5980,  6006,
    6007,  6012,  6011,  6048,  6057,  6058,  6062,  6063,  6067,  6069,
    6075,  6081,  6083,  6085,  6087,  6089,  6091,  6096,  6097,  6097,
    6104,  6120,  6123,  6140,  6150,  6150,  6171,  6172,  6176,  6177,
    6181,  6192,  6193,  6197,  6198,  6202,  6203,  6207,  6208,  6213,
    6216,  6224,  6227,  6234,  6238,  6244,  6246,  6250,  6251,  6255,
    6256,  6257,  6261,  6276,  6281,  6286,  6291,  6296,  6301,  6306,
    6321,  6327,  6342,  6347,  6362,  6368,  6386,  6391,  6396,  6401,
    6406,  6411,  6417,  6416,  6442,  6443,  6444,  6449,  6454,  6459,
    6461,  6463,  6465,  6471,  6476,  6481,  6490,  6499,  6505,  6511,
    6516,  6519,  6521,  6525,  6544,  6552,  6567,  6577,  6588,  6589,
    6590,  6591,  6592,  6593,  6594,  6598,  6599,  6600,  6604,  6605,
    6606,  6607,  6612,  6619,  6620,  6624,  6625,  6626,  6627,  6631,
    6633,  6639,  6638,  6646,  6645,  6653,  6652,  6660,  6659,  6669,
    6666,  6677,  6675,  6684,  6683,  6722,  6730,  6738,  6739,  6743,
    6753,  6754,  6758,  6759,  6763,  6768,  6767,  6805,  6805,  6808,
    6807,  6818,  6819,  6823,  6824,  6828,  6829,  6833,  6834,  6838,
    6839,  6840,  6841,  6843,  6842,  6848,  6853,  6861,  6862,  6867,
    6870,  6874,  6878,  6885,  6886,  6890,  6891,  6895,  6901,  6907,
    6908,  6916,  6915,  6934,  6940,  6941,  6951,  6961,  6961,  6964,
    6965,  6972,  6980,  6984,  6992,  6993,  6994,  6995,  6996,  7000,
    7001,  7002,  7018,  7022,  7026,  7030,  7032,  7039,  7041,  7046,
    7048,  7049,  7050,  7054,  7058,  7063,  7068,  7072,  7076,  7081,
    7086,  7094,  7112,  7113,  7120,  7127,  7135,  7140,  7145,  7150,
    7155,  7166,  7171,  7176,  7181,  7183,  7185,  7187,  7189,  7191,
    7193,  7195,  7203,  7205,  7210,  7211,  7212,  7213,  7214,  7215,
    7216,  7217,  7221,  7225,  7226,  7230,  7231,  7235,  7236,  7237,
    7238,  7239,  7243,  7244,  7245,  7246,  7247,  7251,  7257,  7258,
    7263,  7265,  7272,  7273,  7274,  7278,  7282,  7283,  7284,  7285,
    7286,  7287,  7291,  7292,  7293,  7294,  7298,  7299,  7303,  7304,
    7308,  7309,  7314,  7315,  7319,  7320,  7321,  7328,  7329,  7335,
    7342,  7346,  7347,  7351,  7352,  7356,  7364,  7372,  7381,  7385,
    7391,  7395,  7396,  7405,  7414,  7420,  7426,  7439,  7445,  7455,
    7456,  7460,  7465,  7469,  7470,  7474,  7475,  7479,  7486,  7490,
    7491,  7495,  7503,  7504,  7508,  7509,  7513,  7514,  7518,  7519,
    7520,  7527,  7531,  7532,  7536,  7537,  7538,  7539,  7540,  7552,
    7556,  7557,  7562,  7561,  7574,  7575,  7579,  7582,  7583,  7584,
    7585,  7589,  7597,  7604,  7605,  7609,  7619,  7620,  7624,  7625,
    7628,  7630,  7634,  7646,  7647,  7651,  7658,  7671,  7672,  7674,
    7676,  7682,  7687,  7693,  7699,  7706,  7716,  7717,  7718,  7719,
    7720,  7724,  7725,  7729,  7730,  7734,  7735,  7739,  7740,  7741,
    7745,  7746,  7750,  7754,  7766,  7767,  7771,  7772,  7776,  7777,
    7781,  7782,  7786,  7787,  7791,  7792,  7796,  7797,  7802,  7803,
    7804,  7808,  7810,  7815,  7820,  7822,  7830,  7838,  7844,  7853,
    7854,  7858,  7862,  7863,  7873,  7874,  7875,  7879,  7883,  7890,
    7896,  7908,  7909,  7913,  7915,  7925,  7939,  7924,  7960,  7959,
    7973,  7982,  7981,  7997,  7996,  8012,  8011,  8024,  8018,  8031,
    8030,  8065,  8070,  8075,  8080,  8086,  8085,  8092,  8099,  8109,
    8098,  8129,  8130,  8131,  8132,  8136,  8137,  8149,  8150,  8154,
    8155,  8158,  8160,  8168,  8176,  8178,  8180,  8181,  8189,  8190,
    8196,  8205,  8203,  8216,  8229,  8228,  8241,  8239,  8252,  8259,
    8269,  8270,  8294,  8301,  8305,  8311,  8309,  8326,  8328,  8333,
    8341,  8340,  8354,  8358,  8357,  8369,  8370,  8374,  8387,  8388,
    8392,  8396,  8403,  8408,  8412,  8419,  8423,  8428,  8436,  8444,
    8454,  8465,  8475,  8486,  8496,  8502,  8508,  8515,  8521,  8535,
    8549,  8554,  8558,  8563,  8564,  8565,  8570,  8575,  8581,  8583,
    8584,  8585,  8586,  8590,  8595,  8603,  8608,  8616,  8617,  8621,
    8622,  8626,  8626,  8629,  8631,  8635,  8636,  8640,  8641,  8650,
    8651,  8652,  8656,  8657,  8662,  8671,  8672,  8673,  8674,  8679,
    8678,  8688,  8687,  8695,  8702,  8712,  8729,  8732,  8739,  8743,
    8750,  8754,  8758,  8765,  8765,  8771,  8772,  8776,  8777,  8778,
    8782,  8783,  8792,  8799,  8800,  8805,  8804,  8816,  8817,  8818,
    8822,  8824,  8823,  8830,  8829,  8850,  8851,  8855,  8856,  8860,
    8861,  8862,  8866,  8867,  8872,  8871,  8892,  8893,  8897,  8902,
    8903,  8910,  8912,  8917,  8919,  8918,  8930,  8932,  8931,  8944,
    8945,  8950,  8959,  8960,  8961,  8965,  8972,  8982,  8990,  8999,
    9001,  9000,  9006,  9005,  9028,  9029,  9033,  9034,  9038,  9039,
    9040,  9041,  9042,  9043,  9047,  9048,  9053,  9052,  9073,  9074,
    9075,  9080,  9079,  9085,  9092,  9098,  9107,  9108,  9112,  9128,
    9127,  9140,  9141,  9145,  9146,  9150,  9161,  9172,  9173,  9178,
    9177,  9188,  9189,  9193,  9194,  9198,  9209,  9221,  9220,  9228,
    9228,  9237,  9238,  9243,  9244,  9253,  9264,  9265,  9266,  9267,
    9268,  9269,  9270,  9274,  9275,  9276,  9277,  9278,  9279,  9280,
    9284,  9284,  9292,  9292,  9304,  9308,  9310,  9314,  9314,  9325,
    9329,  9331,  9335,  9335,  9346,  9351,  9351,  9360,  9360,  9372,
    9378,  9376,  9383,  9395,  9393,  9400,  9410,  9415,  9414,  9419,
    9423,  9434,  9435,  9439,  9440,  9444,  9445,  9446,  9450,  9451,
    9452,  9456,  9457,  9458,  9459,  9460,  9464,  9464,  9482,  9489,
    9491,  9495,  9499,  9505,  9512,  9514,  9523,  9527,  9531,  9538,
    9546,  9550,  9558,  9561,  9568,  9572,  9576,  9580,  9587,  9588,
    9592,  9593,  9610,  9629,  9631,  9638,  9649,  9650,  9651,  9665,
    9670,  9692,  9698,  9704,  9710,  9716,  9717,  9718,  9719,  9720,
    9724,  9725,  9726,  9730,  9731,  9732,  9736,  9737,  9742,  9793,
    9800,  9843,  9849,  9855,  9861,  9867,  9873,  9879,  9885,  9891,
    9897,  9903,  9909,  9915,  9919,  9925,  9934,  9940,  9948,  9954,
    9963,  9969,  9977,  9987,  9993, 10000, 10007, 10015, 10021, 10030,
   10034, 10040, 10046, 10052, 10058, 10065, 10071, 10077, 10083, 10089,
   10096, 10102, 10108, 10114, 10120, 10126, 10132, 10138, 10144, 10148,
   10149, 10153, 10154, 10158, 10159, 10163, 10164, 10168, 10169, 10170,
   10171, 10172, 10173, 10177, 10178, 10183, 10187, 10191, 10192, 10193,
   10197, 10198, 10199, 10200, 10201, 10202, 10206, 10207, 10208, 10213,
   10212, 10218, 10226, 10249, 10256, 10265, 10266, 10267, 10268, 10272,
   10281, 10282, 10283, 10284, 10285, 10286, 10287, 10288, 10320, 10321,
   10322, 10323, 10324, 10325, 10326, 10327, 10328, 10329, 10330, 10331,
   10338, 10344, 10349, 10359, 10364, 10369, 10375, 10380, 10386, 10397,
   10404, 10409, 10414, 10419, 10424, 10429, 10434, 10442, 10443, 10444,
   10448, 10449, 10457, 10458, 10464, 10468, 10474, 10480, 10489, 10490,
   10499, 10506, 10520, 10526, 10532, 10541, 10550, 10556, 10562, 10568,
   10574, 10589, 10600, 10606, 10612, 10618, 10624, 10630, 10638, 10645,
   10649, 10654, 10662, 10683, 10690, 10696, 10703, 10710, 10716, 10722,
   10728, 10734, 10740, 10746, 10752, 10758, 10765, 10771, 10778, 10784,
   10789, 10794, 10799, 10804, 10822, 10828, 10834, 10839, 10846, 10853,
   10861, 10868, 10875, 10882, 10889, 10906, 10912, 10918, 10924, 10930,
   10937, 10943, 10949, 10958, 10969, 10976, 10982, 10988, 10995, 11003,
   11009, 11015, 11020, 11026, 11034, 11040, 11046, 11052, 11058, 11066,
   11078, 11085, 11100, 11106, 11113, 11120, 11127, 11134, 11141, 11145,
   11152, 11170, 11169, 11237, 11242, 11250, 11252, 11257, 11258, 11262,
   11263, 11267, 11268, 11272, 11279, 11287, 11314, 11320, 11326, 11332,
   11338, 11344, 11353, 11360, 11362, 11359, 11369, 11380, 11386, 11392,
   11398, 11404, 11410, 11416, 11422, 11428, 11435, 11434, 11459, 11468,
   11486, 11488, 11492, 11499, 11506, 11513, 11520, 11527, 11534, 11541,
   11548, 11555, 11566, 11573, 11584, 11595, 11615, 11614, 11620, 11637,
   11643, 11652, 11661, 11671, 11670, 11682, 11692, 11700, 11705, 11713,
   11714, 11719, 11724, 11727, 11729, 11733, 11738, 11746, 11747, 11751,
   11755, 11762, 11769, 11776, 11789, 11788, 11805, 11808, 11807, 11812,
   11811, 11816, 11815, 11819, 11824, 11825, 11829, 11830, 11831, 11832,
   11833, 11834, 11835, 11836, 11840, 11841, 11842, 11846, 11847, 11851,
   11858, 11866, 11867, 11871, 11878, 11886, 11895, 11905, 11906, 11915,
   11924, 11936, 11937, 11949, 11960, 11961, 11967, 11968, 11986, 11995,
   11993, 12011, 12009, 12020, 12030, 12028, 12046, 12045, 12055, 12066,
   12064, 12083, 12082, 12093, 12105, 12106, 12107, 12111, 12112, 12120,
   12121, 12125, 12140, 12141, 12145, 12145, 12186, 12252, 12295, 12296,
   12305, 12304, 12313, 12314, 12315, 12319, 12320, 12321, 12321, 12325,
   12331, 12339, 12339, 12354, 12371, 12372, 12380, 12390, 12389, 12404,
   12421, 12404, 12428, 12432, 12441, 12452, 12453, 12458, 12461, 12462,
   12463, 12467, 12468, 12473, 12472, 12478, 12477, 12485, 12486, 12489,
   12491, 12491, 12495, 12495, 12500, 12501, 12505, 12507, 12512, 12513,
   12517, 12528, 12542, 12543, 12544, 12545, 12546, 12547, 12548, 12549,
   12550, 12551, 12552, 12553, 12557, 12558, 12559, 12560, 12561, 12562,
   12563, 12564, 12565, 12569, 12570, 12571, 12572, 12575, 12577, 12578,
   12582, 12583, 12591, 12593, 12597, 12599, 12598, 12612, 12615, 12614,
   12632, 12634, 12638, 12643, 12651, 12652, 12669, 12692, 12693, 12699,
   12700, 12704, 12717, 12716, 12724, 12725, 12734, 12735, 12739, 12740,
   12744, 12745, 12759, 12760, 12764, 12774, 12783, 12790, 12797, 12807,
   12808, 12815, 12825, 12826, 12828, 12830, 12832, 12834, 12843, 12847,
   12848, 12852, 12864, 12866, 12871, 12870, 12928, 12933, 12941, 12942,
   12943, 12947, 12948, 12952, 12966, 12973, 12978, 12985, 12992, 12999,
   13009, 13014, 13019, 13023, 13029, 13035, 13044, 13053, 13057, 13064,
   13065, 13068, 13070, 13074, 13075, 13079, 13080, 13081, 13082, 13083,
   13084, 13088, 13089, 13090, 13091, 13092, 13096, 13097, 13098, 13099,
   13103, 13104, 13105, 13106, 13107, 13111, 13112, 13113, 13114, 13115,
   13119, 13124, 13125, 13129, 13130, 13134, 13135, 13136, 13141, 13140,
   13174, 13175, 13179, 13180, 13184, 13194, 13194, 13206, 13207, 13210,
   13230, 13234, 13239, 13247, 13252, 13263, 13251, 13265, 13280, 13292,
   13291, 13311, 13310, 13319, 13336, 13342, 13356, 13371, 13379, 13383,
   13388, 13387, 13396, 13401, 13407, 13412, 13417, 13424, 13422, 13436,
   13437, 13441, 13452, 13465, 13466, 13470, 13484, 13488, 13497, 13500,
   13507, 13508, 13516, 13524, 13515, 13538, 13545, 13537, 13559, 13567,
   13568, 13575, 13579, 13580, 13589, 13590, 13594, 13604, 13605, 13606,
   13608, 13607, 13619, 13621, 13625, 13626, 13627, 13631, 13632, 13636,
   13637, 13641, 13651, 13652, 13656, 13657, 13661, 13662, 13666, 13667,
   13672, 13671, 13687, 13686, 13701, 13702, 13706, 13707, 13711, 13716,
   13724, 13732, 13743, 13744, 13753, 13754, 13762, 13764, 13766, 13764,
   13779, 13787, 13778, 13813, 13814, 13818, 13825, 13833, 13834, 13838,
   13848, 13849, 13856, 13855, 13875, 13878, 13885, 13886, 13893, 13908,
   13914, 13913, 13925, 13924, 13939, 13941, 13945, 13946, 13950, 13965,
   13983, 13984, 13988, 13989, 13993, 13994, 13995, 14000, 13999, 14020,
   14022, 14025, 14027, 14030, 14031, 14034, 14038, 14042, 14046, 14050,
   14054, 14058, 14062, 14066, 14074, 14077, 14087, 14086, 14102, 14109,
   14117, 14125, 14133, 14141, 14149, 14156, 14163, 14169, 14171, 14173,
   14182, 14186, 14191, 14190, 14197, 14196, 14201, 14210, 14217, 14222,
   14227, 14232, 14237, 14242, 14244, 14246, 14248, 14255, 14263, 14265,
   14273, 14280, 14287, 14295, 14301, 14306, 14314, 14322, 14330, 14334,
   14339, 14346, 14351, 14358, 14365, 14371, 14377, 14383, 14391, 14396,
   14403, 14410, 14417, 14424, 14429, 14434, 14439, 14444, 14451, 14473,
   14475, 14477, 14482, 14483, 14486, 14488, 14492, 14493, 14497, 14498,
   14502, 14503, 14507, 14508, 14512, 14513, 14517, 14518, 14526, 14538,
   14537, 14553, 14552, 14562, 14563, 14564, 14565, 14566, 14570, 14571,
   14575, 14582, 14583, 14584, 14588, 14589, 14602, 14603, 14604, 14619,
   14618, 14631, 14630, 14642, 14646, 14647, 14662, 14665, 14664, 14677,
   14678, 14683, 14685, 14687, 14689, 14691, 14693, 14701, 14703, 14705,
   14707, 14712, 14714, 14722, 14724, 14726, 14728, 14745, 14746, 14750,
   14751, 14754, 14756, 14757, 14761, 14777, 14778, 14783, 14782, 14792,
   14793, 14797, 14797, 14801, 14800, 14806, 14810, 14811, 14815, 14816,
   14824, 14823, 14834, 14838, 14842, 14855, 14854, 14869, 14870, 14871,
   14875, 14876, 14877, 14886, 14887, 14891, 14895, 14903, 14909, 14921,
   14933, 14944, 14957, 14920, 14969, 14970, 14974, 14975, 14979, 14980,
   14988, 14992, 14993, 14994, 14997, 14999, 15003, 15004, 15008, 15013,
   15020, 15025, 15032, 15034, 15038, 15039, 15043, 15048, 15056, 15057,
   15061, 15063, 15071, 15072, 15076, 15077, 15078, 15082, 15084, 15089,
   15090, 15099, 15100, 15104, 15105, 15109, 15122, 15127, 15132, 15137,
   15145, 15153, 15158, 15171, 15180, 15196, 15203, 15209, 15219, 15220,
   15228, 15229, 15230, 15231, 15245, 15251, 15257, 15263, 15269, 15275,
   15294, 15304, 15314, 15320, 15327, 15337, 15345, 15353, 15365, 15366,
   15375, 15374, 15395, 15396, 15401, 15402, 15409, 15407, 15435, 15436,
   15442, 15447, 15456, 15476, 15477, 15481, 15486, 15494, 15499, 15507,
   15512, 15517, 15522, 15528, 15533, 15541, 15546, 15551, 15556, 15562,
   15570, 15571, 15582, 15590, 15594, 15600, 15606, 15616, 15622, 15631,
   15641, 15642, 15646, 15647, 15648, 15652, 15660, 15668, 15676, 15684,
   15685, 15693, 15694, 15702, 15703, 15708, 15717, 15718, 15726, 15727,
   15735, 15736, 15737, 15741, 15754, 15784, 15794, 15794, 15796, 15806,
   15807, 15808, 15809, 15810, 15811, 15812, 15813, 15818, 15819, 15820,
   15821, 15822, 15823, 15824, 15825, 15826, 15834, 15835, 15836, 15837,
   15841, 15842, 15843, 15844, 15845, 15846, 15847, 15848, 15852, 15853,
   15854, 15855, 15856, 15857, 15858, 15859, 15860, 15864, 15865, 15866,
   15867, 15868, 15869, 15870, 15871, 15884, 15885, 15886, 15887, 15888,
   15889, 15890, 15891, 15892, 15893, 15894, 15895, 15896, 15897, 15898,
   15899, 15900, 15901, 15902, 15903, 15904, 15905, 15906, 15907, 15908,
   15909, 15910, 15911, 15912, 15913, 15914, 15915, 15916, 15917, 15918,
   15919, 15920, 15921, 15922, 15923, 15924, 15925, 15926, 15927, 15928,
   15929, 15930, 15931, 15932, 15933, 15934, 15935, 15936, 15937, 15938,
   15979, 15980, 15981, 15982, 15983, 15984, 15995, 15996, 15997, 15998,
   15999, 16000, 16001, 16002, 16003, 16004, 16008, 16009, 16010, 16017,
   16018, 16019, 16023, 16024, 16025, 16034, 16035, 16036, 16037, 16038,
   16039, 16040, 16041, 16042, 16043, 16044, 16045, 16046, 16047, 16048,
   16049, 16050, 16051, 16052, 16053, 16054, 16055, 16056, 16057, 16058,
   16059, 16060, 16061, 16062, 16063, 16064, 16065, 16066, 16067, 16075,
   16076, 16077, 16078, 16079, 16080, 16081, 16082, 16083, 16084, 16085,
   16086, 16087, 16088, 16089, 16090, 16091, 16092, 16093, 16094, 16095,
   16096, 16097, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 16105,
   16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113, 16114, 16115,
   16116, 16117, 16118, 16119, 16120, 16125, 16126, 16127, 16128, 16129,
   16130, 16131, 16132, 16133, 16134, 16135, 16136, 16137, 16138, 16139,
   16140, 16141, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149,
   16150, 16151, 16152, 16153, 16154, 16155, 16156, 16157, 16158, 16159,
   16160, 16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169,
   16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179,
   16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189,
   16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197, 16198, 16199,
   16200, 16201, 16202, 16203, 16204, 16205, 16206, 16207, 16208, 16209,
   16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217, 16218, 16219,
   16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229,
   16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239,
   16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249,
   16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259,
   16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267, 16268, 16269,
   16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277, 16278, 16279,
   16280, 16281, 16282, 16283, 16284, 16285, 16286, 16287, 16288, 16289,
   16290, 16291, 16292, 16293, 16294, 16295, 16296, 16297, 16298, 16299,
   16300, 16301, 16302, 16303, 16304, 16305, 16306, 16307, 16308, 16309,
   16310, 16311, 16312, 16313, 16314, 16315, 16316, 16317, 16318, 16319,
   16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329,
   16330, 16331, 16332, 16333, 16334, 16335, 16336, 16337, 16338, 16339,
   16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347, 16348, 16349,
   16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357, 16358, 16359,
   16360, 16361, 16362, 16363, 16364, 16365, 16366, 16367, 16368, 16369,
   16370, 16371, 16372, 16373, 16374, 16375, 16376, 16377, 16378, 16379,
   16380, 16381, 16382, 16383, 16384, 16385, 16386, 16387, 16388, 16389,
   16390, 16391, 16403, 16402, 16415, 16419, 16414, 16436, 16437, 16443,
   16442, 16449, 16448, 16458, 16457, 16468, 16467, 16473, 16481, 16483,
   16488, 16488, 16497, 16496, 16510, 16509, 16514, 16518, 16519, 16520,
   16524, 16525, 16526, 16527, 16531, 16532, 16533, 16534, 16539, 16544,
   16549, 16558, 16563, 16568, 16573, 16578, 16583, 16588, 16593, 16607,
   16618, 16637, 16655, 16667, 16675, 16680, 16696, 16697, 16698, 16699,
   16703, 16722, 16740, 16741, 16745, 16746, 16747, 16748, 16752, 16767,
   16771, 16772, 16773, 16783, 16784, 16785, 16791, 16797, 16809, 16808,
   16822, 16823, 16829, 16838, 16839, 16843, 16844, 16848, 16867, 16868,
   16869, 16874, 16875, 16880, 16879, 16896, 16906, 16917, 16916, 16948,
   16949, 16953, 16954, 16958, 16959, 16960, 16961, 16963, 16962, 16975,
   16976, 16977, 16978, 16979, 16985, 16990, 16996, 17002, 17008, 17015,
   17022, 17026, 17033, 17042, 17044, 17049, 17054, 17061, 17068, 17075,
   17082, 17089, 17096, 17108, 17109, 17113, 17114, 17118, 17123, 17131,
   17141, 17160, 17163, 17165, 17169, 17170, 17177, 17179, 17183, 17184,
   17189, 17188, 17192, 17191, 17195, 17194, 17198, 17197, 17200, 17201,
   17202, 17203, 17204, 17205, 17206, 17207, 17208, 17209, 17210, 17211,
   17212, 17213, 17214, 17215, 17216, 17217, 17218, 17219, 17220, 17221,
   17222, 17223, 17224, 17225, 17226, 17230, 17231, 17235, 17236, 17240,
   17247, 17254, 17264, 17274, 17283, 17292, 17305, 17310, 17318, 17323,
   17331, 17336, 17343, 17343, 17344, 17344, 17347, 17354, 17359, 17365,
   17371, 17377, 17381, 17385, 17386, 17390, 17418, 17420, 17424, 17428,
   17432, 17439, 17445, 17451, 17457, 17463, 17472, 17473, 17477, 17478,
   17483, 17484, 17488, 17489, 17493, 17494, 17498, 17499, 17504, 17503,
   17513, 17522, 17523, 17527, 17528, 17533, 17534, 17535, 17540, 17541,
   17542, 17546, 17558, 17567, 17573, 17582, 17591, 17604, 17606, 17608,
   17613, 17614, 17619, 17618, 17635, 17634, 17646, 17646, 17667, 17668,
   17675, 17683, 17684, 17685, 17689, 17690, 17695, 17694, 17716, 17723,
   17724, 17728, 17729, 17733, 17734, 17735, 17740, 17748, 17769, 17796,
   17798, 17802, 17803, 17807, 17808, 17816, 17817, 17818, 17819, 17825,
   17831, 17841, 17842, 17847, 17860, 17876, 17877, 17878, 17882, 17883,
   17887, 17888, 17893, 17894, 17898, 17904, 17913, 17913, 17941, 17942,
   17943, 17944, 17945, 17946, 17947, 17951, 17952, 17953, 17954, 17964,
   17966, 17972, 17978, 17988, 17997, 18003, 18008, 18012, 17986, 18064,
   18082, 18081, 18099, 18108, 18097, 18124, 18132, 18123, 18146, 18150,
   18154, 18158, 18162, 18166, 18174, 18175, 18191, 18198, 18205, 18215,
   18216, 18217, 18221, 18222, 18223, 18227, 18228, 18233, 18235, 18234,
   18240, 18241, 18245, 18252, 18262, 18268, 18279
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FORCE_LOOKAHEAD", "FOREIGN", "FOR_SYM",
  "FOR_SYSTEM_TIME_SYM", "FROM", "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM",
  "GRANT", "GROUP_SYM", "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM",
  "HAVING", "HEX_NUM", "HEX_STRING", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT",
  "LOW_PRIORITY_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "':'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23",
  "sf_tail_not_aggregate", "sf_tail_aggregate", "create_function_tail",
  "create_aggregate_function_tail", "opt_sequence", "sequence_defs",
  "sequence_def", "force_lookahead", "server_def", "$@24",
  "server_options_list", "server_option", "event_tail", "$@25",
  "ev_schedule_time", "$@26", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@27", "clear_privileges", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@28",
  "$@29", "$@30", "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams",
  "sp_fdparam_list", "sp_fdparams", "sp_param_name",
  "sp_param_name_and_type", "sp_pdparam_list", "sp_pdparams", "sp_pdparam",
  "sp_opt_inout", "sp_parenthesized_fdparam_list", "$@31",
  "sp_parenthesized_pdparam_list", "$@32", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "sp_decl_body",
  "$@33", "sp_decl_handler", "$@34",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@35", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@36",
  "sp_proc_stmt_statement", "$@37", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@38", "reset_lex_expr", "$@39",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "assignment_source_lex", "assignment_source_expr", "$@40",
  "for_loop_bound_expr", "$@41", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@42", "$@43", "$@44", "sp_elseifs",
  "case_stmt_specification", "$@45", "case_stmt_body", "$@46", "$@47",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@48", "$@49", "searched_when_clause", "$@50",
  "$@51", "else_clause_opt", "sp_label", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@52", "sp_unlabeled_block", "$@53",
  "sp_unlabeled_block_not_atomic", "$@54", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "while_body", "$@55", "repeat_body", "$@56", "pop_sp_loop_label",
  "sp_labeled_control", "$@57", "$@58", "$@59", "$@60", "$@61", "$@62",
  "sp_unlabeled_control", "$@63", "$@64", "$@65", "$@66", "$@67",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@68", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@69", "$@70", "$@71", "create_like", "opt_create_select",
  "create_select_query_expression", "$@72", "$@73", "$@74",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@75",
  "have_partitioning", "partition_entry", "$@76", "partition", "$@77",
  "part_type_def", "$@78", "$@79", "$@80", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@81", "$@82", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@83", "part_name",
  "opt_part_values", "$@84", "$@85", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@86", "$@87",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@88", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "$@89", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@90",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@91", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@92", "$@93", "$@94",
  "$@95", "$@96", "$@97", "$@98", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@99", "field_type_or_serial", "$@100", "$@101", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@102", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@103", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "field_type_all",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1", "opt_precision", "attribute_list",
  "attribute", "opt_compression_method", "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "collate", "opt_binary", "binary",
  "opt_bin_mod", "ws_nweights", "$@104", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@105", "$@106", "$@107", "$@108", "$@109", "$@110", "$@111",
  "$@112", "$@113", "$@114", "$@115", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@116", "$@117", "$@118", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@119",
  "add_part_extra", "reorg_partition_rule", "$@120", "reorg_parts_rule",
  "$@121", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@122", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@123", "$@124", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@125",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@126", "opt_checksum_type",
  "repair_table_or_view", "$@127", "repair", "$@128", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@129", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@130", "persistent_index_stat_spec",
  "$@131", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@132", "check", "$@133",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@134", "opt_no_write_to_binlog",
  "rename", "$@135", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@136", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@137", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@138", "cache_keys_spec", "$@139", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@140", "$@141",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@142", "select_parent_view_proper", "select_paren_view", "$@143",
  "select_paren_derived", "$@144", "$@145", "select_init3", "$@146",
  "select_init3_union_query_term", "$@147", "select_init3_view", "$@148",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@149", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "predicate", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "opt_dyncol_type",
  "dyncol_type", "numeric_dyncol_type", "temporal_dyncol_type",
  "string_dyncol_type", "$@150", "dyncall_create_element",
  "dyncall_create_list", "plsql_cursor_attr", "explicit_cursor_attr",
  "trim_operands", "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@151", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@152", "$@153", "$@154",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@155",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@156", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@157", "cast_type", "$@158", "$@159",
  "$@160", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@161", "$@162", "$@163", "$@164", "$@165", "$@166", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@167", "table_primary_derived",
  "select_derived_union", "$@168", "union_list_derived_part2", "$@169",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@170", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@171", "select_derived2", "$@172", "$@173", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@174",
  "$@175", "index_hints_list", "opt_index_hints_list", "$@176",
  "opt_key_definition", "$@177", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@178", "opt_having_clause", "$@179",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@180",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@181", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@182", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@183", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@184",
  "$@185", "do", "$@186", "drop", "$@187", "$@188", "$@189", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@190", "$@191", "replace",
  "$@192", "$@193", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@194", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@195", "no_braces_with_names",
  "$@196", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_ignore", "expr_or_ignore_or_default",
  "opt_insert_update", "$@197", "$@198", "update", "$@199", "$@200",
  "update_list", "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@201", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "single_multi", "$@202", "$@203",
  "opt_select_expressions", "table_wild_list", "table_wild_one",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@204", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@205", "show_param",
  "$@206", "$@207", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@208", "$@209", "explainable_command",
  "describe_command", "analyze_stmt_command", "opt_extended_describe",
  "opt_format_json", "opt_describe_column", "flush", "$@210",
  "flush_options", "$@211", "opt_flush_lock", "flush_lock", "$@212",
  "flush_options_list", "flush_option", "opt_table_list",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@213", "reset_options",
  "reset_option", "$@214", "$@215", "slave_reset_options",
  "master_reset_options", "purge", "$@216", "purge_options",
  "purge_option", "kill", "$@217", "kill_type", "kill_option",
  "opt_connection", "kill_expr", "shutdown", "use", "load", "$@218",
  "$@219", "$@220", "$@221", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "hex_or_bin_String", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "opt_with_clause", "with_clause", "$@222", "opt_recursive", "with_list",
  "with_list_element", "$@223", "opt_with_column_list", "with_column_list",
  "with_element_head", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "label_ident", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@224", "$@225", "$@226",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@227", "$@228", "$@229",
  "start_option_value_list_following_option_type", "$@230",
  "option_value_list_continued", "option_value_list", "$@231", "$@232",
  "option_value", "$@233", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@234",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@235", "handler", "$@236",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@237", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@238", "$@239", "$@240",
  "$@241", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@242", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@243", "union_list_view", "$@244", "union_order_or_limit", "$@245",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@246", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@247", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@248", "$@249",
  "$@250", "$@251", "$@252", "udf_tail", "sf_return_type", "$@253",
  "sf_tail", "$@254", "$@255", "sp_tail", "$@256", "$@257", "xa",
  "opt_format_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "$@258", "opt_migrate", "install",
  "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,    61,    62,
      60,   124,    38,    45,    43,    42,    47,    37,    94,   126,
    1003,  1004,  1005,    40,    41,    44,    33,   123,   125,    59,
      46,    64,    58
};
# endif

#define YYPACT_NINF -5169

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5169)))

#define YYTABLE_NINF -3379

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   11774,  3433,  1038, 89996, -5169,    24, -5169,   163, -5169, -5169,
   -5169,  2152, -5169, -5169, -5169, -5169, -5169, -5169,   182,   152,
   -5169,   944, -5169, -5169, -5169, 85558,   -83,   352, -5169, -5169,
   86826, -5169,   646, -5169, 86826, -5169, -5169, 89996, -5169,  1197,
   -5169,  2532,    60,  1326,   152,   834, -5169, -5169, 90630,   944,
    1114, 74755, -5169,  1483, 89996,   944, -5169,   834, 89996, -5169,
     239,   304, -5169,  1531,  2356,  1524,  1659, -5169, -5169,  1171,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,  4983, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   75389, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,    71,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, 89996, 89996,  1023,
    1041, 89996,  1711,  1733, 86192, 89996,  1733, -5169,    92, -5169,
   -5169,  1470, -5169,  1134, -5169,   152,  1737, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  1157,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  1674,
    1903,   599,  1826,  2109, 89996,  1107,  1733,  2132,  1733,  1733,
    1733,  1733,  2268,  1733,  1733, 89996, -5169,  1733,  1733,   547,
   89996, 35278, -5169,   303,   810,  2094, -5169, -5169, -5169, -5169,
   -5169, -5169, 54362,   152, 21305,  2424,   523,  3635,  1731, -5169,
    2190, -5169, -5169, 89996, -5169, -5169, 54362,  1104, -5169,  2190,
   36016, -5169, 33833, 11069,  2190,   152,  2344, -5169, 21305, -5169,
   -5169, -5169, -5169,  2161,   834, -5169, 86192, -5169, -5169, -5169,
   -5169,  2497, 21305,   140, -5169, -5169, -5169,  2114, 89996,  1957,
     363,   886, 86192, 89996,  1903,  2460, -5169,  1755,  1321, -5169,
    1883,  1903,  1829,  1908,  1903,  2334, 89996,  1903, -5169, -5169,
    1910,  1910,  1910,  2153,  1910, -5169,  1910, -5169, -5169,  1856,
   89996,  2515, -5169, -5169, -5169,  2515,  2515,  2029,  2566,  2572,
    2577,   124,  1686,  1334,  1664,  1470,   279,  1134,   440, -5169,
   -5169, -5169,  1925, -5169, -5169,   268, -5169,  2196, -5169,  1990,
   -5169,  1952,  1504, 57049, -5169, 89996,  2650, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169,  1710, -5169, -5169,  2477,   264,
    2102,  2327,  2024, -5169,  2510, 86192, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, 89996,  2004, -5169,  2687, 21305,  1674, -5169,
    2502, -5169, -5169, -5169, -5169, 74755, -5169, 89996, -5169,  2771,
   -5169, -5169,  2686, -5169, -5169, 78584,   480, 89996,  2700, 89996,
   89996, 89996, 89996, 89996, 89996, -5169, 86192,  2112, -5169, -5169,
    1733,  1733, -5169,  2666,  2204,  2168,  1864,  2043,  2375, -5169,
    2253, -5169, -5169,  2142, -5169, -5169,   169, -5169, -5169, -5169,
     274,   278,   291,   296,  2661,   299,   929,   301,   318, -5169,
   -5169, -5169,  2573,  2683,  2099, -5169,  2458, 21305, -5169, -5169,
   -5169,  2761, -5169, -5169,  1027,  2541,  1161, 74755, 95702, 77940,
   96620, 96620, 96620, -5169,   164,  2532, 89996, 96161, 89996, 48350,
   -5169,  2124, -5169, -5169, 12655, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, 89996, -5169, -5169,  1798,  2544, -5169, -5169,
   -5169, -5169, -5169,  2129, -5169, -5169, -5169, -5169, -5169, -5169,
   26590, -5169,  2145,  2163,  2166, 16775,  2175,  2185,  2195,  2215,
    2218,  2043,  2043,  2043,  2224,  2226,  2233,  2237, -5169,  2240,
    2255,  2259,  2263, -5169,  2273, -5169,  2275,  2279,  2283, -5169,
   -5169,    80,   111,  2297,  2315, 22060,  2318, -5169, 70317,  2320,
    2322,  2324,  2335, -5169, -5169, 21305,  2224,  2337, -5169, -5169,
    2342, -5169,  2358,  2365,  2371,  2386,  2391,  2394,  2397,  2411,
    2412,  2722,  2414,  2420,  2431,  2433,  2224, -5169,  2451, -5169,
   -5169,  1969,  2043,  2224,  2224,  2462,  2482,  2496,  2498,  2504,
    2512,  2518,  2521, 87460,  2523,  2527,  2537,  2545,  2554,  2558,
    2569,    66,  2580,  2583,  2584,  2585,  2586,  2588,  2589,  2590,
    2591,  2592,  2593,  2594,  2602,  2603,  2604,  2605,  2249,  2606,
    2607,  2608,  2609,  2611,  2340,  2619,  2620,  2621,  2623,  2625,
    2626,  2627,    70,  2632,  2635,   151,  2636,  2643,  2644,  2647,
    2648,  2649,  2651,  2653, 27345, 28100, 26590, 21305, -5169, 89996,
   91264, -5169, 10546,  1444,  1508, 26590, -5169, -5169, -5169,  2971,
   -5169,  2885, -5169, -5169, -5169, -5169, -5169, -5169,  2950, -5169,
    2983, -5169, -5169,  3035,  2505, -5169,  3002, -5169, -5169, -5169,
   -5169, -5169,  2508,  2657,  3101,  3135, -5169, -5169, -5169, -5169,
    2898, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  2652,  2665, -5169,  3002, -5169, -5169,
   57743, 74755, 55030, -5169, -5169, -5169, 70951, -5169, -5169,  2204,
    2850,  3246, -5169,  3329, -5169,  3253, 61853,  3197,  -111,   319,
     386,   413, 41471,   158, 83022,   453,   955,  2662, 66513, 42921,
    2664,    54,  2667, -5169,  2668,  2670,  2674,  2675,  2676,  2677,
    2684, -5169, -5169, -5169,  2779,  2690,  2705,   398, -5169, -5169,
     826,  2783,   485, -5169,  3036, -5169,   398, -5169, 36677,  3321,
    2156, -5169,   889, -5169,  3367, -5169, -5169,  2789,  2774,  2803,
   -5169,  1111, -5169,  1903, -5169,   308, -5169,  3321,   398,  2156,
   -5169,  2973,  3055,  1051,  3378, -5169,   664, -5169, -5169,  2761,
   -5169,  9799, 89996, -5169, -5169,  2707, 74755, 74755,   195,  1019,
   10546,  2708, -5169, 21305,  3192, 10897, 38042, -5169,   180, -5169,
   -5169, 89996, -5169,  2817, -5169, -5169,   830, -5169,  3138, -5169,
    2718, -5169, 91898,  1019, -5169, -5169,   -70,  3107, -5169,  2720,
   -5169, -5169, -5169, -5169, 74755, -5169, -5169, -5169, -5169, -5169,
   -5169,  2721, -5169, -5169,  2923,  2808, -5169,  2745, -5169, -5169,
     241,  3418, -5169,  2532, 89996, -5169, -5169,  2515, -5169,  2515,
    2515,  2515,  2515,  2515, -5169, -5169, -5169,  2776,  3059, -5169,
    3060, -5169,  2510,  1737, 44942,  2535,  1218,  2746,   268,  2738,
    3221,  3280, -5169, -5169, -5169,  2093, -5169, -5169,   442,  3452,
    3123, -5169, 89996, -5169, -5169, -5169,  2043,  2748, -5169, -5169,
   -5169, -5169, -5169,  3512, -5169, -5169, 74755,  2948,  3130,  3130,
    3130,  3517, -5169, -5169, -5169, 57049, 74755, -5169, -5169, -5169,
     264, -5169,  1707, 89996, 74755,  2796, -5169, 74755,  2757, 21305,
   -5169, 21305, 54362,  3113, 10546, -5169, -5169, 74755,   535, -5169,
   -5169, -5169,  3512,  3130, 74755,  3519, 74755,  3235, -5169,  2769,
   -5169,  2765, -5169, -5169, -5169,  3359, -5169, -5169, -5169,  2767,
    2112, 58436, -5169,   881,  3128, 57743, 74755, -5169, -5169,  3139,
    2916, -5169, -5169, -5169, -5169, -5169, -5169,  2860, -5169, -5169,
    2786, -5169, -5169, -5169,  2788, -5169,  2788,  2788, -5169, -5169,
    2788, 57743, -5169, -5169, 57049,  1692, 10866,  3440,  5519, -5169,
   70951, -5169, 22815, -5169, 23570, -5169, -5169, -5169,  3061,   187,
    1273, -5169, -5169,  3258, 89996,  3007,  3466,  3439, -5169, -5169,
   -5169, -5169, -5169, -5169,  3273,  2807,  3424,  2805, -5169, -5169,
   21305,  2811, -5169, -5169, -5169, -5169, -5169, -5169, -5169, 74755,
    2819, 26590, 26590, -5169,  3577,  3577,  3577, 21305,   382,   388,
    3171, 21305, 21305, 21305,  2165,  2822, -5169, -5169, -5169,   167,
   -5169,  2823, 21305, 21305, 71585,  2825, -5169,  1751, 21305,  3524,
   21305, 21305, 21305, 21305, 21305, 10482, 21305, -5169, -5169, 91264,
   71585,  3275,  2830, -5169,  2826, -5169,  2220, 21305,  2232, 21305,
     309, -5169, 21305, 21305,  2835, 21305, 21305, 28855,  2836, 21305,
   21305, 21305,  2837,  2970,  3577,  3577, 21305,  2242, -5169, 16020,
   -5169, -5169, -5169, -5169, -5169,  3577,  3577, 21305, 21305,  2284,
   21305, 21305, 21305, -5169,  2838, 21305, 21305, 21305, 21305, 21305,
   21305, 21305, -5169, 21305, 21305, 21305, 21305, 21305, 21305,  1285,
   21305, 21305, 74755, 21305, 21305, 21305, 21305, 21305, 21305, 21305,
    3513, 74755, 21305, 21305, 21305, 21305,  3516, 21305, 21305, 21305,
    2847, 21305, 74755, 21305, -5169, 21305,  2548,  2548, -5169, 21305,
   16020, 21305,  2848, 72219, 21305, 21305, 21305, 21305, 22060, -5169,
   22060, -5169, -5169,  2855,  3283, -5169,  3316, 21305,  2853, 67147,
   -5169, -5169, 28855, -5169,   275, -5169, -5169, -5169, -5169, 21305,
   -5169, -5169, -5169, 21305, 21305, 15265, 28855,  2857, 28855, 28855,
    3489,  2085, 28855, 28855, 28855, 28855, 28855, 28855, 28855, 29610,
   30365, 28855, 28855, 28855, 28855, -5169, 86192, 26590, 76657,  2865,
    3529, -5169, 91264, -5169,  1615,   562,   457,  3635, 31840, -5169,
    2867, -5169,  3362,  2871, -5169,   987,  2868, 74755, -5169, -5169,
   -5169,  3453,  2882,  3555, 57743, 57049,  1758,  2879,   462,  2886,
   -5169, -5169, 58436, 89996, -5169, -5169, -5169, -5169, -5169,  3616,
   21305, -5169, 57743, -5169,  1015, 14510, -5169,  1007,  1481,    54,
   -5169, -5169, -5169, -5169, -5169, 14510, 89996, 62531,  2887,  2980,
    2899,  2515, 89996, 74755, 89996, 92532, 89996, 89996, 74755, 57743,
   74755, -5169, -5169, -5169, 89996,   398,  2156,   914,   398,  3531,
   -5169,  1340,  1340, -5169, -5169, -5169, 83656, -5169, -5169, -5169,
     398, 89996, 89996,   398, 57049, -5169,  2156,  1571, -5169,  3184,
    2976, -5169, -5169, -5169,  3230, -5169, -5169,  3571,  2900, -5169,
    3247, -5169, -5169,  3001, -5169, -5169, 74755, -5169, -5169,  2156,
   -5169,  2156,  2156, 21305,   398,   398,   398,  1846, -5169,  2910,
   -5169,  2913, -5169, -5169,  2906,  3553,  2914, -5169, -5169,  3490,
     727, -5169,  3336, -5169,  3471, -5169, 21305,  3192, 10546, -5169,
   -5169,  3190, -5169,  3191,  3193,  3196, -5169, -5169, -5169, -5169,
    3345,  3199, -5169,  1903,  3202, -5169, -5169,  2934, -5169, -5169,
   -5169, 31840, 86192, -5169,  2937, -5169,  2945, -5169, -5169, -5169,
   94434, -5169, 93166, -5169,  1903, -5169, -5169, -5169, 74755,  3438,
   -5169,  1903,  1755, 89996, -5169, -5169, -5169,   700, -5169, -5169,
   -5169,  3049,  1829, -5169, -5169,   987,  1910,  3129, -5169, -5169,
   -5169, 86192, -5169, -5169, -5169, -5169, -5169,  3626, -5169, 58436,
   57049, 86192, 89996, 89996, 89996, 74755, 74755,  2515, -5169, -5169,
    2515, -5169,  2515, -5169,  2515,  2984, -5169, -5169, -5169, -5169,
     141,  1328,  3692, -5169,   459, -5169,  2343,   459,  3235,  3321,
   -5169,  3624, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  2965,  1218, -5169, -5169, -5169,  2957, -5169,
    2959,  2196,  2535, -5169, -5169, -5169, -5169, -5169, -5169,   146,
   -5169, -5169, -5169,  1338,  3320,  1922, -5169, -5169, 86192,  1922,
    1373,  1304, -5169,  2964,  1903,  1863, -5169,  1863, -5169,  3274,
   -5169,  3276,    74, -5169,   987, -5169, -5169, -5169, -5169, -5169,
   74755,  2987, -5169,  3160, 89996,  2004,  2982,  2988, 10546, 10546,
   49018,  3719,  3454, 11752,   157,  3037, -5169, -5169, -5169, -5169,
   -5169, 74755, -5169, -5169,  1467,  2764,  3473,  3453,  3069, -5169,
    2993, -5169, -5169,   435, -5169,  3580, 89996,  3664, 79218, -5169,
   74755, 89996,   881,  2998, -5169, -5169, -5169, -5169, -5169,    54,
   -5169,  2999,   160, 74755, 74755, 54362, -5169,  3003, -5169, -5169,
   89996, -5169, -5169, -5169, -5169,  3497,   244, 32483, 72853, -5169,
   72853, 72853, -5169, -5169, -5169, -5169, -5169,   929, -5169, -5169,
   -5169, -5169, -5169, -5169, 21305, 45636, 10546, -5169, -5169, 74755,
   -5169,  3651,   262, -5169,   130, 74755, -5169, -5169, 21305, -5169,
    3659,  3147, 89996, -5169,  3725, -5169, -5169, -5169, -5169, -5169,
   -5169, 10546, 89996, 89996, 54362, 54362, 21305, -5169,  1509, 21305,
   -5169,  3022, -5169,  3024,  3026,  9822,  3380, 21305, 21305, -5169,
    9904,   336,  2370, -5169,  3027,  3039, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  3032, -5169, -5169, -5169,  3695,  3716,
    3034, -5169,  3038, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  3705, -5169,  2062, -5169, -5169,  2613,  2654,
    3768,  3810,  3843,  3045,  3911,  2838,  2028,  3046, 71585, 91264,
    3577,  3047,  4133,  3577,  3048,  4020,  6451,  4165, -5169,  6657,
    6681,  2981, -5169,  4382,  4486,  4708, -5169, -5169,  3050,  3051,
    2693,  3577,  3052, 17530, 18285, 19040, 10002,  3054,  3062,  3064,
    4718,  7157,  3577,  3067,  7177,  2051,  7307, 91264,  4815,  7316,
    4836, -5169,  2057,  4858,  4912,  5113,  5124,  7354,  7374,  5411,
    5415,  5631,  2082, -5169, -5169, -5169, -5169,  3068,  7413,  7434,
    3072,  3075,  2089,  7466,  7504,  7652,  2092,  2098,  2105, 74755,
    3076,  7656,  7710,  6069,  2117, 74755,  7751,  7901,  6100, -5169,
    7904,  3078,  6105,  2747,  3080,  3082,  8019,  3086,  6130, -5169,
   91264, 89996,  3087,  3040,  2751,  1921,  6144,  8097, 10482, 10482,
   -5169, 21305,   285,   284, 91264,  1481, -5169,  3589,  1444, -5169,
   -5169, -5169, -5169,   360,   321,   429,   309, -5169,  3091,  1444,
    3093,  1458, 21305,  1226,  2532, 28855, 28855,  3094, 28855, 28855,
    3100,  3100,   338,  1118,  1118,  2167,  2277, 22060,   338, 22060,
     338,  3100,  3100,  3100, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169,  3632,  3097,  -185,  3099, -5169, -5169, -5169, -5169,
   -5169, -5169,    12,  3506, -5169,  3291,   630, 21305,  1903, -5169,
    3124,  3608,  3610,  3611, -5169, -5169, -5169, -5169, 57743, 57743,
   74755,  3609, 21305, -5169,   877,  3116, -5169, -5169,  3782, 58436,
    3788, -5169,  3125, 33126, 72853, 72853, 72853, 89996, 89996, 14510,
   61853,  3795,  3800,    54, 61175, -5169, 10546,    54, -5169,  3132,
    3133, -5169, -5169, 26590,  2240, -5169, 10546, -5169,  1262,  3408,
   -5169,  3136,  3140, -5169,  3142,  3143,  3144, 65243, 21305, -5169,
      54,  1007, -5169, -5169, -5169, -5169, -5169,  3145, 89996, -5169,
   -5169, -5169, 89996, -5169, -5169, -5169, -5169, -5169, -5169,  1903,
   21305, -5169, -5169,   398, 89996,   398, -5169,  1903,  3808, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,  3481, -5169, 87460,  3682,
     985, -5169,  3146, -5169, -5169, -5169, -5169, -5169,   398, -5169,
   -5169, -5169, -5169, -5169,  3314,  3321,  1111,  3531, -5169,  2156,
   74755,   398,   398, 10546, -5169, -5169, -5169, -5169, 89996,  2516,
    3683, -5169,  3153, -5169, -5169, -5169, 74755, -5169, 54362, 89996,
   89996, -5169,  3725, 86192, 63209, 74755, -5169, -5169, -5169,  2138,
   -5169, -5169, -5169, -5169, -5169, 10546, -5169, 19795,  3861, -5169,
   -5169, -5169, -5169,  1903, -5169, -5169,  4137, -5169, 74755, -5169,
   69049, -5169, 69049,  1772, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169,   211,   229,  1665,  3235, -5169,
   -5169, 74755,  1319,   130, -5169,  3919, -5169, -5169, -5169, -5169,
   -5169,  3161, -5169,  3211, -5169, -5169, -5169,  3165, -5169,  3838,
   -5169, -5169,  1352,   322,    74, -5169,   391,  3755,  3756, -5169,
   -5169, 89996, -5169,  2515, -5169, -5169,  2515, 74755,  2515, -5169,
   -5169, 89996, -5169, -5169,  2515, -5169, 89996,  2515, -5169, -5169,
   -5169,  3672,  3672, -5169, 67781, -5169, -5169,  3661,  3814, -5169,
   89996, -5169, -5169,  2039, -5169,  3844, -5169, -5169,  3580, -5169,
    3180, -5169, 21305, -5169,  3183,  3185, -5169, -5169, -5169, -5169,
   -5169, -5169,  2535,   349, -5169,    54,    54,  3406,  3706,  3707,
    3308,  1903,  3708,  3709,  3710, -5169, -5169, -5169,  1903,  1903,
   -5169, -5169,    54, -5169,   880, -5169, -5169, -5169, -5169,  2756,
     897, -5169,    54,    54, -5169,  1840, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  1306, -5169,   192,  1353, 57049,  3655, -5169,
    3783,  3203, -5169, 74755,  3869, -5169, -5169, -5169, -5169, 21305,
    3703, -5169, -5169,  3454, -5169,  3220,  3222,  3223,  3224,  3225,
    3226,  3231,  3233,  3234,  3236,  3237,  3238,  3240,  3241,  3250,
    3251,  3252,  3254,  3256,  3259,  3262,  3263,  3264,  3268,  3212,
   -5169, -5169,  3282, -5169, -5169, -5169, -5169,    54,    54,    54,
      54, -5169,  3229, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  3483,  2014, -5169,  1950, 89996,  3700, 79218, -5169, 21305,
    3879, -5169, -5169,  1846, -5169,  3249,   987, -5169, -5169, 58436,
   -5169, 86192, 57743, -5169, -5169, -5169,  3255,  1509, 49686, -5169,
   -5169,  3950, -5169,  2171, -5169, 57049,  3711, -5169, 72853,  3265,
   -5169,  3266,  3757,  3766,  3770,  3771, 54362,   877, 10546, -5169,
   -5169,  3277, -5169, -5169,  3490,  3672,  3301,  3552,  3671, -5169,
   -5169, -5169,  2103, -5169, -5169, 10546, -5169, -5169, -5169,  3926,
   56350, 50354,  3288, -5169, -5169, -5169,  2186, -5169, -5169, 96620,
   96620, 96620,  3725, -5169,  6168, -5169, 21305, -5169, -5169, 21305,
   -5169, 10546,  9982,  1443, 44293, -5169, 44293,  1443, 21305, -5169,
    3295, -5169,  3938,  3939, -5169, -5169, 21305, -5169, 21305, -5169,
   21305, -5169, 21305, 21305, 21305, 21305, 21305, 21305, -5169, 28855,
   -5169,  3292,  3299, -5169, -5169,  3303, -5169, 21305, -5169, 21305,
   -5169, -5169, 21305, 21305, 21305, 21305, -5169, -5169, 21305, 21305,
    3304, -5169, 21305, 10010, 21305, 10049, 21305, 10169, 21305, -5169,
   -5169, -5169, 24325, -5169,  3305, -5169, -5169, -5169, -5169, -5169,
   21305, -5169, 21305, -5169, 21305, 21305, 21305, 21305, 21305, -5169,
   -5169, 21305, 21305, 21305, -5169, 21305, -5169,  3877, 21305, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, 21305, -5169, -5169, -5169, -5169, 21305, -5169,   271, 25080,
   -5169, 21305, 21305, 21305, -5169, -5169, 21305,  3302,  3309, -5169,
   89996, -5169, 21305,  2427,  2053,   130,  3310, 21305, -5169,  3319,
    3326,  2708, -5169,   282,  2407, -5169, -5169, -5169,  1720, -5169,
   -5169, -5169, 95068, 21305, -5169, -5169, -5169, -5169, -5169, 28855,
    2893,  3311, 28855,  2532,  1626, 21305,  1278,  2532, 10482, 10482,
   89996,  4057,  3322, -5169, 21305, 91264, 21305,  3323,  3325, -5169,
    3330, 28855, -5169, -5169,  3332, -5169,  2410,  2053,  3402,  3764,
   -5169, 10546, -5169, 31840,  3820, -5169, -5169, 74755, 10523, -5169,
    2746,  2746, 69683, -5169, -5169, -5169,  3866, 89996,  3526, -5169,
   57743, 57049, 72853,  4003,  4004,  4005,  4008,    54,    54, -5169,
   -5169, 12409, 57743, 14510, -5169, -5169, -5169, -5169,  3841,  3842,
   -5169, -5169,   458,  3628,  3900, -5169, -5169, -5169,  3338, -5169,
   -5169, -5169,   509, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, 10546, 14510, -5169,  2887,  3344, 34540,   730, -5169, -5169,
   -5169, 10546, -5169, -5169, -5169, -5169,  3356, -5169, 84924, -5169,
    3686, 84924, 84924, 91264, -5169, -5169,  3940, -5169, -5169,  3808,
    3235,  2156, -5169, -5169,  1999,  3352,  3988,  3990, -5169,  3935,
    2399,  3935, -5169, -5169,  3352, 72219,  1846,  3453, 51022, -5169,
    2188, -5169,  4110, 51690, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  3361, -5169,  2240, -5169,  3357, -5169,
   10546, -5169, -5169,  3377, -5169, -5169, -5169,  3255,  1280,  3381,
    3368, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3321,   127,
   -5169, -5169, -5169, -5169, -5169,  1290, -5169, -5169, -5169,   700,
    2298, -5169,   130,  3602, -5169, -5169,  1352,  3821, -5169,  3655,
    4044,  1004,  1004,  3963, 74755, 74755, 10916,  2756, -5169, -5169,
   89996, -5169, -5169, -5169, -5169, -5169, -5169,  -115, -5169, 74755,
   -5169, -5169, -5169, 86192,  3386, -5169, -5169,  3385, -5169, 21305,
     987,  3505, -5169, -5169, -5169,  1720,  4131,  4055,  3321, -5169,
   10546, -5169,  3392, 19795,  3403,  3404, -5169, -5169,   459, -5169,
    3405, -5169,  2196, 61175, 43643, -5169,  3780,  3781,  1780, -5169,
   -5169, -5169, -5169, -5169, -5169,  3012,  1304, -5169,    54,    54,
   -5169,   184,    54, -5169, -5169,   217, -5169, -5169,   400,   362,
    2756, -5169,  1903,  1903,  1903,  1903,   130,  1903,  1903,  2197,
   -5169,  3012,  3012,  1863, -5169,  1043, -5169, -5169, -5169, -5169,
     236, -5169, -5169, 86192, -5169,  3910,  3915, -5169,  3916, -5169,
   -5169,   325, -5169,  2285, -5169,  7685,   900, -5169,  3965, 89996,
    4172,  3203, -5169,   741,  2004, 10546, 54362, 21305, -5169,  3422,
    3429,   130,  3430,   130,   130,  1903,  1903,  3356,  1903,   130,
    1903,  1903,  1903,  1903,  1903,  1903,  1903,   130,  1903,   787,
    2329,  1903,   130, 11752, -5169,  1903,  2053,  3012,  3012,  2764,
   -5169,  4094,    54, -5169,  2379, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,   265, -5169, 28855, -5169, -5169, -5169,
    3425,  1846,   441, 10546, 84290,  3975,  3235,  3442, -5169, -5169,
   -5169, -5169, -5169, -5169,  1573,  4105, -5169,  3435, 21305, -5169,
   -5169, 89996,   355,  3636,  3942,  3456, 79852, 57049, 57049, 57049,
   57049, 46346,  4031, 74755, -5169,  4098, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, 12900, -5169, -5169, -5169,  3759,   529,  3451, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3450,
   -5169, 21305, -5169, -5169,  3812, -5169, -5169, -5169, -5169, -5169,
   52358, 21305, 10546, 10546, 21305,  3458,  3458,  3459,  3460, -5169,
   -5169,  4100,  3458,  3458, -5169,  3458,  4101,  3458,  3458,  3465,
   -5169, -5169,  3467,  3468,  3469,  2708, -5169, 21305, 21305,  8353,
     238,  8356,  8400,  6360,  6368,  3058, -5169,  8421,  3017, 91264,
   -5169, -5169,  8433,  8534,  8564,  8567,  6378,  8575,  6605,  3441,
   -5169, 10546, 21305, 10546, 21305, 10546, 21305, 10546, 22060,  8608,
   -5169,  2212, 10532, -5169,  2219, 10541,  8611,  3478,  8629,  6391,
    2221,  3663,  8673,  8753,  8842,  2227, -5169,   407,  4060,  2229,
   22060,  8864,  8892,  6399,  6404,  8916, 91264, 89996,  3470,  8955,
    3472,  3472,   216, -5169,  3474, -5169, -5169, -5169,  3476, -5169,
    8993, 21305, 21305,  3624, -5169,  1570,   282,  3480,  3221,  4006,
   -5169,   459, -5169,  2093,   285, -5169,  3479, 10546,  3491,  1444,
   -5169, 21305, -5169,  2532, 28855,  3704,  3492, 28855, -5169, -5169,
    3632, -5169, 21305, -5169,  4056,  3493,  2708,  3495, 10546, -5169,
   -5169, 89996,  3496,  1508, -5169,  3356, -5169,  4115, -5169,  4227,
    3498,  3523,  3509,  3332, -5169, 57743, -5169,  4038, 72219,  2957,
    2957,  1100,  3510,  2245,  4045, -5169, -5169, -5169,  3508, -5169,
    2251, -5169,  4181,  2999, -5169,  4189, 57049, 57049, 57049, 57049,
   14510, 14510, -5169, -5169, -5169,  3521,  3522,    42,  4086, -5169,
   -5169, -5169, -5169, 89996, 89996, 14510, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  2363, -5169,  3321, -5169, -5169, 84924,
   -5169, -5169, -5169, -5169, -5169, -5169,   398, -5169, -5169,  3530,
     201,  2407, -5169, -5169, -5169,  1846,  3316,   204, -5169, -5169,
   -5169,  4168,  3935,  3935,  3352,  4170,  4500,  3535, -5169,    54,
   -5169,  4208,  4007, -5169, 89996,  3544, -5169,  3545, 88094, 19795,
    3546, -5169,  4104, -5169, -5169,  3676, 69049,  3549, -5169,  3774,
   -5169, -5169, -5169,  3573, -5169,  3558, -5169, -5169, 57049, -5169,
    3933, -5169, -5169, -5169, -5169, -5169, 74755, -5169, -5169,  3921,
   74755,    54,    54,    54,    54,    54,  3600,    54,    54,    54,
      54,    54,  3924,    54,    54,    54,    54,    54,    54,    54,
      54,    54,    54,   189, 89996,    54,    54, 39390, -5169, -5169,
    4136, -5169, 10551, -5169, -5169, -5169,    54, 11764,  2756,  3567,
   89996, -5169,  3203,  3570,   219, -5169,   659, -5169, 67781, 89996,
   10546,  3572,   539, -5169,  3804,  3576, -5169, -5169, 21305, -5169,
    3607, -5169, -5169, 40749, -5169, 80486, -5169, -5169, -5169, 19795,
   -5169,  2535,  3405,  3578,  1363, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169,   271,   271, -5169, -5169,   271,   271, -5169, -5169,
   -5169, -5169,   271,   271, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,   897, -5169, -5169, -5169,  1306, -5169, -5169,
    4081,   528, -5169, -5169, -5169, -5169,   950,   130,   130,   130,
    2329,  1978, -5169,  2285,  4833,  3978,  4154,  3978,  4156,  4082,
    2278,    54,  4160,  4329, -5169,   202,    54,  4166,  4229,  3673,
    4232,  4171, -5169,  3675,  3978,  4174,  3791,  4177,  4178,  4179,
   -5169, -5169, 11764, -5169, -5169, -5169, -5169,   423, 73487, -5169,
   -5169, -5169, -5169,  2532,  1127,  4106,  2151, -5169,  2264, -5169,
    4362, -5169,   190, -5169, -5169, 47014, 10546,   210,   222, -5169,
     246, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, 89996,
    3012,  2014, -5169, -5169,  1508, 79218,  3235, -5169,  3951,  4151,
    2965, -5169, -5169, -5169, -5169,  3316, -5169, 10546, -5169, -5169,
    4279, -5169, -5169, 57049, -5169, -5169,    74,    74,    74,    74,
    2741,  3969, -5169, -5169, -5169,  4098,  3892, -5169,   417, -5169,
    3458,  3458,   288, -5169,  3459,  4182,  3459, -5169,  4009,  1058,
    1382,  4009, -5169,  1058,  3459, -5169,  3619, -5169,  4009, -5169,
    1058,  3458, -5169,  3458, -5169, -5169,  1058,  3458, -5169,  3621,
    3459, -5169, -5169,  4009, -5169, -5169, -5169, -5169,  1230,  1702,
    3459, -5169, -5169, -5169,  3458,  1565,  3458,  3458,  3458,  3823,
    3458,  3458,  4327, -5169, -5169, -5169, -5169, -5169, -5169,  3459,
      32,  3458,  3458,  3458,  3458,  3460,  4296,  4297, -5169, 89996,
   -5169, 10546, -5169, 54362, 96620,  3058, 10546,  1797, -5169, -5169,
   -5169,  2084, -5169, -5169, -5169,  4219, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3634,
   10482, 10482, -5169,  4370,  4169, -5169, -5169, 21305, 21305, -5169,
   21305, -5169,   474,  3638,  4102, -5169, -5169, -5169, -5169, -5169,
   21305, -5169, 21305, -5169, -5169, 21305, 10546, 10546, 10546, 10482,
   -5169, -5169,  4600, -5169, -5169,  1443, -5169, -5169, 21305, -5169,
   21305, -5169, 21305, -5169, 21305, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,   290, 10482, -5169, -5169, 21305, 21305, -5169,
   -5169, -5169, 89996, -5169,  2053,  3639,  3917, -5169, -5169, -5169,
    2053,  3776, -5169, -5169,  2053,   130, -5169, -5169, -5169, -5169,
    2965,  1570, -5169,  3645,  1636, -5169, -5169, -5169, -5169, -5169,
   -5169,  3650, 89996, -5169,  2276,  1444, -5169, 21305, -5169,  2532,
    4233,  3653,   539,  4393,  3657, -5169, 21305, 40749, -5169,  3660,
    3666, -5169, -5169, -5169, -5169, 21305,  4293,  4245, -5169,  2053,
   89996, -5169, -5169, -5169,  3677, -5169,    54,  3316, -5169,  2291,
    1100, 72219, -5169, 81120,  2018,  1218, -5169, 89996, 57049, 57049,
    3125,  3125,  3125,  3125, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,    54,    54, -5169, 34540, 61853, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  3321, -5169, -5169,  2746,  4208, -5169, -5169,
    1720,   459,  3153,   285, -5169,  3352,  4313,  4318, -5169,  3352,
   -5169, -5169, 72219,  3235, 20550,  2333,  5061, -5169, -5169, -5169,
   37338, -5169,  3684, -5169,  3696, -5169, -5169,  1960,  4015,  4308,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, 19795, -5169,  1903,  1968, -5169,
    3732, -5169,  3712,  3714,    54, -5169,   193,   198,   207,   209,
   -5169, -5169,  3356,   130,   130,  1903,  1903,    54,   130, 86192,
    1739,   130,  3356,  3356,   212,  1903,  1294,   193, -5169, -5169,
   -5169,   130,   193, 76023, 74755,  4377, 89996,  3718,  3720,  3713,
   -5169, -5169, -5169, -5169, -5169,  1695, -5169,  4260,  2515,  2138,
    2138, -5169,  3715,   147, -5169, -5169, 13520, -5169, 59123, -5169,
   -5169, -5169,   428,  4306,  4462, -5169,  3846, -5169, -5169, -5169,
   -5169,  3824,  3203, 43643, -5169, -5169, -5169, 21305, -5169, -5169,
   -5169,   987,  3724,   437, 21305, 89996, -5169, 88728, -5169, -5169,
   -5169, -5169,  1805, -5169, 19795,  3726,  3727, -5169, -5169,   459,
    2341,   459,  3730,  2196, -5169, -5169,  2535, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  1903, -5169,
   -5169, -5169, -5169, -5169,  4315,  4317, -5169, -5169, 74121,  2515,
   -5169,  4377,  3772, -5169, -5169, -5169,  4385,  2132,   944,  2132,
   37338,   659,  1954,  4369,  1733,  4408,  3778,  4305,  2132,  2132,
   63887,   944, 72219, -5169, -5169, -5169, -5169, 74755, 64565,   944,
   -5169, -5169, -5169, 89996, -5169,  2132,   944, -5169,   944,   944,
   37338, -5169, 13647, -5169, -5169, 40093,  1526, -5169,  3922, 21305,
   21305,  4330, 89996,  4335, -5169,  4146, -5169, 89996, -5169,  3316,
   -5169, -5169, -5169,  4035,  4255,  2293, -5169, -5169,  2299, -5169,
   -5169,  2301, -5169, -5169, -5169, -5169, -5169,  3249, -5169, -5169,
    4096,  3180, -5169,  3954,    74,  4228,  4228,  4228,  4228, 54362,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169,  4405, -5169, -5169,
    4009,    54,  4009, -5169, -5169,  1131, -5169,  1131, -5169,   221,
   61175, -5169, -5169, -5169, -5169,   366, 44293,  2446, -5169,  4155,
    3197,  4009, -5169,  4237,  1058, -5169, -5169,  1131,  1910, -5169,
   -5169,  4009, -5169, -5169, -5169,  1910,  1131, -5169,  4238, -5169,
   -5169, -5169,  1131,  4009,  3971, 89996,  4327,  1058, -5169, -5169,
   93800,  1058,  1131, 21305, -5169,  4321, -5169,   366,  4518,  1058,
    4009,  1131,  1131, -5169,   144,  3773, -5169, 53026, -5169,  3777,
    3779,  3785,  3786,   366,  2306,  3775,   366,   366, -5169,  3790,
    3792, 21305,  1910,  4399,  9098,  6443,  2326,  4054,  4010, -5169,
    3944, -5169,  9106,  9124,  9168,  1370,  3459, -5169, -5169, -5169,
   -5169,  4422,  3458, -5169,  4515, -5169,  3458, -5169, -5169, -5169,
   -5169, -5169, -5169,  3793,  9265, 10546, 10546,  9292, -5169, -5169,
   -5169,  2328,  1747,  9317,  9328, -5169, -5169, -5169,  3797, -5169,
   -5169,   392, -5169,  3799,  3180, -5169, -5169, -5169,  3624,  1720,
   -5169, -5169,  2331,  4536,  1179, 21305, -5169, 21305, -5169,  3805,
   -5169, -5169, 89996, 10482,  1095, -5169,  2338, -5169, -5169,  3806,
   72219, 19795,  1720, -5169, -5169, -5169,  2018, -5169,  3798,   459,
     442,   459, -5169,  2965, -5169, -5169,  3125,  3125, 14510, 14510,
   -5169, -5169, -5169, -5169,  1218,  2957,  6008,   285, -5169, -5169,
   -5169,  3413,  4288,  3352,  3352,  4478,  4290, 21305,  3811, -5169,
    3580,  2240, -5169, -5169,  4013,  1950,  1950, -5169, -5169, -5169,
   -5169,  3813,  3815, -5169, -5169, -5169, 88094, -5169,  2347, -5169,
   -5169,  4568,  2349, -5169, -5169, 86192,  3816, 89996, 89996,  1903,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3818,
   -5169, -5169, -5169, -5169, -5169,  1903, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  3825,  3819, -5169,  2421, -5169, 40093,  3827,  4454,  4464,
    2138, -5169,  2515, 74755, -5169, 76023, -5169,  2515,  2515, 42199,
   89996, -5169,  4586, -5169, -5169, -5169, -5169, -5169,   165,  1794,
   -5169, -5169,  1522,  3957, -5169, 89996, -5169, -5169,  1903,  4588,
   -5169,  4241,   539, -5169, 21305,  3845,  3840, -5169, -5169, -5169,
   -5169, 10546,  4596,  3849, -5169, -5169, -5169, 81754, -5169, -5169,
   19795, -5169,  4487, -5169, -5169, -5169, -5169,  2535, -5169, -5169,
   -5169, -5169, -5169, -5169,  2532,   944, -5169,  2532, -5169, 76023,
   37338, 76023, -5169, 43643, 76023,  2132, 89996, -5169, -5169,  4481,
   76023, 76023, -5169, -5169, 37338,  3850, -5169,   539,  2424, -5169,
   -5169, -5169,  2053,  4322, 76023, 37338, -5169, 37338, -5169,  5195,
    1499, -5169,  3852, 89996, -5169, -5169, -5169, 10546, 10482,  4246,
   -5169, -5169,  3966,  1903,  4214, -5169,   381, -5169, 89996,   199,
   54362, -5169,   130, -5169,   130, -5169,   130, -5169, -5169,  4228,
    1505, -5169, -5169, -5169, -5169, 53694, -5169,  4493,  4363, -5169,
   -5169, 89996, -5169,  4323,  4346, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,    54, -5169, -5169, -5169,
   -5169,  2351, -5169, -5169,  2360, -5169, -5169, -5169, -5169, 93800,
   13394, -5169,  2376, -5169, -5169, -5169,  4327,  3856, -5169, -5169,
   10546,  3882, -5169, -5169, -5169, -5169,  4518, -5169, -5169, 77291,
   -5169, -5169, -5169, 89996,  4538,  4541, -5169, -5169, -5169, -5169,
   -5169,  4465, -5169, -5169, -5169, -5169,  3871,   539, -5169, -5169,
    3874, 84924, -5169, -5169, 21305, -5169,  4107, -5169,  4212, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,   366, -5169,
   -5169, -5169, -5169,  3356, -5169, -5169, -5169,  3880, -5169,   130,
    3580, -5169, -5169, 21305, -5169, -5169,  3881, 10849,   539,   539,
   -5169, -5169,  3980,  3764,  3885, 89996, -5169,  4245, -5169, -5169,
   -5169, -5169, -5169,   459, -5169, -5169, 82388, -5169, -5169, -5169,
   -5169,  3180, -5169, -5169,  2965, -5169, -5169,  3889, -5169,  4371,
   -5169, -5169, -5169,  4373, 10546, 89996,  3879,  1950,  4647,  4394,
   -5169,  1054, -5169, -5169, 89996, -5169, -5169,  3356,  4258, -5169,
   -5169,  4103, 89996,  2398,   539,  3903,  2400, -5169, 74755, -5169,
   -5169, 89996,  1720, -5169, 11764, -5169, 21305,  2515, -5169, -5169,
   76023,  3905,  4388,  1646, 76023, 76023,  1904,  3902,  3904,   208,
    1948,  3908,  3621,  1963,  3909,  3913,    56,  3918,  3925,  3927,
    3928,  1230,   316,  1967,  3929,  3930,  3931,  3458,  3936,  1977,
    1980,  2015,  3458,  2019,  3943,  4642, -5169, -5169,  3945, -5169,
      47, -5169, -5169, -5169,  3923,  3920, -5169, 89996, -5169, -5169,
    4613, 54362, -5169, -5169, -5169,  4504,  1127, -5169,  3932,  3947,
   13166, -5169, -5169, 13394,  1794, -5169, -5169,  2281,  4546, -5169,
   10546, -5169, -5169,  3946, 89996, -5169, -5169, -5169,  1720,   459,
    4605, -5169,  4607,  1246, -5169, 76023,  1467,  3616, -5169, 76023,
    3815, -5169, -5169,  1573, -5169, 72219, -5169, -5169, -5169,  4431,
    1526, -5169, 89996, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169,  3956,  2196,  4412,  2405, -5169, -5169, -5169, -5169,
   47682, -5169, -5169, -5169, -5169,  4143, -5169,  1505, -5169,  4440,
   74755, -5169, -5169, -5169, -5169,   366,  1910,   366,  4327, -5169,
   -5169, 89996, -5169, 89996,  4547, -5169, -5169, -5169, -5169, 38752,
   -5169, -5169, -5169,  4277, -5169,  2408, -5169, -5169,  3962, 21305,
   -5169, -5169, -5169,  1196,  9454, -5169, -5169, -5169,  3968, -5169,
    3972,  3321,  3572, -5169,  2915,  4093,  3608,  3610,  3611,  4141,
    4307, -5169,  4148, -5169, -5169,   130, -5169,  3977, 28855, -5169,
    1360, -5169, -5169, -5169, -5169,  1720,  3180,  4208, 21305,  3979,
   21305,  3981,  2435, -5169, -5169,  1950,  1950, -5169,  1176,  3982,
   -5169, -5169,  4386,  3984,  2439,   987, 89996, -5169,  4567,   987,
    3985,  3986, -5169, -5169,  4136,  9478, 76023,  4388,  1719, 89996,
    4594,  1004, -5169,  1004, -5169, -5169,  1656, 13394, -5169, -5169,
    7281, 89996,  4449, -5169,  2000, -5169, -5169,  4661, -5169,  4330,
   -5169, 89996,  1577,  4191, -5169, -5169, 55672, -5169,  4729,  4731,
    4679,  4737,  2281, -5169,  1876, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, 76023,   940, -5169,  4703,  4704,  1526, -5169, -5169,
   -5169, -5169,   944, -5169, 74755, -5169, -5169,  3815,  1290,  4108,
   -5169, 54362,  2018,  3956,  4011,  1583,  2093, -5169, -5169,   784,
   -5169, -5169, 89996, 89362, -5169, -5169, -5169,  3453, -5169, -5169,
   -5169, -5169, -5169,  4001, -5169, 77291, -5169, -5169, -5169, -5169,
   96620, -5169,   539, 84924, 84924, -5169, -5169, -5169,   459,  1312,
   -5169,  4763,  1472, -5169, -5169,   436, -5169, -5169, -5169, 89996,
    4012,  4109, -5169, -5169,  4078, -5169, -5169,  2928, -5169,  3624,
    6008, 10546, 89996, 10546, 89996, -5169, -5169, -5169, -5169,  2138,
   -5169,  2138, -5169,  1176, -5169, -5169,   897,   987,  1117,   539,
    4017,  1266, -5169, 89996,   147, -5169, -5169, -5169,  1004,  2442,
   -5169,  1033,  4602, -5169,  4028, -5169,  4030,  4033, -5169,  4667,
   -5169,  1903, -5169,  4111, -5169,  1656, -5169, -5169, -5169,  4074,
    4671,  4629,    54, -5169, 86192, 31119, -5169,  4523, -5169,  4482,
    4745, -5169,  4796,  3228, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  2151, -5169, -5169,  4248, -5169, 89996,  4661,
    1910,  1910,  4786,  1910, -5169,  4788,  4790,  1876, -5169,  4642,
    2053,  4245, -5169, -5169, 31119, -5169, -5169, -5169,  4694, -5169,
   21305,  4404,  4661, -5169,   442,   459,   459,  4058,  2196, -5169,
   -5169,  2018, -5169,  4249,  4802,  4803, -5169, -5169,  2444, -5169,
   -5169, 72219, -5169, 89996, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  2915, -5169, -5169,  4183,  1448, -5169,  2455, -5169, -5169,
   -5169,  2053, -5169,  4066, -5169,  4417,    54,    54,  4419,    54,
      54,    54,    54,  4076,  2928, -5169,  4426, -5169, -5169,  2457,
    2464,  4750,  4750, -5169,  2467,   419,  4272,  1903,    54,   379,
    1117, -5169, -5169,    54, -5169, -5169,   379,  1266, -5169, -5169,
    4084, -5169,  4090,  4092, -5169, -5169, 89996, -5169, -5169, -5169,
     481, -5169, 89996,  4095, 89996, 89996, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, 59810, -5169,  2329,  2329, 21305, -5169, -5169,
   -5169, -5169, -5169,  2657,  4686, -5169,  4127,  1384,    54, -5169,
   10565, 74755,  4146, 89996,  4087, -5169, -5169, -5169,  1910, -5169,
    1910,  1910, -5169, -5169, -5169,  2469, -5169, -5169,  4099, 10546,
   21305, -5169, -5169,   459,  1782, -5169, -5169, -5169, -5169,  2018,
   -5169,   442, -5169, -5169,   381, -5169,  4292,  4294, -5169, 89362,
    4112, -5169,    54,   659, -5169, -5169, -5169, -5169, -5169, -5169,
   89996, -5169,  4113, -5169, -5169,   123,    54,  1903,  1903,    54,
    2631,  2631,  2053, 86192,  4188, -5169, -5169,    54, -5169, -5169,
    2208, -5169, -5169, -5169,  1004,  1004,   379,   419, -5169, -5169,
   -5169,  2739, -5169,   130, -5169,  4716,  4540, -5169, 60497, -5169,
   -5169, -5169, 89996, 89996,  4117, -5169,   521,   521,  2473, 89996,
    2479,  2483, -5169, -5169, -5169, -5169, -5169, -5169,  4114,  4122,
   -5169,  1040, -5169, -5169, 10565,  4771,  4479,  4116, 89996, -5169,
   -5169, -5169, -5169,  4245, 10546, -5169,  1720,   459, -5169, -5169,
   -5169, -5169, -5169, 72219, 19795, -5169,  4109, -5169, -5169,  2485,
   -5169, 25835, -5169, -5169, -5169,  1903, -5169, -5169,  1903, -5169,
   -5169, -5169, -5169, -5169,  2487, -5169, 86192,  4847, -5169,  4862,
    4129,  4130, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  2491,  2493, 89996, -5169, -5169,  1245,
    4575,  4723,  4725,   419,  2534,  1117,  1266, -5169,   320, -5169,
    1601,  1601,   991, -5169, -5169, 89996,  4125,  2538, -5169, -5169,
   -5169, -5169,  4677, -5169, -5169,  4113, -5169,  4140, -5169,  1508,
   -5169, -5169, 86192, -5169,  4188, -5169, -5169, -5169, 88094, 88094,
    4260,   419,  2550, -5169, -5169, -5169,  4626,  4844, -5169,   419,
   -5169, -5169, -5169,  4144, -5169,  1601, -5169, -5169, -5169, -5169,
   -5169,  1471, -5169, -5169, -5169, 89996, -5169,  4444,  4241, -5169,
   25835,  4152,  2928, -5169, -5169,  4159,  2559, -5169, -5169,   419,
     521,   521, -5169, -5169, -5169, -5169,  1471, -5169,  4843, -5169,
    4893,  4546, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  4284,  1910,  4810, -5169, -5169,  4752,  4164,  1503,  1995,
   65877,  4697, -5169, -5169, 86192, -5169, -5169, -5169, -5169, -5169,
   86192,  2562, -5169, -5169, 72219, -5169, -5169, 54362, -5169, -5169,
   68415,  4163, -5169,    54,  4661, -5169, 72219, -5169, -5169, -5169,
   19795, -5169, -5169
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2528,  1145,  2374,     0,   458,     0,  1352,   743,  2232,  2368,
    2369,  2160,     2,   512,   225,   411,  2162,  2435,     0,     0,
     508,  1368,   881,   630,  2430,   336,     0,     0,   515,  2165,
     334,   225,  3072,  2276,     0,  3163,  2220,     0,   510,  2532,
    3446,  3308,     0,     0,     0,  3313,    69,  2129,     0,  1368,
     357,     0,    84,     0,     0,  1368,  2417,  3313,     0,  2447,
       0,     0,  2257,     0,     0,     0,     3,     8,    21,     0,
      43,    26,    31,    16,    20,    15,    45,    57,    51,    28,
    3310,   407,   408,   409,   410,    41,  3373,    40,    11,    60,
      61,    18,    48,    12,    14,    17,    39,    47,    35,    42,
      55,    24,    25,    32,    49,    65,    22,    62,    58,    23,
    2374,    13,    27,    50,    44,    36,    59,    66,    37,     0,
    2529,    56,    38,    64,    30,    52,    29,     9,    10,    19,
      53,    54,    46,    67,    33,    63,    34,  1179,     0,     0,
       0,     0,     0,  2158,     0,     0,  2158,  1261,  1503,  3371,
    3372,  3373,  1369,     0,  1370,     0,  2528,  2570,  2571,  2777,
    2825,  2826,  2720,  2853,  2672,  2947,  2969,  2995,  2759,  2761,
    2760,  2762,  2763,  2764,  2765,  2766,  2767,  2645,  2768,  2769,
    2770,  2772,  2771,  2773,  2774,  2775,  2646,  2719,  2647,  2725,
    2776,  2727,  2726,  2778,  2648,  2649,  2779,  2780,  2781,  2782,
    2703,  2651,  2650,  2783,  2785,  2784,  2728,  2729,  2706,  2786,
    2787,  2788,  2790,  2652,  2653,  2654,  2655,  2656,  2789,  2657,
    2791,  2707,  2792,  2793,  2658,  2794,  2795,  2796,  2797,  2799,
    2798,  2700,  2800,  2801,  2803,  2804,  2805,  2802,  2806,  2807,
    2809,  2808,  2731,  2810,  2730,  2811,  2659,  2812,  2813,  2814,
    2815,  2816,  2817,  2818,  2819,  2820,  2821,  2708,  2822,  2823,
    2824,  2845,  2721,  2827,  2829,  2828,  2732,  2830,  2831,  2832,
    2834,  2833,  2835,  2837,  2660,  2661,  2662,  2836,  2838,  2839,
    2840,  2841,  2843,  2842,  2847,  2848,  2733,  2663,  2704,  2664,
    2665,  2844,  2846,  3049,  2849,  2850,  2734,  2735,  2851,  2666,
    2722,  2852,  2709,  2855,  2854,  2667,  2856,  2668,  2857,  2858,
    2859,  2860,  2861,  2863,  2865,  2862,  2866,  2867,  2873,  2669,
    2864,  2868,  2869,  2870,  2871,  2872,  2874,  2736,  2875,  2701,
    2877,  2876,  2878,  2879,  2880,  2881,  2737,  2882,  2723,  2883,
    2884,  2885,  2898,  2899,  2889,  2890,  2892,  2893,  2896,  2891,
    2897,  2902,  2901,  2903,  2904,  2905,  2906,  2907,  2900,  2887,
    2894,  2895,  2888,  2908,  2909,  2886,  2910,  2912,  2911,  2913,
    2738,  2914,  2915,  2916,  2917,  2918,  2919,  2920,  2921,  2923,
    2922,  2924,  2739,  2740,  2741,  2925,  2926,  2927,  2716,  2928,
    2742,  2743,  2931,  2929,  2930,  2932,  2933,  2938,  2939,  2940,
    2702,  2935,  2934,  2936,  2937,  2744,  2745,  2746,  2941,  2942,
    2943,  2944,  2946,  2945,  2710,  2671,  2670,  2673,  2948,  2949,
    2674,  2950,  2952,  2951,  2718,  2675,  2953,  2954,  2956,  2955,
    2747,  2748,  2676,  2705,  2677,  2678,  2957,  2958,  2959,  2960,
    2961,  2962,  2963,  2964,  2965,  2966,  2967,  2968,  2749,  2750,
    2970,  2971,  2972,  2974,  2973,  2975,  2976,  2977,  2978,  2979,
    2980,  2981,  2679,  2982,  2711,  2983,  2984,  2680,  2986,  2985,
    2681,  2987,  2988,  2989,  2990,  2991,  2717,  2712,  2992,  2993,
    2994,  2751,  2996,  2997,  2998,  2713,  2999,  3000,  3001,  2682,
    3002,  3003,  2752,  2724,  2683,  3004,  3006,  2714,  2684,  3005,
    2686,  2687,  3007,  3008,  3009,  2685,  3010,  2688,  3011,  3012,
    3014,  3013,  3015,  3016,  3017,  2689,  3018,  3019,  2690,  3020,
    2691,  3021,  3022,  3023,  3024,  3026,  3025,  3027,  3028,  3029,
    3030,  3031,  3032,  3034,  3036,  3035,  3033,  3037,  3038,  2753,
    3039,  2692,  2754,  3044,  3045,  2755,  3040,  3041,  3042,  3043,
    2715,  3046,  3047,  3048,  2695,  3050,  3051,  3053,  3052,  2693,
    2694,  3054,  3055,  2699,  3056,  3057,  3062,  2756,  2757,  3058,
    3059,  3071,  3060,  3061,  3064,  3063,  3065,  3066,  2615,  2696,
    3067,  3068,  2697,  3069,  2698,  3070,  2758,  2575,  2586,   243,
    2587,  2612,  2610,  2614,  2608,  2609,  2613,  2607,  2611,   460,
     129,     0,     0,     0,     0,  2252,  2158,  2156,  2158,  2158,
    2158,  2158,     0,  2158,  2158,     0,  2161,  2158,  2158,     0,
       0,     0,   451,  2168,  2437,     0,  2454,  2455,  2449,  3153,
    3154,  3148,   413,     0,     0,     0,     0,     0,   321,   333,
     336,   329,   332,     0,   225,  1371,   413,  2230,   335,   336,
       0,  3074,     0,  2348,   336,     0,  2230,  2448,     0,  2533,
    2530,  1574,  1573,     0,  3313,  2576,     0,  1347,  1379,  1305,
    3314,  3315,     0,    72,    74,  2379,   358,     0,     0,     0,
       0,  2569,     0,     0,     0,     0,  1313,     0,  3315,  3325,
       0,   129,  1286,     0,   129,  2259,     0,     0,  3429,  3430,
       0,     0,     0,  3424,     0,  3431,     0,     1,     5,     0,
       0,   741,  1102,  1103,  1101,   741,   741,     0,     0,     0,
       0,     0,  3378,  3371,  3372,  3373,  2840,  2665,  2952,  2361,
    2373,  2359,  2564,  1466,  3346,  1420,  1405,  1407,  1148,  1180,
    1151,   227,     0,     0,  1153,     0,     0,  1168,  2592,  2591,
    2590,  1165,  1164,  1163,  1161,     0,   583,   225,     0,  1263,
       0,     0,     0,  3379,  3378,     0,  1324,  2363,  2364,  2365,
    2366,  2367,  2370,     0,   249,   471,   474,     0,   463,   466,
       0,   130,   131,  1350,  1353,     0,   744,     0,   165,     0,
    2256,  2255,     0,  2254,  2233,     0,  2252,     0,     0,     0,
       0,     0,     0,     0,     0,   225,     0,  2344,   225,  2140,
    2158,  2158,   513,     0,  3216,  3231,  3232,  1516,  3228,  3233,
       0,  3230,  3222,     0,  3226,  3220,     0,  3252,  3224,  3229,
    2833,  2662,  2847,  2961,  2965,  2981,  2984,  2714,  3027,  3210,
    3195,  3211,     0,     0,  3214,  3218,     0,     0,  2169,  2170,
    2171,  1259,  2438,  2439,  2443,     0,  2458,     0,   426,     0,
       0,     0,     0,   415,   416,   482,     0,   422,     0,   413,
     397,     0,   396,   398,  2528,   417,   392,   400,   399,   401,
     402,   403,   404,     0,   405,   406,   479,     0,   393,   394,
     509,   395,  2588,     0,  2589,  2617,  2619,  2616,  2618,  1366,
       0,  2518,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1516,  1516,  1516,  1513,     0,     0,     0,  2523,     0,
       0,     0,     0,  2514,     0,  2524,     0,     0,     0,  2516,
    2517,  2572,  2573,     0,     0,     0,     0,  2521,     0,     0,
       0,     0,     0,  2497,  1576,     0,  1513,     0,  2513,  2520,
       0,  2505,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1513,  2496,     0,  2515,
    2522,     0,  1516,  1513,  1513,     0,     0,  2760,  2645,  2775,
    2703,  2786,  2788,     0,  2652,  2653,  2654,  2655,  2656,  2700,
    2810,  2730,  2811,  2812,  2813,  2665,  2734,  2851,  2858,  2876,
    2878,  2737,  2917,  2919,  2924,  2739,  2740,  2741,  2929,  2930,
    2943,  2718,  2747,  2748,  2959,  2966,  2991,  2751,  2996,  3001,
    3004,  3023,  2754,  3044,  3045,  2755,  3043,  2715,  3056,  3062,
    3065,  3066,  2696,  2758,     0,     0,     0,  3357,  1575,     0,
       0,  1813,   882,  1533,  1549,     0,  1648,  1647,  1650,  1652,
    1658,  1568,  1679,  1619,  1620,  1622,  1741,  1621,  1626,  1627,
       0,  1790,  1628,     0,     0,  1625,  2510,  1624,  1623,  2511,
    2512,  1618,  2550,  2586,     0,  2574,   632,   631,  2343,  2342,
       0,  2431,   348,   343,   351,   345,   347,   346,   352,   353,
     354,   349,   344,   350,   337,     0,   322,     0,   330,  3326,
       0,     0,   413,   516,  2231,  2173,     0,  2172,   355,  3216,
    2761,  2965,  3184,     0,  3194,     0,     0,     0,     0,  1020,
    3097,  3098,  2716,  2718,  2717,  3099,  3040,  2644,     0,     0,
    2581,     0,     0,  2582,  2641,  2639,  2643,  2638,  2642,  2637,
    2640,  3073,  3083,  3079,     0,     0,     0,  2356,  1098,  1097,
       0,     0,     0,  2298,     0,  1020,  2356,  2299,     0,  2051,
    2346,  2349,     0,  3101,  2312,  1099,  3102,  2342,     0,  2284,
    2300,  2261,  2305,   129,  3103,     0,  2345,  2051,  2356,     0,
    2277,     0,     0,     0,     0,  1501,     0,   331,  3164,  1259,
     511,     0,     0,   484,  3309,     0,     0,     0,     0,  3318,
    1859,  2130,    76,     0,    78,     0,     0,  2566,  1987,  3167,
    3166,     0,    85,     0,  3443,    72,     0,  2423,     0,  2421,
    2418,  2420,     0,  3318,  1293,  1293,     0,     0,  1285,  1287,
    1288,  1293,  1293,  2260,     0,  3444,  3445,  2504,  2502,  2503,
    2577,  3426,  2501,  2500,  3435,  3437,  3420,     0,  3423,  3422,
    3432,     6,    68,     0,     0,   225,   225,   741,   167,   741,
     741,   741,   741,   741,   150,   148,   152,     0,     0,   158,
       0,   154,  3378,  2528,  2376,  1469,  1474,     0,  1420,     0,
       0,     0,  3329,  3328,  3327,  3341,  1408,  1409,     0,  1036,
       0,   228,     0,  3376,  3377,  3375,  1516,  2593,  2596,  3374,
    2597,   228,  1162,     0,   584,  2159,     0,     0,     0,     0,
       0,     0,   586,   585,   522,     0,     0,  1267,  1268,  1262,
    1264,  1266,     0,     0,     0,     0,  2375,     0,   245,   251,
     244,     0,   413,     0,   461,   467,    86,     0,  1354,  2149,
    2151,   164,     0,     0,     0,  2234,     0,  1994,  2236,  2240,
    2246,  2250,  2253,  2134,  2157,     0,  2137,  2143,  2142,  2136,
    2344,     0,  2146,   597,     0,     0,     0,  2147,  2131,     0,
     486,   488,  3217,  3215,  3249,  3248,  3253,     0,  3250,  3246,
       0,  3209,  3254,  3239,  3281,  3243,  3281,  3281,  3240,  3247,
    3281,     0,  3245,  3244,     0,  3212,     0,     0,     0,  1260,
       0,  2444,     0,  2436,     0,  1389,  2460,  2459,  2456,  1987,
    3150,  3155,   420,   427,     0,     0,  2929,     0,   432,   431,
     430,   283,   448,   420,   423,   440,     0,     0,   281,   414,
       0,   446,   449,   502,   498,   506,   500,   480,   476,     0,
       0,     0,     0,  1653,  1992,  1992,  1992,     0,     0,  1867,
       0,     0,     0,     0,  1992,     0,  1685,  1664,  1665,     0,
    1686,     0,     0,     0,     0,     0,  3357,     0,     0,  1819,
       0,     0,     0,     0,  3357,     0,     0,  2572,  2573,     0,
       0,     0,  1861,  1863,  2550,  2574,  1992,     0,  1992,     0,
    1521,  1695,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1992,  1992,     0,  1992,  1703,     0,
    2498,  2519,  1707,  1709,  1708,  1992,  1992,     0,     0,  1992,
       0,     0,     0,  2507,  2506,     0,     0,     0,     0,     0,
       0,     0,  2525,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2527,     0,     0,     0,  2526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1655,
       0,  1654,  1656,     0,   884,   883,  2528,     0,     0,     0,
    1572,  1571,     0,  1578,     0,  1580,  1582,  1570,  1569,     0,
    1577,  1579,  1581,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1657,     0,     0,     0,     0,
       0,  2499,     0,  1751,     0,   644,     0,     0,     0,   320,
    1373,  2598,     0,  1372,  1376,  3150,   495,     0,  2176,  2166,
    2175,  1899,  3215,     0,     0,     0,  3212,     0,     0,  3075,
    3077,  1019,     0,     0,  1022,  1024,  2193,  2192,  1023,  1032,
       0,  1021,     0,  3138,     0,     0,  3123,     0,  3104,     0,
    1028,  1030,  1029,  3118,  1027,     0,     0,     0,  3088,     0,
       0,   741,     0,     0,     0,     0,     0,     0,     0,  2327,
       0,  1501,  1501,  2278,     0,  2356,  2346,     0,  2356,  2352,
    2311,     0,     0,   797,  2053,  2304,     0,  2052,  2350,  2351,
    2356,     0,     0,  2356,     0,  2318,  2346,  2356,  2273,     0,
       0,  2265,  2270,  2266,     0,  2272,  2271,  2274,  2262,  2263,
       0,  2291,  2320,     0,  2303,  2310,     0,  2290,  2297,     0,
    2308,  2346,  2346,     0,  2356,  2356,  2356,  1904,   493,  2531,
    2534,  2538,  2542,   283,     0,     0,  1381,  1383,  1382,  1399,
    1307,  3317,     0,  3319,     0,  3321,     0,    78,    73,    79,
      75,     0,  2404,     0,     0,     0,  2398,  2400,  2403,  2399,
       0,     0,  2405,   129,     0,  2401,  2380,  2383,  2390,  1501,
    2381,     0,     0,   356,   359,   361,     0,   364,  1988,  1989,
       0,  3165,     0,  2565,     0,    71,  1311,  1314,     0,  2428,
    2425,   129,     0,  2713,  3324,  3322,  1281,  1297,  1279,  1291,
    1292,     0,     0,  1284,  1283,  3150,     0,     0,  3421,  3438,
    3419,     0,  3433,  3434,  3418,     7,     4,     0,   142,     0,
       0,     0,     0,     0,     0,     0,     0,   741,  1503,  1503,
     741,   160,   741,   156,   741,     0,  2362,  2360,  2377,  2378,
    1904,  2115,     0,  1406,  1493,  1458,  1470,  1493,  1994,  2051,
    3339,  1469,  1461,  3370,  3365,  3367,  3366,  3363,  3364,  3368,
    1492,  3369,  1491,  1503,  1475,  1489,  1490,  2202,  3347,  2188,
       0,  1410,  1469,  1466,  3343,  3342,  3332,  3337,  1037,  1036,
     735,   738,   737,     0,     0,  1152,   226,  2595,     0,  1154,
       0,  2344,  1169,     0,     0,  2344,   533,  2344,   587,  2596,
    3280,     0,  3286,  3268,  3150,  1265,  3380,  3381,  1159,  1157,
       0,  1325,  1326,  1329,     0,   249,     0,   252,   254,   472,
     413,     0,     0,     0,  1364,     0,  1362,  1361,  1359,  1360,
    1358,     0,  1349,  1355,  1356,  2344,   525,  1899,     0,  2237,
    2242,  2153,  2155,  2564,  1995,  2042,     0,     0,     0,  2248,
       0,     0,   597,  2139,  3207,   600,   599,  2144,   598,  2194,
    3266,  2138,  1269,     0,     0,   413,   487,   433,  3242,  1517,
       0,  3223,  3227,  3221,  3225,     0,  3205,     0,     0,  3213,
       0,     0,  3251,  3234,  3238,  3237,  3235,     0,  3236,  3241,
    3219,   412,   452,  2163,  2859,  3056,  2445,  2441,  2440,     0,
    2457,     0,     0,  3152,  2071,     0,  3149,   428,     0,   420,
       0,     0,     0,   443,   279,   424,   420,   433,   442,   492,
     282,   418,     0,     0,   413,   413,     0,   283,  3150,     0,
    1993,     0,  1834,     0,     0,     0,     0,     0,     0,  1634,
       0,     0,     0,  1773,     0,  1834,  1796,  2101,  2102,  2082,
    2083,  2081,  2084,  1514,     0,  2085,  2100,  1719,     0,     0,
       0,  1794,     0,  1963,  1964,  1965,  1966,  1967,  1968,  1969,
    1970,  1971,  1972,  1973,  1974,  1976,  1981,  1977,  1978,  1979,
    1980,  1975,  1982,     0,  1962,     0,  1820,  1786,     0,     0,
       0,     0,   884,     0,     0,     0,     0,     0,     0,     0,
    1992,     0,     0,  1992,     0,     0,     0,     0,  1795,     0,
       0,     0,  1793,     0,     0,     0,  1792,  1677,     0,     0,
       0,  1992,     0,     0,     0,     0,  1610,     0,     0,     0,
       0,     0,  1992,     0,     0,     0,     0,     0,     0,     0,
       0,  1603,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1985,  1983,  1986,  1984,     0,     0,  1859,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1733,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1681,
       0,     0,     0,  2555,     0,  1068,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,  3104,  1814,  1816,  1530,  1524,
    1528,  1522,  1526,     0,  1519,  1518,  1520,  1583,  2767,  1531,
       0,     0,  3357,  1543,  1547,     0,     0,     0,     0,     0,
    1565,  1566,  1554,  1552,  1553,  1550,  1551,     0,  1556,     0,
    1555,  1562,  1563,  1564,  1567,  1651,  1031,  1659,  2012,  1788,
    1789,  1812,  2016,     0,  2551,  1503,  1606,  1605,  1607,  1608,
    1609,   645,     0,   639,   642,   656,     0,     0,     0,  2432,
       0,  2730,  2754,  2755,   338,   341,   340,   342,     0,     0,
       0,     0,     0,  2174,  2528,     0,  2152,  1900,     0,     0,
       0,  3270,  3192,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3121,     0,     0,  3120,  3119,     0,  3140,     0,
       0,  3125,  3146,  3147,  3144,  3145,  3143,  3124,     0,     0,
    3082,  3126,  3127,  3130,     0,     0,     0,     0,     0,  3111,
       0,  3040,  3084,  3085,  3090,  3080,  2319,     0,     0,  2322,
    2315,  2326,  2777,  2324,  2336,  2323,  2317,  2328,  2316,     0,
       0,  2333,  2329,  2356,     0,  2356,  2331,     0,  2354,  2341,
    2340,  2339,  2288,  2287,  2064,  2065,     0,  2063,     0,  2054,
    2057,  2062,  2060,  2281,  2347,  2334,  2330,   225,  2356,  2286,
    2285,  2267,  2268,  2269,     0,  2051,     0,  2352,  2321,  2346,
       0,  2356,  2356,  2337,  2338,  2307,  2309,  1932,     0,  1874,
       0,  1876,  1873,  1872,  1871,  1902,     0,  1903,   413,     0,
       0,  2536,   279,     0,     0,     0,   629,  1399,  1385,  1401,
    1309,  1308,  1306,  3316,  3320,  1860,    77,     0,  2409,  2392,
    2391,  2393,  2397,   129,  2402,  2394,     0,  2406,  2407,   369,
       0,   365,     0,     0,  2579,  1991,  2580,  2604,  2602,  2606,
    2600,  2601,  2605,  2599,  2603,  2848,  2929,     0,  1994,  3169,
    3442,     0,  1315,  2071,  2424,  2426,  2419,  3323,  1282,  1299,
    1298,  1294,  1295,  1300,  1290,  1289,  2258,  3427,  3436,  3440,
    3425,   742,   733,  3203,  3286,   194,  1118,     0,     0,   132,
     134,     0,   151,   741,   149,   153,   741,     0,   741,   170,
     159,     0,   171,   168,   741,   155,     0,   741,  1473,  1471,
    1472,     0,     0,  2128,     0,  2123,  2044,     0,     0,  1442,
       0,  1459,  1463,  1464,  1440,  2000,  3338,  1470,  2042,  1498,
    1467,  1497,     0,  1488,  1503,     0,  1424,  1411,  1412,  1421,
    1452,  1451,  1469,     0,   736,  2194,  2194,     0,     0,     0,
       0,     0,     0,     0,     0,   229,   238,  2594,     0,     0,
     531,   532,  2194,   530,   573,   574,   577,   578,   579,     0,
       0,   580,  2194,  2194,   527,   553,   554,   557,   558,   559,
     560,   561,   523,     0,   528,     0,     0,     0,  3298,  1146,
    1171,  3382,  1155,     0,     0,  1328,   247,   246,   250,     0,
       0,   459,   468,   462,   464,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    87,
      88,   109,     0,  1351,  1363,  2150,  1357,  2194,  2194,  2194,
    2194,   529,   562,   563,   566,   567,   568,   569,   572,   570,
     571,     0,  2344,  2238,  1476,     0,     0,     0,  2567,     0,
    2067,  2043,  2247,  1904,  2251,  2250,  3150,  2135,  2145,     0,
    2195,     0,     0,  1271,  1270,  2141,  2148,  3150,   413,   308,
     436,   490,  3285,     0,  3284,     0,     0,  3202,     0,  3262,
    3265,  2564,     0,     0,     0,     0,   413,  2528,  2442,  2446,
    1390,  1392,  1393,  1391,  1399,     0,     0,  3158,  3159,  3157,
    2076,  2072,     0,  3151,  3156,   421,   429,   444,   447,     0,
       0,   413,     0,   425,   434,   438,     0,   450,   503,   477,
     477,   477,   279,  1367,     0,  1768,     0,  1769,  1770,     0,
    1635,  1868,     0,     0,     0,  1662,     0,     0,     0,  1772,
       0,  1515,     0,     0,  1638,  1630,     0,  1798,     0,  1803,
       0,  1801,     0,     0,     0,     0,     0,     0,  1862,     0,
    1864,  2551,     0,  1778,  1808,     0,  1776,     0,  1797,     0,
    1809,  1810,     0,     0,     0,     0,  1782,  1780,     0,     0,
       0,  1784,     0,     0,     0,     0,     0,     0,     0,  1680,
    1781,  1783,     0,  1715,     0,  1766,  1716,  1717,  1718,  2554,
       0,  1712,     0,  1713,     0,     0,     0,     0,     0,  1666,
    1667,     0,     0,     0,  1743,     0,  1668,  1723,     0,  1643,
    1744,  1725,  1673,  1674,  1745,  1746,  1747,  1640,  1641,  1727,
    1728,     0,  1749,  1642,  1729,  1732,     0,  1676,  2071,     0,
    1660,     0,     0,     0,  1678,  1706,     0,     0,     0,  1639,
       0,  1735,     0,     0,     0,  2071,     0,     0,  1682,     0,
       0,   885,  1921,  1435,  1493,  3345,  3344,  3353,  3354,  3358,
    1631,  2552,     0,     0,  1525,  1529,  1523,  1527,  3357,     0,
       0,     0,     0,  1542,     0,  3357,  1545,  1548,     0,     0,
    2014,     0,     0,  1806,  1857,     0,     0,     0,  1762,  1763,
       0,     0,   638,   637,     0,   641,   717,     0,   658,   646,
     635,  2434,  2433,     0,     0,  1374,  1377,     0,     0,  2180,
       0,     0,  2528,  2186,  2167,  2177,     0,     0,     0,  3193,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3108,
    3078,  2528,     0,     0,  1035,  1034,  1033,  3139,     0,     0,
    3132,  3133,     0,     0,     0,  3105,  3106,  3107,     0,  2627,
    2583,  2585,     0,  2584,  2625,  2623,  2626,  2621,  2622,  2620,
    2624,  3114,     0,  3087,  3088,  3089,     0,     0,  2314,  2325,
    2357,  2358,  2282,  2335,  2332,  2353,  2071,  2292,     0,  2506,
       0,     0,     0,     0,  2313,  2283,     0,  2306,  2264,  2354,
    1994,  2346,  2279,  2280,  1932,  1904,     0,     0,  1894,  1935,
       0,  1935,  1896,  1897,  1904,     0,  1904,  1899,   413,  2535,
       0,  2540,     0,   413,  1348,  1388,  1380,  1387,  1384,  1399,
    1397,  1386,  1094,  1093,     0,  1400,  2215,  2213,    80,    82,
    2212,  2214,    83,     0,  2395,  2396,  2389,  2408,  2384,     0,
     360,   370,   362,   366,   367,   368,   363,  3180,  3181,  3173,
    3176,  3174,  3175,  3179,  3182,  3183,  3170,  3177,  2051,  1322,
    1320,  1319,  1321,  1310,  1316,  1317,  2429,  2427,  2422,  1297,
       0,  1280,  2071,     0,  3439,   143,   734,     0,   163,  3298,
       0,     0,     0,     0,     0,     0,   745,   174,  3415,  3403,
       0,   144,   172,   161,   173,   169,  3412,   227,   157,     0,
    2578,  2124,  2127,     0,  2116,  2118,  2119,  2590,  2121,     0,
    3150,     0,  2108,  1460,  1465,  3330,     0,  1997,  2051,  1503,
    1504,  1504,  2550,     0,     0,  2207,  2200,  2187,  1493,  1466,
    1427,  3333,  1414,     0,     0,  1150,     0,     0,     0,   232,
     235,   233,   234,   582,   581,     0,  2344,   575,  2194,  2194,
     188,  2194,  2194,   187,   189,     0,   183,   180,   190,  2194,
    1170,   176,     0,     0,     0,     0,  2071,     0,     0,     0,
     196,     0,     0,  2344,   555,   534,   535,   538,   539,   540,
       0,  3273,  3272,     0,  3288,     0,     0,  3290,     0,  3289,
    3287,  3258,  3269,     0,  1167,  1036,     0,  1173,  1175,     0,
       0,  3382,  1327,     0,   249,   253,   413,     0,   465,     0,
       0,  2071,     0,  2071,  2071,     0,     0,  2071,     0,  2071,
       0,     0,     0,     0,     0,     0,     0,  2071,     0,     0,
       0,     0,  2071,     0,  1365,     0,     0,     0,     0,  2344,
     564,     0,  2194,   524,   541,   542,   545,   546,   547,   548,
     549,   552,   550,   551,  1478,  1477,     0,  2235,  1480,  2154,
    2250,  1904,  2565,  1996,     0,  2244,  1994,     0,  2249,  2133,
    3208,   596,   796,  3267,  1269,     0,   309,     0,     0,   433,
    3282,     0,  3302,     0,     0,     0,     0,     0,     0,     0,
       0,   413,  2216,     0,  1399,  1403,  2450,  3161,  3162,  3160,
    2079,  2080,  2077,  2075,  2078,   445,   312,   314,   311,   313,
    2636,     0,   299,   285,   301,     0,   388,   294,   386,   387,
    2633,  2631,  2635,  2629,  2630,  2634,  2628,  2632,   483,     0,
     284,     0,   441,   433,     0,   497,   499,   478,   507,   501,
     413,     0,  1835,  1865,     0,   986,   986,   972,   990,  1852,
    1846,  1849,     0,   986,  1854,   986,  1847,   986,     0,     0,
    1844,  1845,     0,     0,     0,  1774,  1771,     0,     0,     0,
    1823,     0,     0,     0,     0,     0,  1559,     0,  1757,     0,
    1779,  1777,     0,     0,     0,     0,     0,     0,     0,     0,
    1785,  1616,     0,  1614,     0,  1615,     0,  1617,     0,     0,
    1767,     0,  1585,  1604,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1860,     0,     0,  2087,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2556,     0,
       0,     0,  1057,  1063,  1066,  1067,  1069,  1061,     0,  1737,
       0,     0,     0,  1469,  1920,  3359,  1435,     0,     0,     0,
    3351,  1493,  3355,  3341,     0,  3356,  1817,  1815,     0,  1540,
    1536,     0,  1534,  1544,     0,     0,     0,     0,  1558,  1557,
    2016,  2015,     0,  1805,     0,     0,  1858,  2553,  1504,  1752,
    1503,   648,     0,   666,   640,  2071,   643,     0,   657,     0,
     669,     0,     0,     0,   339,     0,  1378,     0,     0,  2184,
    2185,  2528,     0,     0,     0,  2183,  2544,  2543,  2555,   724,
       0,  1960,     0,  3191,  3271,     0,     0,     0,     0,     0,
       0,     0,  3076,  3122,  3113,     0,     0,     0,     0,  3137,
    3131,  3128,  3129,     0,     0,     0,  3112,  3086,  3092,  3091,
    3094,  3096,  2302,  2301,     0,  2355,  2051,  2066,  2056,     0,
    2059,  2058,  2061,  2275,  2294,  2296,  2356,  1934,  1927,     0,
    3336,  1493,  1924,  1925,  1933,  1904,     0,     0,  1898,  1895,
    1936,     0,  1935,  1935,  1904,     0,  1878,  2221,  2224,     0,
    1877,  1482,     0,  2539,     0,     0,   485,     0,  1954,     0,
       0,  2387,     0,  2382,  2385,     0,     0,     0,  3168,     0,
    1312,  1318,  1296,     0,  1303,  1301,  3428,  3441,     0,   162,
       0,  1134,  1136,  1135,  1119,  1120,     0,   138,   140,     0,
       0,  2194,  2194,  2194,  2194,  2194,     0,  2194,  2194,  2194,
    2194,  2194,     0,  2194,  2194,  2194,  2194,  2194,  2194,  2194,
    2194,  2194,  2194,     0,     0,  2194,  2194,   842,   133,   611,
     625,   746,   749,   790,   774,   775,     0,   745,   175,     0,
       0,   205,  3382,     0,     0,   146,  1025,  2120,     0,     0,
    2549,  2045,  2048,  1494,     0,     0,  1441,  3331,     0,  1998,
    2007,  1462,  1496,  1505,  1499,     0,  1504,  2203,  1503,  2204,
    1423,  1469,  1427,     0,     0,  1415,  1416,   795,   794,   237,
     236,   241,   242,  2097,  2098,  2095,  2096,   588,   601,  2099,
     602,   576,  2071,  2071,  2199,  2198,  2071,  2071,   182,   179,
    2197,  2196,  2071,  2071,   177,   200,   199,   201,   202,   204,
     203,   198,  1166,     0,   589,   590,   556,     0,   536,  3276,
       0,  3278,  3261,  3260,  3259,  3256,     0,  2071,  2071,  2071,
       0,  2071,  3297,  3299,  1257,  1257,     0,  1257,     0,     0,
    1257,  2194,     0,     0,   629,  1275,  2194,     0,     0,     0,
       0,     0,  1241,     0,  1257,     0,     0,     0,     0,     0,
    1187,  1240,   747,  1147,  1186,  1188,  1200,   625,     0,  1218,
    1243,  1244,  1242,  3311,     0,     0,   210,  3384,     0,  3386,
       0,  1331,     0,  1330,   248,   413,   469,  2071,  2071,   102,
    2071,    94,    95,    90,   122,   123,    92,    93,    98,    97,
      99,   100,   103,   104,   101,    96,    91,   126,   128,   127,
     105,   124,   125,    89,   595,   594,   593,   592,   565,     0,
       0,  2344,   543,  1479,  1481,     0,  1994,  2568,     0,  2068,
    1503,  2239,  2241,  2132,   514,  2528,   491,   437,   489,  3283,
       0,  3201,  3206,     0,  3264,  3263,  3286,  3286,  3286,  3286,
     455,     0,  2164,  1394,  1399,  1403,     0,  1395,  2461,   966,
     988,   986,  1003,   952,   972,   968,   972,   962,  1003,   909,
     909,  1003,   965,   909,   972,   967,     0,   964,  1003,   963,
     909,     0,   956,   988,   903,   904,   909,   986,   922,     0,
     972,   945,   944,  1003,   948,   949,   947,   951,     0,   953,
     972,   958,   946,   950,     0,     0,   986,   986,   986,     0,
       0,   986,   390,   891,   894,   896,   895,   897,   898,   972,
     988,   988,     0,     0,   986,   990,     0,     0,   302,     0,
     280,   435,   439,   413,   477,     0,  1866,     0,   987,  1836,
    1837,     0,  1851,   974,   973,     0,   991,  1853,  1850,  1839,
    1856,  1843,  1848,  1855,  1841,  1633,  1663,  1637,  1636,     0,
       0,     0,  1693,     0,  1821,  1804,  1802,     0,     0,  1670,
       0,  1672,     0,     0,  1759,  2553,  1726,  1800,  1696,  1730,
       0,  1675,     0,  1702,  1700,     0,  1613,  1611,  1612,     0,
    1683,  1710,     0,  1602,  1711,     0,  1742,  1689,     0,  1691,
       0,  1692,     0,  1721,     0,  1694,  1724,  1748,  1629,  2089,
    2088,  2086,  1644,  2071,     0,  1697,  1661,     0,     0,  1734,
    2557,  2558,     0,  1736,     0,     0,  1068,  1054,  1055,  1056,
       0,  1058,  1060,  1062,     0,  2071,  1750,  1561,  1560,  3348,
    1503,  3360,  3362,     0,  3352,  1436,  1921,  3349,  3340,  1919,
    1915,  1917,     0,  1532,     0,  1541,  1538,     0,  1535,  1546,
    2018,  2017,  2048,     0,     0,  1753,  1857,  1505,  1764,     0,
     649,   650,   652,   654,   720,     0,   644,     0,   633,     0,
     648,   636,  1375,   496,  2181,  2190,     0,  2528,  2178,   619,
    2528,     0,   724,     0,  1469,  1474,   629,     0,     0,     0,
    3188,  3187,  3186,  3185,  3110,  3109,  3142,  3141,  3135,  3134,
    3136,     0,     0,  3115,     0,     0,  2093,  2094,  2092,  2090,
    2091,  2293,  2055,  2051,  2289,  1929,     0,  1482,  1909,  1910,
    1912,  1493,  1923,     0,  1875,  1904,     0,     0,  1883,  1904,
    1879,  1881,     0,  1994,     0,     0,  1987,   494,  2541,  1501,
       0,  1957,     0,  1958,  1955,  1956,    81,  2071,     0,     0,
     378,   373,   381,   375,   377,   376,   382,   383,   384,   385,
     379,   374,   380,   372,   371,     0,  1323,     0,     0,  3204,
       0,   136,     0,     0,  2194,   612,  2071,  2071,  2071,  2071,
     772,   793,  2071,  2071,  2071,     0,     0,  2194,  2071,     0,
       0,  2071,  2071,  2071,  2071,     0,     0,  2071,   780,   781,
     779,  2071,  2071,  1141,     0,  2675,     0,     0,     0,   812,
     813,   815,   816,   817,   818,     0,   843,   819,   741,  1095,
    1095,   845,  2560,  2461,   624,   626,  1036,   750,     0,   135,
     277,   230,     0,     0,     0,   275,     0,   810,   811,   809,
     808,     0,  3382,     0,  2125,  2117,  2122,     0,  2049,  2050,
    2047,  3150,  1503,  2004,     0,     0,  1468,     0,  1500,  1509,
    1508,  2547,  2551,  2211,     0,     0,  2205,  2209,  1413,  1493,
    1470,  1493,     0,  1417,  1466,  1428,  1469,   181,   186,   185,
     178,   191,   184,   197,   537,  3277,  3275,  3274,     0,  3257,
    3293,  3291,  3292,  3295,     0,     0,  3294,  3296,  1141,   741,
    1258,     0,     0,  1222,  1225,  1223,   739,  2156,  1368,  2156,
       0,     0,  2156,     0,  2158,     0,     0,     0,  2156,  2156,
       0,  1368,     0,   627,  1278,  1276,  1277,     0,     0,  1368,
    1234,  1182,  1235,     0,  1183,  2156,  1368,  1202,  1368,  1368,
       0,   748,  1036,  1184,  1185,   842,  1272,  3312,     0,     0,
       0,  1172,     0,   213,   211,   221,  3383,     0,  1158,  2528,
    3386,  1333,  1334,     0,     0,     0,   115,   117,     0,   119,
     121,     0,   111,   113,   526,   591,   544,  2250,  2243,  2069,
       0,  2245,   310,     0,  3286,  3300,  3300,  3300,  3300,   413,
     451,   454,  2217,  1396,  1404,  2463,  2462,     0,   989,   915,
    1003,  1001,  1003,   929,  1004,   976,   969,   976,   932,  1046,
       0,  1039,  1044,  1040,   938,  1042,     0,  1050,  1049,   910,
     952,  1003,   940,     0,   909,   931,   937,   976,     0,   926,
     935,  1003,   902,   939,   925,     0,   976,   941,   954,   957,
     959,   961,   976,  1003,     0,     0,   390,   909,   924,   923,
       0,   909,   976,     0,   295,   970,   955,  1042,  1050,   909,
    1003,   976,   976,   304,  2071,   306,   389,   413,   481,     0,
       0,     0,     0,  1042,     0,     0,  1042,  1042,  1775,     0,
       0,     0,     0,  1827,     0,     0,     0,     0,     0,  1632,
       0,  1755,     0,     0,     0,     0,   972,  1592,  1594,  1590,
    1593,     0,   986,  1596,     0,   953,   986,  1599,  1601,  1586,
    1587,  1588,  1589,     0,     0,  1869,  1870,     0,  2107,  2106,
    2105,     0,     0,     0,     0,  2559,  1052,  1739,     0,  1065,
    1059,  1057,  1064,     0,  1922,  3361,  1439,  3350,  1469,     0,
    1818,  1537,     0,     0,  2020,     0,  2003,     0,  1807,     0,
    1765,   653,     0,     0,     0,   673,     0,   671,   647,     0,
       0,     0,     0,  3336,  2179,  2182,  1469,  2545,  2556,  1493,
    1470,  1493,   729,  1503,  1901,  1961,  3190,  3189,     0,     0,
    3093,  3095,  2295,  1926,  1474,  1928,  1987,     0,  1914,  1913,
    3358,     0,  1871,  1904,  1904,     0,  1871,     0,     0,  2223,
    2042,  2225,  2226,  1485,     0,  1476,  1476,  1483,  1952,  3357,
    1203,     0,  1204,  1215,  1217,  1402,     0,  2414,     0,  2412,
    2388,  2415,     0,  1302,  1304,     0,     0,     0,     0,     0,
    2104,  2103,   769,   762,   761,   764,   763,   766,   765,     0,
     758,   755,   767,   757,   782,     0,   770,   752,   806,   807,
     805,   776,   783,   753,   754,   760,   759,   756,   798,   803,
     801,   800,   799,   804,   802,   771,   789,   768,   784,   844,
    1142,     0,     0,  2563,   606,   603,   842,     0,     0,     0,
    1095,   835,   741,     0,   820,  1141,  1096,   741,   741,     0,
       0,   605,   731,   751,   788,   787,   785,   786,   271,  3416,
     517,   518,     0,     0,  3386,   255,  3410,   230,     0,     0,
    1026,  2464,  2048,  1495,     0,     0,  2111,  2113,  2005,  2006,
    2001,  1999,     0,  2008,  2010,  1507,  1506,     0,  1504,  2201,
       0,  1445,  1464,  1443,  1429,  1418,  1419,  1469,  1426,  1454,
    1453,  3279,  2074,  2073,     0,  1368,  1245,     0,  1220,     0,
       0,     0,  1194,     0,     0,  2156,     0,  1247,  1246,     0,
       0,     0,  1255,  1256,     0,  2038,  2040,  2048,     0,  1238,
    1253,  1254,     0,     0,     0,     0,  1210,     0,  1199,  1257,
    1257,  1219,     0,     0,  1274,  1221,   220,   209,     0,     0,
    1174,  1176,     0,     0,  1177,  3385,     0,  1156,  1339,     0,
     413,   107,  2071,   108,  2071,   106,  2071,  2070,  3303,  3300,
       0,  3199,  3198,  3197,  3196,   413,   456,     0,     0,   927,
    1005,     0,   928,   978,   979,   977,   905,   901,  1047,  1041,
     912,  1043,  1038,  1051,  1048,  1045,  1001,   911,   933,   934,
     907,     0,  1143,   919,     0,   908,   960,   906,   920,     0,
       0,   291,     0,   289,   298,   936,   390,   286,   917,   921,
     391,     0,   930,   913,   914,   916,  1050,   899,   900,  2071,
     300,   319,   318,     0,     0,     0,   984,   982,   985,   983,
    1838,     0,  1840,  1842,  1687,  1688,  1824,  2048,  1822,  1829,
       0,     0,  1828,  1720,     0,  1671,     0,  1756,     0,  1731,
    1701,  1699,  1684,  1595,  1591,  1598,   954,  1597,  1042,  1714,
    1690,  1722,  1645,  2071,  1698,  1704,  1705,     0,  1738,  2071,
    2042,  1918,  1539,     0,  2023,  2022,     0,     0,  2048,  2048,
    1754,   651,   721,   646,     0,     0,   670,     0,   634,  2189,
    2191,   621,   623,  1493,   727,   726,     0,   618,   730,   728,
     616,   725,  3117,  3116,  1503,  1906,  1911,     0,  1884,     0,
    1888,  1893,  1889,     0,  1880,     0,  2067,  1476,     0,     0,
    1905,  1949,  1502,  1398,     0,  1959,  2410,  2071,     0,  2386,
    3178,     0,     0,     0,  2048,  1139,     0,   778,  2407,   777,
     613,     0,     0,  3336,   745,   814,     0,   741,  1091,  1092,
    1141,  1073,  1116,  2560,  1141,  1141,   988,   903,   904,   909,
     986,   922,  2732,   972,   945,   944,  1003,   948,   949,   947,
     951,  2742,   953,   972,   958,   946,   950,  2750,   849,   986,
     986,   986,  2757,   986,     0,   837,   847,   892,  2562,   732,
    2528,   274,   272,   273,     0,   267,   269,     0,   239,   231,
       0,   413,   521,   519,   520,     0,     0,   145,     0,   256,
       0,   258,   259,     0,  3413,  3409,  3386,     0,  2472,  2046,
    1504,  2109,  1503,     0,     0,  2548,  2210,  2208,  3330,  1493,
       0,  1205,     0,     0,  1193,     0,  1354,  1032,  1230,     0,
    1189,  1232,  1233,  1269,  1191,     0,  2041,   628,  1198,     0,
    1272,  1190,  1212,  1196,  1224,  1273,   207,   212,   222,   223,
    1160,  1466,  1432,  3389,  3395,     0,  1340,  1336,  1337,  1332,
     413,   116,   120,   112,  3200,     0,  3307,  3301,  3305,     0,
       0,  1002,   980,   981,  1006,  1042,     0,  1042,   390,   290,
     293,     0,   296,     0,     0,   918,   328,   327,   325,   413,
     315,   323,   317,     0,   324,     0,   308,   504,     0,     0,
    1826,  1787,  1830,  1831,     0,  1758,  1760,  1600,     0,  1053,
       0,  2051,  2019,  2013,     0,     0,     0,     0,     0,     0,
    2032,  2024,     0,  2002,  1811,  2071,   719,     0,     0,   659,
     676,   675,   672,   723,  2546,  3330,  1930,  1482,     0,     0,
       0,     0,     0,  2222,  1484,  1476,  1476,  1953,     0,     0,
    1216,  2413,     0,     0,     0,  3150,     0,  1138,     0,  3150,
       0,     0,   608,   610,   625,     0,  1141,  1116,  2560,     0,
    1077,     0,   821,     0,   825,   827,   851,     0,   846,   838,
     859,     0,   791,   278,   271,   270,   240,   192,  1503,   218,
     276,     0,     0,     0,   260,  3411,     0,   147,     0,     0,
       0,     0,  2465,  2467,     0,  2126,  2114,  2112,  2011,  2009,
    1444,  1425,     0,  1207,   740,     0,     0,  1272,  1195,  1239,
    1231,  1229,  1368,  2039,     0,  1228,  1211,  1213,  1315,   214,
    1178,   413,  1469,  1432,     0,     0,  3341,  3391,  3390,     0,
    3387,  1335,     0,  1342,  3306,  3304,  2218,  1899,   943,  1144,
     942,   297,   292,   287,   971,  2071,   305,   326,   307,   303,
     477,   975,  2048,     0,     0,  1669,  1646,  1740,  1493,     0,
    2029,     0,     0,  2027,  2026,     0,  2021,  2028,   722,     0,
       0,   667,   683,   679,     0,   681,   682,   704,   617,  1469,
    1987,  1885,     0,  1890,     0,  1882,  1487,  1486,  1942,     0,
    1941,     0,  1947,  1951,  2537,  2416,     0,  3150,  1106,  2048,
       0,  1108,   773,     0,  2461,   839,   833,   829,     0,     0,
    1076,     0,  1081,  1117,     0,   823,     0,     0,  1071,   877,
    1017,     0,   880,     0,   850,   852,  1010,  1011,   854,     0,
       0,     0,     0,   893,     0,     0,   994,     0,   997,     0,
       0,   848,     0,   860,   993,  1000,  2561,   615,   792,   268,
     193,  3417,  3404,   210,   219,   257,     0,   265,     0,   192,
       0,     0,     0,     0,  2466,     0,     0,  2473,  2475,     0,
       0,     0,  1206,  1237,     0,  1227,  1192,   629,     0,  1197,
       0,   216,   192,  3388,  1470,  1493,  1493,     0,  3392,  1466,
    1433,  1469,  3334,     0,     0,     0,  1341,  1346,     0,  1343,
    1345,     0,  2451,     0,   316,   505,  1825,  1833,  1832,  1438,
    2030,     0,  2031,  2034,     0,     0,  2035,     0,   663,   665,
     655,     0,   660,     0,   677,     0,  2194,  2194,     0,  2194,
    2194,  2194,  2194,   697,   705,   707,     0,  1931,  1907,     0,
       0,  1937,  1937,  1948,     0,  1104,     0,     0,  2194,  1248,
    1107,  1132,  1114,     0,  1137,  1140,  1248,  1109,  1131,  1112,
       0,   604,     0,     0,   831,  1074,     0,  1078,  1079,  1080,
       0,  1072,     0,     0,     0,     0,   878,   879,  1018,   853,
    1016,  1009,  1008,     0,   999,     0,     0,  3357,   889,   890,
     995,   887,   888,     0,     0,   868,     0,     0,  1001,   992,
     861,     0,   221,     0,     0,  3414,  2470,  2471,     0,  2468,
       0,     0,  2474,  1226,  1209,     0,  1236,  1201,     0,   215,
       0,   208,   224,  1493,  1446,  1449,  1434,  3394,  3393,  1469,
    1431,  1470,  1455,  1456,     0,  3396,     0,     0,  1338,     0,
    2219,  2228,     0,  1025,   288,  2025,  2033,  2037,  2036,   661,
       0,   668,   690,   680,   686,     0,  2194,     0,     0,  2194,
       0,     0,     0,     0,     0,   674,   706,  2194,  1887,  1892,
       0,  1945,  1943,   195,     0,     0,  1248,  1105,  1130,  1129,
    1110,     0,  1124,  2071,   139,  1250,  1249,  1115,     0,   141,
    1113,   836,     0,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,  1015,  1014,  1012,  1013,  2509,  2508,     0,  1510,
     998,     0,   863,  1007,   862,     0,     0,   263,     0,  2469,
    2477,  2476,  1208,     0,   217,  1450,     0,  1493,  1457,  3335,
    3397,  3398,  1344,     0,     0,  2452,   667,   664,   690,     0,
     688,     0,   684,   678,   685,     0,   716,   710,     0,   712,
     713,   711,   708,   701,     0,   699,     0,     0,  1938,     0,
       0,     0,  1121,  1122,   137,  1111,  1133,  1123,  1252,  1251,
    1128,  1127,  1125,  1126,     0,     0,     0,  1087,  1086,     0,
       0,  1083,  1082,  1104,     0,  1106,  1108,   886,     0,   996,
     855,   855,   869,  1503,   223,     0,   261,     0,  1448,  1430,
    2227,  2229,  2478,   662,   687,     0,   695,   691,   693,   696,
     715,   714,     0,   698,     0,   709,  1940,  1939,  1954,     0,
       0,  1104,     0,  1090,  1088,  1089,     0,     0,   822,  1104,
     826,   828,  1511,     0,   866,   856,   858,   865,   871,   872,
     870,   873,  3405,   206,   264,     0,  1214,     0,  2464,   689,
       0,     0,   704,   703,   700,     0,     0,   834,   830,  1104,
       0,     0,   824,  1512,   857,   864,   874,   876,     0,   262,
       0,  2472,   694,   692,   702,  1946,  1944,   832,  1085,  1084,
     875,     0,     0,  2480,  3406,  2479,     0,  2484,  3401,     0,
       0,  2491,  3399,  3400,     0,  3407,  2482,  2483,  2481,  2486,
       0,     0,  2488,  2489,     0,  2453,  3402,   413,  2490,  2485,
       0,  2492,  2494,     0,   192,  2487,     0,  1503,  3408,  2493,
       0,  1504,  2495
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5169, -5169, -5169, -5169,  1951,  4061, -5169, -5169, -5169,  3721,
   -5169, -5169, -5169, -5169,  3157, -5169, -5169,  1299, -5169, -5169,
   -5169, -5169, -5169,  1657, -5169,    57, -5169,    62, -5169,    58,
   -2965,  -586,  3789, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
    3081,  2415, -5169, -5169, -5169,  1814, -2853, -4752, -5169, -5169,
    -494,  1170, -5169, -5169,  -182, -5169,  -547, -5169, -5169, -5169,
   -4249,  -695,  -884, -5169,    61,   -89,  3665,   174, -4129, -5169,
   -5169, -5169, -5169, -5169, -5169, -1823, -5169, -5169, -5169,    14,
   -5169, -3734, -5169, -5169,  -359, -5169, -5169, -5169, -5169, -5169,
   -2011,  -610, -1318, -5169,    40, -5169,  -251, -5169,  -361, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169,  -264, -5169, -5169,
   -5169,  -422,   430, -4357, -5169, -5169, -5169, -5169,  2531, -5169,
    1931, -5169, -1649,  3339, -5169, -5169, -5169, -5169, -5169,  2503,
   -2321, -5169, -5169, -5169,  1331, -5169, -2664, -5169, -4305,  -358,
    -844,    43, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -1156,
   -5169, -5169, -5169, -5169, -5169, -5169, -1927,  1596, -5169,  1651,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,   512, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
    2350, -5169, -5169,  4207, -5169, -5169, -5169, -5169,   982, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169,  2935, -5169,  2933,
    2939, -5169,  2936, -5169, -2684, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3647, -5169, -5169,
   -5169, -2937, -5169, -5169, -2990,  3070, -5169, -2323, -5169, -5169,
   -2377, -5169, -5169, -2332,  1028, -5169, -5169,  2027,  1704, -5169,
   -1742, -2419, -2413, -5169, -5169, -5169, -2526, -2501,  -706,  3018,
   -1248, -2720, -5169, -5169, -5169, -5169, -5169,  -455,  -119, -5169,
   -5169, -5169,  -301,  1167,  1760, -5169, -3704, -5169, -5169,   166,
   -5169, -5169, -5169, -5169, -5169,   862,     0,   861, -5169,   389,
    2725, -2692, -5169, -5169, -5169, -5169, -5169, -5169,  -675,  -246,
    -759, -5169, -4267,    11, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5168, -5169, -5169, -5169,  -871, -5169, -5169,  -833,
   -5169, -5169,  -868, -5169,  -549, -5169, -5169, -5169,  1339,   875,
   -5169, -5169,   394, -4202, -5169, -5169,  2533, -1762, -5169,  -618,
   -5169, -3580,  1211, -3364, -3099, -5169, -5169,  -272, -1177, -1161,
    -752, -5169, -5169, -5169, -5169,   631, -5169,   302,  1217, -3629,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -3619, -3615, -5169,
   -4380, -5169, -5169, -5169, -4400, -5169, -5169, -5169, -5169, -5169,
   -5169,  -780, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -3550,
   -5169, -5169,  -575,  -581, -5169,  -457, -3223, -5169, -4482, -5169,
   -2319, -5169, -5169, -5169, -5169, -5169, -2172,  1009,  1129, -5169,
   -5169, -5169, -5169, -3180, -3011, -1340, -2794, -3021, -1400,  1078,
    -574, -4273, -4710, -1541, -3632, -5169, -5169, -3386, -3853, -5169,
    -644, -2665, -3068,  -613, -5169, -5169, -1600,   -92, -3047, -5169,
     594,   587, -4203, -4209, -3872,  1605, -5169, -5169,   988, -5169,
   -1425,   984, -5169, -5169, -5169,   994, -5169,  -776, -5169, -5169,
   -5169, -5169, -3635, -5169, -2402, -3941, -5169, -5169,  5006,  5010,
   -3150,  -738,  -736, -5169, -5169, -5169,  -206, -5169, -5169, -3671,
    -625,  -500,  -492, -3059, -4479,  -187, -4307,   597, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  1277, -2845,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -4399, -4165, -5169,
   -5169,   693, -5101, -3184, -3157, -3608,  3937, -5169, -5169, -5169,
   -5169,  3796, -3222, -4676, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  3286,  1369, -5169, -5169,  2001, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169,  -249,  2006, -5169, -5169, -5169,
   -5169, -5169,  2506, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  -561, -5169, -5169, -5169, -5169, -5169,   -31,  3172, -5169,
   -5169, -5169, -5169,     7, -5169, -5169, -5169, -5169,  2827, -5169,
   -5169, -5169, -5169,  2694, -5169, -5169, -5169, -5169, -5169, -5169,
    1800, -5169,  2416, -5169, -2326, -5169, -5169,  1223,  -126, -5169,
   -5169,  3875, -5169, -5169, -5169,  1407, -5169, -5169,  -218, -5169,
    1660, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  2587,
     340,  -516,  3883, -3549, -1849, -5169, -1246, -1259, -5169, -5169,
   -3706, -5169, -4162, -4017, -5169, -5169,  3270, -1839, -3750,  1998,
   -1621, -5169,  -145, -3072,  1031, -5169,  1683,   763,  5500, -1397,
   -1451, -5169, -5169,   -40, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  2325,  2330, -5169, -5169,  3601, -3135, -5169,
   -5169,  -770, -5169, -2609, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169,  1643, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,  3557, -1505,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -1083, -5169, -2640, -5169, -5169, -5169, -5169, -5169,  1044,  -604,
   -5169,  3694, -5169,  3729, -5169, -2900, -1745,  2125,  1572, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,  2136, -5169, -1935, -5169,
   -3381, -5169, -5169, -5169, -5169, -5169,   524, -5169, -3803, -5169,
    1072, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
    2146, -5169, -5169, -2560,  -400, -5169,  -250, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169,  -673,   501,  -671, -3816, -1391,  1541,
   -5169, -5169, -1389,  3747, -1782, -5169, -5169, -5169, -5169,  1474,
   -5169, -5169, -5169,    49,    53, -5169, -5169,  1688, -5169, -5169,
   -5169, -5169,   205,  -352, -5169, -5169, -5169,    36, -2469, -1925,
   -5169,   213, -3979, -1170, -5169, -1120, -5169, -1653,  1614,   171,
   -2746, -5169,   789, -1444,  -933, -2912, -4182, -3104, -5169, -1656,
   -5169,  2669, -5169, -5169, -5169,    63, -5169, -5169, -5169,  1501,
   -5169, -1810, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  -592, -1091, -5169, -5169,  2542, -2734,  -125,  5137,     1,
   -5169, -5169,     2, -5169, -5169, -5169, -5169,  3826,  3582,  2513,
   -5169, -5169, -3272, -2821, -5169,   592, -1052,  2969,  2032, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,   992, -5169,  1032, -3078,
   -5169, -5169, -5169,     3, -5169, -5169, -5169,  1021, -5169,  -541,
    4591,    18, -5169, -5169, -5169,  4457, -5169, -5169, -5169, -5169,
   -5169,  3272, -1291,  4458, -5169, -5169, -5169, -5169, -5169, -5169,
    2833, -5169, -5169, -5169, -5169, -5169, -5169,  3541,  4604,  -647,
   -1575, -5169,  -778,  2842,  2222,  -878, -5169, -5169, -5169,  3991,
    4610, -5169, -5169,  5155, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  2801,   200, -5169, -5169,   214, -5169, -5169,
   -5169, -5169,  3447, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169,  3868, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169,  1342,  -624, -5169,
     -69,  -646, -5169,  -240, -5169, -5169, -5169, -5169, -5169,  -682,
   -5169, -5169,  -685, -5169, -1221,  4311, -1675, -5169, -1615, -3190,
   -5169, -1542,  1667, -5169, -5169, -5169,  2845, -5169, -5169, -5169,
   -5169,  1124, -5169, -5169, -3409,  -834, -1504, -3412,   196, -5169,
   -5169, -5169,  -880,  4453,    -2,  1377, -2036, -5169, -5169,  2377,
      -3,  -848,  -139,  -678,  -701,  -976, -5169,  8907, -5169, -5169,
   -5169, -5169,  -641,  -593,  -569,   247,  -567,  1750,  -628,   135,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  2274, -5169, -5169, -5169,  1108, -5169,  4645, -5169,  3063,
   -1609,  4650,  2938,  2314,  2316, -5169, -5169, -5169, -5169, -1603,
   -5169, -5169, -1578,   272, -5169,  3281, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169, -5169,  3463,  -521,  -527,  3667,  4669,  4215, -5169,
    3934, -5169, -5169, -5169, -5169, -5169,  1525, -5169, -1807,  2357,
   -1275, -2978, -5169, -5169,  2709,  1378, -5169,  2003, -2408, -2809,
   -5169,  2202, -3738, -5169, -5169,   125, -5169, -5169, -5169,  1493,
     315,  4651,  4118, -5169, -5169, -5169, -5169, -2834, -3777,  -720,
   -5169, -5066, -5169, -1868, -5169, -1224,  1728, -3416, -5169,  -117,
   -5169, -5169, -3360, -3356,  1137, -1429,  2302,   672, -5169, -5169,
   -3129,   310,  5261,  5262,  5264,  -385, -5169, -3061, -5169, -4226,
   -5169,  -333, -5169, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169,  2824, -5169, -5169,  -161, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169,  2243, -5169, -5169, -5169, -5169, -5169, -5169, -5169,
   -5169, -5169
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,   709,  1846,    66,    67,    68,    69,    70,  1202,
    1203,    71,  1204,  1777,  1780,  2457,  3078,  3079,    72,   682,
      73,  1953,  2659,  2660,  4451,  4452,  4445,  4446,  4448,  4449,
    2661,   780,   781,    74,  3136,  3137,  4706,  4252,  4253,  2512,
    3712,  4322,  1858,  1857,  1859,  1864,  2534,  1862,  2528,   717,
    2529,  3142,  2530,  3143,  3707,  3210,  3211,  5501,  1258,  3130,
    3219,  3220,  2525,  4313,  4431,  5369,  4435,  5531,  5671,  5503,
    3247,  4874,  5370,  5371,   621,  3146,  1915,  4779,  2585,  5129,
    2586,    75,   774,  1945,  3254,  1330,  1946,  1947,  5138,  5139,
    5140,  5141,  5124,  5125,  5126,  5127,  4316,  4785,  4311,  4778,
    2751,   869,  2044,  2752,  4936,  4930,  4931,  4932,  4526,  3361,
    3362,  3363,  4545,  3364,  4949,  4954,  3326,  3327,  3905,  3365,
    5229,  5230,  5231,   639,  1097,  5232,    76,    77,   640,   649,
     641,  1094,  2304,  1095,    78,    79,   677,  1803,  1804,  1805,
    1806,  3096,  2470,  3090,  3091,  4243,  4937,  3367,  4534,   870,
     871,   872,    81,   622,   873,   874,   875,   876,  1430,  2037,
    2038,   877,   878,   879,   880,   881,  2710,  2755,  3381,  2711,
    3328,  2756,  2048,   882,   883,   884,   885,  1431,   846,   847,
    2726,  3920,  4471,    82,   599,   776,   777,  1952,  2633,   778,
    2634,  3257,  4444,   779,  1331,  2630,  1333,   886,  3385,   887,
     888,  2057,   889,  1421,    83,  1763,  1997,   812,  1371,   890,
    1190,  2438,  1103,  2312,  3386,   891,  2054,  2056,  2053,  3384,
    5400,  2055,    84,   632,   658,   620,  1369,   646,  4782,  5135,
     752,   753,   788,  2682,   754,  1341,  1302,  1921,  2612,  2613,
    3225,  3226,  3293,  3294,  3295,  2604,  2605,  2606,  2671,  2672,
    2673,  2593,  2594,  2595,  1925,  2590,  2591,   755,  1303,  1314,
    2607,  2608,  2609,  3299,  2675,  2676,  2677,  2678,  2610,  1987,
    2611,  3757,  3698,  5074,  5072,  5073,  3699,  4771,  2963,  5275,
    4642,  4643,  4303,  4304,  4305,  4848,  3070,    85,   635,  1077,
    1635,  2295,  3543,  2944,  2946,  2296,  3542,  4139,  4140,  4141,
    2942,  2943,  5269,  2948,  3540,  5421,  5786,  5567,  5568,  3532,
    5572,  4148,  4636,  4637,  5015,  5270,  5427,  5705,  5573,  5793,
    5703,  5789,  5704,  5791,  5901,  5857,  5858,  5715,  5804,  5805,
    5862,  5902,  5583,  5584,  5585,  3536,  3537,  5266,  3552,  4164,
    4165,  5023,  4649,  5027,  5120,  3125,  1909,  1910,  4828,  2531,
      86,  3700,  3831,  3701,  3702,  4719,  5497,  3703,  3704,  3705,
    3321,  1712,  4745,  4731,  4321,  4288,  4289,  4290,  4291,  4292,
    5464,  5623,  5466,  5467,  5613,  5744,  5612,  4293,  4294,  5318,
    4761,  4397,  4295,  4296,  4297,  4769,  5115,  5320,  5316,  5474,
    5475,  5884,  5885,  5491,  5842,  5492,  5891,  5915,  5916,  5476,
      87,   634,  1583,  5638,  5639,  5640,  3982,  5116,  3983,  3984,
    4513,  3985,  3986,  3987,  3988,  3989,  3990,  3991,  3992,  3993,
    3994,  3995,  4942,  4516,  4013,  4906,  4008,  4514,  4512,  4017,
    5493,  5494,  4900,  4517,  4484,  4917,  5650,  5477,  5495,  5479,
    4496,  1668,  1669,  4324,  1682,  1683,  2985,  2335,  2986,  1913,
    4497,  4498,  4910,  4499,  4915,  4095,  4997,  4101,  4102,  4103,
    3482,  3483,  3484,  3485,  3486,  2896,  5480,  4764,  5310,  5459,
    5462,  5621,  5831,  4762,  4298,  4767,  1179,   718,  4299,  4300,
    5726,  5599,  5606,  5727,  5607,  5600,  5312,  3133,  5728,  5729,
    5730,  5609,  5602,  3664,  5063,  5064,  4749,  4921,    88,   147,
    3245,  1289,  1291,  1301,  3251,  2621,  2620,  1307,  1306,  2599,
    3248,  3846,  5190,   738,  3833,  5362,  5166,  5368,  3834,  4691,
    3835,  5353,  5522,  3836,  5182,  5366,  5528,  4692,  4693,  3837,
    3838,  3839,  5734,  5735,  5736,  4386,  1400,   758,   759,  1319,
    1320,  1321,  2705,  4865,  4407,    89,  2503,  2498,    90,  1228,
    1229,  1230,  1826,  1827,  2501,  2502,  3121,  3655,    91,  1197,
    2452,  1817,  2491,    92,  1216,  3113,  3114,  3115,  3650,    93,
    1327,  1941,  1942,  2625,  3853,  4443,  4878,  5199,  5383,  5195,
    5548,  5549,    94,   784,  1337,    95,   601,  1962,  1963,  1964,
    2663,    96,  1439,   155,    97,  1101,  1640,  1643,  1644,    98,
    1196,  1765,  1766,  1767,  1768,  3066,    99,  2029,  2730,  2731,
    2732,  2733,  2447,  3637,  2448,  2449,  3075,  3927,   100,   736,
    3181,  1279,  1280,  1281,  4355,  3743,  3744,  5540,  5374,  5375,
    3497,  3498,  3499,  1873,  3165,  4348,  5158,  5533,  5776,  2569,
    4818,  5680,  2570,  1875,  1275,  1276,  2557,  2571,  1878,  2539,
    1893,  3306,  3307,  4216,  4687,  1894,  1895,  5028,  2560,  2561,
    1754,  5289,  2562,  3733,  4338,  5839,  1460,  1381,  1200,  1043,
    1044,  1603,  1604,  1611,  1045,  1605,  2250,  4063,  4589,  4590,
    4591,  4592,  4988,  2171,  2172,  2290,  1046,  2157,  1047,  1048,
    1049,  1050,  1051,  1052,  1053,  1054,  1055,  1056,  1057,  2285,
    4043,  4044,  4571,  2937,  2938,  2939,  1058,  2778,  4029,  2788,
    1059,  1060,  1061,  1062,  1063,  3524,  1064,  4134,  4802,  1065,
    1589,  2236,  2117,  4563,  4034,  4966,  4970,  4971,  4972,  5242,
    2061,  2766,  3409,  4553,  4556,  4557,  3410,  3411,  3525,  2901,
    1481,  1482,  1449,  1450,  3460,  2429,  2430,  2431,  2432,  2433,
    4677,  4678,  5278,  5039,  5280,  5043,  3053,  3054,  2316,  2317,
    2434,  2435,  2436,  2437,  3609,  4667,  4119,  4619,  3502,  3493,
    3494,  3495,  3610,  3611,  3612,  3613,  4196,  4663,  4664,  5429,
    3044,  3615,  4195,  3621,  5721,  5441,  5442,  5811,  5810,  5443,
    5287,  5288,  5050,  5051,  4222,  4223,  4224,  3560,  2113,  2114,
    2187,  1810,  1811,  2062,  1975,  2689,  3730,  4334,  3167,  4131,
    4800,  4336,  4803,  4804,  2280,  2930,  3520,  2932,  4624,  5006,
    5007,  5260,  5410,  5411,  5416,  3842,  4845,  4846,  2690,  1879,
    3159,  3721,  4330,  1715,  1716,  1880,  2399,  3597,  3598,  3315,
    2742,  4376,  4711,  3487,  3469,  4697,  3758,  2085,  2086,  4712,
    4601,  2551,  3725,  4795,  4796,  4797,  2543,  2544,  3154,  3155,
    3156,  1881,  2545,  3716,  4791,   101,   672,   102,  1994,  1366,
    1993,  3087,  1339,  1648,  1970,  1971,   799,   747,   619,   103,
     623,  2727,   104,   647,  2314,   851,  1106,  1649,  1650,  2964,
    3548,  3553,  2965,  1898,  4154,  4155,  2700,  3771,  3772,  3766,
    3177,  3739,  1899,  2564,  4345,  3174,  4346,  3175,  3081,  3082,
    3922,  4897,  5551,   105,   656,  4213,  3627,  3628,  5690,  5691,
    1107,   106,   605,  1969,   794,  1345,  1348,  1977,  2686,  3901,
    1349,  1350,  2688,   795,   796,   107,   695,  1234,  1737,  1738,
    1739,  2415,   108,   653,  1180,  3596,  4193,  2392,  1080,  1364,
    1720,  1183,  1721,  2388,  3027,  1703,   109,  1274,  1273,   772,
     110,   111,   729,   156,  1867,   112,  1205,  1796,  2468,  3643,
    3644,  4228,  1797,  1798,  3088,  3084,  4698,  4699,  5059,   113,
     687,  1220,  1221,  1821,  1819,  3118,  2494,   114,   636,  1081,
    2299,   115,   624,   854,  1403,  1404,  2027,   116,   117,   118,
     856,  3928,  5693,  5852,   628,  2031,  1408,  4772,  5148,  5342,
    5343,  5345,  5517,  5518,  5898,  5937,  5948,  5941,  5951,  5952,
    5955,  5961,  5962,  1066,  1241,  1242,  1067,  5642,  1068,  1069,
    1070,   119,   120,  1192,   660,  1759,  1760,  3062,  2441,  3060,
    1761,  3555,  3556,  3171,  3722,  1071,  3557,  4750,  1340,  1972,
     680,   587,  1072,   588,   749,  1243,  3151,  2475,  1131,  3002,
    1074,   893,  1297,  1641,  1930,  1931,  2476,   590,   894,  3003,
    3369,  1133,   591,   592,   593,   594,   595,   596,   597,   598,
     121,   652,  1116,  2331,  1659,  1141,  1688,  1677,  1687,  2362,
    3014,  2365,  3015,  3016,  4184,  3589,  4185,  3590,  1186,  2357,
    1660,  3591,  2350,  2351,  2352,  2353,  3580,  1674,  2341,  2347,
     122,   857,  2036,   631,  1410,  1411,  2739,   123,   655,   124,
    1812,  2488,  2489,  3106,  3647,  3107,   125,  1112,  1113,   126,
     840,  3128,  2717,  1983,  1300,  1984,  2011,   843,  1373,   844,
     845,  1387,  1384,  1390,  1386,  3796,  3240,  3241,  2722,  1991,
    1932,  2322,  3233,  4368,  1933,  2001,  2713,  2714,  2618,  5206,
    3803,  3244,  4891,  3911,  5207,  5208,   127,   664,   128,  5130,
     671,  1199,  1775,   129,   130,   131,   132,  1285,  3726,  3727,
    2573,  5377,  5684,  1287,  1288,  1882,  3504,  1906,  2904,  2905,
    1277,  2906,  2907,  2908,  2909,  1585,  1586,  3505,  4110,  4111,
    1896,   148,   149,   150,   151,   762,   763,  3250,  3848,  4438,
    4439,  5194,  5380,  5944,  5945,  2524,  3710,  5651,  5918,  5938,
    5957,  2532,  4787,  5143,  2533,  3713,  5336,  2522,  3709,  5131,
     133,  1248,  1244,   706,  1844,  1838,  1840,  2509,  3124,   134,
     135,   136
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     589,   663,   737,   761,   897,   751,  1182,  1744,  1129,  1178,
    1413,  1134,  1418,  1419,  1420,  2084,  1877,  1286,   897,  1424,
    2032,   757,   642,  2306,  1139,  1427,  2275,   642,   633,  1876,
     767,   642,  2683,  2568,   657,  2549,  1102,  2092,  2554,  1717,
     667,  2401,  1299,    80,  2232,   674,  2141,  3074,   681,   740,
    2691,   685,   744,  1868,  2572,   689,   675,  1717,  1484,  1135,
    1979,  3840,   686,  2400,  1907,  1298,  2552,  2311,  1201,  2222,
    1670,  1673,  1675,  3665,  3503,  3308,  3388,  3389,  2363,  1685,
    2379,  2380,  2359,  1136,  2123,  1137,  3366,  4118,  3841,  3168,
    3880,  3759,   650,  1254,   842,  3736,  2555,  1255,  1256,  3734,
     841,  1363,  3903,  1524,  1483,  1225,  3129,   732,  1232,  3412,
    4403,  3413,  1911,  4132,  3595,  1988,  3748,  3759,  3759,  2006,
    2754,  3071,  2627,  1114,  1642,  2540,  4775,  4309,  1912,   841,
    1443,  2383,  3468,  2305,   739,   741,  3747,  3414,   741,  3549,
    3550,   750,   756,  1835,  4120,  3617,  3832,  2574,  4121,  3089,
    4461,  2408,  2469,  4626,  3626,  3654,  3300,   768,   769,   770,
    1588,  2260,  2261,  2262,  2263,  2264,  2265,  2266,  2268,  2270,
    2271,  2272,  2273,  2274,   771,  4383,  2421,  2422,  2467,  2596,
    4666,  3301,  4870,  3759,  3759,  4384,  2306,  4951,  2703,  4385,
    3850,  1808,  4349,  1338,  3228,  2238,  4441,  4387,  1808,  4389,
    3229,  2723,  4399,  2724,  2725,  5197,  5214,  1908,  2249,  2251,
    3764,  2253,  2254,  4404,  4877,  2538,  4415,  4012,  3230,  1388,
   -2863,  4934,  3649,  2674,  2077,  4489, -1149,  -614,  4097,  5066,
     897, -2863,   897,   897,   897,  2740,  1943, -1149,  -614,   897,
    1117,   897,  4490,  4208,  -419,   690,  3046,   679,  4853,  2740,
    2662,  1672,  3534,  1117,  4710,  -419,  2078,  2506,  1427,  4713,
   -1990,  4475,  3197,  3297,  1579,  1581,  1582,  2045,  4715,  3298,
    4717, -1990,  2079,  4735, -2570,  1625,  5792,  4317,  1710,  4158,
    3594,  4098,  3224,  5121,  1282,  4301,  4911,  5117,  3788,  1666,
    5122, -3171,  2616,  1590,  1591,  3290,  2305,   625,  2740,   645,
    1745,   733, -3171,  2740,  3892, -2571,   731,  4495,  4495, -3172,
     693,  4495,  2740,  2080,  2740,  2740,   669,  2740,  4495,  4132,
   -3172,  3047,  1283,   665,  4495,  4536,  1807,  2740,  4911,  1532,
    1590,  1591,  3048,  1564,  4943,  3795, -1990,  1267,  4307,  3049,
     760,  2081, -2371,  4318,  4911,    39,   602,  4911,  4911, -3171,
    4960,  2740,  5123,  4962,  4963,  3865,  2619,  3774,   734,  4768,
    4614,  2239,  2063,  2064,  4476,  1592,  4112, -3172,  3050,  1842,
    3768,  2074,   688,  2940,  4009,  4010,  4598,  2077,  1317,  1325,
    2704,  1593,  4020,  4489,  4021,  1262,  4023,  4016,   638,  1990,
    1592,  1590,  1591,  1666, -1990,  2740,   722,  4668,  1117, -2371,
    4490,  1746,  1592,  2131,  4097,  2134,  1593,  1612,  3345,  2078,
    1594,  2736,  4178,   629,  1568,  2005,  1595,  3466,  1593,  1666,
    4033,  2148,  2149, -2863,  2152,  2079,  4301,   766,  4319,  3051,
    4481,  3063,  2158,  2159,  3802,  1594,  2163,  5170,  1590,  1591,
    2082,  1595,  4780,   661,   662,  2442,  2914,  1594,  2240,  5030,
    1596, -3251,   848,  1595,  5180, -3234,  4137,  4098,  5082,  4653,
    3052,   764,  4654,  1592,  2067,  1597,  2080,  1598, -3238,  2737,
    4405,  2297,  5677, -3237,   897,  1596, -3235,  1284, -3236,  1593,
    2763,   797,   839,   800,   801,   802,   803,  1596,   805,   806,
    3231,  3625,   808,   809,  2081, -3241, -2371,  1829, -1422,  3789,
    1613,  3784,  3785, -2372,  5365,  5739,  3152, -3171,  1594, -2371,
    1592,   839, -1437,  3714,  1595,  2902,  2973,  2974,  2975,  2976,
    1662,  3594,  3811,  5048,  5049, -3172,  1593,  1195,  3893,   157,
     158,  4475,  4491,  2915,  5790,  1701,  5563,  5794,   600,  4366,
    1078,  1771,  2716,  1212,  5746,  4491, -2194,  2241,  1596,  5827,
    4492,  4328,  2547,  4079, -2703,  1594,  1155,   643,  5137, -2371,
   -2372,  1595,  4599,  1597,  3997,  1598, -2371,  3886,  3887,  1155,
    1209,   665,   734,   626, -2194,  2514,  3998, -2371,  2934,  3179,
    1714,  4080,  4481,  5294,  1484,  2935,  1599,  1740,  4170,  4171,
    4172,  4173,  4951,  2082,   790,  1596,  4278,  1666,   782,  2125,
    1484,   756,  2548,  4014,  4329,  1770,  2329,  4520,  4019,  4521,
    4373,  5191,   756,   629,  4024,  2507,  3814,   813,   750,  2774,
    3127, -2722,  2558,  4144,  1872,  5814,  1326,  2358,  1955,   791,
    2090,  5222,  2916,  2691,  4476,  1666,   734,  1929,  4567,  1851,
    1099,  1852,  1853,  1854,  1855,  1856,  1483,   750, -2723,  1132,
    5128,  4314,  2553,  3910,  1982,  1292,  1876, -2372,   603,  1663,
    3770,  4347,  4481,   750,  4343,  3577,  4944,  1362,   734,  1830,
   -2372,  1579,  1581,  2598,  3131,  1207, -3255,  1447,  2320,   750,
    1213,  5525,  1214,  2068,  1599,  1367,  1368,  5899, -2724,   782,
    4491,  1117,   782,  1235,  1702,  1236,  2337,  1666,  3770,  3346,
    3816,  2291,  5724,   849,   897,  1100,  3108,  1252,  4492,  2556,
    5848,  1356,  1357,  1358,  1155,  4279,  1929,  2680, -2250,  1210,
   -2372,  2980,  1950,  2377, -2250,  2298,  2979, -2372,  4892,  4893,
    4894,  1599,  1911,  3832,  1988,  5319,  4798,  4799, -2372,  2762,
     750,  5828,  1304,  3164,  1666,  1954,  4781,  3851,  1912,  3769,
    1772,  3390,  2284,  4179,  4485,  5829,  4487,  5655,  1484,  1717,
    2949,  5747,   750,   850,  4507,  5357,  2292,   898,  3300,  1263,
    1328,  1741,  2966,  5307,  1992,  2941,  3503,  5314,  5315,  4911,
    5672,   898,   732,  5367,  1304,  5247,  3759,  1140,  5597,  3594,
    4522,  1707,  1351,  3301,  1353,  4007,  1355,   741,   741,   741,
    1359,  1304,  1667,   750,  2307, -3255,  3228,  4819,   629,  4535,
    4157,  4367,  3229,  5149,  4568,  3790,  5001,  5543,  1315,  5079,
   -3378,  5273,  5564,  2921,  4672,   663, -2736,  2382,  4676,  1533,
    2386,   666,  1318,  1565,   735,  5483,  2402,  2899,  2900,  2617,
     841,   630,  2403, -2570,  3040,  2406,  4099,  2058,  2071,  2409,
    4364,  4151,  2596,   604,   732,  3774,  1417,  2277,  2923,  2924,
     629,  2926,  2927,  1422,  3761,  1425,  1361,  1843,  5176,  1365,
    2665,  3227,  4495,   785, -2571,  3297,  2424,  2425,  2426,   895,
    1432,  3298,  1956,  2746,  2741,  5284,  5788,  1865,  4644,  5290,
    2753,   811,  1961,   895,   691,  4495,  4320,  1389,  2741,  4495,
    3786,  4456,  5598,  5031,  2427,   899,  1667,  4495,  2428, -2863,
    4480,  3334,  3888,  5391,  1569, -1149,  -614,  2165,  4792,  3232,
    5337,  1484,  1961,  4493,   627,  1961, -1990,  1188,  1809,  -266,
    2674,  2083,  1667,  -419,  2182,  1809,  4493,  2190,  5763,  2192,
    3296,   692,  4773,  2196,  2197,  2198,  3212,  2741,  3316, -1990,
    4406,  2204,  2741,  4442,  2321,  4527,  4528,  4529,  5034,   694,
    4532,  2741,  5198,  2741,  2741, -1908,  2741,  2307,  1957,  4100,
    1958,  2420,  4204,  4541,  -114,  -114,  2741,  1298, -2729,  1194,
   -3171,  1742,  4615,  1671,  4016,  1676,  -118,  -118,  5240,  1679,
    1684,  5565,  2242,   898,  4377,   898,   898,   898, -3172,  5456,
    2741,  2738,   898,  1776,   898, -3255,  4911,  1155,  4911,  2617,
    -110,  -110,  5388,  4301,  5390,  5128,  3468,  3468,  3925,  1713,
    3468,  3468,  4099,  2407,  3467,  2741,  3468,  3468,  1565,  5263,
    5264,  1278,  1600,  1601,  1602,  1272,  1587,  1079,  4951, -3251,
    3826,   630, -2371, -3234,  2741,  3496,  1298,  2802,  2903,  2729,
    2805,  4007,  2910,  1409,  2293,  4375, -3238,  1600,  1601,  1602,
    1959, -3237,  4206,  4207, -3235,  3500, -3236, -2703,  2820,  1600,
    1601,  1602,   644,  2368,  5225,  4489,  5830,  2917,  3578,  2834,
    5504,  4493,   793, -3241,  5882,  5297, -2743,  2699,  2950, -2703,
    1117,   629,  4490,  1621,  1622,  1623,  1624,   750,   732,  3132,
    2775,  1776,  3852,   732,  3579,   895,  1427,   895,   895,   895,
    1667,  2959,  3180,  1658,   895,   152,   895,  1728,  3319,   750,
    2617,   750,  3631,  5436,  5437,   750,   750,  5725,  5544,  3324,
    1600,  1601,  1602,  5566, -2722,  2332,  4478,  1960,  4482,  5663,
    4014,   841,  4014,  5748,  5192,  5750,  5751,   767,  1667,  3592,
    4014,  5204,  4967, -2194, -2194,   750, -2722,  4511,  1708,  4478,
    2450, -2723, -3081,  1902,  2960,  3565,  4014,  4347, -1950,  2477,
    4455,   782,  1929,   782,  3877,    39,  4014,  1600,  1601,  1602,
    4523,  2567,  2483, -2723,  1704,  2966,  4531,  1612,  4422,  1762,
    4656,  4657,   810,   732,   732,  4014,  4478,  4478,  4539,  4540,
   -2250, -2724,  4625, -2372,  3759,  2687, -2250,  2464,  1813,   152,
    1667,  3317,  5968,  1847,  2348,  2597,  5008,  2478,  5009,  1824,
    5649,   790,   839, -2724,  1883,  5013,  2492,   157,   158,  5282,
    4383,   732,  2328,  1773,  1938,  2495,   630,   898,  3840,  2521,
    4384,  2479,  2527,  2481,  4385,  3037,  2536,  1722,  1484,  2801,
    2294,  1848,  4399,  1104,  5665,  4790,   791,  1667,  3605,  2679,
    5430,  4789,  4518,  5824,  5825,  3841,  4808,   852,  4819,  2576,
    5834,  1869,  2384,  3843,   768,   769,   770,  5545,  2338,  3584,
    1613,  2983,  1392,  4704,  5276,  2987,  1884,  2839,   630,  1916,
    5438,   771,  5040,  5041,  2800,  1717, -2344,  1645,  1614, -1368,
    1961,  3235,  1651,   732,  3544,  4671,  5873,  4120,  3012,  4675,
    1406,  4121,   750,   732,  3746,  2499,  1849,  1850,   651,  5355,
     741,   732,   897,  3832,   732,  3089,  1876,   783,   841,  2451,
    3741,  1198,  2954,  2955,   732,  1911, -1950,  1755,  2306,  3740,
    2887,   732,  3878,  1973,  4301,  3661,  2598,  5872,  3428,   895,
    4720,  1912,  2592,  2401,  2911,  4738,  2401,  2401,   750,  3213,
    4733,  4734,   750,   732,  2574,  3300,  3503,   897,  3228,  2500,
    1117,  2602,  2575,  3641,  3229,  4665,   157,   158,  3600,  3601,
    3574,  5350,  4491,  5004, -1036,  2708, -1036,  2960,   750,  1756,
    3301,   750,  1769,  5325,   661,   662,  4983,   732,    39,  4489,
    4492,  2706,  2707,  1401,  3318,  5005,  1155,   659,  4398,  3586,
    4903,  2040,  1749,  1908,  4500,  5596,  4490,  5163,  5874,  5165,
    3554,  5422,  5168,  5556,  2680,  4593,   897,   897,  5172,  5173,
    3236,  3854,  4481, -3081,  3303,  4904,   732,   154,  1985,  1985,
    3332,   668,  4301,  4909,  3879,  1102,   661,   662,  2305,  1729,
    2237,  5753,  4429,  5840,  2596, -2564,  2754,  4495,  5439,  1606,
    3395,  3593,  3662,  5478,  1885,  1886,  3606,   898,  2919,  3214,
    5604,   853,  3297,  1606,  1887,  3396,  3215,  1800,  3298,  5617,
    5356,  3594,   153,  3227,  3216,  2349,  5597,  2276,  1818,  3508,
    3533,  5649,  1961,  1730,  5304,  1731,  3516, -1950,  5428,  1705,
     676,  3397,  1922,  3538,  1105,  3022,  5847,  3024,  4465,  4466,
    4467,  4468,  1934,  3398,  2541,  2592,  3594,  5520,  3029,   630,
    1939,  4519,  3509,   839,   707,  3513,  3594,  3594,  5799,  5800,
    3035,   154,  1943,  3399,  3902,  4392,  1407,  3518,  3519,   732,
    1967,  3844,  1967,  3042,  3043,  4832,  2033,  2674,   732,  3031,
    4430,  3629,  3296,  5014,  2243,  1176,  5821,  3217,  1816,   732,
    1955,  4985,  1723,  5020,  2603,  4987,  3896,  3400,   792,  1607,
    2223,   670,  5888,  1443,  1774,  4858,  1883,  1612,  3642,   895,
    2339,  1608,  3723,  1607,  1393,  5132,   750,  2385,  1732,  1222,
    1807,  4393,  1807,  4354,  2340,  1608,  1651,  5505,  3345,  2961,
    5598,  2703,  3234,  2369,  5205,  2371,  2373,  2374,  2375,  5618,
    1986,  1986,   661,   662,  3072,  2381,  5589,  3218,  5590,  5440,
    4494,  4502,  5629,   750,  4506,  2281,   661,   662,  1402,  3073,
    3238,  4510,  5697,  2405,  2602,  5597,  3514,  1733,  1884,  2401,
    2962,  1606,  5133,  3663,   732,  3196,  2922,  1750,  5423,  5424,
     734,   750,   750,  4829,  1268,  4831,  1211,  1609,  4834,   750,
    2333,  3899,  4117,  2471,  4840,  4841,  4739,  5889,  4740,   750,
    1613,  1609,  4501,  3952,  1456,  1457,  1458,  2183,  1888,  2184,
    3501,  4854,  3172,  2360,  1658,  1734,  1155,  5619,  1614,   741,
     732,   741,   741,   741,   741,   732,   750,   732,  3517,  -840,
   -1036,   741,  2510,  5521,  3235,  4741,  4491,  5219,  1701,   793,
     839,  5841,  2515,  2523,  2526,  1308,  3004,  2034,  2404,   741,
    5890,   750,  3401,  3110,  4492,  2410,  3323, -1368,  4757,  3009,
    1155, -1070,  5157,  4742,  3402,  1512,  5156,  2542,  2191,   708,
    1751,  1309,  4198,   732,  1615,  1616,  5425,  2200,  5469,  5598,
    3032,  1607,  3110,  4301,  5560,  1752,  4481,  5360,  2211,  5698,
    5403,   710,  3097,  1608,  3005,  5167,   157,   158,  4503,   661,
     662,   742,  4200,  4493, -3336,  1735,  2592,  5601,  2592,  2587,
    5608,  1269,  4014,  1310,  4905,  3503, -1070,  4758,  3006,   743,
    3008,   782,  2969,  2704,   661,   662,  1736,  3098,   841,   750,
       8,  5468,  5134,  1282,  2093,  2094,  2095,  2096,  3787,  2487,
     897,   745,  2490,  5539,  1956,   732,  1885,  1886, -3336,   782,
    2497,  5426,  2961,  5667,   661,   662,  1887,  2603,  3058,  2990,
    5402,  4912,  2033,  3236,   665,  3403,  2389,  3404,   750,  1609,
    5471,  1283,  3885,  1651,  4863,   746,   750,   750,   750,  2516,
    2517,  2518,   732,   732,  4549,  3894,  5468,    16,  2097,  2098,
    2099, -3311,  1985,  4157,  1427, -1447,  4380,  1702,  4743,   140,
     734,  1619,  1620,  1621,  1622,  1623,  1624,  3085,  5469,  1311,
    2390,  2007,   765,  1889,  1890,  1891,  1892,  1264,  2597,  2370,
    4587,  1433,  3111,  2008,  2376,  4759,  2378,  4766,  4766,  3109,
    1957,  5414,  1958, -1447,  4744,  3139,  3237,  3379,  3140,  2100,
    2101,  3387,  3387,  3387,  5562,   750,  2536,  5334,  1312,  3149,
    5335,  3111,  2601,  4522,  2401,  3570,  3571,   773,  1237,  5601,
    1590,  1591,  2893,  5469,   760,  2354,  5608,   732,  3648,  1929,
    5519,  2626,  2419,  4550,  5942,  2484,  1434,  2323,  2598,  1911,
    3585,  5361,  5472,  2009,    29,  2578,  1265,  5470,   732,  2324,
    5542,  5404,   661,   662,  4864,  1912,  2679,  4174,  4175,   775,
    5471,  4551,  4760,  1351,  2355,  2695,  3302,   732,  2697,  1176,
    2102,  2588,  4183,  2185,  1270,  5164,  2186,  1237,  1717,  3405,
     732,   732,  1959,  4520,  1990,  4521,  1284,  2712,  3731,  5174,
    2579,  2991,  1592,  2034,  2721,  2721,  3573,  2721,  2721,  2966,
    5181,  3112,  5183,  2391,  1435,  1238,  1239,    36,  1593,  2009,
    5761,  3897,   750,  3797,  3798,  5471,   732,  3799,  3800,  3801,
    1888,  1293,   732,  3238,  1986,    39,  1226,  1929,  2035,  2749,
    3112,  2680,  2580,   786,  4156,  3227,  3303,  1594,  1717,  2757,
     813,  2519,  2520,  1595,  2103,  3527,  4889,  2480, -1447,  1917,
    2286,  5417,  3916,  3917,  3918,  3919,   798,   683,  2033,  1960,
    4552,  1590,  1591,  1484,  1238,  1239,  3308,  3308,  5346,  4395,
     897,  5248,  5472,  2578,  1961,   898,  2589,  1596,  4527,  4528,
    4529,  5943,  4532,  3239,  2287,  1436,  3406,  4493,   897,  1904,
    2256,  5169,  1597,  3099,  1598,  5114,  1936,  1610,  1266,  3370,
    2077,  1271,  5832,  1870,  4458,   696,  3341,  4125,  5121,  2307,
    4129,  1610,  3376,   897,  2796,  5122,  5515,  1227,  2579,  2356,
     898,   897,   897,   897,  4982,  5946,  2622,  5472,  5516,  2010,
    2936,  4549,  2078,  1592,  3407,   684,  2104,  5637,  2402,  3296,
    3100,  2402,  2402,  3602,  -841,  3554,  1714,  3371,  2079,  1593,
    3350,  1905,  1871,  2581,  5601,  5608,   665,  3408,  2602,  2288,
    2580,  2060,  3320,  1240,  3415,  2582,  2696,  4728,   841,  3751,
     839,  3372,  1937,  3374,  3420,  4919,  4396,  5123,  1594,   898,
     898,  2602,  3351,   697,  1595,  2276,   732,   895,  1294,  2080,
    1872,   606,   732,  2720,  2720,  2325,  2720,  2720,  4935,   787,
    2257,  5046,  4938,  3101,  1427,  2105,  1295,   855,  2888,  3379,
    4945,  5947,  2258,  1599,  4729,  2734,  2060,  2081,  1596,  3607,
    4550,  1409,  1510,  2073,  4109,  1889,  1612,  1891,  2060,  2034,
    2550,  3454,   895,  1597,   798,  1598,  4617,  3594,  2060,  3352,
    2289,  1718,  5463,  3072,  5465,  3752, -2344,  3102,  4554,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,   607,  3073,  1217,
    3564,  3004,  3465,  4524,  1961,  5928,  5929,  3353,  2583,  1282,
    2106,  1719,  2107,  3019,  3009,  5506,  3608,  2108,  2130,  1610,
    2060,  2581,  4478,  1298,  4730,  3023,  2952, -3357,  2259,  4014,
    2133,   895,   895,  2582,  3064,   750,   750,   732,  5807,  4014,
    2151,  3594,  2592,  4523,  4392,  1313,   750,  1283,  4531,  3005,
    2721,  2721,  2721,  2721,  2977,  2978,  2082,  1658,  4525,  1613,
    3526,   750,  3093,  3094, -3336,  2592,  5808,  1926,  1927,  4683,
    4525,  5917,  2602,  3006,  4684,  3008,  1612,  1614,  4685,  2584,
    5641,  2109,  2162,   608,  5313,  3001,  1218,  4552,  4766,  5376,
    5338,  2603,  4669,  5339,  1599,  3018,  5930,  3145,   804,   741,
    4393,  1966,  1129,  3145,  -620,  1134,  3354,  3020, -3336,  1590,
    1591,   741,   896,  2667,  2603,  3025,   918,  4201,  1139,  5641,
    5809,  4483,  5473,  3072,  2110,  2867,   896,  4488,  1985,  5614,
    4505,  2873,  1138,  1615,  1616,  3158,  2583,  4509,  3073,  3095,
    1219,  2894,  -620,  3103,  3104,  3105,  4770,   732,   925,  3173,
    4186,  1985,   609,  1135,   637,  3045,  4191,  5458,  4686,  -622,
     897,  4680,  3138,   732,  2402,   897,  1762,  3061,  3308,  1613,
     750,  3067,   732,  1631,  3480,  5756,  5757,  1136,  3292,  1137,
    1076,  1592,  4187,  1096,  5886,  5886,  3182,  1614,  4398,  3481,
    5340,   782,  3745,  4913,  1871,   732,  1871,  1593,  3034,  2642,
    2643,  4394,  1284,  -622,  1639,   937,  1717,  2584,  -840,  1714,
    4490,  1714,  4351,  2111,  2655,  4816,  2592,  1193,   732,  4770,
    2597,  1342,  3010,  1104,  2112,  4350,  1594,  1427,  1375,  5914,
    2547,  2796,  1595,   949,  -607,  4817,  1645,  1198,  1360,  4188,
    4811,  4994,  4813,  1615,  1616,  1176,  3047,  1206,   741,  2720,
    2720,  2720,  2720,  1872,   732,  1872,  1208,  3048,  3147,  3759,
    4479,  5251,  -718,   741,  3622,  2603,  1596,  4189,  1176,  1224,
    2552,  3157,  -607,  5341,  2550,  1714,  3379,  3162,  3535,  4045,
    2548,  1597,  5819,  1598,  1376,  1215,  4433,  1377,  3046,  -609,
     839,   648,  3322,  4434,  1231,   654,  2668,  -620,  2934,  4152,
    1986,  1098,  1985,   898,   610,  4807,  4661,  4214,  5818,  3189,
    1108,  2657,  2658,  2679,  1378,  1187,  3193,  3194,  3302,  1872,
    4537,  4538,  1379,  1986,  1828,  1233,  4090,  1247,  4689,   611,
    1833,  1834,   970,  -609,  3007,  3223,  3759,  3759,   896,  2427,
     896,   896,   896,  2428,   750,  3554,  3041,   896,  2966,   896,
     732,  4746,  1590,  1591,  3623,  1251,  4748,  1253,   897,  1491,
    1870,   789,  3057,  3047,  3759,  1671,  4190,  1671,  4464,  4559,
    4560,  3069,   807,  3303,  3048,  4380,  3855,   612,  3304,  1508,
    4606,  3049,  3305,  2776,  4308,  3052,  1513,  1514,  1871,  1929,
    1929,  1929,  1929,  1590,  1591,  5812,  5813,  4007,  4575,  1600,
    1601,  1602,  1599,  1714, -2725,  4609,  3308,  3308,  1257,  4611,
    3050,  1259,  3310,  5878,  3312,   895,  2895,  1260,  2077,  1176,
     698,   699,  1261,  4602,  1592,  1211,   750,  -607,   750,   750,
     661,   662,  1590,  1591,  5376,  4638,  5851,  2602,  3629,  1290,
    1593,  4007,   750,   897,  2741,  2721,  5555,  1872, -2731,  2402,
    2078,  5908,  1292,  3141, -2411, -2411,  4011,   700,  4194,  5912,
    4011,  4374,  2741, -2733,  1305,  1592,  3753, -2745,  1316,  1594,
    4007,  3051,   -70,  4007,  1986,  1595,  1322, -2753,  2667,  1323,
   -2754,  1593,  1324,  4793,  1691,  2691,  1590,  1591,   760,  5927,
    1590,  1591,   897,  1332,  2002,  2003,  1807,  1329,  2004,   701,
    1336,   750,  3052,   750,  1592,  5022,  1343,  3754,  4007,  1596,
    1594,  1344,  4007,   613,  1354, -2755,  1595,  1176,  2818, -2758,
    1593,  1370,  2798,  2128,  1597, -2344,  1598,  3653,  1372,  2642,
    2643,   614,  1374,  3797,  3798,  3755,  1380,  3799,  3800,  3801,
    1600,  1601,  1602,  3292,  2655,  2837,  1776,  4469,  4470,  1594,
    1596,  2843,  2844,  2743,  1383,  1595,  2787,  4688,  1592,  4357,
    4358,  1385,  1592,  4359,  4360,  1597,  1382,  1598,  1391,  4361,
    4362,  1394,   615,   898,  1593,   616,  2854,  1776,  1593,   157,
     158,  2592,   896,  2860,  1776,  4342,  2864,  1776,  4395,  1596,
    1395,   898,  2865,  1776,  1396,  2321,  2321,  2321,  2321,  2866,
    1776,  1397,   617,  1594,  1597,  1399,  1598,  1594,  1437,  1595,
     618,  2872,  1776,  1595,  1405,  3377,   898,  3478,  1298,  1298,
    1298,  1298,  5971,  1428,   898,   898,   898,  4876,  4847,  5972,
    2603,  1438,  1590,  1591,  3756,  4651,  1692,  4124,  1444,  3198,
    3001,  2657,  2658,  1596,  2720,  1599,  1503,  1596,  4650,  1618,
    1619,  1620,  1621,  1622,  1623,  1624,  1445,  3521,  1597,  1446,
    1598,  2668,  1597,   901,  1598,  3330,  3331,  1985,  1451,  4899,
    4652,  4902,  5376,  2104,  1245,  1246,   702,  1249,  1452,  1250,
    3382,  3383,  3633,  3634,   732,   895,  1599,  4249,  1453,  3558,
    4918,  3782,  3783,   703,  3561,  4396,  1693,   750,   750,  2721,
    4923,  1550,   918,   895,  1592,  1694,  4061,  2844,  1454,   750,
    1298,  1455,  4928,  4064,  1776,  4071,  4072,  1459,   704,  1461,
    1593,  4078,  1776,  4082,  4083,  1599,  1462,  3373,   895,  4946,
    1463,   923,  3164,  1464,   925,  1626,   895,   895,   895,  4160,
    4161,  1427,  2105,  1132,  3717,  4166,  4167,  1695,  1465,  1594,
     929,   930,  1466,  4662,    80,  1595,  1467,   705,  4436,  4437,
    1619,  1620,  1621,  1622,  1623,  1624,  1468,  5591,  1469,  5592,
    4621,  1776,  1470,  5575,  2276,  1671,  1471,  3010,  1627,  1599,
    1612,  3711,  2223,  1599,  1176,  5032,  5033,  4881,  4882,  1596,
    1472,   937,  1556,  4883,  4884,  4885,  4886,  1590,  1591,  2077,
    4958,  4961,  4323,  1717,  1597,  2691,  1598,  2106,  1473,  2107,
     943,  1476,   896,  1486,  2108,  1487,  1612,  1488,   948,   949,
    4975,  1776,  4992,  4993,  3791,  5002,  1776,  4820,  1489,  3199,
    1492,  2078,  5016,  5017,  4641,  1493,  2812,  2214,  2215,  1986,
    4350,  5056,  5057,  5060,  4810,  5215,  5216,  3753,  1600,  1601,
    1602,  1494,   157,   158,  5217,  5216,  4812,  1696,  1495,  4658,
    4659,   732,   732,  2667,  1496,  2777,  4156,   741, -1791,  1592,
    5220,  5221,  4042,  1613,  3891,  3200,   732,  4907,  2109,  1497,
     750,  1140,  1697,  3546,  1498,  1593,  3387,  1499,  3754,  3007,
    1500,  1614,  5295,  5296,  5299,  5296,  3897,  4920,  2720,  5381,
    5382,  1628,  5398,  5331,  1501,  1502,  4925,  1504,   967,  1613,
     750,   750,  4927,  1505,  1594,  3302,  3755,   969,   970,   971,
    1595,  2110,  4939,   898,  1506,  1599,  1507,  1614,   898,  5435,
    4167,  4947,  4948,  5447,  5296,  5303,  5615,  5616,  5688,  5689,
    3775,  3776,  3777,  3778,  1509,  3780,  3781,  1615,  1616,  5699,
    5700,  5718,  4167,  1629,  1596,  1515,  3201,   897,  5719,  4167,
     750,  5723,  3783,  5772,  5017,  1929,  2592,  5833,  5296,  1597,
    1630,  1598,  5012,  5835,  5296,  1516,  3847,  5836,  5296,  5854,
    5855,  5863,  5864,  1615,  1616,  5870,  5296,  5871,  5296,  1517,
    5052,  1518,  5484,  3863,  3864,  1240,  3866,  1519,  3868,  3869,
    3870,  3871,  3872,  3873,  3874,  1520,  3876,  5035,  1632,  3881,
    2111,  1521,  3116,  3884,  1522,  3756,  1525,  4922,  3202,  5485,
    1526,  2112,  1590,  1591,  4922,  1634,  2401,  5576,  5879,  5296,
    1527,  5255,  5896,  5017,  5577,   895,  3203,  3204,  1528,  5256,
     895,  3205,  3206,  3207,  5909,  5296,  2668,  1529,  5243,  5578,
    5351,  1530,  1985,  5926,  4696,  5378,  5959,  5960,  2712, -2587,
    3667,  3668,  1531,  1813,   750,   750,   750,   750,   157,   158,
     732,  4968,  5372,  1534, -2344,  3715,  1535,  1536,  1537,  1538,
    1698,  1539,  1540,  1541,  1542,  1543,  1544,  1545, -1070,  5000,
    1599,  1600,  1601,  1602,  1592,  1546,  1547,  1548,  1549,  1551,
    1552,  1553,  1554,  2669,  1555,   897,   897,  2789,  2790,  3208,
    1593,  4115,  1557,  1558,  1559,  2936,  1560,  5025,  1561,  1562,
    1563,   898,  5262,  4547,  1636,  1566,   661,   662,  1567,  1570,
    4650,  5486,  1600,  1601,  1602,  5487,  1571,  1572,  5178,  1594,
    1573,  1574,  1575,  1638,  1576,  1595,  1577,  1637,  2791,  2792,
    1633,  1653,  4652,  1654,  1655,  1699,  5029,  3209,  5468,  4901,
    1656,  1661, -2615,  1700, -2586,  1689,  4566,  1686, -2612,  1176,
   -2610,  1600,  1601,  1602, -2614, -2609, -2613, -2607,  5579,  1596,
    1590,  1591,  5552,  1690, -2611,  3046,  1706,  1709,  2819,  1714,
    1724,  5580,  1725,  1726,  1597,  1727,  1598,  2321,  2321,  1747,
    1748,  1753,  1764,  1776,  4091,  1779,   898,  5186,  2670,  1814,
    5581,  1820,   137,  1822,  1831,  1832,  1836,  1590,  1591,  1837,
    1298,  1298,  1839,  1841,  1986,  1600,  1601,  1602,  1845,  1600,
    1601,  1602,  1901,   895,  1860,  5469,  1861,  1863,   734,  1897,
    1903,  2880,  2881,  1908,  1914,  2891,  2892,  1920,  1923,  1918,
    1924,  1928,  1592,  4622,  1940,   898,  1951,  1944,  4142,  5470,
    3047,  1974,  3526,  1968,  1976,  1978,  1980,  1981,  1593,  3924,
    1129,  3048,   750,  1134,  1989,  2223,  1996,  1995,  3049,  1998,
    1999,  2000,  2021,  2039,  2030,  2041,  1139,  5488,  4820,  1592,
    2482,  2042,  2043,   750,   750,   750,   750,  1594,  2046,  5559,
    2047,  4350,  2049,  1595,  2050,  1593,  2052,  3050,  2966,  3158,
    4181,  4182,  2059,  2060,  2069,  1599,  2076,  2087,   895,  2091,
    5038,  1135,  2116,  4344,  2127,  2128,  2129,  5471,  2667,  2138,
    2142,  2146,  5648,  1176,  1594,  2147,  2199,  1596,  2167,  2205,
    1595,  2209,  2219,  5257,    39,  1136,  5258,  1137,  5582,  2230,
    2252,  4312,  1597,  2234,  1598,  5409,  2255,  4356,  2282,  2283,
    2309,  4218,  2308,  4815,   138,  4225,  2310,   895,  3051,  5412,
   -3055,  1600,  1601,  1602,  1596, -2344,  2315,  2318,  2319,  2327,
    2334,  2330,  2364,  2366,  2367,   750,  2387,  3510,  3511,  1597,
    2411,  1598,  2412,   732,  2414,  2416,  2413,   732,  2417,  3052,
    5678,  4847,  1590,  1591,  2418,  2439,  2440,  2443,  2444,  2445,
    4765, -3373,  2453,  2446,  3488,  2454,  2458,  2459,  2462,  2460,
    5679,  4280,  2461,  2473,  4302,  2463,  5674,  5675,  2465,  2466,
     896,  2592,  2472,  1427,  1590,  1591,  2493,   741,  2504,  5472,
    2511,  2508,  2537,  1590,  1591,  3157,  4326,  5448,  2546,  1870,
    2559,  5451,  2565,  2566,  2577,  1590,  1591,  2600,  2401,  2401,
    4340,  4339,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
   -2598,  2624,  2615,  1599,  1592,   896,  2628,  4833,  2631,  2632,
    5557,  5558,  2623,  2629,   139,  2681,  2664,  2684,  2685,  2693,
    1593,  4825,  1872,  2699,  2702,  2715,  2709,  2735,  1617,  1618,
    1619,  1620,  1621,  1622,  1623,  1624,  1592,  1590,  1591,  4462,
    1599,  2668,  2747,  2748,  2750,  1592,  2765,  1985,  2767,  1594,
    2768,  2779,  1593,  2770,  2780,  1595,  2781,  1592,  2784,  2796,
    2786,  1593,  2785,  4427,   896,   896,  1600,  1601,  1602,  2799,
    2890,  2803,  2806,  1593,  2816,  2817,  2821,  3533,  2829,  1590,
    1591,  1594,  4039,  4040,  2913,  2931,  2830,  1595,  2831,  1596,
    1594,  2835,   140,  2855,  5775,  4302,  1595,  2858,  2669,  2859,
    2868,   897,  1594,  2878,  1597,  2882,  1598,  2883,  1595,  1592,
    2885,  2889,  1590,  1591, -1584, -3373,  2918,  2925,  1624,  4895,
    2933,  1596,  4251, -1761,  4901,  1593,  4255,  2940,  2947,  5595,
    1596,  1532,  2953,  1564,  1568,  5490,  1597,  2957,  1598,  2967,
     141,  2968,  1596,  2970,  5634,  1597,  4454,  1598,  2981,  3370,
    2971,  1592,  4457,  2982,  1594,  2988,  2989,  1597,  2992,  1598,
    1595,  2993,  3376,  3026,  1176,  2994,  3028,  1593,  3030,  3017,
     750,  3656,  2995,  2996,  2997,  3036,  3033,  3055,  3056,   897,
    1590,  1591,  5021,  3083,  1592,  3117,  3119,  3527,   142,  3120,
    3122,  3123,  3134,  3135,  1596,  3150,  1594,  3371,  5849,  3161,
    1593,  3160,  1595,  2670,  3166,  3169,  5412, -2206,  3176,  1597,
    3185,  1598,  3188,  3243,  3186,  3187,  3190,  3191,  3192,  1986,
    3246,  3372,  3253,  3374,  5473,  1599,  3249,  3256,  3259,  1594,
    3260,  3261,  3262,  3263,  3264,  1595,  1596,  3283,  3291,  3265,
    1082,  3266,  3267,  3311,  3268,  3269,  3270,  1083,  3271,  3272,
     898,  1597,  1592,  1598,  3289,  5389,  4546,  1599,  3273,  3274,
    3275,  3284,  3276,  1084,  3277,  3779,  1599,  3278,  1593,  1596,
    3279,  3280,  3281,  1085,  1086,  1087,  3282,  3314,  1599,  3317,
    1961,  4230,  3329,  1088,  1597,  3337,  1598,  3333,  4231,  1590,
    1591,  1600,  1601,  1602,  3338,  3335,  3336,  1594,  3339,  3340,
    3347,  5588,  3343,  1595,  4232,  3348,  3349,  5692,  2231,  3355,
    3859,  1427,  3861,  3862,  4233,  4234,  4235,  3380,  3867,  3416,
    3417,  3418,  3429,  3430,  4236, -1799,  3875,  3431,  3440,  3450,
    1599,  3882,  3476,  3491,  3489,  3512,  5664,  1596,   143,  3477,
    3492,  5408,   144,  3522,  3539,  3541,  3523,  3529,  3545,  4605,
    3530,  2402,  1597,  3531,  1598,  2941,  3559,  3562,  3566,  3567,
    3568,  1592,   895,  3569,  3575,  3576,  2349,  2348,  3583,  3588,
    2741,  3599,  1599,  5535,  3603,  2427,  3618,  1593,  3619,  4620,
    3620,  3635,  3639,   145,  3638,  3640,  5534,  5701,  3370,  3645,
    4727,  1717,  3657,  3646,  4340,  4339,  3660,  3658,   898,   898,
    3666,  3376,  1590,  1591,  5080,  1599,  1594,  4142,  5536,  5084,
    5085,  3718,  1595,   146,  1781,  3719,  3724,  3728,  3558,  3729,
    4648, -3373,  3735,  1089,  4655,   750,   750,  3737,  3742,  3738,
    5587,  3749,  3750,  3792,  1590,  1591,  3371,  1090,  3793,  3794,
    3845,  1132,  1658,  3849,  1671,  3857,  1596,  4794,   896,  1600,
    1601,  1602,  3858,  3860,  3889,  3895,  3900,  2694,  3904,  3906,
    3372,  1597,  3374,  1598,  4237,  4054,  4055,  3912,  3921,  2223,
    3913,  3914,  3926,  1599,  1592,  3996,  3999,  4694,  4238,  4000,
    4003,  4007,  4011,  4015,  4018,  4022,  1600,  1601,  1602,  4025,
    1593,  4026,  4027,  4028,  4081,  4094,  4116,  4145,  4133,  4104,
    4092,  4105,  4067,  4068,  4114,  4703,  1592,   157,   158,  4122,
     895,   895,   897,  4146,  4153,  4123,  4128,  4135,  4136,  1594,
    4143,  4147,  1593,  4723,  4724,  1595,   750,   897,  5801,  4836,
    5200,  4149,  4150,  4737,  4159,  4162,  4168,  1091,  4163,  5692,
    4302,   732,  5682,  4753,  4169,  4176,  4177,  5327,  3370,  5656,
    5657,  1594,  5659,  4180,  4197,  5681,  4205,  1595,  4209,  1596,
    4212,  3376,  4215,  4239,  4217,  4777,  4776,  4219,  4220,  4227,
    5673,  4229,  4245,  1092,  1597,  4246,  1598,  5683,  4240,  1140,
     750,  4247,  1599,  4248,  4250,  4254,  4261,  1093,  4267,  3814,
    4310,  1596,  2281,  4315,  4806,  4805,  3371,  4327,  4331,  4332,
    5859,  4335,  4353,  4871,  4365,  4380,  1597,  4388,  1598,  4390,
    4391,  2276,  5302,  4401,  4241,  4402,  1427,  1671,  4410,  4409,
    3372,  4412,  3374,  4411,  4413,  4414,  4821,  4416,  4242,  4417,
    4418,  4419,  4420,  4440,  4432,  4302,  4459,  4460,  4463,  4472,
    4474,  4486,  4508,  4481,  4515,  5396,  4530,  4694,  4533,  4543,
    4544,  1590,  1591,  4555,  5883,  4830,  4561,  4843,  4558,  2223,
    4570,  4562,  4569,  4607,   732,  4851,  4099,  2894,  4844,  4616,
    4694,  1600,  1601,  1602, -1916,  4623,  4852,  4694,  4625,  4627,
    5682,  4628,  4302,  4855,  4631,  4856,  4857,  4073,  4074,   741,
    5633,  4632,  2291,  5681,  4875,  1599,  5953,  5769,  4635,  5770,
    5771,  4673,  4640,  1600,  1601,  1602,  4674,  4700,  4695,  5859,
    5963,  4701,  1600,  1601,  1602,  5683,  5953,  5778,   896,  5306,
    2782,  4696,  5963,  1592,  1600,  1601,  1602,  1599,  4126,  4127,
    4705,  4752,  4763,  4784,  4786,  4707,   896,  4708,  4756,  1593,
    4751,  2783,  4754,  4783,  4755,  4770,  4788,   750, -2110,  4822,
    4809,  4823,  4810,   750,  4814,  1590,  1591,  4827,  4826,  4835,
    3375,   896,  4837,   897,  4838,  4839,  4879,  4869,  1594,   896,
     896,   896,  4872,  4866,  1595,  4873,  1600,  1601,  1602,  4880,
    3046,  4887,  4933,  2402,  2402,  4888,  4890,  5532,  4898,  4916,
    4536,  4926,  4941,  2793,  4929,  4913,  4953,  4969,  4976,  1782,
    4961,  4956,  3046,  4957,  4977,  4978,  4984,  4986,  1596,  4958,
    4959,  5738,  3387,  1783,  4964,  1784,  4965,  4989,  1600,  1601,
    1602,  4998,  5003,  1597,  4999,  1598,  5061,  1592,  5026,  5010,
    5018, -1886,   897, -1891,  5045,  2794,  5047,  5053,  5058,  5062,
    5054,  5068,  5071,  1593,  5077,  1785,  4370,  4371,  4372,  5070,
    5076,  1600,  1601,  1602,  5078,  3047,  4901,  5119,  5136,  5146,
    1786,   897,  5147,  4849,   898,  5152,  3048,  5153,  2795,  5151,
    1871,  5171,  1594,  3049,  5154,  5175,  5184,  3047,  1595,  3843,
    5179,  5187,  5189,  5209,  5210,  5213,  5223,  5212,  3048,  4142,
    5224,  5236,  3933,  1787,  5237,  3049,  5239,  2223,  5241,  5238,
    5784,  5245,  3050,  5246,  5249,  5253,  4447,  4450,  5268,  4453,
    5265,  1788,  1596,  5277,  5279,  5042,  5281,  5285,  4576,  1600,
    1601,  1602,  5286,  5292,  3050,  3377,  5298,  1597,  5309,  1598,
    4577,  5311, -2727,  5293, -2726,  4757,  2797,  4210, -2730, -2734,
    5326,  5328,   898, -2735,  1599,  5324,  5344,  5323, -2737,  5352,
    4578,  5354,  5364,  4225,  1671, -2739,  5330, -2740, -2741, -2746,
   -2747, -2748,   750,  3051,  5065,  5065, -2752,  5067,   897,  2278,
    5379,  5935,  5331,  5317,  5384,  5321,   895,  1590,  1591,  5373,
    5386,  5394,  5397,  5069,  4579,  3051,  5401,  1590,  1591,  5413,
    5414,  1789,  5406,  5415,  3052,  5445,  5407,  5417,  1790,  4427,
    5419,  5450,  5432,   897,  5434,  5461,  5444,  5446,  1791,  5452,
    3676,  5453,  5500,  4302,  5508,  5510,  3052,  5511,  5512,  5193,
     732,  1792,  5083,  5513,  5523,  5524,  1138,  5118,  1600,  1601,
    1602,  5553,   897,  5561,  5574,  5538,  5570,  3373,  5530,  5620,
    5586,  5605,  5142,  4211,  5160,  2807,  5145,  5162,  1599,  1592,
    5571,  5622,  1793,  5624,   895,  1794,  5625,  5626,  5628,  1592,
    5630,  5631,  5632,  5644,  5645,  1593,  5646,  5647,   896,  4580,
    1795,  5653,  5658,   896,  5660,  1593,  5661,  5668,  5670,  5696,
    5685,  5706,  5676,  5709,  1590,  1591,  4302,  4694,  4302,  5702,
     750,  4302,  5161,  4694,  1594,  5686,  5687,  4302,  4302,  5714,
    1595,  4694,  5717,  5720,  1594,  1590,  1591,  5731,  5741,  5760,
    1595,  4302,  4694,  5742,  4694,  5743,  5759,  5768,  5749,  3811,
    5185,  3816,  5773,  5780,  5843,  5781,  -842,  1590,  1591,  4378,
    5803,  5188,  4600,  5866,  1596,  5196,  5788,  5783,  5837,  4581,
    5826,  1600,  1601,  1602,  1596,  5838,  5845,  5844,  5867,  1597,
    5875,  1598,  5868,  5869,  4613,  5895,  1592,  2804,  5211,  1597,
    5876,  1598,  5877,  5897,  3377,  5900,  5910,  5911,  5913,  5233,
    5920,  5967,  1593,  1600,  1601,  1602,  5923,  1592,  5931,  5932,
    5934,  1590,  1591,  5925,  5936,  -842,  5939,  5940,  5966,   712,
    2809,  5954,  3572,  1593,  2456,  1429,  1815,  5586,  4226,  1592,
    3883,  1594,  5202,  5203,  5201,  2535,  5234,  1595,  3072,  3148,
    5142,  3708,  5594,  4363,  5329,  1593,  5652,  5766,  2701,  5081,
    5893,  5144,  1594,  3073,  1743,  5499,  1919,  5235,  1595,  5218,
    5392,  5507,  5399,  5554,  4950,  3092,  2300,  4244,  5509,  4002,
    3908,  1596,  4896,  3258,  1594,  1335,  4548,  2759,  2758,  1965,
    1595,  2760,  4582,  1592,  4583,  2761,  1597,  2614,  1598,  5611,
    2698,  5322,  1596,  5454,  4423,  3830,   896,  4794,  4634,  1593,
    1599,  4639,  5271,  5267,  5177,   898,  3373,  1597,  2945,  1598,
    1599,  5011,  5420,  4605,  1596,  5787,  4379,  5853,  5272,  5922,
     898,  5904,   711,  -842,  5924,  5716,  4287,  4646,  1594,  1597,
    5024,  1598,  3561,  4421,  1595,  3126,  4714,  4716,  4718,  4323,
    5498,  4694,  4721,  4722,  5865,  4426,  4862,  4726,  5075,  5065,
    4732,  5887,  5758,  4736,  3377,   732,  5762,  5666,  5301,  4504,
    4747,  4588,  1808,  4542,   713,  5359,  5764,  5308,  1596,   712,
    5785,  4302,  4302,  4908,  4914,   892,  4096,  1073,  4612,  4610,
    4608,   896,   719,  1597,  5907,  1598,   720,  5880, -1100,   892,
    5881,  5457,  5815, -1990,  4427,  1130,  1185,  5740,  5737,  5449,
    -842,  1073,  4924,  5964,  4424,  4861,  1935,  1599,  2505,  5529,
    3652,  3651,  1590,  1591,  5142,  1073,  1757,   895,  5782,  3252,
    1600,  1601,  1602,  1590,  1591,  5358,  2666,  2956,  1599,  3068,
     896, -1990,   895,  3923, -1990,  4584,  4585,  2813,  4473,  4352,
    3344,  2281, -1990,  1900, -1990,  5537,  4113,  5159,  1874,  3178,
    1599, -1990,  4302,  5777,  2563, -1990,  4302,  3732,  4630,  3453,
    3451,  2217,  2223,  4138,  2126, -1990,  3373,  2066, -1990,  4694,
    4629,  3630, -1990,  5502, -1990,  2279,  3624,  4202,  4618, -1990,
    3614,  5036,  5722,  5593,  1592,  5905, -1990,  5055,  5906, -1990,
    4380,  2075,  4333,  5349, -1990,  1592,  5348,   732,  4130,  5695,
    1593,  5363,  5261,  4192,  1599,  5347,  5252,  5283,  4933,  4325,
    5393,  1593,  3163,   721,   713, -1990,  2023,  3309,  -842,  2313,
    1073,  4378,  5019,  4679,  1600,  1601,  1602,  4702, -1990,  1594,
    3342,  3773,  5850, -1990, -2160,  1595,  4682,  1189,  2692,  3038,
    1594,  2814,  1347,  2393,  1352,  5586,  1595,  1181,  5541,  3039,
     714,  3604, -1990,  1184,  1866,   730,   898,  3086,  5300,  2496,
    4477,  5291,  2028,  5514,  5921,  5933,  5481,  5662,  5965,  1596,
    5481,  5969,  1511,  4203,  3059,  4645, -1990,  -842,  3587,  3506,
    1596,   712,  4660,  5065,  1597, -1990,  1598,  1142,  2912,  3013,
    1073,  4586,  1143,  4302,   139,  1597,  5460,  1598,  3582,  3581,
    3072,   892,  2513,   892,   892,   892,  2744, -1990,  5496,  1115,
     892,  4369,   892,  2326,  1652,  3073,  3242,  3563,  5142,   897,
    2020,  3659,  5385,  4952,  3909,   898,  4428, -1990,  4199,  1223,
    4670,  1825,  5037, -1990, -1990,  2276,  3616,   723,   724,  4302,
     725,  5779,  3144,  1073,     0,  5233,     0, -1990,  1073, -1990,
       0,   732, -1990,     0,   898,     0,     0,     0,     0,  5526,
       0,     0,     0,     0,     0,     0,     0,     0,   895,  5546,
    5550,     0,   140,     0,     0,     0,     0,     0,  1073,     0,
       0,     0,  5234,     0,     0,  -842,     0,     0,  1073,     0,
       0,     0,     0,     0,     0,     0,  5387,     0,     0,     0,
       0,     0,     0,  4381,     0,  1599,  5569,     0,     0,     0,
    1590,  1591,     0,     0,  1590,  1591,  1599,     0,     0,  3561,
       0,  3561,     0,     0,     0,  5481,   713,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   895,     0,     0,
    5610,     0,     0,  5481,     0,     0,  1600,  1601,  1602,     0,
       0,     0,     0,     0,     0,     0,  1600,  1601,  1602,  5627,
       0,   898,  -842,  2815,     0,     0,   895,     0,     0,     0,
       0,   750,     0,  2832,     0,     0,     0,  1073,  1073,  1073,
    1073,     0,  1592,     0,     0,     0,  1592,     0,  1073,     0,
       0,     0,     0,     0, -1990,  5654,   898,     0,  1593,     0,
       0,     0,  1593,     0,     0,     0,     0,     0,     0,     0,
    4382,     0,     0,     0,     0,     0,     0,     0,  1590,  1591,
       0,     0,     0,     0,     0,   898,     0,  1594,     0,     0,
       0,  1594,     0,  1595,  3183,  3184,     0,  1595,  2223,     0,
    5694,     0,     0,     0,     0,   892,     0,     0,     0,     0,
    5527,  3195,  4380,  1600,  1601,  1602,     0,  5193,     0,     0,
       0,  3221,  3222,     0,  5802,     0,     0,  1596,     0,     0,
    2840,  1596,     0,   895,  1600,  1601,  1602,     0,     0,     0,
       0,     0,  1597,     0,  1598,  5732,  1597,     0,  1598,     0,
    1592,  2842,     0,     0,     0,   896,  1600,  1601,  1602,     0,
    5481,     0,     0,  5745,   715,     0,  1593,     0,   895,  5065,
       0,  5065,  5065,  2845,     0,     0,     0,     0, -2160,     0,
    5755,  5754,  -166,     0,     0,     0,  3285,  3286,  3287,  3288,
    1590,  1591,     0,     0,     0,  1594,     0,   895,   732,     0,
    5767,  1595,     0,     0,     0,     0,  1073,     0,  1799,     0,
    1600,  1601,  1602,     0,     0,     0,     0,  3322,     0,     0,
       0,  4447,     0,  4450,     0,  4453,   616,  2846,     0,     0,
       0,     0,     0,     0,     0,  1596,  5550,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5569,  5892,     0,
    1597,     0,  1598,   716,     0,  5796,  5797,     0,     0,     0,
     750,     0,  1592,  1599,     0,     0,     0,  1599,     0,     0,
       0,     0,     0,  5903,  5481,     0,     0,     0,  1593,     0,
       0,     0,     0,     0,     0,  5823,  5822,     0,  4952,  5065,
    5065,     0,     0,     0,     0,     0,  5065,     0,     0,     0,
       0,     0,     0,   896,   896,     0,     0,  1594,     0,     0,
       0,     0,     0,  1595,     0,  5846,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4381,     0,     0,     0,     0,
    2223,     0,  1073,  2022,  1073,   892,     0,     0,  5250,     0,
       0,     0,     0,  5860,     0, -1990,  5861,  1596,     0,     0,
    5481,  5481,     0,   750,     0,  5956,     0,     0,     0,  1809,
       0,  5958,  1597,     0,  1598,     0,     0,     0,     0,     0,
       0,  1599,  5970,  5065,     0, -1990, -1990,     0,     0, -1990,
   -1990,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5894,     0,     0,  5481,     0,  5765,     0,     0,
       0,     0,     0,     0,     0,  1073,     0,  1073,     0,   750,
       0,  1600,  1601,  1602,     0,  4225,  4225,     0,     0,     0,
       0,     0,  1600,  1601,  1602,     0,     0,     0,  2847,     0,
       0,     0,  4382,  1073,     0,     0,     0,     0,     0,  2848,
       0,     0,  5919,     0,  1073,  1073,     0,     0,     0,     0,
    1073,     0,     0,     0,  1073,  1073,  1073,     0,     0,     0,
       0,     0,     0,     0,     0,  1073,  1073,     0,     0,     0,
       0,  1073,     0,  1073,  1073,  1073,  1073,  1073,     0,  1073,
       0,     0,     0,  1599,  1138,     0,     0,  2223,     0,     0,
    1073,   750,  1073,     0,     0,  1073,  1073,   750,  1073,  1073,
    1073,  2223,  1073,  1073,  1073,     0,     0,  2223,     0,  1073,
       0,     0,  1073,  2223,     0,     0,     0,     0,     0,     0,
    1073,  1073,     0,  1073,  1073,  1073,     0,     0,  1073,  1073,
    1073,  1073,  1073,  1073,  1073,     0,  1073,  1073,  1073,  1073,
    1073,  1073,     0,  1073,  1073,     0,  1073,  1073,  1073,  1073,
    1073,  1073,  1073,     0,     0,  1073,  1073,  1073,  1073,     0,
    1073,  1073,  1073,     0,  1073,     0,  1073,     0,  1073,  1808,
       0,     0,  1073,  1073,  1073,     0,     0,  1073,  1073,  1073,
    1073,  1073,     0,  1073,     0,     0,     0,     0,     0,     0,
    1073,     0,     0,     0,     0,  1073,     0,     0,     0,     0,
   -1990,     0,  1073,     0,  5418,     0,  1073,  1073,  1073,  1073,
       0,  1073,  1073,     0,     0,  1073,  1073,  1073,  1073,  1073,
    1073,  1073,  1073,  1073,  1073,  1073,  1073,  1073,  1590,  1591,
    1073,     0,     0,     0,     0,     0,     0,     0, -1990,     0,
       0, -1990,   898,     0,     0,     0,     0,     0,     0, -1990,
       0, -1990,     0,     0,     0,     0,     0,     0, -1990,  1590,
    1591,     0, -1990,     0,  1590,  1591,     0,     0,     0,     0,
       0,     0,     0,  1073,     0, -1990,     0,     0,  1073, -1990,
       0, -1990,     0,     0,  1042,     0, -1990,     0,  1073,  1590,
    1591,     0,     0, -1990,     0,     0, -1990,     0,     0,     0,
    1592, -1990,     0,  1590,  1591,     0,     0,     0,  1191,  1600,
    1601,  1602,     0,  1600,  1601,  1602,  1593,  3762,  3763,     0,
    3765,  3767, -1990,     0,     0,     0,  2851,  1590,  1591,     0,
    2852,  1592,     0,     0,  4952, -1990,  1592,     0,     0,     0,
   -1990,     0,     0,     0,     0,  1594,     0,  1593,     0,     0,
       0,  1595,  1593,     0,   895,     0,  1073,     0,     0, -1990,
       0,  1592,     0,     0,     0,     0,     0,     0,     0,   896,
       0,     0,     0,     0,     0,  1592,  1594,  1593,     0,  1073,
       0,  1594,  1595, -1990,     0,  1596,     0,  1595,     0,     0,
       0,  1593, -1990,     0,     0,     0,     0,     0,     0,  1592,
    1597,     0,  1598,     0,     0,     0,  1594,     0,     0,     0,
       0,  3890,  1595,  2474, -1990,  1593,  1596,  1600,  1601,  1602,
    1594,  1596,     0,     0,     0,     0,  1595,  1334,     0,     0,
    3375,  1597,     0,  1598, -1990,     0,  1597,     0,  1598,     0,
       0, -1990,     0,     0,  1594,     0,  1596,   896,     0,     0,
    1595,     0,     0,     0, -1990,     0, -1990,     0,     0, -1990,
    1596,  1597,     0,  1598,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1597,     0,  1598,     0,     0,
       0,     0,     0,     0,  1596,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1398,     0,  1597,
       0,  1598,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1590,
    1591,  1599,     0,     0,     0,     0,     0,  1590,  1591,  1600,
    1601,  1602,     0,     0,     0,     0,     0,  1590,  1591,     0,
       0,     0,     0,     0,     0,     0,  2853,     0,     0,     0,
    1590,  1591,  1599,   892,     0,  1448,     0,  1599,  1590,  1591,
       0,     0,     0,  1590,  1591,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1599,     0,     0,  1475,     0,     0,     0,     0,
       0,  1592,     0,     0,     0,  1490,  1599,     0,   892,  1592,
       0,     0,  1590,  1591,     0,     0,     0,  1593,     0,  1592,
    1590,  1591,     0,     0,     0,  1593,     0,     0,     0,     0,
    1599,     0,  1592,     0,     0,  1593,     0,  1073,     0,     0,
    1592,     0,     0,     0,     0,  1592,  1594,     0,  1593,     0,
       0,  1073,  1595,     0,  1594,     0,  1593,     0,     0,     0,
    1595,  1593,     0,     0,  1594,     0,     0,   892,   892,  1073,
    1595,     0,  1073,     0,     0,     0,     0,  1594,     0,  3375,
    1073,  1073,  5817,  1595,  1592,  1594,  1596,     0,     0,     0,
    1594,  1595,  1592,     0,  1596,     0,  1595,  1584,     0,     0,
    1593,  1597,     0,  1598,  1596,     0,     0,     0,  1593,  1597,
       0,  1598,     0,     0,     0,     0,     0,  1596,     0,  1597,
       0,  1598,     0,     0,     0,  1596,     0,     0,     0,  1594,
    1596,     0,  1597,     0,  1598,  1595,     0,  1594,     0,     0,
    1597,     0,  1598,  1595,     0,  1597,     0,  1598,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1073,  1073,  1073,  1596,
       0,     0,     0,     0,  1590,  1591,     0,  1596,     0,     0,
       0,     0,     0,     0,  1597,     0,  1598,     0,     0,     0,
     896,     0,  1597,     0,  1598,     0,     0,     0,     0,     0,
    4256,  4257,  4258,  4259,  4260,   896,  4262,  4263,  4264,  4265,
    4266,     0,  4268,  4269,  4270,  4271,  4272,  4273,  4274,  4275,
    4276,  4277,  1599,     0,  4281,  4282,  1590,  1591,     0,     0,
    1599,     0,     0,     0,     0,     0,     0,     0,     0,  3375,
    1599,     0,     0,     0,  1073,     0,  1592,     0,     0,     0,
    1590,  1591,     0,  1599,     0,     0,     0,     0,  4052,     0,
       0,  1599,  1593,  1778,     0,  1073,  1599,     0,  1073,  1073,
       0,  1073,  1073,     0,     0,     0,     0,     0,     0,     0,
    1073,     0,  1073,     0,     0,     0,     0,     0,     0,     0,
       0,  1594,     0,     0,     0,     0,     0,  1595,  1592,     0,
       0,     0, -1990,     0,     0,  1599,     0,     0,     0,     0,
    1073,     0,     0,  1599,  1593,     0,  1809,     0,     0,     0,
       0,     0,  1592,     0,     0,  1073,     0,     0,     0,     0,
       0,  1596, -1990, -1990,     0,     0, -1990, -1990,  1593,     0,
    4400,     0,  1073,  1594,     0,  4408,  1597,     0,  1598,  1595,
       0,     0,     0,     0,     0,     0,  1073,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1594,     0,     0,
    3000,  1073,     0,  1595,     0,     0,     0,  1600,  1601,  1602,
       0,     0,     0,  1596,     0,     0,     0,     0,     0,  1948,
       0,  1949,     0,  1073,  2871,     0,     0,     0,  1597,     0,
    1598,     0,     0,     0,     0,     0,     0,  1596,  1600,  1601,
    1602,     0,     0,  1600,  1601,  1602,     0,     0,     0,     0,
       0,     0,  1597,     0,  1598,  2876,     0,     0,     0,     0,
    2879,     0,     0,     0,     0,     0,     0,     0,  1600,  1601,
    1602,   896,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   892,  1600,  1601,  1602,  2886,     0,     0,     0,     0,
       0,     0,  2026,     0,  2026,     0,     0,  1599,     0,  2897,
    1073,     0,     0,     0,     0,     0,  1600,  1601,  1602,  1799,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2051,     0,     0,  3391,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2065,     0,     0,
     896,  2070,     0,  2072,     0,     0,     0,     0,     0,  1599,
       0,     0,  2088,  2089,     0,     0,     0,     0,  2115,     0,
    2118,  2119,  2120,  2121,  2122,     0,  2124,     0,     0,   896,
       0,     0,     0,  1599,     0,     0,     0,  2132,     0,  2135,
       0,     0,  2136,  2137,     0,  2139,  2140,     0,     0,  2143,
    2144,  2145,     0,     0,     0,     0,  2150,     0,     0,  2156,
       0,     0,     0,     0,     0,  1073,     0,  2160,  2161,     0,
    2164,     0,  2166,     0,     0,  2168,  2169,  2170,  2173,  2174,
    2175,  2176,     0,  2177,  2178,  2179,  2180,  2181,     0,     0,
    2188,  2189,     0,     0,  2193,  2194,  2195,     0,     0,     0,
       0,     0,  2201,  2202,  2203,     0,     0,  2206,  2207,  2208,
       0,  2210,     0,  2212,     0,  2213,     0,     0,     0,  2216,
    2156,  2218,     0,     0,  2224,  2225,  2226,  2227,  2228,     0,
    2229,     0,  1073,     0,     0,     0,   896,  2233,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2244,
       0,     0,     0,  2245,  2246,     0,     0,     0,  1600,  1601,
    1602,     0,     0,     0,     0,     0,  1600,  1601,  1602,     0,
       0,   896,     0,     0,     0,  4037,  1600,  1601,  1602,     0,
       0,     0,     0,  4038,     0,     0,     0,     0,     0,  1600,
    1601,  1602,  1073,  4050,     0,     0,     0,  1600,  1601,  1602,
     896,     0,  1600,  1601,  1602,     0,  4070,     0,     0,     0,
       0,   892,     0,     0,  4087,     0,  1590,  1591,     0,  4088,
    2336,     0,     0,     0,     0,  2346,     0,     0,     0,   892,
       0,     0,     0,     0,     0,  2346,  1590,  1591,     0,     0,
       0,  1600,  1601,  1602,     0,     0,     0,     0,     0,  1600,
    1601,  1602,     0,  3368,   892,     0,     0,     0,  4974,     0,
       0,     0,   892,   892,   892,  2808,     0,     0,     0,  1073,
       0,     0,  1073,  4709,     0,     0,     0,     0,     0,     0,
       0,  1073,     0,     0,     0,     0,  4725,     0,  1592,  1073,
       0,  1073,     0,  1073,     0,  1073,  1073,  1073,  1073,  1073,
    1073,     0,  1073,  2423,  1593,     0,     0,     0,  1592,     0,
    1073,     0,  1073,     0,     0,  1073,  1073,  1073,  1073,     0,
       0,  1073,  1073,     0,  1593,  1073,  2455,  1073,     0,  1073,
       0,  1073,     0,  1594,     0,  1073,     0,     0,     0,  1595,
       0,     0,  -867,  1073,     0,  1073,     0,  1073,  1073,  1073,
    1073,  1073,     0,  1594,  1073,  1073,  1073,     0,  1073,  1595,
       0,  1073,     0,     0,     0,  5484,  1590,  1591,     0,     0,
       0,     0,     0,  1596,  1073,  1590,  1591,     0,     0,  1073,
       0,     0,  1073,     0,  1073,  1073,  1073,     0,  1597,  1073,
    1598,     0,  5485,  1596,     0,  1073,     0,     0,     0,     0,
    1073,     0,     0,  1600,  1601,  1602,     0,     0,  1597,     0,
    1598,     0,     0,  1590,  1591,  3000,  1073,     0,     0,  4053,
       0,     0,  1073,     0,     0,  1073,     0,     0,  1073,     0,
       0,     0,     0,  1590,  1591,     0,     0,  1073,  1592,  1073,
       0,   157,   158,     0,  1073,     0,     0,  1592,     0,     0,
       0,     0,     0,     0,  1593,  1600,  1601,  1602,     0,     0,
       0, -1070,     0,  1593,     0,     0,     0,     0,     0,     0,
       0,  2810,  1590,  1591,     0,     0,     0,     0,     0,  1600,
    1601,  1602,     0,  1594,     0,  1592,  1073,     0,     0,  1595,
       0,     0,  1594,  1590,  1591,  2811,     0,     0,  1595,   661,
     662,  1593,     0,     0,  5486,  1592,     0,     0,  5487,  1599,
       0,     0,     0,     0,     0,  1073,     0,     0,     0,  1130,
       0,  1593,     0,  1596,     0,  1590,  1591,     0,     0,  1599,
    1594,  5468,  1596,     0,     0,     0,  1595,     0,  1597,     0,
    1598,     0,     0,     0,  1592,     0,     0,  1597,     0,  1598,
    1594,     0,     0,     0,     0,     0,  1595,     0,     0,     0,
    1593,   892,     0,  1590,  1591,  1592,   892,     0,     0,     0,
    1596,     0,     0,     0,  2728,     0,     0,     0,     0,     0,
       0,  1593,     0,     0,     0,  1597,     0,  1598,  2745,  1594,
    1596,     0,     0,     0,     0,  1595,     0,  1592,     0,     0,
       0,     0,     0,     0,     0,  1597,  1191,  1598,  5469,  2764,
    1594,     0,     0,  1593,     0,     0,  1595,  2771,  2772,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1596,
       0,     0,  5470,     0,     0,  1592,     0,     0,     0,  3706,
       0,     0,  1594,     0,  1597,     0,  1598,     0,  1595,     0,
    1596,  1593,     0,     0,     0,     0,     0,     0,     0,  1599,
    5488,     0,  1073,     0,     0,  1597,     0,  1598,  1599,     0,
       0,     0,     0,     0,     0,     0,  1073,     0,     0,     0,
    1594,     0,  1596,     0,     0,     0,  1595,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1597,  3760,  1598,
    5471,     0,     0,  2823,  2825,  2827,  1599,     0,     0,     0,
       0,  1590,  1591,     0,     0,  1590,  1591,     0,     0,     0,
    1596,     0,     0,     0,  3760,  3760,  1599,     0,     0,     0,
       0,     0,     0,     0,     0,  1597,     0,  1598,     0,     0,
    3804,     0,  3805,  3806,     0,     0,     0,     0,  3706,     0,
       0,     0,     0,     0,     0,     0,     0,   896,     0,   892,
    1073,     0,     0,     0,     0,  1599,  3807,     0,  3808,  1590,
    1591,     0,     0,     0,  3809,     0,     0,     0,     0,     0,
    5489,     0,     0,  1592,     0,     0,  1599,  1592,     0,     0,
    3760,  3760,     0,     0,     0,     0,  1908,     0,     0,  1593,
       0,     0,  2920,  1593,     0,     0,     0,     0,  3810,  1073,
    1590,  1591,  5472,     0,     0, -1181,     0,  2928,  1599,  2929,
       0,     0,     0,     0,     0,     0, -1181,     0,  1594,     0,
       0,  1073,  1594,     0,  1595,     0,     0,     0,  1595,     0,
       0,  1592,     0,     0,   892,   157,   158,  2951,     0,     0,
    3669,     0,     0,     0,     0,     0,  1599,  1593,     0,     0,
       0,     0,  2958,     0,     0,     0,     0,     0,  1596,     0,
       0,     0,  1596,     0,     0,     0,     0,     0,  3811,  2346,
       0,     0,  1592,  1597,  1073,  1598,  1594,  1597,     0,  1598,
       0,     0,  1595,   892,  1073,     0,     0,  1073,  1593,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3011,     0,
       0,     0,     0,  3812,     0,     0,     0,  3813,     0,     0,
    1073,  1073,     0,     0,     0,  3671,  1596,  1594,  3814,     0,
    3021,     0,     0,  1595,     0,     0,     0,     0,     0,     0,
       0,  1597,     0,  1598,     0,  1073,     0,  1073,     0,  1073,
    3815,  1073,     0,     0,     0,  1600,  1601,  1602,     0,     0,
    1590,  1591,     0,  1590,  1591,     0,     0,  1596,     0,     0,
       0,  2833,     0,  1073,     0,  1600,  1601,  1602,  5490,     0,
       0,     0,  1597,     0,  1598,     0,  3672,  3673,  3674,     0,
       0,  2836,     0,     0,  1073,  1073,     0,     0,     0,     0,
       0,     0,     0,     0,  1599,     0,     0,  3080,  1599,     0,
       0,  3675,     0,     0,  1073,     0,     0,  1073,     0,     0,
    1073,     0,     0,     0,     0,  1073,     0,     0,     0,     0,
       0,     0,  1592,     0,     0,  1592,  3676,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1593,     0,
       0,  1593,     0,     0,     0,     0,  3816,     0,     0,     0,
       0,     0,  1599,     0,  3677,     0,  3678,  5473,     0,     0,
       0,     0,     0,  1073,  1073,     0,     0,  1594,  1590,  1591,
    1594,     0,     0,  1595,     0,  3679,  1595,     0,  1073,     0,
       0,     0,  3817,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1599,  3680,  1600,  1601,  1602,     0,     0,
       0,  3681,  3170,     0,  1600,  1601,  1602,  1596,     0,     0,
    1596,  2838,     0,     0,     0,     0,  3682,     0,     0,     0,
    2841,     0,  1597,     0,  1598,  1597,  3683,  1598,     0,     0,
    3818,  3819,  1073,     0,     0,     0,     0,  3820,     0,     0,
    1592,  3684,  1600,  1601,  1602,     0,  1590,  1591,     0,  3821,
       0,     0,     0,     0,     0,     0,  1593,     0,  2849,     0,
       0,     0,  1600,  1601,  1602,     0,     0,     0,  3822,  3255,
       0,     0,     0,     0,     0,     0,     0,     0,  2850,     0,
       0,     0,     0,     0,     0,  1594,     0,     0,     0,     0,
       0,  1595,     0,     0,  3823,  3706,     0,     0,  3685,     0,
    3706,  1600,  1601,  1602,     0,     0,     0,     0,  3686,     0,
       0,     0,     0,     0,     0,     0,     0,  2856,  1592,     0,
       0,  1073,  1600,  1601,  1602,  1596,     0,     0,     0,  3313,
       0,     0,  1073,     0,  1593,     0,     0,     0,  2857,     0,
    1597,     0,  1598,  1599,     0,  3687,  1599,     0,     0,     0,
       0,     0,     0,     0,  1600,  1601,  1602,     0,  3688,     0,
    3824,     0,     0,  1594,     0,     0,     0,     0,     0,  1595,
    2861,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1600,  1601,  1602,     0,     0,     0,  3689,     0,
       0,     0,     0,  1596,  3690,     0,  3392,     0,  2862,  3393,
       0,     0,     0,     0,     0,     0,     0,     0,  1597,     0,
    1598,     0,     0,     0,     0,  3706,  3419,     0,     0,     0,
    3421,  3825,  3422,  3423,  3424,  3425,  3426,  3427,     0,     0,
       0,     0,  3826,  3827,  3828,     0,     0,  3432,   892,  3433,
       0,     0,  3434,  3435,  3436,  3437,     0,     0,  3438,  3439,
       0,  1599,  3441,  3691,  3443,     0,  3445,     0,  3447,     0,
    3692,     0,  3449,     0,     0,     0,     0,     0,     0,     0,
    2170,     0,  3452,  3760,  2170,     0,  3455,  3456,  3457,     0,
       0,  3458,  3459,  3461,     0,  3462,     0,     0,  3463,     0,
    3693,     0,  1590,  1591,     0,  1590,  1591,     0,     0,     0,
       0,  3464,     0,     0,     0,  3694,  3695,     0,     0,  3471,
       0,  3472,  3473,  3474,     0,     0,  3475,     0,  3696,     0,
       0,  3829,  3479,     0,     0,     0,     0,  3490,     0,  1599,
    1600,  1601,  1602,     0,  1600,  1601,  1602,     0,     0,  1590,
    1591,     0,     0,  3507,     0,     0,  2863,     0,     0,     0,
    2869,     0,     0,     0,     0,  3515,     0,     0,     0,     0,
    1590,  1591,     0,     0,  1592,     0,  3528,  1592,     0,     0,
       0,     0,  1590,  1591,     0,     0,     0,     0,     0,     0,
    1593,     0,     0,  1593, -1181,     0,   892,   892,  1600,  1601,
    1602,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2870,     0,     0,     0,     0,  1594,
       0,  1592,  1594,  2346,     0,  1595,     0,     0,  1595,     0,
    1073,  1073,     0,  1073,     0,     0,     0,  1593,     0,  1600,
    1601,  1602,  1592,  1073,     0,  1073,     0,     0,  1073,     0,
       0,     0,  2346,     0,  1592,  2874,     0,     0,  1593,  1596,
       0,  1073,  1596,  1073,     0,  1073,  1594,  1073,     0,     0,
    1593,     0,  1595,     0,  1597,     0,  1598,  1597,     0,  1598,
    1073,  1073,     0,  1590,  1591,  5707,  5708,  1594,  5710,  5711,
    5712,  5713,     0,  1595,     0,     0,     0,     0,     0,  1594,
       0,     0,     0,     0,     0,  1595,  1596,  5733,     0,     0,
       0,     0,     0,  1590,  1591,     0,  1590,  1591,     0,     0,
    1073,  1597,     0,  1598,  1590,  1591,     0,  1596,     0,  1073,
       0,     0,     0,     0,     0,     0,     0,     0,  1073,  1596,
       0,     0,  1597,     0,  1598,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1597,  1592,  1598,  1590,  1591,     0,
    1590,  1591,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1593,     0,     0,     0,     0,     0,  1130,  1590,  1591,
       0,     0,     0,     0,     0,  1592,     0,     0,  1592,  1600,
    1601,  1602,  1600,  1601,  1602,  1599,  1592,     0,  1599,  3720,
    1594,  1593,     0,     0,  1593,  2875,  1595,  1073,  2877,     0,
       0,     0,  1593,  3080,     0,  5795,     0,     0,  5798,     0,
       0,     0,  1590,  1591,     0,     0,  5806,     0,     0,  1592,
    1594,     0,  1592,  1594,     0,     0,  1595,     0,  1073,  1595,
    1596,  1594,  1599,     0,     0,  1593,     0,  1595,  1593,     0,
    1592,     0,     0,     0,     0,  1597,     0,  1598,     0,     0,
       0,     0,     0,  1599,     0,     0,  1593,     0,     0,     0,
    1596,     0,     0,  1596,  1594,  1599,     0,  1594,     0,     0,
    1595,  1596,     0,  1595,     0,  1597,     0,  1598,  1597,     0,
    1598,     0,     0,     0,  1592,  1594,  1597,  3856,  1598,  3706,
       0,  1595,  1590,  1591,     0,     0,     0,  1600,  1601,  1602,
    1593,     0,     0,     0,  1596,     0,     0,  1596,     0,     0,
    1073,     0,     0,  2884,     0,     0,     0,  1073,     0,  1597,
       0,  1598,  1597,     0,  1598,  1596,     0,  1073,     0,  1594,
       0,     0,     0,     0,     0,  1595,     0,     0,     0,     0,
    1597,     0,  1598,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3907,     0,
       0,     0,     0,     0,  1592,     0,  1599,     0,     0,  1596,
       0,     0,     0,     0,     0,  1600,  1601,  1602,     0,     0,
    1593,  1590,  1591,     0,  1597,     0,  1598,     0,     0,     0,
       0,  2898,     0,     0,     0,     0,  1599,     0,     0,  1599,
       0,     0,     0,  1590,  1591,  3706,     0,  1599,     0,  1594,
       0,  4001,  1073,  1073,     0,  1595,     0,     0,     0,     0,
       0,  4005,     0,     0,  4006,     0,     0,     0,     0,     0,
       0,  1590,  1591,     0,     0,     0,     0,     0,     0,     0,
    1599,     0,     0,  1599,     0,     0,     0,  4030,  4031,  1596,
       0,     0,   892,  1592,     0,  1590,  1591,     0,     0,     0,
       0,  1599,     0,     0,  1597,     0,  1598,     0,     0,  1593,
       0,     0,  4056,     0,  4057,  1592,  4058,     0,  4059,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1593,     0,     0,  1590,  1591,     0,     0,  1594,     0,
    4084,     0,     0,  1592,  1595,  1599,     0,     0,     0,     0,
       0,     0,     0,  3368,     0,     0,  1073,     0,     0,  1593,
    1594,  4107,  4108,     0,     0,     0,  1595,  1592,     0,     0,
     892,     0,  1590,  1591,     0,     0,     0,     0,  1596,     0,
       0,     0,     0,  1593,  1073,     0,     0,     0,  1594,     0,
       0,     0,  3720,  1597,  1595,  1598,     0,     0,     0,     0,
    1596,     0,     0,     0,     0,     0,  1592,     0,     0,     0,
       0,     0,  1594,     0,     0,  1597,     0,  1598,  1595,     0,
       0,     0,  1593,     0,     0,  1599,     0,     0,  1596,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2346,  2346,     0,  1597,  1592,  1598,     0,     0,  1073,     0,
    1073,  1594,  1596,     0,     0,  2346,     0,  1595,     0,     0,
    1593,     0,     0,     0,  1073,     0,     0,  1597,     0,  1598,
       0,  1600,  1601,  1602,  1600,  1601,  1602,  1590,  1591,     0,
       0,  1073,  1073,     0,     0,  1590,  1591,  4032,     0,  1594,
    4035,  1596,     0,     0,     0,  1595,     0,     0,     0,     0,
    1073,     0,     0,  1590,  1591,     0,  1597,     0,  1598,  3080,
       0,     0,     0,     0,  1599,     0,     0,     0,  1600,  1601,
    1602,     0,     0,     0,     0,     0,     0,     0,     0,  1596,
       0,     0,     0,     0,  4036,     0,  1599,     0,     0,  1600,
    1601,  1602,     0,     0,  1597,     0,  1598,  1590,  1591,  1592,
       0,  1600,  1601,  1602,     0,  4041,     0,  1592,     0,     0,
       0,     0,     0,     0,  1599,  1593,     0,  4046,     0,     0,
       0,     0,     0,  1593,     0,  1592,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1599,     0,
       0,  1593,  3368,     0,  1594,     0,     0,     0,  3720,     0,
    1595,     0,  1594,     0,     0,     0,     0,     0,  1595,  3080,
       0,     0,     0,     0,     0,     0,     0,  1073,     0,  1592,
    1594,     0,     0,     0,     0,     0,  1595,  1599,     0,     0,
       0,     0,     0,  1073,  1596,  1593,     0,     0,     0,     0,
       0,     0,  1596,     0,  1590,  1591,     0,     0,     0,  1597,
       0,  1598,  1600,  1601,  1602,     0,     0,  1597,     0,  1598,
    1596,     0,     0,     0,  1594,  1599,     0,     0,  4047,     0,
    1595,  1590,  1591,     0,     0,  1597,     0,  1598,     0,     0,
       0,     0,  1600,  1601,  1602,  1600,  1601,  1602,     0,     0,
       0,     0,     0,  1600,  1601,  1602,  1590,  1591,  4048,     0,
       0,  4049,     0,   892,  1596,     0,     0,  1590,  1591,  4051,
       0,     0,     0,     0,     0,     0,  1592,     0,   892,  1597,
       0,  1598,     0,     0,     0,     0,  1600,  1601,  1602,  1600,
    1601,  1602,  1593,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4060,  1592,     0,  4066,     0,  1600,  1601,  1602,
       0,     0,  3368,     0,     0,     0,     0,     0,     0,  1593,
       0,  1594,     0,  4069,     0,     0,     0,  1595,  1592,     0,
    1599,     0,     0,     0,     0,     0,     0,     0,  1599,  1592,
       0,     0,     0,     0,  1593,     0,     0,     0,  1594,     0,
       0,  1600,  1601,  1602,  1595,  1593,  1599,  1073,     0,     0,
       0,  1596,     0,     0,     0,     0,     0,  4075,     0,     0,
       0,     0,     0,  1594,     0,     0,  1597,     0,  1598,  1595,
       0,     0,     0,     0,  1594,     0,  1073,     0,  1596,     0,
    1595,     0,     0,  1590,  1591,     0,     0,     0,     0,     0,
    1599,     0,     0,  1597,     0,  1598,     0,     0,     0,     0,
       0,     0,     0,  1596,     0,     0,     0,  1590,  1591,     0,
       0,     0,     0,     0,  1596,     0,     0,     0,  1597,     0,
    1598,  1600,  1601,  1602,     0,     0,     0,     0,     0,  1597,
       0,  1598,     0,     0,     0,     0,     0,  4076,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3706,     0,  1073,
       0,     0,     0,     0,     0,  1592,     0,  4564,  4565,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
    4572,  1593,  4573,     0,     0,  4574,     0,     0,     0,  1592,
       0,     0,     0,     0,     0,  1075,     0,  1599,  4594,     0,
    4595,     0,  4596,     0,  4597,  1593,     0,     0,     0,  1075,
    1594,     0,     0,     0,   892,     0,  1595,  4603,  4604,     0,
    1600,  1601,  1602,     0,  1599,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1594,     0,  4077,     0,     0,     0,
    1595,     0,  1600,  1601,  1602,     0,     0,     0,     0,  1599,
    1596,     0,     0,     0,     0,     0,     0,     0,  4085,     0,
    1599,     0,     0,     0,     0,  1597,     0,  1598,     0,     0,
    1600,  1601,  1602,     0,  1596,  4633,     0,     0,     0,     0,
       0,     0,     0,   892,     0,     0,  4086,     0,     0,  1597,
       0,  1598,     0,     0,  1600,  1601,  1602,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4089,     0,   892,     0,  1075,     0,     0,     0,     0,     0,
       0,     0,  1073,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1600,  1601,  1602,     0,     0,     0,     0,
       0,     0,     0,     0,  3080,     0,     0,     0,     0,  4093,
       0,  1073,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1073,     0,  1073,     0,     0,     0,     0,     0,     0,
       0,  1600,  1601,  1602,     0,  3080,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,     0,  1599,  4106,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5482,
       0,     0,     0,  5482,     0,     0,     0,     0,     0,     0,
    1599,     0,     0,     0,     0,     0,     0,     0,     0,   892,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1075,  1590,  1591,
       0,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   892,     0,     0,  3720,     0,     0,
       0,  1590,  1591,     0,  4801,     0,     0,     0,     0,     0,
       0,     0,  1075,     0,  3080,  1485,  1600,  1601,  1602,     0,
       0,     0,  1075,   892,  1600,  1601,  1602,     0,     0,     0,
       0,     0,  4973,     0,     0,     0,     0,     0,     0,     0,
    4979,     0,  1600,  1601,  1602,     0,     0,     0,     0,     0,
    1592,     0,     0,     0,     0,     0,     0,     0,  4980,     0,
    1485,     0,     0,     0,     0,     0,  1593,     0,     0,     0,
       0,  5603,     0,  1592,  5603,     0,     0,     0,     0,     0,
       0,     0,     0,  1590,  1591,  2773,  1600,  1601,  1602,  1593,
       0,     0,     0,     0,     0,  1594,     0,     0,  5482,  4867,
    4868,  1595,  4981,     0,     0,     0,     0,     0,  5643,     0,
       0,  1075,  1075,  1075,  1075,     0,  5482,  1485,  1594,     0,
       0,     0,  1075,     0,  1595,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1596,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5643,     0,     0,
    1597,     0,  1598,  1073,     0,  1592,     0,     0,  1596,     0,
       0,  1590,  1591,     0,     0,     0,     0,     0,     0,     0,
       0,  1593,     0,  1597,     0,  1598,     0,     0,     0,     0,
       0,  1590,  1591,  1600,  1601,  1602,     0,     0,     0,  1590,
    1591,     0,     0,     0,     0,     0,     0,     0,     0,  4990,
    1594,     0,     0,  4940,     0,     0,  1595,     0,     0,     0,
    1600,  1601,  1602,     0,     0,     0,     0,     0,  5603,     0,
       0,     0,     0,  5603,     0,     0,  4991,     0,  1590,  1591,
    5603,  3720,     0,  1592,     0,  1600,  1601,  1602,     0,     0,
    1596,     0,     0,     0,     0,     0,  1600,  1601,  1602,  1593,
       0,  4995,     0,  1592,     0,  1597,  2769,  1598,     0,     0,
    1073,  1592,  4996,     0,     0,     0,     0,  2828,     0,  1593,
       0,  1599,     0,  5482,     0,  3442,     0,  1593,  1594,     0,
    1075,     0,     0,  1485,  1595,     0,     0,     0,     0,     0,
       0,     0,     0,  1073,  1599,  3720,     0,  3720,  1594,     0,
    1592,     0,     0,     0,  1595,     0,  1594,     0,     0,     0,
       0,  3080,  1595,     0,  3444,     0,  1593,     0,  1596,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2346,  2346,
       0,     0,     0,  1597,     0,  1598,     0,     0,  1596,     0,
       0,     0,     0,     0,     0,  1594,  1596,  5044,  1590,  1591,
    5603,  1595,     0,  1597,  5816,  1598,     0,     0,     0,     0,
       0,  1597,     0,  1598,     0,     0,     0,     0,     0,     0,
       0,     0,  1600,  1601,  1602,     0,  1599,  1758,     0,     0,
       0,     0,     0,     0,     0,  1596,     0,  5482,  5405,     0,
       0,     0,     0,     0,     0,     0,  1600,  1601,  1602,     0,
    1597,     0,  1598,     0,     0,     0,  1075,  1073,  1075,     0,
       0,     0,  5455,     0,  1073,     0,  3394,     0,     0,     0,
    1592,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3446,     0,  1593,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1599,     0,  5603,     0,  5603,  5603,
       0,     0,     0,     0,  5150,  1594,     0,     0,     0,     0,
       0,  1595,     0,     0,  1599,     0,     0,     0,     0,  1075,
    3080,  1075,  1599,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5603,     0,     0,     0,     0,     0,
       0,     0,  5603,     0,     0,  1596,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1075,  1075,
    1597,  1599,  1598,  1073,  1075,     0,     0,     0,  1075,  1075,
    1075,     0,  5603,     0,     0,     0,     0,     0,     0,  1075,
    1075,  1485,     0,     0,     0,  1075,     0,  1075,  1075,  1075,
    1075,  1075,     0,  1075,     0,     0,  1485,  1485,     0,     0,
       0,     0,     0,     0,  1075,     0,  1075,     0,     0,  1075,
    1075,     0,  1075,  1075,  1075,     0,  1075,  1075,  1075,     0,
     892,     0,     0,  1075,     0,     0,  1075,     0,     0,     0,
       0,     0,     0,  1073,  1075,  1075,     0,  1075,  1075,  1075,
       0,     0,  1075,  1075,  1075,  1075,  1075,  1075,  1075,     0,
    1075,  1075,  1075,  1075,  1075,  1075,     0,  1075,  1075,     0,
    1075,  1075,  1075,  1075,  1075,  1075,  1075,     0,     0,  1075,
    1075,  1075,  1075,     0,  1075,  1075,  1075,     0,  1075,     0,
    1075,  1599,  1075,     0,  5244,     0,  1075,  1075,  1075,     0,
       0,  1075,  1075,  1075,  1075,  1075,     0,  1075,     0,     0,
       0,  1590,  1591,     0,  1075,     0,     0,     0,     0,  1075,
       0,     0,     0,  3720,     0,     0,  1075,     0,     0,     0,
    1075,  1075,  1075,  1075,     0,  1075,  1075,     0,     0,  1075,
    1075,  1075,  1075,  1075,  1075,  1075,  1075,  1075,  1075,  1075,
    1075,  1075,  1590,  1591,  1075,  2093,  2094,  2095,  2096,  1485,
       0,  1590,  1591,  4062,     0,  1485,     0,  1600,  1601,  1602,
    1590,  1591,  4065,     0,     0,  1590,  1591,     0,     0,     0,
       0,     0,     0,  1592,     0,     0,     0,     0,     0,     0,
    1600,  1601,  1602,     0,     0,     0,  5305,  1075,     0,  1593,
       0,     0,  1075, -1036,     0, -1036,     0,     0,     0,  2097,
    2098,  2099,  1075,     0,     0,     0,     0,     0,     0,  5484,
       0,     0,     0,     0,  1592,     0,     0,     0,  1594,     0,
       0,     0,  1908,  1592,  1595,     0,     0,     0,     0,     0,
    1593,     0,  1592,  1485,     0,     0,  5485,  1592,     0,  1593,
       0,     0,     0,     0,     0,     0,     0,     0,  1593,     0,
    2100,  2101,     0,  1593,     0,     0,     0,     0,  1596,  1594,
       0,     0,  1600,  1601,  1602,  1595,     0,     0,  1594,     0,
    1075,   157,   158,  1597,  1595,  1598,  3669,  1594,     0,     0,
       0,     0,  1594,  1595,     0,   157,   158,     0,  1595,     0,
       0,     0,     0,  1075,     0,     0,     0,     0,     0,  1596,
       0,     0,     0,     0,     0, -1070,     0,     0,  1596,     0,
       0,     0,     0,     0,  1597,     0,  1598,  1596,  1485,     0,
       0,  2102,  1596,  1597,     0,  1598,     0,     0,     0,     0,
       0,     0,  1597,     0,  1598,     0,     0,  1597,     0,  1598,
    1600,  1601,  1602,   661,   662,     0,     0,     0,  5486,  3720,
       0,  3671,  5487,     0,     0,     0,     0,     0,     0,     0,
    1600,  1601,  1602,     0,     0,     0,     0,     0,  1600,  1601,
    1602,     0,     0,     0,     0,  5468,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5431,     0,
    5433,     0,     0,     0,  1599,  2103,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1600,  1601,  1602,
       0,     0,  3672,  3673,  3674,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1599,     0,  3675,     0,     0,
       0,     0,     0,     0,  1599,     0,     0,     0,     0,     0,
       0,     0,  5469,  1599,     0,     0,     0,     0,  1599,     0,
       0,     0,  3676,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5254,     0,  5470,   901,     0,     0,
       0,     0,     0,   815,     0,     0,     0,  2104,     0,     0,
    3677,     0,  3678,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5488,     0,     0,     0,     0, -1036,
       0,  3679,     0,     0,     0,     0,   918,   816,     0,     0,
       0,     0,     0,     0,  1781,     0,     0,  1600,  1601,  1602,
    3680,     0,     0,     0,     0,     0,     0,  3681,     0,   818,
       0,  1075,     0,     0,  5471,   923,  3547,     0,   925,   819,
       0,     0,  3682,     0,     0,  1075,  2105,     0, -1036,     0,
   -1036,     0,  3683,     0,   929,   930,     0,     0,     0,     0,
       0,     0,     0,  1075,     0,   820,  1075,  3684,     0,     0,
       0,     0,     0,     0,  1075,  1075,     0,  1908,     0,     0,
       0,   821,     0,     0,     0,     0,   822,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   823,
       0,  2106,     0,  2107,   943,     0,     0,     0,  2108,     0,
       0,     0,   948,   949,  3685,     0,   157,   158,     0,     0,
    5669,  3669,     0,     0,  3686,  1485,  1485,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5472,     0,     0,     0,
       0,     0,     0,  3670,     0,     0,     0,     0,     0,     0,
    1075,  1075,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,  3687,     0,     0,  1485,  1144,     0,     0,   824,     0,
       0,     0,  2109,     0,  3688,     0,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   825,     0,     0,     0,
       0,  1117,     0,     0,   826,     0,  3671,     0,     0,  1145,
    1146,     0,   967,     0,     0,     0,     0,     0,     0,  1147,
       0,   969,   970,   971,  3689,  2110,     0,  1485,     0,     0,
    3690,     0,     0,     0,     9,    10,   827,  1584,  1075,     0,
       0,  1485,     0,     0,     0,     0,   828,   829,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   629,  1075,
       0,     0,  1075,  1075,     0,  1075,  1075,  3672,  3673,  3674,
    5774,     0,     0,     0,  1075,     0,  1075,     0,     0,   157,
     158,     0,     0,     0,  1148,     0,     0,     0,     0,  3691,
       0,     0,  3675,     0,     0,     0,  3692,     0,  1149,     0,
       0,     0,     0,     0,  1075,     0,     0,     0,     0,     0,
       0,     0,  5490,     0,  2111,     0,     0,  3676,     0,  1075,
       0,     0,     0,     0,     0,  2112,  3693,     0,     0,     0,
    1600,  1601,  1602,     0,     0,  5255,  1075,     0,     0,     0,
       0,  3694,  3695,  5256,     0,  3677,     0,  3678,     0,     0,
    1075,     0,     0,     0,  3696,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1036,  1075,  3679,     0,     0,     0,
    1150,  1600,  1601,  1602,     0,     0,     0,     0,     0,     0,
    1600,  1601,  1602,     0,  3080,  3680,     0,  1075,  2012,  1600,
    1601,  1602,  3681,  2013,  1600,  1601,  1602,     0,     0,  1782,
       0,  5473,     0,  2014,     0,  1485,     0,  3682,     0,     0,
       0,     0,     0,  1783,     0,  1784,  4306,  3683,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1151,     0,  3684,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1786,     0,     0,     0,  1075,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1485,     0,  1485,
       0,  1152,     0,     0,     0,     0,     0,     0,     0,  3685,
       0,     0,     0,  1787,     0,     0,  1153,     0,     0,  3686,
       0,     0,     0,     0,     0,  1154,     0,     0,     0,     0,
       0,  1788,     0,     0,     0,     0,     0,  1155,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1156,     0,
       0,     0,     0,     0,     0,     0,  3687,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3688,
       0,     0,  1157,     0,     0,     0,     0,     0,     0,     0,
       0,  2015,     0,     0,     0,     0,     0,     0,     0,  1075,
    3080,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2016,     0, -2344,  1158,     0,  2017,  1159,  3689,
    1160,  1789,     0,     0,     0,  3690,     0,     0,  1790,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1791,     0,
       0,     0,     0,     0,     0,  1161,  1162,     0,  2018,     0,
       0,  1792,     0,  1163,  1164,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1075,     0,     0,     0,
    1165,     0,     0,     0,     0,     0,     0,  5257,     0,  2019,
    5258,     0,  1793,     0,  3691,  1794,     0,     0,     0,  5259,
       0,  3692,  1166,     0,     0,     0,     0,     0,     0,     0,
    1795,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1167,     0,     0,   630,     0,     0,     0,
       0,  3693,     0,     0,     0,     0,  1075,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3694,  3695,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3696,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1168,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,  1171,  1172,     0,     0,
       0,     0,     0,  1075,     0,     0,  1075,     0,     0,  3697,
       0,  1173,     0,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,  1075,     0,  1075,     0,  1075,     0,  1075,
    1075,  1075,  1075,  1075,  1075,     0,  1075,     0,     0,     0,
       0,     0,     0,     0,  1075,     0,  1075,  1174,     0,  1075,
    1075,  1075,  1075,     0,  1175,  1075,  1075,     0,     0,  1075,
       0,  1075,     0,  1075,     0,  1075,     0,     0,     0,  1075,
       0,     0, -3100,     0,  1176,     0,     0,  1075,     0,  1075,
       0,  1075,  1075,  1075,  1075,  1075,     0,     0,  1075,  1075,
    1075,     0,  1075,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1075,     0,
       0,     1,     2,  1075,     0,     0,  1075,     0,  1075,  1075,
    1075,     0,     0,  1075, -3100,     0, -1036,     0, -1036,  1075,
    1177,     3,     0,     4,  1075,     5,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,     0,
    1075,     0,     0,  2635,     0,  1908,  1075,     0,     0,  1075,
       0,     0,  1075,     0,     0,     0,     0,     8,     0,     9,
      10,  1075,  1485,  1075,     0,     0,     0,    11,  1075,     0,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
    1485,     0,     0,     0,     0,  2636,     0,    13,     0,     0,
       0,     0,     0,    14,   157,   158,     0,     0,     0,  3669,
       0,     0,     0,     0,     0,     0,    15,     0,     0,     0,
    1075,     0,     0,     0,    16,     0,     0,     0,     0,     0,
       0,     0,  2637,     0,     0,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,    19,     0,  1075,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1485,     0,     0,  1485,  1485,
    1485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,  3671,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,    23,     0,     0,
       0,     0,     0,     0,     0,     0,    24,    25,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    26,    27,
      28,    29,     0,    30,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    32,     0,
       0,     0,    33,    34,     0,  3672,  3673,  3674,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3675,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    35,     0,    36,     0,    37,     0,     0,     0,
       0,     0,     0,     0,     0,  3676,  1075,     0,     0,     0,
       0,    38,    39,     0,     0,     0,     0,     0,     0,    40,
    1075,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3677,     0,  3678,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    41,     0,
      42,     0, -1036,     0,  3679,     0,     0,    43,     0,     0,
       0,     0,     0,     0,    44,     0,     0,     0,     0,     0,
       0,     0,     0,  3680,     0,     0,     0,     0,     0,     0,
    3681,     0,     0,     0,     0,    45,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3682,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,  3683,     0,     0,     0,     0,
      46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3684,     0,    47,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    48,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1075,    49,     0,     0,     0,     0,  2638,
       0,  1485,     0,     0,     0,     0,     0,    50,     0,     0,
      51,     0,     0,    52,     0,  1075,     0,  3685,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3686,    53,  2639,
    2640,     0,  2641,  2642,  2643,  2644,  2645,     0,  2646,  2647,
    2648,  2649,  2650,  2651,  2652,  2653,     0,  2654,  2655,  2656,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3687,     0,     0,     0,  1075,     0,
       0,     0,     0,     0,     0,     0,     0,  3688,  1075,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1485,  3689,     0,     0,
       0,     0,     0,  3690,     0,     0,     0,     0,     0,  1075,
       0,  1075,     0,  1075,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,    54,  2657,  2658,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1075,     0,     0,
       0,     0,     0,  1485,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    55,     0,     0,    56,     0,  1075,  1075,
       0,     0,  3691,     0,     0,     0,    57,     0,     0,  3692,
       0,     0,     0,     0,    58,     0,     1,     2,  1075,     0,
       0,  1075,     0,     0,  1075,     0,    59,     0,     0,  1075,
       0,     0,     0,     0,     0,     0,     3,     0,     4,  3693,
       5,     0,     6,     0,     0,    60,     0,     0,    61,     0,
       7,     0,     0,     0,  3694,  3695,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3696,     0,     0,
       0,     0,     8,     0,     9,    10,     0,  1075,  1075,     0,
      62,     0,    11,     0,     0,     0,     0,     0,     0,     0,
      63,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,  1485,     0,    14,     0,
       0,     0,     0,     0,     0,    64,     0,     0,     0,     0,
       0,    15,     0,     0,     0,     0,     0,     0,     0,    16,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      17,     0,     0,     0,     0,     0,  1075,     0,     0,     0,
      18,     0,    19,  1485,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,    23,     0,     0,     0,     0,     0,     0,     0,
       0,    24,    25,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    26,    27,    28,    29,     0,    30,     0,
       0,     0,     0,    31,     0,  1075,     0,     0,     0,     0,
       0,     0,  1485,    32,     0,     0,  1075,    33,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     1,     2,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     3,     0,     0,     0,     5,    35,     6,    36,
       0,    37,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    38,    39,     0,     0,
       0,     0,     0,     0,    40,     0,     0,     0,     8,     0,
       9,    10,     0,     0,     0,     0,     0,     0,    11,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    41,     0,    42,     0,     0,     0,     0,
       0,     0,    43,     0,    14,     0,     0,     0,     0,    44,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,     0,     0,     0,     0,
      45,     0,     0,     0,     0,     0,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,    19,     0,
       0,     0,     0,     0,     0,    46,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,    48,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,    23,    49,
       0,     0,     0,     0,     0,     0,     0,    24,    25,     0,
       0,     0,    50,     0,     0,    51,     0,     0,    52,    26,
      27,     0,    29,     0,    30,     0,     0,     0,     0,    31,
       0,     0,     0,    53,     0,     0,     0,     0,     0,    32,
       0,     0,     0,    33,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3929,  3930,     0,     0,
       0,     0,  3931,  3932,     0,     0,     0,     0,     0,     0,
       0,     0,  3933,    35,     0,    36,     0,    37,     0,     0,
       0,     0,     0,     0,  1075,  1075,     0,  1075,     0,     0,
       0,     0,     0,    39,     0,     0,     0,  1075,  3934,  1075,
      40,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
    3935,     0,     0,     0,     0,  1075,     0,  1075,     0,  1075,
       0,  1075,     0,     0,     0,     0,     0,     0,     0,     0,
    3936,    42,     0,     0,  1075,  1075,     0,     0,    43,    54,
       0,     0,     0,     0,     0,    44,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3937,     0,    45,     0,    55,     0,
       0,    56,     0,     0,  1075,     0,     0,     0,     0,     0,
       0,    57,     0,  1075,  3938,  3939,     0,  3940,     0,    58,
       0,    46,  1075,     0,     0,  3941,  3942,  3943,     0,     0,
       0,    59,     0,    47,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3944,     0,     0,     0,     0,
      60,     0,    48,    61,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    50,  3945,
       0,    51,     0,     0,    52,    62,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,    63,     0,     0,     0,    53,
       0,     0,     0,     0,  3946,     0,     0,     0,     0,     0,
    3947,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      64,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3948,  3949,  3950,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3929,  3930,     0,     0,     0,     0,  3931,  3932,
    3951,  3952,     0,     0,     0,     0,     0,     0,  3933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3934,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1075,     0,  3935,  3953,     0,  3954,
    3955,  1075,     0,     0,     0,    54,     0,     0,     0,     0,
       0,  1075,     0,     0,     0,  3956,  3936,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    55,     0,     0,    56,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    57,     0,     0,
    3937,     0,  3957,     0,  3958,    58,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    59,     0,     0,
    3938,  3939,     0,  3940,     0,     0,     0,  3959,     0,     0,
       0,  3941,  3942,  3943,     0,     0,    60,     0,     0,    61,
       0,     0,     0,     0,     0,     0,  1075,  1075,     0,  3960,
       0,  3944,     0,     0,     0,     0,     0,     0,     0,     0,
    3961,  3962,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    62,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    63,     0,     0,     0,  3945,     0,     0,     0,     0,
       0,     0,  3963,     0,     0,     0,     0,     0,     0,     0,
       0,  3964,     0,     0,     0,     0,    64,     0,     0,     0,
    3946,     0,     0,     0,     0,     0,  3947,     0,     0,     0,
    3929,  3930,     0,     0,     0,     0,  3931,  3932,     0,     0,
       0,     0,     0,     0,     0,     0,  3933,     0,     0,     0,
       0,  3948,  3949,  3950,     0,     0,     0,  3965,  3966,  3967,
    1075,     0,     0,     0,     0,  3968,  3969,     0,     0,     0,
       0,     0,  3934,     0,     0,     0,  3951,  3952,     0,     0,
       0,  3970,  3971,     0,  3935,     0,     0,     0,  1075,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3936,  3972,  3973,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3953,  3974,  3954,  3955,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3937,     0,
       0,  3956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1075,     0,  1075,     0,  3975,     0,  3938,  3939,
       0,  3940,     0,     0,     0,     0,     0,     0,  1075,  3941,
    3942,  3943,     0,     0,     0,     0,     0,     0,  3957,     0,
    3958,     0,     0,     0,     0,  1075,  1075,     0,     0,  3944,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1908,     0,  3959,  1075,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3976,     0,     0,  3977,     0,
       0,  3978,     0,  3945,     0,  3960,     0,     0,  3979,     0,
       0,     0,     0,     0,     0,     0,  3961,  3962,     0,     0,
       0,     0,     0,     0,  3980,     0,     0,     0,  3946,     0,
     157,   158,     0,     0,  3947,  3669,     0,     0,     0,     0,
       0,     0,     0,  3981,     0,     0,     0,     0,  3963,     0,
       0,     0,  4859,     0,  3805,     0,     0,  3964,     0,  3948,
    3949,  3950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3807,     0,
       0,     0,     0,     0,  3951,  3952,  3809,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1075,     0,  3965,  3966,  3967,     0,     0,  1908,     0,
    3671,  3968,  3969,     0,  1485,     0,     0,  1075,     0,     0,
    4860,     0,     0,     0,     0,     0,     0,  3970,  3971,     0,
       0,  3953,     0,  3954,  3955,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3956,
       0,  3972,  3973,     0,     0,     0,     0,   157,   158,     0,
       0,     0,  3669,     0,     0,     0,     0,     0,     0,     0,
    3974,  3672,  3673,  3674,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3957,     0,  3958,     0,
    3811,     0,     0,     0,     0,     0,  3675,     0,     0,     0,
       0,     0,  5332,     0,     0,     0,     0,     0,     0,     0,
       0,  3959,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3676,     0,     0,     0,     0,     0,     0,     0,  3813,
       0,     0,     0,  3960,     0,     0,     0,  3671,     0,     0,
       0,     0,     0,     0,  3961,  3962,     0,     0,     0,  3677,
       0,  3678,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3976,  3815,     0,  3977,     0,     0,  3978,     0,     0,
    3679,     0,     0,     0,  5333,     0,  3963,     0,  1485,     0,
       0,  1075,     0,     0,     0,  3964,     0,     0,     0,  3680,
    3980,     0,     0,     0,     0,     0,  3681,     0,  3672,  3673,
    3674,     0,     0,     0,     0,     0,     0,     0,     0,  3981,
    1075,  3682,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3683,     0,  3675,     0,     0,     0,     0,     0,     0,
       0,  3965,  3966,  3967,     0,     0,  3684,     0,     0,  3968,
    3969,     0,     0,     0,     0,     0,     0,     0,  3676,     0,
       0,     0,     0,     0,     0,  3970,  3971,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3816,     0,
       0,     0,     0,     0,     0,     0,  3677,     0,  3678,  3972,
    3973,     0,     0,  1075,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3685,     0,     0,     0,  3679,  3974,     0,
       0,     0,     0,  3686,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3680,     0,     0,     0,
       0,     0,     0,  3681,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3682,     0,
    3687,     0,     0,     0,     0,     0,     0,     0,  3683,     0,
       0,     0,  3818,  3688,     0,     0,     0,     0,     0,  3820,
       0,     0,     0,  3684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3976,
    3822,     0,  3977,  3689,     0,  3978,     0,     0,     0,  3690,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3980,     0,
    3685,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3686,     0,     0,     0,     0,     0,     0,  3981,     0,     0,
       0,     0,     0,     0,     0,     0,  1075,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3691,     0,
       0,     0,     0,     0,     0,  3692,     0,  3687,     0,     0,
       0,     0,     0,     0,     0,  1075,     0,     0,     0,     0,
    3688,     0,  3824,     0,     0,  1075,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,  3693,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3694,  3695,     0,     0,     0,     0,     0,     0,     0,     0,
    3689,     0,     0,  3696,     0,     0,  3690,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3691,     0,     0,     0,     0,
       0,     0,  3692,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1485,  1485,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3693,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3694,  3695,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3696,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1485,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1485,     0,     0,     0,     0,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2343,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,  1075,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,  2344,     0,     0,   920,     0,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,  2345,     0,     0,
       0,  1075,     0,     0,     0,     0,     0,     0,  1075,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,  1075,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,  2247,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,  2248,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,  2153,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2154,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,  2155,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
    1447,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,  2822,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
    2824,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,  2826,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,  3076,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,  3077,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,  4681,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,  3077,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1474,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
    2024,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  2025,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,   935,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    2025,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,  3448,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,   945,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  3470,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,   945,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,  5856,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  1440,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1441,  1442,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,  1578,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1441,  1442,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  1580,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1441,  1442,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,   935,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   900,   901,   902,
     903,   904,     0,     0,     0,     0,     0,     0,     0,   905,
     906,     0,   907,     0,     0,     0,     0,     0,     0,   908,
     909,     0,     0,   910,   911,   912,   913,     0,   914,   915,
       0,   916,   917,     0,     0,     0,     0,   918,     0,     0,
       0,   919,     0,     0,   920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,   922,   923,     0,   924,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,   927,   928,     0,   929,   930,     0,     0,     0,
     931,   932,   933,     0,     0,     0,     0,     0,     0,     0,
     934,     0,  2267,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   936,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,   938,   939,     0,   940,     0,     0,     0,     0,     0,
     941,     0,   942,     0,     0,   943,     0,     0,   944,     0,
     946,     0,   947,   948,   949,     0,   950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,   952,   953,   954,   955,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   957,   958,     0,     0,
       0,     0,     0,     0,     0,   959,     0,     0,   960,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,     0,   962,   963,     0,   964,   965,   966,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,   968,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,   975,     0,   976,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   977,   171,   172,
     173,   174,   175,   176,   978,   178,   179,   180,   181,   182,
     183,   184,   979,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   980,   201,
     202,   203,   204,   205,   206,   207,   208,   981,   210,   982,
     983,   212,   984,   985,   986,   987,   988,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   989,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   990,   991,   992,   246,   993,   994,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   995,   291,   292,   293,   294,   295,
     996,   297,   997,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   998,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   999,  1000,   333,   334,
     335,  1001,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,  1002,
     375,  1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,
     385,   386,   387,   388,   389,   390,   391,   392,  1008,  1009,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,  1010,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1011,
     425,   426,   427,   428,   429,  1012,  1013,   432,   433,   434,
     435,   436,   437,  1014,   439,   440,   441,   442,   443,   444,
    1015,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    1016,   476,   477,   478,   479,   480,  1017,  1018,   483,   484,
     485,   486,   487,  1019,   489,   490,   491,   492,   493,   494,
    1020,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,  1021,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  1022,  1023,
    1024,  1025,   546,   547,   548,  1026,  1027,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
    1028,   565,  1029,   567,   568,   569,   570,   571,   572,   573,
     574,   575,  1030,  1031,   578,  1032,   580,   581,   582,     0,
     583,   584,   585,  1033,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1034,  1035,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,     0,     0,  1038,  1039,     0,     0,
    1040,  1041,   900,   901,   902,   903,   904,     0,     0,     0,
       0,     0,     0,     0,   905,   906,     0,   907,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,   910,   911,
     912,   913,     0,   914,   915,     0,   916,   917,     0,     0,
       0,     0,   918,     0,     0,     0,   919,     0,     0,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   921,
     922,   923,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   926,   927,   928,     0,
     929,   930,     0,     0,     0,   931,   932,   933,     0,     0,
       0,     0,     0,     0,     0,   934,     0,  2269,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     936,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,   938,   939,     0,   940,
       0,     0,     0,     0,     0,   941,     0,   942,     0,     0,
     943,     0,     0,   944,     0,   946,     0,   947,   948,   949,
       0,   950,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   951,     0,     0,     0,
     952,   953,   954,   955,     0,     0,     0,     0,     0,     0,
     956,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   957,   958,     0,     0,     0,     0,     0,     0,     0,
     959,     0,     0,   960,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   962,
     963,     0,   964,   965,   966,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,   969,   970,   971,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,   975,     0,   976,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   977,   171,   172,   173,   174,   175,   176,   978,
     178,   179,   180,   181,   182,   183,   184,   979,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   980,   201,   202,   203,   204,   205,   206,
     207,   208,   981,   210,   982,   983,   212,   984,   985,   986,
     987,   988,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   989,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   990,   991,
     992,   246,   993,   994,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   995,
     291,   292,   293,   294,   295,   996,   297,   997,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   998,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   999,  1000,   333,   334,   335,  1001,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,  1002,   375,  1003,   377,   378,   379,
     380,  1004,  1005,  1006,  1007,   385,   386,   387,   388,   389,
     390,   391,   392,  1008,  1009,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
    1010,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,  1011,   425,   426,   427,   428,   429,
    1012,  1013,   432,   433,   434,   435,   436,   437,  1014,   439,
     440,   441,   442,   443,   444,  1015,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  1016,   476,   477,   478,   479,
     480,  1017,  1018,   483,   484,   485,   486,   487,  1019,   489,
     490,   491,   492,   493,   494,  1020,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,  1021,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,  1022,  1023,  1024,  1025,   546,   547,   548,
    1026,  1027,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,  1028,   565,  1029,   567,   568,
     569,   570,   571,   572,   573,   574,   575,  1030,  1031,   578,
    1032,   580,   581,   582,     0,   583,   584,   585,  1033,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1034,  1035,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,     0,
       0,  1038,  1039,     0,     0,  1040,  1041,   901,   902,   903,
     904,     0,     0,     0,     0,     0,     0,     0,   905,   906,
       0,   907,     0,     0,     0,     0,     0,     0,   908,   909,
       0,     0,   910,   911,   912,   913,     0,   914,   915,     0,
     916,   917,     0,     0,     0,     0,   918,     0,     0,     0,
     919,     0,     0,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   921,   922,   923,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     926,   927,   928,     0,   929,   930,     0,     0,     0,   931,
     932,   933,     0,     0,     0,     0,     0,     0,     0,   934,
       0,  1440,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
     938,   939,     0,   940,     0,     0,     0,     0,     0,   941,
       0,   942,     0,     0,   943,     0,     0,     0,     0,   946,
       0,   947,   948,   949,     0,   950,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     951,     0,     0,     0,   952,   953,   954,   955,     0,     0,
       0,     0,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,   958,     0,     0,     0,
       0,     0,     0,     0,   959,     0,     0,   960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   961,     0,     0,
       0,     0,     0,   962,   963,     0,   964,   965,   966,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,   969,   970,   971,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   972,   973,   974,     0,     0,     0,     0,
       0,   975,     0,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   977,   171,   172,   173,
     174,   175,   176,   978,   178,   179,   180,   181,   182,   183,
     184,   979,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   980,   201,   202,
     203,   204,   205,   206,   207,   208,   981,   210,   982,   983,
     212,   984,   985,   986,   987,   988,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     989,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   990,   991,   992,   246,   993,   994,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   995,   291,   292,   293,   294,   295,   996,
     297,   997,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   998,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   999,  1000,   333,   334,   335,
    1001,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1002,   375,
    1003,   377,   378,   379,   380,  1004,  1005,  1006,  1007,   385,
     386,   387,   388,   389,   390,   391,   392,  1008,  1009,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,  1010,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,  1011,   425,
     426,   427,   428,   429,  1012,  1013,   432,   433,   434,   435,
     436,   437,  1014,   439,   440,   441,   442,   443,   444,  1015,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  1016,
     476,   477,   478,   479,   480,  1017,  1018,   483,   484,   485,
     486,   487,  1019,   489,   490,   491,   492,   493,   494,  1020,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,  1021,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,  1022,  1023,  1024,
    1025,   546,   547,   548,  1026,  1027,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,  1028,
     565,  1029,   567,   568,   569,   570,   571,   572,   573,   574,
     575,  1030,  1031,   578,  1032,   580,   581,   582,   901,   583,
     584,   585,  1033,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5635,  5636,     0,     0,     0,     0,     0,     0,
       0,     0,  5637,     0,     0,     0,  1039,     0,     0,  1040,
    1041,     0,     0,     0,     0,     0,     0,   918,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   923,     0,     0,   925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   929,   930,     0,     0,     0,
    1477,  1478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   943,     0,     0,     0,     0,
       0,     0,     0,   948,   949,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,     0,   969,   970,   971,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
    1479,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  2301,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,  2718,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,  2302,   543,
     544,  2303,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    2972,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,  2719,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   678,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,  1117,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2719,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1118,     0,   678,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,  1119,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,  1120,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,  1121,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,  1122,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,  1123,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,  1124,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,  1125,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,  1126,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,  1127,   579,   580,
     581,   582,  1117,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,  1128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,  1119,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,  1120,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,  1121,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,  1122,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,  1123,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,  1124,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,  1125,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  1127,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   814,   815,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1128,     0,     0,     0,     0,     0,     0,     0,   816,
       0,     0,     0,     0,   817,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   818,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   819,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   820,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,   821,     0,     0,     0,     0,   822,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   748,     0,     0,     0,     0,     0,
       0,   823,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   825,     0,
       0,     0,     0,     0,     0,     0,   826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,   827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   828,   829,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     830,   272,   273,   274,   275,   831,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   832,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   833,   441,   442,   443,   834,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   835,   462,   463,   464,   465,   836,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     837,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   838,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,  1109,   815,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   816,     0,     0,
       0,     0,   817,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   818,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   819,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,   821,     0,     0,     0,     0,   822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   748,     0,     0,     0,     0,     0,     0,   823,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   825,     0,     0,     0,
       0,     0,     0,     0,   826,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,   827,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   828,   829,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,  1110,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   830,   272,
     273,   274,   275,   831,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   832,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   833,   441,   442,   443,  1111,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   835,   462,   463,   464,   465,   836,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   837,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,  1711,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   838,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   748,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,  4690,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,  1801,   583,   584,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1477,  1478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     4,   583,   584,   585,   586,     0,     0,     0,     0,
     858,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1802,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,  4283,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     0,
     542,   543,   544,   545,   546,   547,   548,   549,     0,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   712,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
     157,   158,     0,     0,     0,  3072,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5395,     0,     0,
    3073,     0,     0,     0,     0,     0,     0,  4284,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    39,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    4285,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,  4283,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4286,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   712,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,  3072,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3073,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   713,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,  4285,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    4337,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,  4286,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1664,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   748,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1666,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,  3929,  3930,     0,     0,  1667,
       0,  3931,  3932,     0,     0,     0,     0,     0,     0,     0,
       0,  3933,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3934,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3935,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3936,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3937,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3938,  3939,     0,  3940,     0,     0,     0,
       0,     0,     0,     0,  3941,  3942,  3943,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3944,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3945,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3946,     0,     0,     0,     0,     0,  3947,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3948,  3949,  3950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3951,
    3952,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,  5086,   190,  5087,  5088,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,  5089,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,  5090,   243,  5091,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,  5092,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,  5093,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,  5094,
    5095,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,  5096,   328,   329,   330,   331,   332,   333,   334,   335,
    5097,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,  5098,  5099,  5100,   385,
     386,   387,   388,   389,  5101,  5102,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
    5103,  5104,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,  5105,  5106,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,  5107,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,  5108,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,  5109,   540,   541,  5110,   543,   544,
    5111,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,  5112,   569,   570,   571,   572,   573,   574,
     575,   576,   577,  3360,   579,   580,   581,   582,  1680,   583,
     584,   585,  5113,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1681,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   748,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    1664,   583,   584,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    1664,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
    1237,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1238,  1239,     0,
       0,     0,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1240,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,  1296,   583,   584,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   748,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     4,   583,   584,   585,   586,
       0,     0,     0,     0,   858,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  -453,  -453,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,  -453,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     0,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     4,   542,   543,   544,   545,   546,   547,
     548,   549,   858,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,   562,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,     0,   580,   581,     0,     0,   583,     0,   585,   586,
    -473,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   859,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   863,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -473,
       0,    38,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,   865,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
     866,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,  -473,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,   867,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   868,     0,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     4,   542,   543,   544,   545,   546,   547,   548,   549,
     858,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,  -470,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  -470,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,  -470,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,  1426,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     4,   542,   543,
     544,   545,   546,   547,   548,   549,   858,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,  -475,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     4,   542,   543,   544,   545,
     546,   547,   548,   549,   858,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,  3325,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     0,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     4,   542,   543,   544,   545,   546,   547,
     548,   549,   858,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,   562,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,     0,   580,   581,     0,     0,   583,     0,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   859,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   863,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    38,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,   865,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
     866,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,  3378,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,   867,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   868,     0,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     4,   542,   543,   544,   545,   546,   547,   548,   549,
     858,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,  3632,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,  3636,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     4,   542,   543,
     544,   545,   546,   547,   548,   549,   858,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,   860,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   157,   158,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,     0,     0,     0,     0,
       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     863,   864,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    38,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,     0,   163,     0,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,     0,   178,   179,   180,   181,   182,   183,   184,
     185,     0,   865,     0,     0,   189,   190,   191,   192,   193,
       0,     0,   196,   197,   198,   199,     0,     0,     0,   203,
     204,   205,   206,   207,   866,   209,   210,   211,     0,   212,
       0,     0,     0,     0,     0,     0,   218,     0,   220,     0,
     222,   223,     0,   225,   226,   227,   228,   229,   230,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,     0,   258,   259,   260,
     261,  4004,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,     0,     0,     0,   277,     0,   867,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,     0,
       0,     0,     0,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   300,   301,     0,   303,   304,     0,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   868,     0,     0,
       0,   418,   419,     0,   421,   422,   423,   424,     0,   426,
     427,   428,   429,   430,   431,     0,     0,     0,     0,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   463,     0,   465,   466,
       0,   468,   469,     0,   471,   472,   473,   474,   475,   476,
       0,   478,   479,   480,   481,   482,   483,   484,     0,   486,
     487,   488,     0,   490,   491,   492,   493,     0,   495,   496,
       0,     0,   499,     0,     0,   502,   503,   504,     0,   506,
       0,   508,   509,   510,   511,     0,   512,   513,   514,     0,
     516,   517,     0,   519,     0,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,     4,   542,   543,   544,   545,
     546,   547,   548,   549,   858,   551,   552,   553,     0,   555,
     556,   557,   558,     0,     0,   561,   562,     0,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,     0,     0,   580,   581,     0,     0,   583,     0,
     585,   586,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   859,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,   860,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
     862,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,     0,     0,   863,   864,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,     0,   163,     0,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   178,   179,   180,   181,   182,   183,   184,   185,     0,
     865,     0,     0,   189,   190,   191,   192,   193,     0,     0,
     196,   197,   198,   199,     0,     0,     0,   203,   204,   205,
     206,   207,   866,   209,   210,   211,     0,   212,     0,     0,
       0,     0,     0,     0,   218,     0,   220,     0,   222,   223,
       0,   225,   226,   227,   228,   229,   230,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,     0,   258,   259,   260,   261,  4955,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,     0,     0,     0,   277,     0,   867,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,     0,     0,     0,
       0,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     300,   301,     0,   303,   304,     0,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,     0,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   868,     0,     0,     0,   418,
     419,     0,   421,   422,   423,   424,     0,   426,   427,   428,
     429,   430,   431,     0,     0,     0,     0,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   463,     0,   465,   466,     0,   468,
     469,     0,   471,   472,   473,   474,   475,   476,     0,   478,
     479,   480,   481,   482,   483,   484,     0,   486,   487,   488,
       0,   490,   491,   492,   493,     0,   495,   496,     0,     0,
     499,     0,     0,   502,   503,   504,     0,   506,     0,   508,
     509,   510,   511,     0,   512,   513,   514,     0,   516,   517,
       0,   519,     0,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,     4,   542,   543,   544,   545,   546,   547,
     548,   549,   858,   551,   552,   553,     0,   555,   556,   557,
     558,     0,     0,   561,   562,     0,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
       0,     0,   580,   581,     0,     0,   583,     0,   585,   586,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   859,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,    15,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,   862,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,   863,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    38,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,     0,   163,     0,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,     0,   178,
     179,   180,   181,   182,   183,   184,   185,     0,   865,     0,
       0,   189,   190,   191,   192,   193,     0,     0,   196,   197,
     198,   199,     0,     0,     0,   203,   204,   205,   206,   207,
     866,   209,   210,   211,     0,   212,     0,     0,     0,     0,
       0,     0,   218,     0,   220,     0,   222,   223,     0,   225,
     226,   227,   228,   229,   230,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,     0,   258,   259,   260,   261,  -457,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,     0,
       0,     0,   277,     0,   867,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,     0,     0,     0,     0,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   300,   301,
       0,   303,   304,     0,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   868,     0,     0,     0,   418,   419,     0,
     421,   422,   423,   424,     0,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   463,     0,   465,   466,     0,   468,   469,     0,
     471,   472,   473,   474,   475,   476,     0,   478,   479,   480,
     481,   482,   483,   484,     0,   486,   487,   488,     0,   490,
     491,   492,   493,     0,   495,   496,     0,     0,   499,     0,
       0,   502,   503,   504,     0,   506,     0,   508,   509,   510,
     511,     0,   512,   513,   514,     0,   516,   517,     0,   519,
       0,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,     4,   542,   543,   544,   545,   546,   547,   548,   549,
     858,   551,   552,   553,     0,   555,   556,   557,   558,     0,
       0,   561,   562,     0,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,     0,
     580,   581,     0,     0,   583,     0,   585,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   859,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   861,
       0,     0,     0,     0,     0,     0,   862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,   866,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,   867,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   868,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     4,
     542,   543,   544,   545,   546,   547,   548,   549,   858,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   859,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,   862,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    20,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   863,   864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,   865,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,   866,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,     0,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
     867,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   868,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     4,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     0,   542,   543,
     544,   545,   546,   547,   548,   549,     0,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,  1646,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,    13,   580,   581,     0,     0,
     583,     0,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,   157,   158,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,     0,     0,   863,   864,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    38,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,   865,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,     0,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,     0,     0,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     0,
     542,   543,   544,   545,   546,   547,   548,   549,     0,   551,
     552,   553,     0,   555,   556,   557,   558,  3356,  3357,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  3358,
    3359,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  3360,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  1296,   817,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  1296,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   817,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   748,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
    2077,     0,     0,     0,  4774,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3753,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3754,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3755,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3756,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  2077,     0,     0,
       0,  5752,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3753,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3754,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3755,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3756,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  2077,     0,     0,     0,  5820,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3753,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3754,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3755,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3756,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  2984,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  1657,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,  1657,   583,   584,   585,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,  2361,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
    3065,   583,   584,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,  4842,   583,
     584,   585,   586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  4850,   583,   584,   585,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,  2998,   583,   584,   585,   586,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,     0,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,  2999,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,  2220,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,     0,     0,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5949,     0,     0,     0,     0,     0,  2221,  5950,   748,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   665,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   748,  1678,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   748,  2235,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   665,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3153,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,  2220,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,  1477,
    1478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2221,  5950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1802,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    39,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,  2220,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,  1477,  1478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3551,     0,     0,
       0,     0,     0,  2221,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,  1479,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1647,     0,     0,     0,     0,     0,
    1480,     0,     0,     0,     0,     0,     0,  1040,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,  1477,  1478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   678,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,  1479,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1040,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,  2220,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2221,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2719,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   678,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,     0,   583,   584,   585,
     586,   157,   158,  4824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4425,     0,     0,     0,     0,     0,     0,  4286,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,   157,   158,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4286,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,     0,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,     0,   583,   584,   585,   586,   157,
     158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   678,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,     0,
     278,   279,   726,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   727,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   728,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,     0,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,     0,   583,
     584,   585,   586,   157,   158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   678,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
       0,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,     0,   583,   584,   585,   586,   157,   158,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4286,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,     0,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,  2740,   583,   584,   585,
     586,   157,   158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2278,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   661,
     662,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5226,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5227,   638,  5228,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,     0,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
       0,   583,   584,   585,   586,  1414,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,  2741,     0,     0,     0,     0,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,  1416,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,  1346,
     583,   584,   585,   586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2694,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1477,  1478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4341,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  1477,  1478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4647,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5155,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5274,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1666,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,  1477,  1478,     0,     0,
    1667,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2395,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   951,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2396,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2397,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,  2398,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
    1477,  1478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2395,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   951,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3898,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2397,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
    2398,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  1477,  1478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2395,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2397,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,  2398,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   637,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   638,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
    1477,  1478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1523,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4221,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5547,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   673,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,     0,
     583,   584,   585,   586,  1477,  1478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,  1823,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2372,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,     0,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,     0,   583,   584,   585,   586,   157,   158,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,     0,   278,   279,   280,
     281,   282,   283,   284,  2485,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,  2486,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,     0,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,     0,   583,   584,   585,   586,
     157,   158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,     0,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,  3360,   579,   580,   581,   582,     0,
     583,   584,   585,   586,   157,   158,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,     0,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,     0,   579,
     580,   581,   582,     0,   583,   584,   585,   586,   157,   158,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   665,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,     0,   301,   302,   303,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,     0,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,     0,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,  2999,   579,   580,   581,   582,     0,   583,   584,
     585,   586,   157,   158,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   159,   160,
     161,     0,   163,     0,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,     0,   178,   179,   180,
     181,   182,   183,   184,   185,     0,     0,     0,     0,   189,
     190,   191,   192,   193,     0,     0,   196,   197,   198,   199,
       0,     0,     0,   203,   204,   205,   206,   207,     0,   209,
     210,   211,     0,   212,     0,     0,     0,     0,     0,     0,
     218,     0,   220,     0,   222,   223,     0,   225,   226,   227,
     228,   229,   230,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
       0,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,     0,     0,     0,
     277,     0,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,     0,     0,     0,     0,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   300,   301,     0,   303,
     304,     0,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,     0,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   157,   158,     0,     0,   418,   419,     0,   421,   422,
     423,   424,     0,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     463,     0,   465,   466,     0,   468,   469,     0,   471,   472,
     473,   474,   475,   476,     0,   478,   479,   480,   481,   482,
     483,   484,     0,   486,   487,   488,     0,   490,   491,   492,
     493,     0,   495,   496,     0,     0,   499,     0,     0,   502,
     503,   504,     0,   506,     0,   508,   509,   510,   511,     0,
     512,   513,   514,     0,   516,   517,     0,   519,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,     0,
     542,   543,   544,   545,   546,   547,   548,   549,     0,   551,
     552,   553,     0,   555,   556,   557,   558,     0,     0,   561,
     562,     0,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,     0,     0,   580,   581,
       0,     0,   583,     0,   585,   586,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1423,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   159,   160,   161,
       0,   163,     0,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,     0,   178,   179,   180,   181,
     182,   183,   184,   185,     0,     0,     0,     0,   189,   190,
     191,   192,   193,     0,     0,   196,   197,   198,   199,     0,
       0,     0,   203,   204,   205,   206,   207,     0,   209,   210,
     211,     0,   212,     0,     0,     0,     0,     0,     0,   218,
       0,   220,     0,   222,   223,     0,   225,   226,   227,   228,
     229,   230,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,     0,
     258,   259,   260,   261,     0,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,     0,     0,     0,   277,
       0,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,     0,     0,     0,     0,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   300,   301,     0,   303,   304,
       0,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     157,   158,     0,     0,   418,   419,     0,   421,   422,   423,
     424,     0,   426,   427,   428,   429,   430,   431,     0,     0,
       0,     0,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   463,
       0,   465,   466,     0,   468,   469,     0,   471,   472,   473,
     474,   475,   476,     0,   478,   479,   480,   481,   482,   483,
     484,     0,   486,   487,   488,     0,   490,   491,   492,   493,
       0,   495,   496,     0,     0,   499,     0,     0,   502,   503,
     504,     0,   506,     0,   508,   509,   510,   511,     0,   512,
     513,   514,     0,   516,   517,     0,   519,     0,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,     0,   542,
     543,   544,   545,   546,   547,   548,   549,     0,   551,   552,
     553,     0,   555,   556,   557,   558,     0,     0,   561,   562,
       0,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,     0,     0,   580,   581,     0,
       0,   583,     0,   585,   586,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   159,   160,   161,     0,
     163,     0,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,     0,   178,   179,   180,   181,   182,
     183,   184,   185,     0,     0,     0,     0,   189,   190,   191,
     192,   193,     0,     0,   196,   197,   198,   199,     0,     0,
       0,   203,   204,   205,   206,   207,     0,   209,   210,   211,
       0,   212,     0,     0,     0,     0,     0,     0,   218,     0,
     220,     0,   222,   223,     0,   225,   226,   227,   228,   229,
     230,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,     0,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,     0,     0,     0,   277,     0,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
       0,     0,     0,     0,     0,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   300,   301,     0,   303,   304,     0,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,     0,
       0,     0,     0,   418,   419,     0,   421,   422,   423,   424,
       0,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   463,     0,
     465,   466,     0,   468,   469,     0,   471,   472,   473,   474,
     475,   476,     0,   478,   479,   480,   481,   482,   483,   484,
       0,   486,   487,   488,     0,   490,   491,   492,   493,     0,
     495,   496,     0,     0,   499,     0,     0,   502,   503,   504,
       0,   506,     0,   508,   509,   510,   511,     0,   512,   513,
     514,     0,   516,   517,     0,   519,     0,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,     0,   542,   543,
     544,   545,   546,   547,   548,   549,     0,   551,   552,   553,
       0,   555,   556,   557,   558,     0,     0,   561,   562,     0,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,     0,     0,   580,   581,     0,     0,
     583,     0,   585,   586
};

static const yytype_int16 yycheck[] =
{
       3,    41,   119,   148,   632,   144,   653,  1177,   652,   653,
     858,   652,   860,   861,   862,  1459,  1275,   737,   646,   867,
    1409,   146,    25,  1638,   652,   869,  1626,    30,    21,  1275,
     156,    34,  1967,  1901,    37,  1874,   646,  1466,  1877,  1159,
      42,  1716,   743,     0,  1586,    48,  1497,  2449,    51,   138,
    1975,    54,   141,  1274,  1903,    58,    49,  1177,   938,   652,
    1351,  3245,    55,  1716,  1288,   743,  1876,  1645,   672,  1573,
    1122,  1123,  1124,  3132,  2908,  2684,  2760,  2761,  1687,  1131,
    1701,  1702,  1685,   652,  1475,   652,  2750,  3503,  3245,  2558,
    3280,  3195,    31,   711,   621,  3173,  1878,   715,   716,  3171,
     621,   807,  3324,   983,   938,   691,  2514,   110,   694,  2774,
    3814,  2776,  1289,  3522,  3026,  1363,  3184,  3221,  3222,  1394,
    2047,  2447,  1945,   650,  1100,  1870,  4308,  3707,  1289,   650,
     900,  1706,  2878,  1638,   137,   138,  3183,  2777,   141,  2960,
    2961,   144,   145,  1234,  3504,  3045,  3245,  1909,  3504,  2470,
    3900,  1726,  1801,  4132,  3054,  3120,  2682,   156,   156,   156,
    1040,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,
    1621,  1622,  1623,  1624,   156,  3804,  1751,  1752,  1799,  1921,
    4197,  2682,  4431,  3287,  3288,  3804,  1801,  4544,    28,  3804,
    3251,    11,  3741,   785,  2613,  1592,     6,  3805,    11,  3807,
    2613,  2008,  3810,  2010,  2011,     6,  4916,    61,  1605,  1606,
      26,  1608,  1609,    11,  4440,    74,  3824,  3397,    26,    50,
      80,  4526,    95,  1965,    57,    17,    80,    80,    12,  4708,
     858,    91,   860,   861,   862,   105,  1327,    91,    91,   867,
      32,   869,    34,  3624,    80,     6,    42,    51,  4413,   105,
      93,    93,  2944,    32,    61,    91,    89,  1835,  1102,    61,
      80,   114,  2594,  2682,  1034,  1035,  1036,  1423,    61,  2682,
      61,    91,   105,    61,   194,  1045,   153,    58,  1156,  3551,
    3026,    65,  2605,   118,    83,  3697,  4495,  4769,  3225,   235,
     125,    80,   218,     9,    10,  2672,  1801,   115,   105,    27,
    1178,   230,    91,   105,  3294,   194,   110,  3939,  3940,    80,
       6,  3943,   105,   146,   105,   105,    44,   105,  3950,  3728,
      91,   117,   121,   263,  3956,   293,  1206,   105,  4537,   263,
       9,    10,   128,   263,  4537,    10,   149,   722,  3702,   135,
     248,   174,    63,   124,  4553,   298,   183,  4556,  4557,   138,
    4553,   105,   187,  4556,  4557,  3267,  1934,  3210,   287,  4300,
    4110,    86,  1445,  1446,   217,    81,  3495,   138,   164,   128,
     153,  1454,    57,   361,  3395,  3396,    86,    57,   114,   764,
     220,    97,  3403,    17,  3405,   261,  3407,  3398,   244,  1365,
      81,     9,    10,   235,   207,   105,    86,  4200,    32,   120,
      34,  1179,    81,  1486,    12,  1488,    97,    69,  2734,    89,
     126,   149,   370,   261,   263,  1391,   132,   146,    97,   235,
     182,  1504,  1505,   283,  1507,   105,  3838,   155,   209,   225,
     374,  2442,  1515,  1516,  3243,   126,  1519,  4836,     9,    10,
     273,   132,    14,   168,   169,  1763,    86,   126,   173,  4651,
     166,   177,   149,   132,  4854,   177,  3528,    65,  4765,  4165,
     256,   151,  4166,    81,    76,   181,   146,   183,   177,   207,
     268,    14,  5538,   177,  1102,   166,   177,   276,   177,    97,
    2058,   606,   621,   608,   609,   610,   611,   166,   613,   614,
     298,  3051,   617,   618,   174,   177,   217,   567,   230,   263,
     162,  3221,  3222,    63,  5180,  5606,  2542,   296,   126,   230,
      81,   650,   230,   628,   132,   230,  2323,  2324,  2325,  2326,
     631,  3267,   143,  4685,  4686,   296,    97,   666,   263,   110,
     111,   114,   324,   173,  5702,   137,   100,  5705,   514,    11,
      17,   346,   298,   682,    63,   324,   146,   272,   166,    28,
     342,    12,    93,   146,   235,   126,   348,   640,  4784,   280,
     120,   132,   272,   181,    35,   183,   287,  3287,  3288,   348,
     207,   263,   287,   391,   174,  1850,    47,   298,   763,   230,
     138,   174,   374,  5062,  1464,   770,   302,  1173,  3566,  3567,
    3568,  3569,  4949,   273,   114,   166,   407,   235,   600,  1479,
    1480,   604,   143,  3397,    65,  1197,  1658,   291,  3402,   293,
    3800,   230,   615,   261,  3408,  1836,   193,   620,   621,   283,
     298,   235,  1881,  3535,   182,  5726,   765,  1679,    93,   149,
    1464,  4936,   272,  2558,   217,   235,   287,  1315,   164,  1257,
     643,  1259,  1260,  1261,  1262,  1263,  1480,   650,   235,   652,
    4779,  3712,  1876,   298,  1360,   770,  1902,   217,   495,   770,
     298,  3739,   374,   666,  3736,   207,  4538,   806,   287,   739,
     230,  1441,  1442,  1921,   283,   678,   351,   295,  1654,   682,
     683,  5357,   684,   295,   302,   810,   811,  5855,   235,   691,
     324,    32,   694,   696,   296,   697,  1672,   235,   298,  2735,
     321,   139,   283,   400,  1332,   644,  2488,   710,   342,  1879,
    5776,   800,   801,   802,   348,   526,  1394,  1965,   283,   356,
     280,  2330,  1332,  1699,   283,   268,  2329,   287,  4466,  4467,
    4468,   302,  1909,  3832,  1982,  5115,   299,   300,   298,  2057,
     743,   220,   745,  2553,   235,  1337,   318,     6,  1909,   532,
     555,  2762,  1632,   711,  3934,   234,  3936,  5509,  1638,  1879,
     130,   280,   765,   460,  3944,  5165,   204,   632,  3294,   645,
     773,   463,  2314,  5080,  1366,   763,  3610,  5084,  5085,  4988,
    5532,   646,   785,  5182,   787,  4988,  3890,   652,   369,  3535,
    3970,   306,   795,  3294,   797,   763,   799,   800,   801,   802,
     803,   804,   748,   806,  1638,   480,  3225,  4356,   261,  3989,
     763,   283,  3225,  4792,   340,   579,  4619,    33,   757,  4760,
     728,  5023,   386,  2252,  4205,   865,   770,  1705,  4209,   763,
    1708,   771,   568,   763,   763,  5317,  1716,  2228,  2229,   765,
    1361,   689,  1720,   763,  2419,  1723,   630,  1439,  1452,  1727,
    3787,  3543,  2594,   690,   857,  3708,   859,  1627,  2255,  2256,
     261,  2258,  2259,   866,  3196,   868,   805,   626,  4847,   808,
    1961,  2613,  4504,   601,   763,  3294,  1754,  1755,  1756,   632,
     883,  3294,   347,  2039,   754,  5047,   763,  1272,  4160,  5054,
    2046,   619,   765,   646,   655,  4527,   677,   728,   754,  4531,
    3223,  3891,   483,  4653,   763,   633,   748,  4539,   767,   769,
    3931,  2718,  3289,  5218,   763,   769,   769,  1521,  4327,   727,
    5146,  1801,   765,   715,   742,   765,   739,   655,   748,   764,
    2672,   764,   748,   769,  1538,   748,   715,  1541,  5648,  1543,
    2682,   702,  4306,  1547,  1548,  1549,    49,   754,  2693,   769,
     748,  1555,   754,   763,  1655,  3976,  3977,  3978,  4664,   655,
    3981,   754,   763,   754,   754,   764,   754,  1801,   433,   753,
     435,  1749,   768,  3994,   764,   765,   754,  1655,   770,   664,
     769,   673,  4111,  1122,  3995,  1124,   764,   765,  4967,  1128,
    1129,   555,   717,   858,  3803,   860,   861,   862,   769,  5306,
     754,   739,   867,   765,   869,   680,  5215,   348,  5217,   765,
     764,   765,  5215,  4425,  5217,  5144,  3762,  3763,  3344,  1158,
    3766,  3767,   630,  1724,   753,   754,  3772,  3773,   763,  5008,
    5009,   763,   748,   749,   750,   725,  1039,   514,  5395,   765,
     617,   689,   763,   765,   754,   763,  1724,  2130,   763,  2025,
    2133,   763,   768,   857,   492,  3801,   765,   748,   749,   750,
     525,   765,  3622,  3623,   765,  2904,   765,   748,  2151,   748,
     749,   750,   720,  1691,  4946,    17,   555,   717,   620,  2162,
    5329,   715,   602,   765,   764,  5064,   770,   765,   458,   770,
      32,   261,    34,   755,   756,   757,   758,  1100,  1101,   708,
     764,   765,   361,  1106,   646,   858,  1950,   860,   861,   862,
     748,   234,   763,  1116,   867,   171,   869,     6,  2696,  1122,
     765,  1124,  3057,  5285,  5286,  1128,  1129,   708,   344,  2707,
     748,   749,   750,   697,   748,  1662,  3930,   602,  3932,  5519,
    3934,  1662,  3936,  5622,   763,  5624,  5625,  1273,   748,   419,
    3944,  4889,  4561,   753,   754,  1158,   770,  3951,   673,  3953,
     433,   748,   207,  1280,   287,  2972,  3960,  4245,   114,  1810,
    3890,  1173,  1850,  1175,   387,   298,  3970,   748,   749,   750,
    3974,  1901,  1810,   770,   358,  2727,  3980,    69,   765,  1192,
    4168,  4169,   645,  1196,  1197,  3989,  3990,  3991,  3992,  3993,
     765,   748,   765,   763,  4308,   770,   765,  1793,  1211,   171,
     748,   770,  5964,  1253,   207,  1921,  4625,  1810,  4627,  1222,
    5493,   114,  1361,   770,     6,   130,  1818,   110,   111,  5045,
    4859,  1234,   770,   214,  1323,  1821,   689,  1102,  4422,  1857,
    4859,  1810,  1860,  1810,  4859,  2415,  1864,   358,  2128,  2129,
     688,  1254,  4860,   149,  5521,  4323,   149,   748,  3040,  1965,
    5277,  4322,    32,  5742,  5743,  4422,  4344,   457,  4817,  1913,
    5749,  1274,   358,   373,  1273,  1273,  1273,   493,   263,   770,
     162,  2333,   353,  4248,  5034,  2337,    68,  2167,   689,  1292,
     114,  1273,  4673,  4674,  2128,  2415,   416,  1101,   180,   261,
     765,   351,  1106,  1306,  2953,  4205,    61,  4667,  2360,  4209,
     149,  4667,  1315,  1316,  3182,   615,  1255,  1256,   672,    73,
    1323,  1324,  1950,  4422,  1327,  3646,  2572,   728,  1849,   602,
    3179,    10,  2308,  2309,  1337,  2512,   282,   673,  2953,  3178,
    2220,  1344,   555,  1346,  4756,   341,  2594,  5826,  2799,  1102,
    4262,  2512,   472,  3028,  2234,    61,  3031,  3032,  1361,   462,
    4272,  4273,  1365,  1366,  3126,  3891,  4200,  1995,  3787,   669,
      32,   328,    34,    93,  3787,  4196,   110,   111,  3031,  3032,
    2983,  5158,   324,   204,    32,  1995,    34,   287,  1391,   725,
    3891,  1394,  1196,  5127,   168,   169,  4576,  1400,   298,    17,
     342,  1993,  1994,   376,  2695,   226,   348,   210,  3810,  3012,
     279,  1414,   361,    61,    32,   298,    34,  4829,   173,  4831,
    2962,    61,  4834,  5402,  2672,  4065,  2054,  2055,  4840,  4841,
     480,  3254,   374,   478,  2682,   304,  1439,   493,   558,   558,
    2715,   115,  4854,  4490,   657,  2055,   168,   169,  2953,   338,
    1589,  5633,   325,   413,  3196,   569,  3383,  5089,   282,    15,
      17,   731,   458,  5316,   246,   247,  3041,  1332,    10,   572,
    5449,   661,  3891,    15,   256,    32,   579,  1205,  3891,   446,
     234,  4227,   444,  3225,   587,   478,   369,  1626,  1216,  2918,
    2941,  5764,   765,   382,  5074,   384,  2925,   443,  5275,   673,
     386,    58,  1306,  2947,   400,  2383,  5773,  2385,  3916,  3917,
    3918,  3919,  1316,    70,   186,   472,  4262,   577,  2398,   689,
    1324,   291,  2919,  1662,     0,  2922,  4272,  4273,  5710,  5711,
    2408,   493,  2623,    90,  3316,    36,   375,  2928,  2929,  1542,
    1344,   641,  1346,  2421,  2422,  4390,   559,  3289,  1551,   564,
     423,  3055,  3294,   458,  1594,   675,  5738,   660,   728,  1562,
      93,  4582,   673,  4641,   521,  4586,  3311,   124,   461,   125,
    1573,   737,   581,  2343,   555,  4420,     6,    69,   298,  1332,
     565,   137,  3160,   125,   655,    63,  1589,   673,   477,   268,
    2470,    92,  2472,   230,   579,   137,  1400,  5331,  3924,   722,
     483,    28,   249,  1692,    99,  1694,  1695,  1696,  1697,   576,
     730,   730,   168,   169,   115,  1704,  5432,   720,  5434,   443,
    3939,  3940,  5475,  1626,  3943,  1628,   168,   169,   601,   130,
     680,  3950,   184,  1722,   328,   369,    10,   526,    68,  3314,
     763,    15,   120,   639,  1647,   765,   420,   596,   288,   289,
     287,  1654,  1655,  4387,   320,  4389,   770,   213,  4392,  1662,
    1663,  3314,  3501,  1802,  4398,  4399,   372,   676,   374,  1672,
     162,   213,   290,   291,   911,   912,   913,   392,   460,   394,
    2904,  4415,  2562,  1686,  1687,   574,   348,   654,   180,  1692,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,   420,   200,
     348,  1704,  1841,   763,   351,   411,   324,  4930,   137,   602,
    1849,   671,  1851,  1858,  1859,     5,  2357,   730,  1721,  1722,
     729,  1724,   279,   433,   342,  1727,  2702,   689,    33,  2357,
     348,   130,  4810,   439,   291,   972,  4808,   409,  1542,    80,
     689,    31,  3610,  1746,   236,   237,   386,  1551,   277,   483,
     765,   125,   433,  5165,   442,   704,   374,  5169,  1562,   311,
     564,   590,    97,   137,  2357,  4833,   110,   111,  3940,   168,
     169,   748,  3611,   715,   138,   664,   472,  5448,   472,  1918,
    5451,   447,  4576,    73,   653,  4619,   130,    92,  2357,   748,
    2357,  1793,  2319,   220,   168,   169,   685,   132,  2319,  1802,
      63,   200,   280,    83,    53,    54,    55,    56,   765,  1812,
    2438,   100,  1814,   230,   347,  1818,   246,   247,   182,  1821,
    1823,   461,   722,  5527,   168,   169,   256,   521,  2438,   567,
    5239,  4496,   559,   480,   263,   392,   496,   394,  1841,   213,
     369,   121,  3286,  1647,   318,   112,  1849,  1850,  1851,  1852,
    1853,  1854,  1855,  1856,    57,  3306,   200,   120,   107,   108,
     109,    67,   558,   763,  2708,    83,   367,   296,   574,   399,
     287,   753,   754,   755,   756,   757,   758,  2463,   277,   169,
     540,   189,   748,   665,   666,   667,   668,   201,  2594,  1693,
    4062,    93,   602,   201,  1698,   200,  1700,  4299,  4300,  2491,
     433,   589,   435,   121,   610,  2523,   553,  2751,  2526,   158,
     159,  2759,  2760,  2761,   442,  1918,  2534,  5140,   208,  2537,
    5143,   602,  1924,  5103,  3599,  2977,  2978,   770,    18,  5600,
       9,    10,    11,   277,   248,   454,  5607,  1940,  3108,  2617,
    5352,  1944,  1746,   146,   441,  1810,   148,   189,  3196,  3126,
    3002,  5173,   481,   261,   217,   161,   270,   301,  1961,   201,
    5376,   765,   168,   169,   438,  3126,  2672,  3570,  3571,   295,
     369,   174,   277,  1976,   493,  1978,  2682,  1980,  1981,   675,
     229,   608,  3585,   698,   320,  4830,   701,    18,  3108,   546,
    1993,  1994,   525,   291,  2970,   293,   276,  2000,  3168,  4844,
     206,   739,    81,   730,  2007,  2008,  2982,  2010,  2011,  3551,
    4855,   721,  4857,   673,   216,   105,   106,   280,    97,   261,
     636,  3312,  2025,   518,   519,   369,  2029,   522,   523,   524,
     460,   527,  2035,   680,   730,   298,   207,  2715,   765,  2042,
     721,  3289,   248,   217,  3548,  3787,  3294,   126,  3168,  2052,
    2053,  1855,  1856,   132,   303,  2935,  4464,  1810,   276,  1296,
     445,   589,  3337,  3338,  3339,  3340,   112,   584,   559,   602,
     273,     9,    10,  2953,   105,   106,  4685,  4686,  5150,   580,
    2708,  4993,   481,   161,   765,  1950,   713,   166,  5109,  5110,
    5111,   588,  5113,   740,   479,   297,   653,   715,  2726,     6,
      15,  4835,   181,   438,   183,  4769,   399,   663,   422,  2750,
      57,   447,  5747,    95,  3896,   584,  2726,  3514,   118,  2953,
    3517,   663,  2750,  2751,   754,   125,   250,   298,   206,   648,
    1995,  2759,  2760,  2761,   764,   140,  1940,   481,   262,   447,
    2285,    57,    89,    81,   701,   662,   395,   763,  3028,  3891,
     485,  3031,  3032,  3033,   200,  3697,   138,  2750,   105,    97,
      57,    68,   123,   369,  5835,  5836,   263,   724,   328,   554,
     248,     6,  2699,   263,  2778,   381,  1980,   438,  2699,   399,
    2319,  2750,   475,  2750,  2788,  4504,   687,   187,   126,  2054,
    2055,   328,    89,   662,   132,  2334,  2199,  1950,   694,   146,
     182,    49,  2205,  2007,  2008,   447,  2010,  2011,  4527,   100,
     125,  4680,  4531,   548,  3058,   464,   712,   123,  2221,  3063,
    4539,   226,   137,   302,   485,  2029,     6,   174,   166,   230,
     146,  2035,   263,    68,  3493,   665,    69,   667,     6,   730,
     201,  2845,  1995,   181,   112,   183,  4114,  4993,     6,   146,
     635,    95,  5311,   115,  5313,   475,   416,   592,   174,   751,
     752,   753,   754,   755,   756,   757,   758,   115,   130,   514,
    2971,  2912,  2876,   708,   765,  5910,  5911,   174,   484,    83,
     529,   125,   531,  2372,  2912,   708,   287,   536,    68,   663,
       6,   369,  5086,  2971,   555,  2384,  2298,   298,   213,  5093,
      68,  2054,  2055,   381,  2443,  2308,  2309,  2310,   100,  5103,
      68,  5057,   472,  5107,    36,   605,  2319,   121,  5112,  2912,
    2323,  2324,  2325,  2326,  2327,  2328,   273,  2330,   763,   162,
    2934,  2334,   560,   561,   138,   472,   128,  1309,  1310,     6,
     763,  5891,   328,  2912,    11,  2912,    69,   180,    15,   555,
    5485,   600,    68,   201,   708,  2357,   601,   273,  4760,  5193,
      79,   521,  4201,    82,   302,  2368,  5916,  2528,   100,  2372,
      92,  1343,  3016,  2534,    83,  3016,   273,  2379,   182,     9,
      10,  2384,   632,   369,   521,  2387,    57,  3611,  3016,  5524,
     182,  3932,   736,   115,   643,  2199,   646,  3938,   558,  5458,
    3941,  2205,   652,   236,   237,  2544,   484,  3948,   130,   637,
     655,   490,   121,   748,   749,   750,   770,  2420,    89,  2564,
      57,   558,   270,  3016,   234,  2428,  3596,   708,    95,   138,
    3058,  4213,  2521,  2436,  3314,  3063,  2439,  2440,  5047,   162,
    2443,  2444,  2445,  1066,    17,  5635,  5636,  3016,   434,  3016,
      26,    81,    89,   722,  5840,  5841,  2573,   180,  4860,    32,
     179,  2463,  3182,    17,   123,  2468,   123,    97,  2407,   501,
     502,   193,   276,   182,  1097,   146,  3596,   555,   200,   138,
      34,   138,  3741,   732,   516,  4353,   472,   326,  2491,   770,
    3196,   787,  2357,   149,   743,  3741,   126,  3341,   634,  5885,
      93,   754,   132,   174,    83,  4354,  2310,    10,   804,   146,
    4349,   764,  4351,   236,   237,   675,   117,   403,  2521,  2323,
    2324,  2325,  2326,   182,  2527,   182,   569,   128,  2531,  5633,
    3930,  5000,   122,  2536,   135,   521,   166,   174,   675,   656,
    4350,  2544,   121,   262,   201,   138,  3390,  2550,   138,  3429,
     143,   181,  5736,   183,   690,    95,   405,   693,    42,   138,
    2699,    30,  2701,   412,   656,    34,   552,   276,   763,  3545,
     730,   640,   558,  2438,   422,   770,  4185,  3629,  5735,  2581,
     649,   613,   614,  3289,   720,   654,  2588,  2589,  3294,   182,
    3990,  3991,   728,   730,  1225,   261,  3476,   444,  4219,   447,
    1231,  1232,   273,   182,  2357,   765,  5710,  5711,   858,   763,
     860,   861,   862,   767,  2617,  4157,  2420,   867,  4160,   869,
    2623,  4277,     9,    10,   225,   769,  4282,   112,  3256,   946,
      95,   604,  2436,   117,  5738,  2774,   273,  2776,  3913,  4030,
    4031,  2445,   615,  3891,   128,   367,  3256,   495,   698,   966,
    4094,   135,   702,   283,  3706,   256,   973,   974,   123,  3337,
    3338,  3339,  3340,     9,    10,  5724,  5725,   763,  4059,   748,
     749,   750,   302,   138,   770,  4100,  5285,  5286,   649,  4104,
     164,   115,  2685,  5833,  2687,  2438,   765,   115,    57,   675,
     334,   335,   115,  4084,    81,   770,  2699,   276,  2701,  2702,
     168,   169,     9,    10,  5538,  4149,  5784,   328,  4212,   719,
      97,   763,  2715,  3341,   754,  2718,  5400,   182,   770,  3599,
      89,  5871,   770,  2527,   764,   765,   763,   371,  3606,  5879,
     763,   753,   754,   770,    84,    81,   105,   770,   261,   126,
     763,   225,   590,   763,   730,   132,   644,   770,   369,   422,
     770,    97,   728,  4331,    49,  4680,     9,    10,   248,  5909,
       9,    10,  3390,    76,  1386,  1387,  3646,   763,  1390,   413,
     268,  2774,   256,  2776,    81,  4643,     5,   146,   763,   166,
     126,    95,   763,   631,    84,   770,   132,   675,    95,   770,
      97,   125,   764,   765,   181,   416,   183,   499,   594,   501,
     502,   649,   634,   518,   519,   174,   763,   522,   523,   524,
     748,   749,   750,   434,   516,   764,   765,    76,    77,   126,
     166,   764,   765,  2034,   571,   132,   764,  4216,    81,  3762,
    3763,   689,    81,  3766,  3767,   181,   461,   183,   177,  3772,
    3773,   268,   690,  2708,    97,   693,   764,   765,    97,   110,
     111,   472,  1102,   764,   765,  3735,   764,   765,   580,   166,
     177,  2726,   764,   765,   765,  3566,  3567,  3568,  3569,   764,
     765,   413,   720,   126,   181,   114,   183,   126,   334,   132,
     728,   764,   765,   132,   343,  2750,  2751,  2890,  3566,  3567,
    3568,  3569,  5970,   769,  2759,  2760,  2761,  4439,  4402,  5971,
     521,   772,     9,    10,   273,  4164,   201,  3511,   763,   153,
    2912,   613,   614,   166,  2718,   302,   194,   166,  4164,   752,
     753,   754,   755,   756,   757,   758,   763,  2930,   181,   763,
     183,   552,   181,    18,   183,   764,   765,   558,   763,  4480,
    4164,  4482,  5776,   395,   701,   702,   590,   704,   763,   706,
     764,   765,   764,   765,  2957,  2708,   302,  3658,   763,  2962,
    4501,   764,   765,   607,  2967,   687,   261,  2970,  2971,  2972,
    4511,   722,    57,  2726,    81,   270,   764,   765,   763,  2982,
    3658,   763,  4523,   764,   765,   764,   765,   763,   632,   763,
      97,   764,   765,   764,   765,   302,   763,  2750,  2751,  4540,
     763,    86,  4812,   763,    89,    34,  2759,  2760,  2761,   764,
     765,  3855,   464,  3016,  3153,   764,   765,   312,   763,   126,
     105,   106,   763,  4193,  2981,   132,   763,   671,   764,   765,
     753,   754,   755,   756,   757,   758,   763,  5439,   763,  5441,
     764,   765,   763,   115,  3183,  3184,   763,  2912,   163,   302,
      69,  3140,  3055,   302,   675,  4658,  4659,   764,   765,   166,
     763,   146,   722,   764,   765,   764,   765,     9,    10,    57,
     764,   765,  3716,  4193,   181,  5000,   183,   529,   763,   531,
     165,   763,  1332,   763,   536,   763,    69,   763,   173,   174,
     764,   765,   764,   765,  3233,   764,   765,  4356,   763,   343,
     763,    89,   764,   765,  4156,   763,   125,  1566,  1567,   730,
    4356,   764,   765,   764,   765,   764,   765,   105,   748,   749,
     750,   763,   110,   111,   764,   765,  4350,   422,   763,  4181,
    4182,  3134,  3135,   369,   763,   765,  4640,  3140,   188,    81,
     764,   765,   125,   162,   765,   389,  3149,  4487,   600,   763,
    3153,  3016,   447,  2957,   763,    97,  4004,   763,   146,  2912,
     763,   180,   764,   765,   764,   765,  4457,  4507,  2972,   764,
     765,   188,   764,   765,   763,   763,  4516,   763,   263,   162,
    3183,  3184,  4522,   763,   126,  3891,   174,   272,   273,   274,
     132,   643,  4532,  3058,   763,   302,   763,   180,  3063,   764,
     765,  4541,  4542,   764,   765,  5073,   764,   765,   764,   765,
    3212,  3213,  3214,  3215,   763,  3217,  3218,   236,   237,   764,
     765,   764,   765,   188,   166,   763,   470,  3855,   764,   765,
    3233,   764,   765,   764,   765,  3913,   472,   764,   765,   181,
     735,   183,  4633,   764,   765,   763,  3249,   764,   765,   764,
     765,   764,   765,   236,   237,   764,   765,   764,   765,   763,
    4689,   763,    34,  3265,  3266,   263,  3268,   763,  3270,  3271,
    3272,  3273,  3274,  3275,  3276,   763,  3278,  4666,   770,  3281,
     732,   763,  2493,  3285,   763,   273,   763,  4508,   532,    61,
     763,   743,     9,    10,  4515,   194,  4971,   369,   764,   765,
     763,   386,   764,   765,   376,  3058,   550,   551,   763,   394,
    3063,   555,   556,   557,   764,   765,   552,   763,  4971,   391,
    5159,   763,   558,   764,   765,  5193,   764,   765,  3331,   194,
    3134,  3135,   763,  3336,  3337,  3338,  3339,  3340,   110,   111,
    3343,  4562,  5191,   763,   416,  3149,   763,   763,   763,   763,
     645,   763,   763,   763,   763,   763,   763,   763,   130,  4618,
     302,   748,   749,   750,    81,   763,   763,   763,   763,   763,
     763,   763,   763,   609,   763,  4003,  4004,   764,   765,   623,
      97,  3498,   763,   763,   763,  3530,   763,  4646,   763,   763,
     763,  3256,  5007,  4003,   496,   763,   168,   169,   763,   763,
    4646,   173,   748,   749,   750,   177,   763,   763,  4852,   126,
     763,   763,   763,   748,   763,   132,   763,   765,   764,   765,
     763,   571,  4646,   177,    95,   720,  4650,   671,   200,  4481,
     177,   234,   770,   728,   770,   656,  4040,   770,   770,   675,
     770,   748,   749,   750,   770,   770,   770,   770,   520,   166,
       9,    10,  5387,   763,   770,    42,   673,   421,   765,   138,
      93,   533,   673,   689,   181,   662,   183,  4168,  4169,   496,
     415,    93,   765,   765,  3477,   283,  3341,  4868,   714,   662,
     552,   343,    49,   765,   377,   765,   765,     9,    10,   566,
    4168,  4169,   684,   748,   730,   748,   749,   750,    80,   748,
     749,   750,   764,  3256,   728,   277,   447,   447,   287,   763,
     230,   764,   765,    61,   391,   764,   765,     5,   570,   771,
     390,     4,    81,  4127,   728,  3390,   413,   770,  3531,   301,
     117,   296,  4136,    14,   765,   770,   177,   770,    97,  3343,
    4184,   128,  3545,  4184,   416,  3548,   630,   408,   135,   689,
     764,   763,   112,   295,   493,   548,  4184,   329,  4817,    81,
    1810,    95,   123,  3566,  3567,  3568,  3569,   126,   295,  5408,
     763,  4817,   148,   132,   769,    97,   765,   164,  5120,  3718,
    3583,  3584,   763,     6,   413,   302,   764,   764,  3341,   764,
     177,  4184,    68,  3738,   319,   765,   770,   369,   369,   764,
     764,   764,   374,   675,   126,   635,    93,   166,   770,    93,
     132,   764,   764,   698,   298,  4184,   701,  4184,   690,   764,
     763,  3710,   181,   770,   183,   710,   137,  3744,   763,   100,
     268,  3634,   765,  4353,   201,  3638,   765,  3390,   225,  5254,
     772,   748,   749,   750,   166,   416,   193,   765,    93,   770,
      34,   765,   765,   673,   755,  3658,   125,   764,   765,   181,
     476,   183,   686,  3666,    93,   765,   436,  3670,   421,   256,
    5538,  5175,     9,    10,   673,   765,   763,   771,   125,   765,
    4298,   248,   346,   193,  2895,   214,   496,   496,   343,   496,
    5539,  3694,   496,   748,  3697,   496,  5535,  5536,   496,   765,
    1950,   472,   765,  4547,     9,    10,   268,  3710,   659,   481,
      84,   582,   728,     9,    10,  3718,  3719,  5295,    26,    95,
     755,  5299,   765,   764,   404,     9,    10,   763,  5403,  5404,
    3733,  3733,   751,   752,   753,   754,   755,   756,   757,   758,
     466,   581,   466,   302,    81,  1995,   764,  4391,    29,   295,
    5403,  5404,   765,   765,   321,   282,   719,   688,   765,    95,
      97,  4379,   182,   765,   765,   268,   763,   116,   751,   752,
     753,   754,   755,   756,   757,   758,    81,     9,    10,  3905,
     302,   552,   123,   636,    59,    81,   764,   558,   764,   126,
     764,   764,    97,   413,   755,   132,   764,    81,   764,   754,
      95,    97,   764,  3843,  2054,  2055,   748,   749,   750,   763,
     770,   764,   764,    97,   764,   764,   764,  5268,   764,     9,
      10,   126,   764,   765,   235,   193,   764,   132,   764,   166,
     126,   764,   399,   765,  5673,  3838,   132,   765,   609,   764,
     764,  4469,   126,   765,   181,   765,   183,   765,   132,    81,
     764,   764,     9,    10,   763,   422,   763,   763,   758,  4469,
     763,   166,  3666,   764,  4916,    97,  3670,   361,   577,  5447,
     166,   263,   748,   263,   263,   647,   181,   268,   183,   763,
     447,    99,   166,    95,  5484,   181,  3889,   183,    93,  4530,
     765,    81,  3895,    93,   126,   763,   763,   181,   490,   183,
     132,   765,  4530,    95,   675,   765,   425,    97,   226,   764,
    3913,  3122,   770,   770,   770,   601,   770,   234,   765,  4547,
       9,    10,  4642,    62,    81,     6,   765,  4807,   495,   718,
     765,    93,   177,   177,   166,   263,   126,  4530,  5777,   125,
      97,   280,   132,   714,   100,   765,  5561,   764,   763,   181,
     544,   183,   644,   298,   248,   248,   248,   248,   248,   730,
     177,  4530,    93,  4530,   736,   302,   763,   264,   748,   126,
     748,   748,   748,   748,   748,   132,   166,   765,   495,   748,
     345,   748,   748,   283,   748,   748,   748,   352,   748,   748,
    3855,   181,    81,   183,   765,  5216,  3999,   302,   748,   748,
     748,   719,   748,   368,   748,  3216,   302,   748,    97,   166,
     748,   748,   748,   378,   379,   380,   748,   138,   302,   770,
     765,   345,    72,   388,   181,   268,   183,   316,   352,     9,
      10,   748,   749,   750,   268,   770,   770,   126,   268,   268,
     739,  5430,   765,   132,   368,   493,   375,  5551,   765,   123,
    3261,  4895,  3263,  3264,   378,   379,   380,   769,  3269,   764,
     122,   122,   770,   764,   388,   188,  3277,   764,   764,   764,
     302,  3282,   770,   754,   764,   764,  5520,   166,   645,   770,
     754,  5251,   649,    26,   682,   321,   764,   764,   268,  4092,
     765,  4971,   181,   763,   183,   763,   230,   571,    95,    95,
      95,    81,  3855,    95,   263,   263,   478,   207,   770,   765,
     754,   425,   302,  5372,   174,   763,   128,    97,   128,  4122,
     185,    11,   765,   690,   763,   748,  5372,  5571,  4769,   748,
    4269,  5251,   530,   765,  4137,  4137,    92,   316,  4003,  4004,
     177,  4769,     9,    10,  4762,   302,   126,  4150,  5372,  4767,
    4768,   765,   132,   720,    17,   770,   651,    26,  4161,   104,
    4163,   728,   770,   528,  4167,  4168,  4169,   764,   763,   765,
    5429,   391,   391,   263,     9,    10,  4769,   542,   263,   263,
     215,  4184,  4185,    11,  4323,   763,   166,  4332,  2438,   748,
     749,   750,   763,   763,   100,   770,   221,   755,    93,   764,
    4769,   181,  4769,   183,   528,   764,   765,   571,   177,  4212,
     268,   755,   114,   302,    81,   456,   765,  4220,   542,   769,
     408,   763,   763,   763,   124,   124,   748,   749,   750,   764,
      97,   764,   764,   764,   174,   763,   230,   122,   182,   765,
     770,   765,   764,   765,   764,  4247,    81,   110,   111,   770,
    4003,  4004,  4880,    26,   216,   764,   764,   764,   763,   126,
     764,   763,    97,  4265,  4266,   132,  4269,  4895,  5712,  4394,
    4880,   748,   763,  4275,   764,   230,    95,   642,   770,  5783,
    4283,  4284,  5541,  4286,    95,   764,   764,  5131,  4929,  5510,
    5511,   126,  5513,   207,   764,  5541,   128,   132,   128,   166,
     765,  4929,    94,   627,   297,  4308,  4308,   763,   763,   763,
    5534,   207,   763,   678,   181,   541,   183,  5541,   642,  4184,
    4323,   748,   302,   765,   391,   404,   726,   692,   404,   193,
     763,   166,  4335,   763,  4337,  4337,  4929,   765,   534,   763,
    5791,   734,   764,  4432,   263,   367,   181,   193,   183,   193,
     268,  4490,  5072,   193,   678,    26,  5200,  4496,   129,   193,
    4929,   129,  4929,   690,   193,   690,  4368,   193,   692,   578,
     193,   193,   193,    11,   268,  4378,   425,   226,    99,   410,
     488,   199,   763,   374,   763,  5229,   563,  4390,    61,    93,
      93,     9,    10,   174,  5838,  4388,    26,  4400,   764,  4402,
     298,   232,   764,   764,  4407,  4408,   630,   490,  4401,   764,
    4413,   748,   749,   750,   764,   182,  4409,  4420,   765,    26,
    5679,   764,  4425,  4416,   764,  4418,  4419,   764,   765,  4432,
    5482,   765,   139,  5679,  4437,   302,  5940,  5658,   193,  5660,
    5661,   128,   765,   748,   749,   750,   128,   432,   764,  5900,
    5954,   143,   748,   749,   750,  5679,  5960,  5681,  2708,  5077,
     765,   765,  5966,    81,   748,   749,   750,   302,   764,   765,
     738,    94,   212,    11,   628,   763,  2726,   763,   765,    97,
    4284,   765,   764,   177,   764,   770,   662,  4490,   764,   174,
     764,   174,   765,  4496,   764,     9,    10,   112,   726,   130,
    2750,  2751,    94,  5131,   726,   200,   471,   177,   126,  2759,
    2760,  2761,   177,   591,   132,   369,   748,   749,   750,   264,
      42,   425,  4525,  5403,  5404,   571,   298,  5371,   123,   374,
     293,   293,   211,   765,   563,    17,   763,   138,   484,   402,
     765,   764,    42,   764,   534,   601,   124,    32,   166,   764,
     764,  5603,  5400,   416,   764,   418,   764,   764,   748,   749,
     750,   764,    26,   181,   765,   183,  4705,    81,   770,   764,
     764,   283,  5200,   283,   763,   765,   563,   764,    10,   763,
     765,   763,   763,    97,   130,   448,  3797,  3798,  3799,   764,
     763,   748,   749,   750,   130,   117,  5648,    11,   641,    11,
     463,  5229,   361,  4407,  4469,   765,   128,    11,   765,   764,
     123,   130,   126,   135,   765,   765,   764,   117,   132,   373,
     298,   655,   408,   130,   261,   279,   770,   304,   128,  4632,
     748,    93,    32,   496,    93,   135,   765,  4640,   764,   174,
    5692,   534,   164,   431,   764,   764,  3857,  3858,   763,  3860,
     670,   514,   166,   764,   283,   177,   283,    10,    58,   748,
     749,   750,   268,   405,   164,  4530,   763,   181,   763,   183,
      70,   283,   770,   570,   770,    33,   765,   177,   770,   770,
      67,   177,  4547,   770,   302,   765,   140,   764,   770,    84,
      90,    84,   261,  4696,  4833,   770,   764,   770,   770,   770,
     770,   770,  4705,   225,  4707,  4708,   770,  4709,  5336,   763,
     298,  5932,   765,   770,   571,   770,  4469,     9,    10,   763,
     280,   174,   445,  4725,   124,   225,   764,     9,    10,   636,
     589,   594,   764,   426,   256,   349,   764,   589,   601,  4779,
     763,   174,   763,  5371,   763,   151,   764,   763,   611,   764,
     301,   765,    91,  4756,   563,    26,   256,    26,    79,  4876,
    4763,   624,  4765,    26,    61,    61,  3016,  4770,   748,   749,
     750,   770,  5400,    10,   696,   764,   764,  4530,   670,   177,
    5427,   764,  4785,   283,  4824,   765,  4788,  4827,   302,    81,
     681,   763,   655,   763,  4547,   658,   763,   130,   687,    81,
     726,   130,   173,   280,   322,    97,    61,    11,  3058,   209,
     673,   563,    26,  3063,    26,    97,    26,   123,   414,   636,
     571,   404,   764,   404,     9,    10,  4829,  4830,  4831,   763,
    4833,  4834,  4825,  4836,   126,    33,    33,  4840,  4841,   763,
     132,  4844,   416,    93,   126,     9,    10,   575,   764,   722,
     132,  4854,  4855,   763,  4857,   763,   170,   770,   763,   143,
    4863,   321,   763,   571,    93,   571,    33,     9,    10,    36,
     682,  4873,  4083,    26,   166,  4878,   763,   765,   764,   279,
     763,   748,   749,   750,   166,   763,   770,   408,    26,   181,
     315,   183,   763,   763,  4105,   770,    81,   764,  4901,   181,
     177,   183,   177,   226,  4769,   765,   280,    63,   764,  4949,
     466,  5963,    97,   748,   749,   750,   764,    81,    75,    26,
     636,     9,    10,   764,   114,    92,   174,   763,   765,    96,
     765,   234,  2981,    97,  1777,   874,  1215,  5584,  3639,    81,
    3283,   126,  4884,  4886,  4882,  1864,  4949,   132,   115,  2534,
    4953,  3137,  5446,  3783,  5136,    97,  5503,  5652,  1989,  4763,
    5844,  4787,   126,   130,  1175,  5324,  1301,  4953,   132,  4929,
    5221,  5332,  5236,  5395,  4544,  2472,  1637,  3646,  5336,  3383,
    3329,   166,  4470,  2633,   126,   778,  4004,  2054,  2053,  1342,
     132,  2055,   392,    81,   394,  2056,   181,  1927,   183,  5454,
    1982,  5120,   166,  5304,  3837,  3245,  3256,  5152,  4146,    97,
     302,  4150,  5015,  5013,  4848,  4880,  4769,   181,  2293,   183,
     302,  4632,  5268,  5026,   166,  5700,   193,  5786,  5017,  5900,
    4895,  5864,    49,   200,  5902,  5584,  3697,  4162,   126,   181,
    4646,   183,  5045,  3832,   132,  2512,  4257,  4258,  4259,  5693,
    5322,  5054,  4263,  4264,  5806,  3838,  4425,  4268,  4756,  5062,
    4271,  5841,  5637,  4274,  4929,  5068,  5647,  5524,  5071,  3940,
    4281,  4062,    11,  3995,   241,  5167,  5650,  5080,   166,    96,
    5693,  5084,  5085,  4489,  4497,   632,  3481,   634,  4104,  4101,
    4096,  3341,    86,   181,  5870,   183,    86,  5835,   115,   646,
    5836,  5307,  5727,    42,  5144,   652,   653,  5607,  5600,  5296,
     277,   658,  4515,  5957,  3837,  4422,  1320,   302,  1832,  5368,
    3119,  3115,     9,    10,  5127,   672,  1189,  4880,  5689,  2623,
     748,   749,   750,     9,    10,  5166,  1964,  2310,   302,  2445,
    3390,    80,  4895,  3343,    83,   545,   546,   765,  3925,  3742,
    2734,  5154,    91,  1278,    93,  5373,  3496,  4817,  1275,  2572,
     302,   100,  5165,  5679,  1894,   104,  5169,  3169,  4137,  2844,
    2840,  1570,  5175,  3530,  1480,   114,  4929,  1448,   117,  5182,
    4136,  3056,   121,  5328,   123,  1628,  3050,  3615,  4116,   128,
    3044,  4667,  5592,  5443,    81,  5868,   135,  4696,  5869,   138,
     367,  1454,  3728,  5154,   143,    81,  5153,  5210,  3520,  5561,
      97,  5175,  5007,  3599,   302,  5152,  5003,  5046,  5221,  3718,
    5223,    97,  2553,    86,   241,   164,  1400,  2685,    33,  1647,
     777,    36,  4640,  4212,   748,   749,   750,  4245,   177,   126,
    2727,  3209,  5783,   182,   261,   132,  4214,   656,  1976,  2416,
     126,   765,   795,  1712,   796,  5902,   132,   653,  5375,  2417,
     277,  3039,   201,   653,  1273,   110,  5131,  2466,  5068,  1822,
    3928,  5057,  1404,  5342,  5898,  5921,  5316,  5517,  5960,   166,
    5320,  5966,   971,  3616,  2439,  4161,   225,    92,  3014,  2912,
     166,    96,  4184,  5296,   181,   234,   183,   652,  2235,  2361,
     847,   701,   652,  5306,   321,   181,  5309,   183,  2994,  2993,
     115,   858,  1849,   860,   861,   862,  2035,   256,  5321,   650,
     867,  3796,   869,  1656,  1109,   130,  2617,  2970,  5331,  5957,
    1396,  3129,  5207,  4544,  3331,  5200,  3843,   276,  3610,   688,
    4203,  1223,  4670,   282,   283,  5484,  3044,    86,    86,  5352,
      86,  5684,  2528,   900,    -1,  5395,    -1,   296,   905,   298,
      -1,  5364,   301,    -1,  5229,    -1,    -1,    -1,    -1,  5362,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5131,  5382,
    5383,    -1,   399,    -1,    -1,    -1,    -1,    -1,   935,    -1,
      -1,    -1,  5395,    -1,    -1,   200,    -1,    -1,   945,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5210,    -1,    -1,    -1,
      -1,    -1,    -1,   580,    -1,   302,  5419,    -1,    -1,    -1,
       9,    10,    -1,    -1,     9,    10,   302,    -1,    -1,  5432,
      -1,  5434,    -1,    -1,    -1,  5475,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5200,    -1,    -1,
    5453,    -1,    -1,  5493,    -1,    -1,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,  5471,
      -1,  5336,   277,   765,    -1,    -1,  5229,    -1,    -1,    -1,
      -1,  5484,    -1,   765,    -1,    -1,    -1,  1034,  1035,  1036,
    1037,    -1,    81,    -1,    -1,    -1,    81,    -1,  1045,    -1,
      -1,    -1,    -1,    -1,   443,  5508,  5371,    -1,    97,    -1,
      -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     9,    10,
      -1,    -1,    -1,    -1,    -1,  5400,    -1,   126,    -1,    -1,
      -1,   126,    -1,   132,  2575,  2576,    -1,   132,  5551,    -1,
    5553,    -1,    -1,    -1,    -1,  1102,    -1,    -1,    -1,    -1,
    5364,  2592,   367,   748,   749,   750,    -1,  5684,    -1,    -1,
      -1,  2602,  2603,    -1,  5713,    -1,    -1,   166,    -1,    -1,
     765,   166,    -1,  5336,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   181,    -1,   183,  5597,   181,    -1,   183,    -1,
      81,   765,    -1,    -1,    -1,  3855,   748,   749,   750,    -1,
    5650,    -1,    -1,  5616,   631,    -1,    97,    -1,  5371,  5622,
      -1,  5624,  5625,   765,    -1,    -1,    -1,    -1,   645,    -1,
    5633,  5633,   649,    -1,    -1,    -1,  2667,  2668,  2669,  2670,
       9,    10,    -1,    -1,    -1,   126,    -1,  5400,  5651,    -1,
    5653,   132,    -1,    -1,    -1,    -1,  1203,    -1,  1205,    -1,
     748,   749,   750,    -1,    -1,    -1,    -1,  5806,    -1,    -1,
      -1,  4882,    -1,  4884,    -1,  4886,   693,   765,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   166,  5689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5700,  5843,    -1,
     181,    -1,   183,   720,    -1,  5707,  5708,    -1,    -1,    -1,
    5713,    -1,    81,   302,    -1,    -1,    -1,   302,    -1,    -1,
      -1,    -1,    -1,  5862,  5764,    -1,    -1,    -1,    97,    -1,
      -1,    -1,    -1,    -1,    -1,  5738,  5738,    -1,  4949,  5742,
    5743,    -1,    -1,    -1,    -1,    -1,  5749,    -1,    -1,    -1,
      -1,    -1,    -1,  4003,  4004,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,   132,    -1,  5768,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   580,    -1,    -1,    -1,    -1,
    5783,    -1,  1329,   264,  1331,  1332,    -1,    -1,  4999,    -1,
      -1,    -1,    -1,  5795,    -1,   734,  5798,   166,    -1,    -1,
    5840,  5841,    -1,  5806,    -1,  5944,    -1,    -1,    -1,   748,
      -1,  5950,   181,    -1,   183,    -1,    -1,    -1,    -1,    -1,
      -1,   302,  5967,  5826,    -1,   764,   765,    -1,    -1,   768,
     769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5845,    -1,    -1,  5885,    -1,  5651,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1402,    -1,  1404,    -1,  5862,
      -1,   748,   749,   750,    -1,  5868,  5869,    -1,    -1,    -1,
      -1,    -1,   748,   749,   750,    -1,    -1,    -1,   765,    -1,
      -1,    -1,   687,  1430,    -1,    -1,    -1,    -1,    -1,   765,
      -1,    -1,  5895,    -1,  1441,  1442,    -1,    -1,    -1,    -1,
    1447,    -1,    -1,    -1,  1451,  1452,  1453,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1462,  1463,    -1,    -1,    -1,
      -1,  1468,    -1,  1470,  1471,  1472,  1473,  1474,    -1,  1476,
      -1,    -1,    -1,   302,  4184,    -1,    -1,  5940,    -1,    -1,
    1487,  5944,  1489,    -1,    -1,  1492,  1493,  5950,  1495,  1496,
    1497,  5954,  1499,  1500,  1501,    -1,    -1,  5960,    -1,  1506,
      -1,    -1,  1509,  5966,    -1,    -1,    -1,    -1,    -1,    -1,
    1517,  1518,    -1,  1520,  1521,  1522,    -1,    -1,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,    -1,  1533,  1534,  1535,  1536,
    1537,  1538,    -1,  1540,  1541,    -1,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,    -1,    -1,  1552,  1553,  1554,  1555,    -1,
    1557,  1558,  1559,    -1,  1561,    -1,  1563,    -1,  1565,    11,
      -1,    -1,  1569,  1570,  1571,    -1,    -1,  1574,  1575,  1576,
    1577,  1578,    -1,  1580,    -1,    -1,    -1,    -1,    -1,    -1,
    1587,    -1,    -1,    -1,    -1,  1592,    -1,    -1,    -1,    -1,
      42,    -1,  1599,    -1,  5265,    -1,  1603,  1604,  1605,  1606,
      -1,  1608,  1609,    -1,    -1,  1612,  1613,  1614,  1615,  1616,
    1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,     9,    10,
    1627,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
      -1,    83,  5957,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,   100,     9,
      10,    -1,   104,    -1,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1670,    -1,   117,    -1,    -1,  1675,   121,
      -1,   123,    -1,    -1,   634,    -1,   128,    -1,  1685,     9,
      10,    -1,    -1,   135,    -1,    -1,   138,    -1,    -1,    -1,
      81,   143,    -1,     9,    10,    -1,    -1,    -1,   658,   748,
     749,   750,    -1,   748,   749,   750,    97,  3198,  3199,    -1,
    3201,  3202,   164,    -1,    -1,    -1,   765,     9,    10,    -1,
     765,    81,    -1,    -1,  5395,   177,    81,    -1,    -1,    -1,
     182,    -1,    -1,    -1,    -1,   126,    -1,    97,    -1,    -1,
      -1,   132,    97,    -1,  5957,    -1,  1753,    -1,    -1,   201,
      -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4469,
      -1,    -1,    -1,    -1,    -1,    81,   126,    97,    -1,  1776,
      -1,   126,   132,   225,    -1,   166,    -1,   132,    -1,    -1,
      -1,    97,   234,    -1,    -1,    -1,    -1,    -1,    -1,    81,
     181,    -1,   183,    -1,    -1,    -1,   126,    -1,    -1,    -1,
      -1,  3292,   132,  1810,   256,    97,   166,   748,   749,   750,
     126,   166,    -1,    -1,    -1,    -1,   132,   777,    -1,    -1,
    4530,   181,    -1,   183,   276,    -1,   181,    -1,   183,    -1,
      -1,   283,    -1,    -1,   126,    -1,   166,  4547,    -1,    -1,
     132,    -1,    -1,    -1,   296,    -1,   298,    -1,    -1,   301,
     166,   181,    -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   847,    -1,   181,
      -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     9,
      10,   302,    -1,    -1,    -1,    -1,    -1,     9,    10,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   765,    -1,    -1,    -1,
       9,    10,   302,  1950,    -1,   905,    -1,   302,     9,    10,
      -1,    -1,    -1,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   302,    -1,    -1,   935,    -1,    -1,    -1,    -1,
      -1,    81,    -1,    -1,    -1,   945,   302,    -1,  1995,    81,
      -1,    -1,     9,    10,    -1,    -1,    -1,    97,    -1,    81,
       9,    10,    -1,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     302,    -1,    81,    -1,    -1,    97,    -1,  2024,    -1,    -1,
      81,    -1,    -1,    -1,    -1,    81,   126,    -1,    97,    -1,
      -1,  2038,   132,    -1,   126,    -1,    97,    -1,    -1,    -1,
     132,    97,    -1,    -1,   126,    -1,    -1,  2054,  2055,  2056,
     132,    -1,  2059,    -1,    -1,    -1,    -1,   126,    -1,  4769,
    2067,  2068,  5733,   132,    81,   126,   166,    -1,    -1,    -1,
     126,   132,    81,    -1,   166,    -1,   132,  1037,    -1,    -1,
      97,   181,    -1,   183,   166,    -1,    -1,    -1,    97,   181,
      -1,   183,    -1,    -1,    -1,    -1,    -1,   166,    -1,   181,
      -1,   183,    -1,    -1,    -1,   166,    -1,    -1,    -1,   126,
     166,    -1,   181,    -1,   183,   132,    -1,   126,    -1,    -1,
     181,    -1,   183,   132,    -1,   181,    -1,   183,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2153,  2154,  2155,   166,
      -1,    -1,    -1,    -1,     9,    10,    -1,   166,    -1,    -1,
      -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,    -1,
    4880,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,    -1,
    3671,  3672,  3673,  3674,  3675,  4895,  3677,  3678,  3679,  3680,
    3681,    -1,  3683,  3684,  3685,  3686,  3687,  3688,  3689,  3690,
    3691,  3692,   302,    -1,  3695,  3696,     9,    10,    -1,    -1,
     302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4929,
     302,    -1,    -1,    -1,  2231,    -1,    81,    -1,    -1,    -1,
       9,    10,    -1,   302,    -1,    -1,    -1,    -1,    93,    -1,
      -1,   302,    97,  1203,    -1,  2252,   302,    -1,  2255,  2256,
      -1,  2258,  2259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2267,    -1,  2269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   126,    -1,    -1,    -1,    -1,    -1,   132,    81,    -1,
      -1,    -1,   734,    -1,    -1,   302,    -1,    -1,    -1,    -1,
    2297,    -1,    -1,   302,    97,    -1,   748,    -1,    -1,    -1,
      -1,    -1,    81,    -1,    -1,  2312,    -1,    -1,    -1,    -1,
      -1,   166,   764,   765,    -1,    -1,   768,   769,    97,    -1,
    3811,    -1,  2329,   126,    -1,  3816,   181,    -1,   183,   132,
      -1,    -1,    -1,    -1,    -1,    -1,  2343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
    2357,  2358,    -1,   132,    -1,    -1,    -1,   748,   749,   750,
      -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,  1329,
      -1,  1331,    -1,  2380,   765,    -1,    -1,    -1,   181,    -1,
     183,    -1,    -1,    -1,    -1,    -1,    -1,   166,   748,   749,
     750,    -1,    -1,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,   181,    -1,   183,   765,    -1,    -1,    -1,    -1,
     765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,
     750,  5131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2438,   748,   749,   750,   765,    -1,    -1,    -1,    -1,
      -1,    -1,  1402,    -1,  1404,    -1,    -1,   302,    -1,   765,
    2457,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,  2466,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1430,    -1,    -1,   765,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1447,    -1,    -1,
    5200,  1451,    -1,  1453,    -1,    -1,    -1,    -1,    -1,   302,
      -1,    -1,  1462,  1463,    -1,    -1,    -1,    -1,  1468,    -1,
    1470,  1471,  1472,  1473,  1474,    -1,  1476,    -1,    -1,  5229,
      -1,    -1,    -1,   302,    -1,    -1,    -1,  1487,    -1,  1489,
      -1,    -1,  1492,  1493,    -1,  1495,  1496,    -1,    -1,  1499,
    1500,  1501,    -1,    -1,    -1,    -1,  1506,    -1,    -1,  1509,
      -1,    -1,    -1,    -1,    -1,  2562,    -1,  1517,  1518,    -1,
    1520,    -1,  1522,    -1,    -1,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,    -1,  1533,  1534,  1535,  1536,  1537,    -1,    -1,
    1540,  1541,    -1,    -1,  1544,  1545,  1546,    -1,    -1,    -1,
      -1,    -1,  1552,  1553,  1554,    -1,    -1,  1557,  1558,  1559,
      -1,  1561,    -1,  1563,    -1,  1565,    -1,    -1,    -1,  1569,
    1570,  1571,    -1,    -1,  1574,  1575,  1576,  1577,  1578,    -1,
    1580,    -1,  2629,    -1,    -1,    -1,  5336,  1587,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1599,
      -1,    -1,    -1,  1603,  1604,    -1,    -1,    -1,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,    -1,
      -1,  5371,    -1,    -1,    -1,   765,   748,   749,   750,    -1,
      -1,    -1,    -1,   765,    -1,    -1,    -1,    -1,    -1,   748,
     749,   750,  2689,   765,    -1,    -1,    -1,   748,   749,   750,
    5400,    -1,   748,   749,   750,    -1,   765,    -1,    -1,    -1,
      -1,  2708,    -1,    -1,   765,    -1,     9,    10,    -1,   765,
    1670,    -1,    -1,    -1,    -1,  1675,    -1,    -1,    -1,  2726,
      -1,    -1,    -1,    -1,    -1,  1685,     9,    10,    -1,    -1,
      -1,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,   748,
     749,   750,    -1,  2750,  2751,    -1,    -1,    -1,   765,    -1,
      -1,    -1,  2759,  2760,  2761,   764,    -1,    -1,    -1,  2766,
      -1,    -1,  2769,  4254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2778,    -1,    -1,    -1,    -1,  4267,    -1,    81,  2786,
      -1,  2788,    -1,  2790,    -1,  2792,  2793,  2794,  2795,  2796,
    2797,    -1,  2799,  1753,    97,    -1,    -1,    -1,    81,    -1,
    2807,    -1,  2809,    -1,    -1,  2812,  2813,  2814,  2815,    -1,
      -1,  2818,  2819,    -1,    97,  2822,  1776,  2824,    -1,  2826,
      -1,  2828,    -1,   126,    -1,  2832,    -1,    -1,    -1,   132,
      -1,    -1,    11,  2840,    -1,  2842,    -1,  2844,  2845,  2846,
    2847,  2848,    -1,   126,  2851,  2852,  2853,    -1,  2855,   132,
      -1,  2858,    -1,    -1,    -1,    34,     9,    10,    -1,    -1,
      -1,    -1,    -1,   166,  2871,     9,    10,    -1,    -1,  2876,
      -1,    -1,  2879,    -1,  2881,  2882,  2883,    -1,   181,  2886,
     183,    -1,    61,   166,    -1,  2892,    -1,    -1,    -1,    -1,
    2897,    -1,    -1,   748,   749,   750,    -1,    -1,   181,    -1,
     183,    -1,    -1,     9,    10,  2912,  2913,    -1,    -1,   764,
      -1,    -1,  2919,    -1,    -1,  2922,    -1,    -1,  2925,    -1,
      -1,    -1,    -1,     9,    10,    -1,    -1,  2934,    81,  2936,
      -1,   110,   111,    -1,  2941,    -1,    -1,    81,    -1,    -1,
      -1,    -1,    -1,    -1,    97,   748,   749,   750,    -1,    -1,
      -1,   130,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   764,     9,    10,    -1,    -1,    -1,    -1,    -1,   748,
     749,   750,    -1,   126,    -1,    81,  2983,    -1,    -1,   132,
      -1,    -1,   126,     9,    10,   764,    -1,    -1,   132,   168,
     169,    97,    -1,    -1,   173,    81,    -1,    -1,   177,   302,
      -1,    -1,    -1,    -1,    -1,  3012,    -1,    -1,    -1,  3016,
      -1,    97,    -1,   166,    -1,     9,    10,    -1,    -1,   302,
     126,   200,   166,    -1,    -1,    -1,   132,    -1,   181,    -1,
     183,    -1,    -1,    -1,    81,    -1,    -1,   181,    -1,   183,
     126,    -1,    -1,    -1,    -1,    -1,   132,    -1,    -1,    -1,
      97,  3058,    -1,     9,    10,    81,  3063,    -1,    -1,    -1,
     166,    -1,    -1,    -1,  2024,    -1,    -1,    -1,    -1,    -1,
      -1,    97,    -1,    -1,    -1,   181,    -1,   183,  2038,   126,
     166,    -1,    -1,    -1,    -1,   132,    -1,    81,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   181,  2056,   183,   277,  2059,
     126,    -1,    -1,    97,    -1,    -1,   132,  2067,  2068,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   166,
      -1,    -1,   301,    -1,    -1,    81,    -1,    -1,    -1,  3136,
      -1,    -1,   126,    -1,   181,    -1,   183,    -1,   132,    -1,
     166,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,
     329,    -1,  3159,    -1,    -1,   181,    -1,   183,   302,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3173,    -1,    -1,    -1,
     126,    -1,   166,    -1,    -1,    -1,   132,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,  3195,   183,
     369,    -1,    -1,  2153,  2154,  2155,   302,    -1,    -1,    -1,
      -1,     9,    10,    -1,    -1,     9,    10,    -1,    -1,    -1,
     166,    -1,    -1,    -1,  3221,  3222,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,
       5,    -1,     7,     8,    -1,    -1,    -1,    -1,  3245,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5957,    -1,  3256,
    3257,    -1,    -1,    -1,    -1,   302,    31,    -1,    33,     9,
      10,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,
     449,    -1,    -1,    81,    -1,    -1,   302,    81,    -1,    -1,
    3287,  3288,    -1,    -1,    -1,    -1,    61,    -1,    -1,    97,
      -1,    -1,  2252,    97,    -1,    -1,    -1,    -1,    73,  3306,
       9,    10,   481,    -1,    -1,    80,    -1,  2267,   302,  2269,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,   126,    -1,
      -1,  3328,   126,    -1,   132,    -1,    -1,    -1,   132,    -1,
      -1,    81,    -1,    -1,  3341,   110,   111,  2297,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   302,    97,    -1,    -1,
      -1,    -1,  2312,    -1,    -1,    -1,    -1,    -1,   166,    -1,
      -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,   143,  2329,
      -1,    -1,    81,   181,  3381,   183,   126,   181,    -1,   183,
      -1,    -1,   132,  3390,  3391,    -1,    -1,  3394,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2358,    -1,
      -1,    -1,    -1,   178,    -1,    -1,    -1,   182,    -1,    -1,
    3417,  3418,    -1,    -1,    -1,   190,   166,   126,   193,    -1,
    2380,    -1,    -1,   132,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,  3442,    -1,  3444,    -1,  3446,
     215,  3448,    -1,    -1,    -1,   748,   749,   750,    -1,    -1,
       9,    10,    -1,     9,    10,    -1,    -1,   166,    -1,    -1,
      -1,   764,    -1,  3470,    -1,   748,   749,   750,   647,    -1,
      -1,    -1,   181,    -1,   183,    -1,   251,   252,   253,    -1,
      -1,   764,    -1,    -1,  3491,  3492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   302,    -1,    -1,  2457,   302,    -1,
      -1,   276,    -1,    -1,  3511,    -1,    -1,  3514,    -1,    -1,
    3517,    -1,    -1,    -1,    -1,  3522,    -1,    -1,    -1,    -1,
      -1,    -1,    81,    -1,    -1,    81,   301,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,
      -1,    -1,   302,    -1,   329,    -1,   331,   736,    -1,    -1,
      -1,    -1,    -1,  3570,  3571,    -1,    -1,   126,     9,    10,
     126,    -1,    -1,   132,    -1,   350,   132,    -1,  3585,    -1,
      -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   302,   369,   748,   749,   750,    -1,    -1,
      -1,   376,  2562,    -1,   748,   749,   750,   166,    -1,    -1,
     166,   764,    -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,
     764,    -1,   181,    -1,   183,   181,   401,   183,    -1,    -1,
     405,   406,  3639,    -1,    -1,    -1,    -1,   412,    -1,    -1,
      81,   416,   748,   749,   750,    -1,     9,    10,    -1,   424,
      -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,   764,    -1,
      -1,    -1,   748,   749,   750,    -1,    -1,    -1,   443,  2629,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,
      -1,   132,    -1,    -1,   469,  3702,    -1,    -1,   473,    -1,
    3707,   748,   749,   750,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    81,    -1,
      -1,  3728,   748,   749,   750,   166,    -1,    -1,    -1,  2689,
      -1,    -1,  3739,    -1,    97,    -1,    -1,    -1,   764,    -1,
     181,    -1,   183,   302,    -1,   520,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   748,   749,   750,    -1,   533,    -1,
     535,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,
     764,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   748,   749,   750,    -1,    -1,    -1,   573,    -1,
      -1,    -1,    -1,   166,   579,    -1,  2766,    -1,   764,  2769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,
     183,    -1,    -1,    -1,    -1,  3832,  2786,    -1,    -1,    -1,
    2790,   606,  2792,  2793,  2794,  2795,  2796,  2797,    -1,    -1,
      -1,    -1,   617,   618,   619,    -1,    -1,  2807,  3855,  2809,
      -1,    -1,  2812,  2813,  2814,  2815,    -1,    -1,  2818,  2819,
      -1,   302,  2822,   638,  2824,    -1,  2826,    -1,  2828,    -1,
     645,    -1,  2832,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2840,    -1,  2842,  3890,  2844,    -1,  2846,  2847,  2848,    -1,
      -1,  2851,  2852,  2853,    -1,  2855,    -1,    -1,  2858,    -1,
     675,    -1,     9,    10,    -1,     9,    10,    -1,    -1,    -1,
      -1,  2871,    -1,    -1,    -1,   690,   691,    -1,    -1,  2879,
      -1,  2881,  2882,  2883,    -1,    -1,  2886,    -1,   703,    -1,
      -1,   706,  2892,    -1,    -1,    -1,    -1,  2897,    -1,   302,
     748,   749,   750,    -1,   748,   749,   750,    -1,    -1,     9,
      10,    -1,    -1,  2913,    -1,    -1,   764,    -1,    -1,    -1,
     764,    -1,    -1,    -1,    -1,  2925,    -1,    -1,    -1,    -1,
       9,    10,    -1,    -1,    81,    -1,  2936,    81,    -1,    -1,
      -1,    -1,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    -1,    97,   769,    -1,  4003,  4004,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   764,    -1,    -1,    -1,    -1,   126,
      -1,    81,   126,  2983,    -1,   132,    -1,    -1,   132,    -1,
    4037,  4038,    -1,  4040,    -1,    -1,    -1,    97,    -1,   748,
     749,   750,    81,  4050,    -1,  4052,    -1,    -1,  4055,    -1,
      -1,    -1,  3012,    -1,    81,   764,    -1,    -1,    97,   166,
      -1,  4068,   166,  4070,    -1,  4072,   126,  4074,    -1,    -1,
      97,    -1,   132,    -1,   181,    -1,   183,   181,    -1,   183,
    4087,  4088,    -1,     9,    10,  5576,  5577,   126,  5579,  5580,
    5581,  5582,    -1,   132,    -1,    -1,    -1,    -1,    -1,   126,
      -1,    -1,    -1,    -1,    -1,   132,   166,  5598,    -1,    -1,
      -1,    -1,    -1,     9,    10,    -1,     9,    10,    -1,    -1,
    4127,   181,    -1,   183,     9,    10,    -1,   166,    -1,  4136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4145,   166,
      -1,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   181,    81,   183,     9,    10,    -1,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    97,    -1,    -1,    -1,    -1,    -1,  4184,     9,    10,
      -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    81,   748,
     749,   750,   748,   749,   750,   302,    81,    -1,   302,  3159,
     126,    97,    -1,    -1,    97,   764,   132,  4214,   764,    -1,
      -1,    -1,    97,  3173,    -1,  5706,    -1,    -1,  5709,    -1,
      -1,    -1,     9,    10,    -1,    -1,  5717,    -1,    -1,    81,
     126,    -1,    81,   126,    -1,    -1,   132,    -1,  4245,   132,
     166,   126,   302,    -1,    -1,    97,    -1,   132,    97,    -1,
      81,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,
      -1,    -1,    -1,   302,    -1,    -1,    97,    -1,    -1,    -1,
     166,    -1,    -1,   166,   126,   302,    -1,   126,    -1,    -1,
     132,   166,    -1,   132,    -1,   181,    -1,   183,   181,    -1,
     183,    -1,    -1,    -1,    81,   126,   181,  3257,   183,  4306,
      -1,   132,     9,    10,    -1,    -1,    -1,   748,   749,   750,
      97,    -1,    -1,    -1,   166,    -1,    -1,   166,    -1,    -1,
    4327,    -1,    -1,   764,    -1,    -1,    -1,  4334,    -1,   181,
      -1,   183,   181,    -1,   183,   166,    -1,  4344,    -1,   126,
      -1,    -1,    -1,    -1,    -1,   132,    -1,    -1,    -1,    -1,
     181,    -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3328,    -1,
      -1,    -1,    -1,    -1,    81,    -1,   302,    -1,    -1,   166,
      -1,    -1,    -1,    -1,    -1,   748,   749,   750,    -1,    -1,
      97,     9,    10,    -1,   181,    -1,   183,    -1,    -1,    -1,
      -1,   764,    -1,    -1,    -1,    -1,   302,    -1,    -1,   302,
      -1,    -1,    -1,     9,    10,  4422,    -1,   302,    -1,   126,
      -1,  3381,  4429,  4430,    -1,   132,    -1,    -1,    -1,    -1,
      -1,  3391,    -1,    -1,  3394,    -1,    -1,    -1,    -1,    -1,
      -1,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     302,    -1,    -1,   302,    -1,    -1,    -1,  3417,  3418,   166,
      -1,    -1,  4469,    81,    -1,     9,    10,    -1,    -1,    -1,
      -1,   302,    -1,    -1,   181,    -1,   183,    -1,    -1,    97,
      -1,    -1,  3442,    -1,  3444,    81,  3446,    -1,  3448,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    97,    -1,    -1,     9,    10,    -1,    -1,   126,    -1,
    3470,    -1,    -1,    81,   132,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4530,    -1,    -1,  4533,    -1,    -1,    97,
     126,  3491,  3492,    -1,    -1,    -1,   132,    81,    -1,    -1,
    4547,    -1,     9,    10,    -1,    -1,    -1,    -1,   166,    -1,
      -1,    -1,    -1,    97,  4561,    -1,    -1,    -1,   126,    -1,
      -1,    -1,  3522,   181,   132,   183,    -1,    -1,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,   181,    -1,   183,   132,    -1,
      -1,    -1,    97,    -1,    -1,   302,    -1,    -1,   166,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3570,  3571,    -1,   181,    81,   183,    -1,    -1,  4625,    -1,
    4627,   126,   166,    -1,    -1,  3585,    -1,   132,    -1,    -1,
      97,    -1,    -1,    -1,  4641,    -1,    -1,   181,    -1,   183,
      -1,   748,   749,   750,   748,   749,   750,     9,    10,    -1,
      -1,  4658,  4659,    -1,    -1,     9,    10,   764,    -1,   126,
     764,   166,    -1,    -1,    -1,   132,    -1,    -1,    -1,    -1,
    4677,    -1,    -1,     9,    10,    -1,   181,    -1,   183,  3639,
      -1,    -1,    -1,    -1,   302,    -1,    -1,    -1,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   166,
      -1,    -1,    -1,    -1,   764,    -1,   302,    -1,    -1,   748,
     749,   750,    -1,    -1,   181,    -1,   183,     9,    10,    81,
      -1,   748,   749,   750,    -1,   764,    -1,    81,    -1,    -1,
      -1,    -1,    -1,    -1,   302,    97,    -1,   764,    -1,    -1,
      -1,    -1,    -1,    97,    -1,    81,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,    -1,
      -1,    97,  4769,    -1,   126,    -1,    -1,    -1,  3728,    -1,
     132,    -1,   126,    -1,    -1,    -1,    -1,    -1,   132,  3739,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4794,    -1,    81,
     126,    -1,    -1,    -1,    -1,    -1,   132,   302,    -1,    -1,
      -1,    -1,    -1,  4810,   166,    97,    -1,    -1,    -1,    -1,
      -1,    -1,   166,    -1,     9,    10,    -1,    -1,    -1,   181,
      -1,   183,   748,   749,   750,    -1,    -1,   181,    -1,   183,
     166,    -1,    -1,    -1,   126,   302,    -1,    -1,   764,    -1,
     132,     9,    10,    -1,    -1,   181,    -1,   183,    -1,    -1,
      -1,    -1,   748,   749,   750,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,   748,   749,   750,     9,    10,   764,    -1,
      -1,   764,    -1,  4880,   166,    -1,    -1,     9,    10,   764,
      -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,  4895,   181,
      -1,   183,    -1,    -1,    -1,    -1,   748,   749,   750,   748,
     749,   750,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   764,    81,    -1,   764,    -1,   748,   749,   750,
      -1,    -1,  4929,    -1,    -1,    -1,    -1,    -1,    -1,    97,
      -1,   126,    -1,   764,    -1,    -1,    -1,   132,    81,    -1,
     302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,    81,
      -1,    -1,    -1,    -1,    97,    -1,    -1,    -1,   126,    -1,
      -1,   748,   749,   750,   132,    97,   302,  4974,    -1,    -1,
      -1,   166,    -1,    -1,    -1,    -1,    -1,   764,    -1,    -1,
      -1,    -1,    -1,   126,    -1,    -1,   181,    -1,   183,   132,
      -1,    -1,    -1,    -1,   126,    -1,  5003,    -1,   166,    -1,
     132,    -1,    -1,     9,    10,    -1,    -1,    -1,    -1,    -1,
     302,    -1,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   166,    -1,    -1,    -1,     9,    10,    -1,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,   181,    -1,
     183,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,   181,
      -1,   183,    -1,    -1,    -1,    -1,    -1,   764,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5074,    -1,  5076,
      -1,    -1,    -1,    -1,    -1,    81,    -1,  4037,  4038,    -1,
      -1,   634,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4050,    97,  4052,    -1,    -1,  4055,    -1,    -1,    -1,    81,
      -1,    -1,    -1,    -1,    -1,   658,    -1,   302,  4068,    -1,
    4070,    -1,  4072,    -1,  4074,    97,    -1,    -1,    -1,   672,
     126,    -1,    -1,    -1,  5131,    -1,   132,  4087,  4088,    -1,
     748,   749,   750,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   126,    -1,   764,    -1,    -1,    -1,
     132,    -1,   748,   749,   750,    -1,    -1,    -1,    -1,   302,
     166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,
     302,    -1,    -1,    -1,    -1,   181,    -1,   183,    -1,    -1,
     748,   749,   750,    -1,   166,  4145,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5200,    -1,    -1,   764,    -1,    -1,   181,
      -1,   183,    -1,    -1,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     764,    -1,  5229,    -1,   777,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4214,    -1,    -1,    -1,    -1,   764,
      -1,  5268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5278,    -1,  5280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   748,   749,   750,    -1,  4245,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   847,    -1,   302,   764,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5316,
      -1,    -1,    -1,  5320,    -1,    -1,    -1,    -1,    -1,    -1,
     302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5336,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   900,     9,    10,
      -1,    -1,   905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5371,    -1,    -1,  4327,    -1,    -1,
      -1,     9,    10,    -1,  4334,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   935,    -1,  4344,   938,   748,   749,   750,    -1,
      -1,    -1,   945,  5400,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   764,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     764,    -1,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,
     983,    -1,    -1,    -1,    -1,    -1,    97,    -1,    -1,    -1,
      -1,  5448,    -1,    81,  5451,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     9,    10,    11,   748,   749,   750,    97,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,  5475,  4429,
    4430,   132,   764,    -1,    -1,    -1,    -1,    -1,  5485,    -1,
      -1,  1034,  1035,  1036,  1037,    -1,  5493,  1040,   126,    -1,
      -1,    -1,  1045,    -1,   132,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5524,    -1,    -1,
     181,    -1,   183,  5530,    -1,    81,    -1,    -1,   166,    -1,
      -1,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    97,    -1,   181,    -1,   183,    -1,    -1,    -1,    -1,
      -1,     9,    10,   748,   749,   750,    -1,    -1,    -1,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,
     126,    -1,    -1,  4533,    -1,    -1,   132,    -1,    -1,    -1,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,  5595,    -1,
      -1,    -1,    -1,  5600,    -1,    -1,   764,    -1,     9,    10,
    5607,  4561,    -1,    81,    -1,   748,   749,   750,    -1,    -1,
     166,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,    97,
      -1,   764,    -1,    81,    -1,   181,   264,   183,    -1,    -1,
    5637,    81,   764,    -1,    -1,    -1,    -1,    95,    -1,    97,
      -1,   302,    -1,  5650,    -1,    95,    -1,    97,   126,    -1,
    1203,    -1,    -1,  1206,   132,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5670,   302,  4625,    -1,  4627,   126,    -1,
      81,    -1,    -1,    -1,   132,    -1,   126,    -1,    -1,    -1,
      -1,  4641,   132,    -1,    95,    -1,    97,    -1,   166,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4658,  4659,
      -1,    -1,    -1,   181,    -1,   183,    -1,    -1,   166,    -1,
      -1,    -1,    -1,    -1,    -1,   126,   166,  4677,     9,    10,
    5727,   132,    -1,   181,  5731,   183,    -1,    -1,    -1,    -1,
      -1,   181,    -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   748,   749,   750,    -1,   302,   408,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   166,    -1,  5764,   764,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,    -1,
     181,    -1,   183,    -1,    -1,    -1,  1329,  5784,  1331,    -1,
      -1,    -1,   764,    -1,  5791,    -1,   264,    -1,    -1,    -1,
      81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    -1,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   302,    -1,  5833,    -1,  5835,  5836,
      -1,    -1,    -1,    -1,  4794,   126,    -1,    -1,    -1,    -1,
      -1,   132,    -1,    -1,   302,    -1,    -1,    -1,    -1,  1402,
    4810,  1404,   302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5871,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5879,    -1,    -1,   166,    -1,  1430,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1441,  1442,
     181,   302,   183,  5900,  1447,    -1,    -1,    -1,  1451,  1452,
    1453,    -1,  5909,    -1,    -1,    -1,    -1,    -1,    -1,  1462,
    1463,  1464,    -1,    -1,    -1,  1468,    -1,  1470,  1471,  1472,
    1473,  1474,    -1,  1476,    -1,    -1,  1479,  1480,    -1,    -1,
      -1,    -1,    -1,    -1,  1487,    -1,  1489,    -1,    -1,  1492,
    1493,    -1,  1495,  1496,  1497,    -1,  1499,  1500,  1501,    -1,
    5957,    -1,    -1,  1506,    -1,    -1,  1509,    -1,    -1,    -1,
      -1,    -1,    -1,  5970,  1517,  1518,    -1,  1520,  1521,  1522,
      -1,    -1,  1525,  1526,  1527,  1528,  1529,  1530,  1531,    -1,
    1533,  1534,  1535,  1536,  1537,  1538,    -1,  1540,  1541,    -1,
    1543,  1544,  1545,  1546,  1547,  1548,  1549,    -1,    -1,  1552,
    1553,  1554,  1555,    -1,  1557,  1558,  1559,    -1,  1561,    -1,
    1563,   302,  1565,    -1,  4974,    -1,  1569,  1570,  1571,    -1,
      -1,  1574,  1575,  1576,  1577,  1578,    -1,  1580,    -1,    -1,
      -1,     9,    10,    -1,  1587,    -1,    -1,    -1,    -1,  1592,
      -1,    -1,    -1,  5003,    -1,    -1,  1599,    -1,    -1,    -1,
    1603,  1604,  1605,  1606,    -1,  1608,  1609,    -1,    -1,  1612,
    1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,
    1623,  1624,     9,    10,  1627,    53,    54,    55,    56,  1632,
      -1,     9,    10,    11,    -1,  1638,    -1,   748,   749,   750,
       9,    10,    11,    -1,    -1,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,
     748,   749,   750,    -1,    -1,    -1,  5076,  1670,    -1,    97,
      -1,    -1,  1675,    32,    -1,    34,    -1,    -1,    -1,   107,
     108,   109,  1685,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,   126,    -1,
      -1,    -1,    61,    81,   132,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    81,  1716,    -1,    -1,    61,    81,    -1,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,
     158,   159,    -1,    97,    -1,    -1,    -1,    -1,   166,   126,
      -1,    -1,   748,   749,   750,   132,    -1,    -1,   126,    -1,
    1753,   110,   111,   181,   132,   183,   115,   126,    -1,    -1,
      -1,    -1,   126,   132,    -1,   110,   111,    -1,   132,    -1,
      -1,    -1,    -1,  1776,    -1,    -1,    -1,    -1,    -1,   166,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,   166,    -1,
      -1,    -1,    -1,    -1,   181,    -1,   183,   166,  1801,    -1,
      -1,   229,   166,   181,    -1,   183,    -1,    -1,    -1,    -1,
      -1,    -1,   181,    -1,   183,    -1,    -1,   181,    -1,   183,
     748,   749,   750,   168,   169,    -1,    -1,    -1,   173,  5239,
      -1,   190,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,   748,   749,
     750,    -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5278,    -1,
    5280,    -1,    -1,    -1,   302,   303,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,   750,
      -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   302,    -1,   276,    -1,    -1,
      -1,    -1,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   277,   302,    -1,    -1,    -1,    -1,   302,    -1,
      -1,    -1,   301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    15,    -1,   301,    18,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,   395,    -1,    -1,
     329,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   348,
      -1,   350,    -1,    -1,    -1,    -1,    57,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,   748,   749,   750,
     369,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,    63,
      -1,  2024,    -1,    -1,   369,    86,   413,    -1,    89,    73,
      -1,    -1,   391,    -1,    -1,  2038,   464,    -1,    32,    -1,
      34,    -1,   401,    -1,   105,   106,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2056,    -1,    99,  2059,   416,    -1,    -1,
      -1,    -1,    -1,    -1,  2067,  2068,    -1,    61,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   143,
      -1,   529,    -1,   531,   165,    -1,    -1,    -1,   536,    -1,
      -1,    -1,   173,   174,   473,    -1,   110,   111,    -1,    -1,
    5530,   115,    -1,    -1,   483,  2128,  2129,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,    -1,
      -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,
    2153,  2154,  2155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   520,    -1,    -1,  2167,     6,    -1,    -1,   212,    -1,
      -1,    -1,   600,    -1,   533,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    32,    -1,    -1,   238,    -1,   190,    -1,    -1,    40,
      41,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      -1,   272,   273,   274,   573,   643,    -1,  2220,    -1,    -1,
     579,    -1,    -1,    -1,    65,    66,   270,  5637,  2231,    -1,
      -1,  2234,    -1,    -1,    -1,    -1,   280,   281,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,  2252,
      -1,    -1,  2255,  2256,    -1,  2258,  2259,   251,   252,   253,
    5670,    -1,    -1,    -1,  2267,    -1,  2269,    -1,    -1,   110,
     111,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,   638,
      -1,    -1,   276,    -1,    -1,    -1,   645,    -1,   129,    -1,
      -1,    -1,    -1,    -1,  2297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   647,    -1,   732,    -1,    -1,   301,    -1,  2312,
      -1,    -1,    -1,    -1,    -1,   743,   675,    -1,    -1,    -1,
     748,   749,   750,    -1,    -1,   386,  2329,    -1,    -1,    -1,
      -1,   690,   691,   394,    -1,   329,    -1,   331,    -1,    -1,
    2343,    -1,    -1,    -1,   703,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   348,  2358,   350,    -1,    -1,    -1,
     201,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
     748,   749,   750,    -1,  5784,   369,    -1,  2380,   422,   748,
     749,   750,   376,   427,   748,   749,   750,    -1,    -1,   402,
      -1,   736,    -1,   437,    -1,  2398,    -1,   391,    -1,    -1,
      -1,    -1,    -1,   416,    -1,   418,   765,   401,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     261,    -1,   416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     463,    -1,    -1,    -1,  2457,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2470,    -1,  2472,
      -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
      -1,    -1,    -1,   496,    -1,    -1,   327,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,   336,    -1,    -1,    -1,    -1,
      -1,   514,    -1,    -1,    -1,    -1,    -1,   348,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   520,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   595,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2562,
    5970,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   616,    -1,   415,   416,    -1,   621,   419,   573,
     421,   594,    -1,    -1,    -1,   579,    -1,    -1,   601,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   611,    -1,
      -1,    -1,    -1,    -1,    -1,   446,   447,    -1,   652,    -1,
      -1,   624,    -1,   454,   455,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2629,    -1,    -1,    -1,
     471,    -1,    -1,    -1,    -1,    -1,    -1,   698,    -1,   683,
     701,    -1,   655,    -1,   638,   658,    -1,    -1,    -1,   710,
      -1,   645,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     673,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   514,    -1,    -1,   689,    -1,    -1,    -1,
      -1,   675,    -1,    -1,    -1,    -1,  2689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   690,   691,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   703,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   569,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   583,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   594,    -1,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,  2766,    -1,    -1,  2769,    -1,    -1,   763,
      -1,   612,    -1,    -1,    -1,  2778,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2786,    -1,  2788,    -1,  2790,    -1,  2792,
    2793,  2794,  2795,  2796,  2797,    -1,  2799,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2807,    -1,  2809,   648,    -1,  2812,
    2813,  2814,  2815,    -1,   655,  2818,  2819,    -1,    -1,  2822,
      -1,  2824,    -1,  2826,    -1,  2828,    -1,    -1,    -1,  2832,
      -1,    -1,   673,    -1,   675,    -1,    -1,  2840,    -1,  2842,
      -1,  2844,  2845,  2846,  2847,  2848,    -1,    -1,  2851,  2852,
    2853,    -1,  2855,    -1,    -1,  2858,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,    -1,
      -1,     7,     8,  2876,    -1,    -1,  2879,    -1,  2881,  2882,
    2883,    -1,    -1,  2886,   725,    -1,    32,    -1,    34,  2892,
     731,    27,    -1,    29,  2897,    31,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
    2913,    -1,    -1,    71,    -1,    61,  2919,    -1,    -1,  2922,
      -1,    -1,  2925,    -1,    -1,    -1,    -1,    63,    -1,    65,
      66,  2934,  2935,  2936,    -1,    -1,    -1,    73,  2941,    -1,
      -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,
    2953,    -1,    -1,    -1,    -1,   113,    -1,    93,    -1,    -1,
      -1,    -1,    -1,    99,   110,   111,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,    -1,
    2983,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   150,    -1,    -1,   131,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   141,    -1,   143,    -1,  3012,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3028,    -1,    -1,  3031,  3032,
    3033,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   178,    -1,   190,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,   193,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   202,   203,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,   219,    -1,    -1,    -1,    -1,   224,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
      -1,    -1,   238,   239,    -1,   251,   252,   253,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,    -1,   280,    -1,   282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   301,  3159,    -1,    -1,    -1,
      -1,   297,   298,    -1,    -1,    -1,    -1,    -1,    -1,   305,
    3173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   329,    -1,   331,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,
     336,    -1,   348,    -1,   350,    -1,    -1,   343,    -1,    -1,
      -1,    -1,    -1,    -1,   350,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
     376,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3257,   401,    -1,    -1,    -1,    -1,
     396,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     416,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3306,   440,    -1,    -1,    -1,    -1,   467,
      -1,  3314,    -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,
     456,    -1,    -1,   459,    -1,  3328,    -1,   473,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,   474,   497,
     498,    -1,   500,   501,   502,   503,   504,    -1,   506,   507,
     508,   509,   510,   511,   512,   513,    -1,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   520,    -1,    -1,    -1,  3381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   533,  3391,    -1,
      -1,  3394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3417,  3418,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3429,   573,    -1,    -1,
      -1,    -1,    -1,   579,    -1,    -1,    -1,    -1,    -1,  3442,
      -1,  3444,    -1,  3446,    -1,  3448,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   590,   613,   614,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3470,    -1,    -1,
      -1,    -1,    -1,  3476,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   619,    -1,    -1,   622,    -1,  3491,  3492,
      -1,    -1,   638,    -1,    -1,    -1,   632,    -1,    -1,   645,
      -1,    -1,    -1,    -1,   640,    -1,     7,     8,  3511,    -1,
      -1,  3514,    -1,    -1,  3517,    -1,   652,    -1,    -1,  3522,
      -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,    29,   675,
      31,    -1,    33,    -1,    -1,   671,    -1,    -1,   674,    -1,
      41,    -1,    -1,    -1,   690,   691,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   703,    -1,    -1,
      -1,    -1,    63,    -1,    65,    66,    -1,  3570,  3571,    -1,
     706,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     716,    -1,  3585,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,  3599,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,   741,    -1,    -1,    -1,    -1,
      -1,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     131,    -1,    -1,    -1,    -1,    -1,  3639,    -1,    -1,    -1,
     141,    -1,   143,  3646,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   202,   203,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,   219,    -1,
      -1,    -1,    -1,   224,    -1,  3728,    -1,    -1,    -1,    -1,
      -1,    -1,  3735,   234,    -1,    -1,  3739,   238,   239,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    -1,    -1,    -1,    31,   278,    33,   280,
      -1,   282,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   297,   298,    -1,    -1,
      -1,    -1,    -1,    -1,   305,    -1,    -1,    -1,    63,    -1,
      65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   334,    -1,   336,    -1,    -1,    -1,    -1,
      -1,    -1,   343,    -1,    99,    -1,    -1,    -1,    -1,   350,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,   143,    -1,
      -1,    -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,    -1,    -1,   427,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,   193,   440,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   202,   203,    -1,
      -1,    -1,   453,    -1,    -1,   456,    -1,    -1,   459,   214,
     215,    -1,   217,    -1,   219,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,   474,    -1,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,   238,   239,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    16,    17,    -1,    -1,
      -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,   278,    -1,   280,    -1,   282,    -1,    -1,
      -1,    -1,    -1,    -1,  4037,  4038,    -1,  4040,    -1,    -1,
      -1,    -1,    -1,   298,    -1,    -1,    -1,  4050,    58,  4052,
     305,    -1,  4055,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      70,    -1,    -1,    -1,    -1,  4068,    -1,  4070,    -1,  4072,
      -1,  4074,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      90,   336,    -1,    -1,  4087,  4088,    -1,    -1,   343,   590,
      -1,    -1,    -1,    -1,    -1,   350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   124,    -1,   371,    -1,   619,    -1,
      -1,   622,    -1,    -1,  4127,    -1,    -1,    -1,    -1,    -1,
      -1,   632,    -1,  4136,   144,   145,    -1,   147,    -1,   640,
      -1,   396,  4145,    -1,    -1,   155,   156,   157,    -1,    -1,
      -1,   652,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,
     671,    -1,   427,   674,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   440,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,   209,
      -1,   456,    -1,    -1,   459,   706,    -1,    -1,    -1,    -1,
      -1,  4214,    -1,    -1,    -1,   716,    -1,    -1,    -1,   474,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,
     240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     741,    -1,  4245,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   265,   266,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    16,    17,    -1,    -1,    -1,    -1,    22,    23,
     290,   291,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4327,    -1,    70,   337,    -1,   339,
     340,  4334,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,  4344,    -1,    -1,    -1,   355,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   619,    -1,    -1,   622,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   632,    -1,    -1,
     124,    -1,   392,    -1,   394,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   652,    -1,    -1,
     144,   145,    -1,   147,    -1,    -1,    -1,   417,    -1,    -1,
      -1,   155,   156,   157,    -1,    -1,   671,    -1,    -1,   674,
      -1,    -1,    -1,    -1,    -1,    -1,  4429,  4430,    -1,   439,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,   451,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   716,    -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   491,    -1,    -1,    -1,    -1,   741,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,
      16,    17,    -1,    -1,    -1,    -1,    22,    23,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,
      -1,   265,   266,   267,    -1,    -1,    -1,   537,   538,   539,
    4533,    -1,    -1,    -1,    -1,   545,   546,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,    -1,   290,   291,    -1,    -1,
      -1,   561,   562,    -1,    70,    -1,    -1,    -1,  4561,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    90,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   337,   604,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,
      -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4625,    -1,  4627,    -1,   636,    -1,   144,   145,
      -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,  4641,   155,
     156,   157,    -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,
     394,    -1,    -1,    -1,    -1,  4658,  4659,    -1,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,   417,  4677,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   695,    -1,    -1,   698,    -1,
      -1,   701,    -1,   209,    -1,   439,    -1,    -1,   708,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   450,   451,    -1,    -1,
      -1,    -1,    -1,    -1,   724,    -1,    -1,    -1,   234,    -1,
     110,   111,    -1,    -1,   240,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   743,    -1,    -1,    -1,    -1,   482,    -1,
      -1,    -1,     5,    -1,     7,    -1,    -1,   491,    -1,   265,
     266,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,   290,   291,    39,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4794,    -1,   537,   538,   539,    -1,    -1,    61,    -1,
     190,   545,   546,    -1,  4807,    -1,    -1,  4810,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,   561,   562,    -1,
      -1,   337,    -1,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,
      -1,   585,   586,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     604,   251,   252,   253,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,   394,    -1,
     143,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,
      -1,    -1,   636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,
      -1,    -1,    -1,   439,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,   450,   451,    -1,    -1,    -1,   329,
      -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   695,   215,    -1,   698,    -1,    -1,   701,    -1,    -1,
     350,    -1,    -1,    -1,   708,    -1,   482,    -1,  4971,    -1,
      -1,  4974,    -1,    -1,    -1,   491,    -1,    -1,    -1,   369,
     724,    -1,    -1,    -1,    -1,    -1,   376,    -1,   251,   252,
     253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   743,
    5003,   391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   401,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   537,   538,   539,    -1,    -1,   416,    -1,    -1,   545,
     546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,
      -1,    -1,    -1,    -1,    -1,   561,   562,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   329,    -1,   331,   585,
     586,    -1,    -1,  5076,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   473,    -1,    -1,    -1,   350,   604,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,    -1,
     520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,
      -1,    -1,   405,   533,    -1,    -1,    -1,    -1,    -1,   412,
      -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   695,
     443,    -1,   698,   573,    -1,   701,    -1,    -1,    -1,   579,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,
     473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5239,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   638,    -1,
      -1,    -1,    -1,    -1,    -1,   645,    -1,   520,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5268,    -1,    -1,    -1,    -1,
     533,    -1,   535,    -1,    -1,  5278,    -1,  5280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     690,   691,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   703,    -1,    -1,   579,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   638,    -1,    -1,    -1,    -1,
      -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5403,  5404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   690,   691,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     703,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5524,    -1,    -1,    -1,    -1,    -1,  5530,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,  5637,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,  5670,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,   177,    -1,    -1,
      -1,  5784,    -1,    -1,    -1,    -1,    -1,    -1,  5791,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,  5900,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,  5970,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,     6,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    25,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   133,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,   269,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
     295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      95,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,   114,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,   169,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,   169,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,   153,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,   151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,
     160,    -1,   162,    -1,    -1,   165,    -1,    -1,   168,    -1,
     170,    -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,
      -1,    -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,   759,
      -1,    -1,    -1,   763,    -1,    -1,   766,   767,    -1,    -1,
     770,   771,    17,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,   102,   103,    -1,
     105,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,   122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,   151,   152,    -1,   154,
      -1,    -1,    -1,    -1,    -1,   160,    -1,   162,    -1,    -1,
     165,    -1,    -1,   168,    -1,   170,    -1,   172,   173,   174,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   216,   217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
     285,   286,    -1,    -1,    -1,    -1,    -1,   292,    -1,   294,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   753,   754,
      -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,   763,    -1,
      -1,   766,   767,    -1,    -1,   770,   771,    18,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    -1,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,   102,   103,    -1,   105,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
     151,   152,    -1,   154,    -1,    -1,    -1,    -1,    -1,   160,
      -1,   162,    -1,    -1,   165,    -1,    -1,    -1,    -1,   170,
      -1,   172,   173,   174,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   216,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   228,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   285,   286,    -1,    -1,    -1,    -1,
      -1,   292,    -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    18,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   753,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   763,    -1,    -1,    -1,   767,    -1,    -1,   770,
     771,    -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   173,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    24,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      24,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   755,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    32,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    32,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,     6,     7,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,
      -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,   281,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,   281,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,     6,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,     6,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    35,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    29,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    36,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    -1,
     698,   699,   700,   701,   702,   703,   704,   705,    -1,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    96,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   765,    -1,    -1,
     130,    -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    36,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      11,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    17,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    16,    17,    -1,    -1,   748,
      -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,   145,    -1,   147,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   155,   156,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,   240,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   265,   266,   267,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    17,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      17,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      17,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      18,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,    -1,
      -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    45,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,    -1,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    29,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    38,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    76,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    -1,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    29,   698,   699,   700,   701,   702,   703,
     704,   705,    38,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      76,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    29,   698,   699,   700,   701,   702,   703,   704,   705,
      38,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    76,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    29,   698,   699,
     700,   701,   702,   703,   704,   705,    38,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    29,   698,   699,   700,   701,
     702,   703,   704,   705,    38,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    -1,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    29,   698,   699,   700,   701,   702,   703,
     704,   705,    38,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    29,   698,   699,   700,   701,   702,   703,   704,   705,
      38,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    29,   698,   699,
     700,   701,   702,   703,   704,   705,    38,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,    -1,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,    -1,    -1,   337,   338,   339,   340,   341,
      -1,    -1,   344,   345,   346,   347,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
      -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,    -1,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,    -1,
      -1,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,   455,    -1,   457,   458,    -1,    -1,   461,
      -1,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,    -1,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,    -1,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,   581,
     582,   583,   584,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,    -1,   618,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,   631,
      -1,   633,   634,   635,   636,   637,   638,   639,    -1,   641,
     642,   643,    -1,   645,   646,   647,   648,    -1,   650,   651,
      -1,    -1,   654,    -1,    -1,   657,   658,   659,    -1,   661,
      -1,   663,   664,   665,   666,    -1,   668,   669,   670,    -1,
     672,   673,    -1,   675,    -1,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,    29,   698,   699,   700,   701,
     702,   703,   704,   705,    38,   707,   708,   709,    -1,   711,
     712,   713,   714,    -1,    -1,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,    -1,    -1,   736,   737,    -1,    -1,   740,    -1,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    93,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,    -1,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,    -1,    -1,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,   370,    -1,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,   455,    -1,   457,   458,    -1,    -1,   461,    -1,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
      -1,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,    -1,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,   581,   582,   583,
     584,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,    -1,   618,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,   630,   631,    -1,   633,
     634,   635,   636,   637,   638,   639,    -1,   641,   642,   643,
      -1,   645,   646,   647,   648,    -1,   650,   651,    -1,    -1,
     654,    -1,    -1,   657,   658,   659,    -1,   661,    -1,   663,
     664,   665,   666,    -1,   668,   669,   670,    -1,   672,   673,
      -1,   675,    -1,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,    29,   698,   699,   700,   701,   702,   703,
     704,   705,    38,   707,   708,   709,    -1,   711,   712,   713,
     714,    -1,    -1,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
      -1,    -1,   736,   737,    -1,    -1,   740,    -1,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   127,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,    -1,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,    -1,
      -1,   337,   338,   339,   340,   341,    -1,    -1,   344,   345,
     346,   347,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,    -1,    -1,    -1,    -1,
      -1,    -1,   368,    -1,   370,    -1,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    -1,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,    -1,    -1,    -1,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,   455,
      -1,   457,   458,    -1,    -1,   461,    -1,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,    -1,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,    -1,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,   581,   582,   583,   584,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,    -1,   618,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,   631,    -1,   633,   634,   635,
     636,   637,   638,   639,    -1,   641,   642,   643,    -1,   645,
     646,   647,   648,    -1,   650,   651,    -1,    -1,   654,    -1,
      -1,   657,   658,   659,    -1,   661,    -1,   663,   664,   665,
     666,    -1,   668,   669,   670,    -1,   672,   673,    -1,   675,
      -1,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,    29,   698,   699,   700,   701,   702,   703,   704,   705,
      38,   707,   708,   709,    -1,   711,   712,   713,   714,    -1,
      -1,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,    -1,
     736,   737,    -1,    -1,   740,    -1,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    29,
     698,   699,   700,   701,   702,   703,   704,   705,    38,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,    -1,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    29,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    -1,   698,   699,
     700,   701,   702,   703,   704,   705,    -1,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    93,   736,   737,    -1,    -1,
     740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,    -1,    -1,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    -1,
     698,   699,   700,   701,   702,   703,   704,   705,    -1,   707,
     708,   709,    -1,   711,   712,   713,   714,    37,    38,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    45,    46,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    45,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    46,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
      57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,    57,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,    57,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    61,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    61,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    61,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      61,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    61,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    61,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    61,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,    -1,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,    -1,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   764,    -1,    -1,    -1,    -1,    -1,   770,   771,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,   771,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,   771,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,   771,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
     763,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   755,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,    -1,   740,   741,   742,
     743,   110,   111,   112,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     763,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    -1,   740,   741,   742,   743,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,    -1,   740,
     741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,    -1,   740,   741,   742,   743,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   105,   740,   741,   742,
     743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     763,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   168,
     169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   243,   244,   245,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
      -1,   740,   741,   742,   743,    95,    -1,    -1,    -1,    -1,
     100,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    95,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   755,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   755,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   755,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
     748,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   200,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   200,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,    -1,   740,   741,   742,   743,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,    -1,   740,   741,   742,   743,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,    -1,
     740,   741,   742,   743,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,    -1,   735,
     736,   737,   738,    -1,   740,   741,   742,   743,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,    -1,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,    -1,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,    -1,   740,   741,
     742,   743,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,
     308,    -1,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,    -1,    -1,    -1,   337,
     338,   339,   340,   341,    -1,    -1,   344,   345,   346,   347,
      -1,    -1,    -1,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,   370,    -1,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,    -1,   457,
     458,    -1,    -1,   461,    -1,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   110,   111,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,   581,   582,   583,   584,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,    -1,
     618,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,   631,    -1,   633,   634,   635,   636,   637,
     638,   639,    -1,   641,   642,   643,    -1,   645,   646,   647,
     648,    -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,
     658,   659,    -1,   661,    -1,   663,   664,   665,   666,    -1,
     668,   669,   670,    -1,   672,   673,    -1,   675,    -1,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,    -1,
     698,   699,   700,   701,   702,   703,   704,   705,    -1,   707,
     708,   709,    -1,   711,   712,   713,   714,    -1,    -1,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,    -1,    -1,   736,   737,
      -1,    -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,
      -1,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,    -1,    -1,    -1,   337,   338,
     339,   340,   341,    -1,    -1,   344,   345,   346,   347,    -1,
      -1,    -1,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,
      -1,   370,    -1,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    -1,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,   455,    -1,   457,   458,
      -1,    -1,   461,    -1,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,    -1,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     110,   111,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,   581,   582,   583,   584,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,    -1,   618,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,   630,   631,    -1,   633,   634,   635,   636,   637,   638,
     639,    -1,   641,   642,   643,    -1,   645,   646,   647,   648,
      -1,   650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,
     659,    -1,   661,    -1,   663,   664,   665,   666,    -1,   668,
     669,   670,    -1,   672,   673,    -1,   675,    -1,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,    -1,   698,
     699,   700,   701,   702,   703,   704,   705,    -1,   707,   708,
     709,    -1,   711,   712,   713,   714,    -1,    -1,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,    -1,    -1,   736,   737,    -1,
      -1,   740,    -1,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   306,   307,   308,    -1,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,    -1,    -1,    -1,   337,   338,   339,
     340,   341,    -1,    -1,   344,   345,   346,   347,    -1,    -1,
      -1,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
      -1,   361,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
     370,    -1,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,   412,    -1,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,   455,    -1,   457,   458,    -1,
      -1,   461,    -1,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,    -1,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,    -1,
      -1,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,   581,   582,   583,   584,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,    -1,   618,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,   631,    -1,   633,   634,   635,   636,   637,   638,   639,
      -1,   641,   642,   643,    -1,   645,   646,   647,   648,    -1,
     650,   651,    -1,    -1,   654,    -1,    -1,   657,   658,   659,
      -1,   661,    -1,   663,   664,   665,   666,    -1,   668,   669,
     670,    -1,   672,   673,    -1,   675,    -1,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,    -1,   698,   699,
     700,   701,   702,   703,   704,   705,    -1,   707,   708,   709,
      -1,   711,   712,   713,   714,    -1,    -1,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,    -1,    -1,   736,   737,    -1,    -1,
     740,    -1,   742,   743
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    63,    65,
      66,    73,    80,    93,    99,   112,   120,   131,   141,   143,
     148,   178,   192,   193,   202,   203,   214,   215,   216,   217,
     219,   224,   234,   238,   239,   278,   280,   282,   297,   298,
     305,   334,   336,   343,   350,   371,   396,   408,   427,   440,
     453,   456,   459,   474,   590,   619,   622,   632,   640,   652,
     671,   674,   706,   716,   741,   774,   777,   778,   779,   780,
     781,   784,   791,   793,   806,   854,   899,   900,   907,   908,
     924,   925,   956,   977,   995,  1060,  1123,  1173,  1271,  1318,
    1321,  1331,  1336,  1342,  1355,  1358,  1364,  1367,  1372,  1379,
    1391,  1638,  1640,  1652,  1655,  1686,  1694,  1708,  1715,  1729,
    1733,  1734,  1738,  1752,  1760,  1764,  1770,  1771,  1772,  1804,
    1805,  1853,  1883,  1890,  1892,  1899,  1902,  1939,  1941,  1946,
    1947,  1948,  1949,  2003,  2012,  2013,  2014,    49,   201,   321,
     399,   447,   495,   645,   649,   690,   720,  1272,  1974,  1975,
    1976,  1977,   171,   444,   493,  1366,  1736,   110,   111,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   361,   362,   363,   364,   365,   366,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   740,   741,   742,   743,  1824,  1826,  1833,
    1840,  1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,   957,
     514,  1359,   183,   495,   690,  1695,    49,   115,   201,   270,
     422,   447,   495,   631,   649,   690,   693,   720,   728,  1651,
     998,   847,   926,  1653,  1765,   115,   391,   742,  1777,   261,
     689,  1886,   996,  1366,  1174,  1061,  1761,   234,   244,   896,
     901,   903,  1833,   640,   720,  1886,  1000,  1656,   901,   902,
     847,   672,  1854,  1716,   901,  1891,  1687,  1833,   997,   210,
    1807,   168,   169,  1446,  1940,   263,   771,  1827,   115,  1886,
     737,  1943,  1639,   468,  1833,  1366,   386,   909,   770,  1821,
    1823,  1833,   792,   584,   662,  1833,  1366,  1753,  1943,  1833,
       6,   655,   702,     6,   655,  1709,   584,   662,   334,   335,
     371,   413,   590,   607,   632,   671,  2006,     0,    80,   775,
     590,    49,    96,   241,   277,   631,   720,   822,  1250,  1251,
    1252,  1651,  1974,  1975,  1976,  1977,   433,   444,   577,  1735,
    1736,  1821,  1833,   230,   287,   763,  1392,  1962,  1286,  1833,
     848,  1833,   748,   748,   848,   100,   112,  1650,   136,  1827,
    1833,  1835,  1003,  1004,  1007,  1030,  1833,  1650,  1310,  1311,
     248,  1435,  1978,  1979,  1974,   748,  1886,  1391,  1652,  1655,
    1686,  1694,  1732,   770,   855,   295,   958,   959,   962,   966,
     804,   805,  1827,   728,  1356,  1886,   217,   100,  1005,  1030,
     114,   149,   461,   602,  1697,  1706,  1707,  1650,   112,  1649,
    1650,  1650,  1650,  1650,   100,  1650,  1650,  1030,  1650,  1650,
     645,  1886,   980,  1833,     6,     7,    41,    46,    63,    73,
      99,   115,   120,   143,   212,   230,   238,   270,   280,   281,
     422,   427,   437,   595,   599,   616,   621,   652,   683,  1835,
    1903,  1907,  1908,  1910,  1912,  1913,   951,   952,   149,   400,
     460,  1658,   457,   661,  1766,   123,  1773,  1884,    38,    87,
      98,   127,   134,   222,   223,   334,   356,   430,   569,   874,
     922,   923,   924,   927,   928,   929,   930,   934,   935,   936,
     937,   938,   946,   947,   948,   949,   970,   972,   973,   975,
     982,   988,  1826,  1834,  1841,  1848,  1850,  1851,  1852,  1886,
      17,    18,    19,    20,    21,    29,    30,    32,    39,    40,
      43,    44,    45,    46,    48,    49,    51,    52,    57,    61,
      64,    84,    85,    86,    88,    89,   101,   102,   103,   105,
     106,   110,   111,   112,   120,   122,   135,   146,   151,   152,
     154,   160,   162,   165,   168,   169,   170,   172,   173,   174,
     176,   191,   195,   196,   197,   198,   205,   216,   217,   225,
     228,   248,   254,   255,   257,   258,   259,   263,   271,   272,
     273,   274,   284,   285,   286,   292,   294,   317,   324,   332,
     348,   357,   359,   360,   362,   363,   364,   365,   366,   381,
     393,   394,   395,   397,   398,   444,   450,   452,   464,   486,
     487,   491,   529,   531,   536,   537,   538,   539,   548,   549,
     565,   579,   585,   586,   593,   600,   630,   636,   637,   643,
     650,   679,   698,   699,   700,   701,   705,   706,   720,   722,
     732,   733,   735,   743,   753,   754,   759,   763,   766,   767,
     770,   771,  1441,  1442,  1443,  1447,  1459,  1461,  1462,  1463,
    1464,  1465,  1466,  1467,  1468,  1469,  1470,  1471,  1479,  1483,
    1484,  1485,  1486,  1487,  1489,  1492,  1796,  1799,  1801,  1802,
    1803,  1818,  1825,  1826,  1833,  1840,    26,  1062,    17,   514,
    1721,  1762,   345,   352,   368,   378,   379,   380,   388,   528,
     542,   642,   678,   692,   904,   906,   722,   897,   903,  1833,
     847,  1368,   874,   985,   149,   400,  1659,  1693,   903,     6,
     316,   599,  1900,  1901,  1908,  1910,  1855,    32,    61,   348,
     454,   493,   543,   579,   631,   648,   702,   734,   771,  1213,
    1826,  1831,  1833,  1844,  1845,  1846,  1847,  1849,  1850,  1851,
    1852,  1858,  1870,  1874,     6,    40,    41,    50,   115,   129,
     201,   261,   312,   327,   336,   348,   359,   383,   416,   419,
     421,   446,   447,   454,   455,   471,   493,   514,   569,   583,
     594,   597,   598,   612,   648,   655,   675,   731,  1213,  1249,
    1717,  1721,  1722,  1724,  1733,  1826,  1871,   903,  1886,  1693,
     983,  1441,  1806,   326,  1943,  1835,  1373,  1332,    10,  1944,
    1441,  1512,   782,   783,   785,  1739,   403,  1833,   569,   207,
     356,   770,  1835,  1833,  1827,    95,  1337,   514,   601,   655,
    1754,  1755,   268,  1944,   656,   804,   207,   298,  1322,  1323,
    1324,   656,   804,   261,  1710,  1833,  1827,    18,   105,   106,
     263,  1797,  1798,  1828,  2005,  2005,  2005,   444,  2004,  2005,
    2005,   769,  1833,   112,  1122,  1122,  1122,   649,   831,   115,
     115,   115,   261,   645,   201,   270,   422,  1978,   320,   447,
     320,   447,  1974,  1731,  1730,  1417,  1418,  1963,   763,  1394,
    1395,  1396,    83,   121,   276,  1950,  1952,  1956,  1957,  1274,
     719,  1275,   770,   527,   694,   712,    45,  1835,  1836,  1837,
    1907,  1276,  1009,  1031,  1833,    84,  1281,  1280,     5,    31,
      73,   169,   208,   605,  1032,   847,   261,   114,   568,  1312,
    1313,  1314,   644,   422,   728,  1978,  1835,  1343,  1833,   763,
     858,   967,    76,   969,  1441,   966,   268,  1357,  1644,  1645,
    1821,  1008,  1031,     5,    95,  1698,    95,  1698,  1699,  1703,
    1704,  1833,  1706,  1833,    84,  1833,   848,   848,   848,  1833,
    1031,   847,  1835,  1041,  1722,   847,  1642,  1650,  1650,   999,
     125,   981,   594,  1911,   634,   634,   690,   693,   720,   728,
     763,  1440,   461,   571,  1915,   689,  1917,  1914,    50,   728,
    1916,   177,   353,   655,   268,   177,   765,   413,  1441,   114,
    1309,   376,   601,  1767,  1768,   343,   149,   375,  1779,  1821,
    1887,  1888,   295,  1834,    95,   100,   548,  1833,  1834,  1834,
    1834,   976,  1833,   295,  1834,  1833,   413,   923,   769,   778,
     931,   950,  1833,    93,   148,   216,   297,   334,   772,  1365,
     122,   753,   754,  1464,   763,   763,   763,   295,  1441,  1515,
    1516,   763,   763,   763,   763,   763,  1440,  1440,  1440,   763,
    1439,   763,   763,   763,   763,   763,   763,   763,   763,   763,
     763,   763,   763,   763,   763,  1441,   763,   110,   111,   360,
     763,  1513,  1514,  1818,  1825,  1840,   763,   763,   763,   763,
    1441,  1439,   763,   763,   763,   763,   763,   763,   763,   763,
     763,   763,   763,   194,   763,   763,   763,   763,  1439,   763,
     263,  1798,  1440,  1439,  1439,   763,   763,   763,   763,   763,
     763,   763,   763,   174,  1825,   763,   763,   763,   763,   763,
     763,   763,   263,   763,   763,   763,   763,   763,   763,   763,
     763,   763,   763,   763,   763,   763,   763,   763,   763,   763,
     722,   763,   763,   763,   763,   763,   722,   763,   763,   763,
     763,   763,   763,   763,   263,   763,   763,   763,   263,   763,
     763,   763,   763,   763,   763,   763,   763,   763,   122,  1464,
     122,  1464,  1464,  1175,  1441,  1968,  1969,  1833,  1825,  1493,
       9,    10,    81,    97,   126,   132,   166,   181,   183,   302,
     748,   749,   750,  1444,  1445,  1448,    15,   125,   137,   213,
     663,  1446,    69,   162,   180,   236,   237,   751,   752,   753,
     754,   755,   756,   757,   758,  1464,    34,   163,   188,   188,
     735,  1828,   770,   763,   194,  1063,   496,   765,   748,  1828,
    1369,  1836,  1838,  1370,  1371,  1821,   718,   123,  1646,  1660,
    1661,  1821,  1911,   571,   177,    95,   177,    61,  1833,  1857,
    1873,   234,   631,   770,    17,    61,   235,   748,  1214,  1215,
    1669,  1835,    93,  1669,  1880,  1669,  1835,  1860,   771,  1835,
      17,    61,  1217,  1218,  1835,  1669,   770,  1861,  1859,   656,
     763,    49,   201,   261,   270,   312,   422,   447,   645,   720,
     728,   137,   296,  1728,   358,   673,   673,   306,   673,   421,
    1728,     6,  1134,  1835,   138,  1606,  1607,  1608,    95,   125,
    1723,  1725,   358,   673,    93,   673,   689,   662,     6,   338,
     382,   384,   477,   526,   574,   664,   685,  1711,  1712,  1713,
     804,   463,   673,   805,  1606,  1728,  1725,   496,   415,   361,
     596,   689,   704,    93,  1433,   673,   725,  1309,   408,  1808,
    1809,  1813,  1833,   978,   765,  1374,  1375,  1376,  1377,  1821,
    1644,   346,   555,   214,   555,  1945,   765,   786,  1441,   283,
     787,    17,   402,   416,   418,   448,   463,   496,   514,   594,
     601,   611,   624,   655,   658,   673,  1740,  1745,  1746,  1826,
    1886,    35,   771,   910,   911,   912,   913,  1825,    11,   748,
    1574,  1575,  1893,  1833,   662,   782,   728,  1334,  1886,  1757,
     343,  1756,   765,   640,  1833,  1945,  1325,  1326,  1325,   567,
     739,   377,   765,  1325,  1325,  1645,   765,   566,  2008,   684,
    2009,   748,   128,   626,  2007,    80,   776,  1446,  1833,   847,
     847,  1122,  1122,  1122,  1122,  1122,  1122,   816,   815,   817,
     728,   447,   820,   447,   818,  1978,  1732,  1737,  1797,  1833,
      95,   123,   182,  1406,  1415,  1416,  1419,  1420,  1421,  1602,
    1608,  1634,  1958,     6,    68,   246,   247,   256,   460,   665,
     666,   667,   668,  1423,  1428,  1429,  1973,   763,  1666,  1675,
    1394,   764,  1962,   230,     6,    68,  1960,  1958,    61,  1119,
    1120,  1131,  1132,  1222,   391,   849,  1833,  1440,   771,   849,
       5,  1010,  1821,   570,   390,  1027,  1027,  1027,     4,  1836,
    1837,  1838,  1923,  1927,  1821,  1314,   399,   475,   848,  1821,
     728,  1344,  1345,  1645,   770,   856,   859,   860,  1441,  1441,
     874,   413,   960,   794,  1644,    93,   347,   433,   435,   525,
     602,   765,  1360,  1361,  1362,  1010,  1027,  1821,    14,  1696,
    1647,  1648,  1822,  1833,   296,  1577,   765,  1700,   770,  1705,
     177,   770,  1041,  1906,  1908,   558,   730,  1042,  1043,   416,
    1838,  1922,  1644,  1643,  1641,   408,   630,   979,   689,   764,
     763,  1928,  1928,  1928,  1928,  1838,  1923,   189,   201,   261,
     447,  1909,   422,   427,   437,   595,   616,   621,   652,   683,
    1913,   112,   264,  1660,   465,   720,  1441,  1769,  1769,  1380,
     493,  1778,  1575,   559,   730,   765,  1885,   932,   933,   295,
    1833,   548,    95,   123,   875,   932,   295,   763,   945,   148,
     769,  1441,   765,   991,   989,   994,   990,   974,  1644,   763,
       6,  1503,  1576,  1503,  1503,  1441,  1516,    76,   295,   413,
    1441,  1512,  1441,    68,  1503,  1576,   764,    57,    89,   105,
     146,   174,   273,   764,  1616,  1620,  1621,   764,  1441,  1441,
    1818,   764,  1968,    53,    54,    55,    56,   107,   108,   109,
     158,   159,   229,   303,   395,   464,   529,   531,   536,   600,
     643,   732,   743,  1571,  1572,  1441,    68,  1495,  1441,  1441,
    1441,  1441,  1441,  1571,  1441,  1825,  1514,   319,   765,   770,
      68,  1503,  1441,    68,  1503,  1441,  1441,  1441,   764,  1441,
    1441,  1443,   764,  1441,  1441,  1441,   764,   635,  1503,  1503,
    1441,    68,  1503,    25,   133,   269,  1441,  1460,  1503,  1503,
    1441,  1441,    68,  1503,  1441,  1512,  1441,   770,  1441,  1441,
    1441,  1456,  1457,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1512,   392,   394,   698,   701,  1573,  1441,  1441,
    1512,  1821,  1512,  1441,  1441,  1441,  1512,  1512,  1512,    93,
    1821,  1441,  1441,  1441,  1512,    93,  1441,  1441,  1441,   764,
    1441,  1821,  1441,  1441,  1572,  1572,  1441,  1460,  1441,   764,
     360,   770,  1819,  1833,  1441,  1441,  1441,  1441,  1441,  1441,
     764,   765,  1804,  1441,   770,   771,  1494,  1835,  1442,    86,
     173,   272,   717,  1446,  1441,  1441,  1441,     6,   323,  1442,
    1449,  1442,   763,  1442,  1442,   137,    15,   125,   137,   213,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,   122,  1443,   122,
    1443,  1443,  1443,  1443,  1443,  1219,  1835,  1464,   763,  1491,
    1587,  1833,   763,   100,  1825,  1472,   445,   479,   554,   635,
    1458,   139,   204,   492,   688,  1064,  1068,    14,   268,  1763,
     906,   394,   698,   701,   905,  1492,  1801,  1818,   765,   268,
     765,  1885,   986,  1661,  1657,   193,  1531,  1532,   765,    93,
    1838,  1837,  1924,   189,   201,   447,  1909,   770,   770,  1669,
     765,  1856,  1908,  1833,    34,  1220,  1441,  1838,   263,   565,
     579,  1881,     6,    17,    61,   177,  1441,  1882,   207,   478,
    1875,  1876,  1877,  1878,   454,   493,   648,  1872,  1669,  1882,
    1833,   702,  1862,  1873,   765,  1864,   673,   755,  1122,   848,
    1821,   848,   306,   848,   848,   848,  1821,  1838,  1821,  1433,
    1433,   848,  1728,  1723,   358,   673,  1728,   125,  1726,   496,
     540,   673,  1720,  1720,   146,   174,   226,   273,   360,  1609,
    1610,  1799,  1825,  1728,  1833,   848,  1728,  1837,  1723,  1728,
    1827,   476,   686,   436,    93,  1714,   765,   421,   673,  1821,
    1725,  1723,  1723,  1441,  1728,  1728,  1728,   763,   767,  1518,
    1519,  1520,  1521,  1522,  1533,  1534,  1535,  1536,   984,   765,
     763,  1811,   875,   771,   125,   765,   193,  1385,  1387,  1388,
     433,   602,  1333,   346,   214,  1441,   787,   788,   496,   496,
     496,   496,   343,   496,   804,   496,   765,  1433,  1741,   905,
     915,  1835,   765,   748,  1826,  1830,  1839,  1845,  1846,  1847,
    1848,  1849,  1850,  1851,  1852,   438,   548,  1833,  1894,  1895,
    1827,  1335,  1644,   268,  1759,   804,  1755,  1833,  1320,   615,
     669,  1327,  1328,  1319,   659,  1324,  1885,  1797,   582,  2010,
    1835,    84,   812,  1906,  1923,  1835,  1833,  1833,  1833,  1821,
    1821,  1122,  2000,  1435,  1988,   835,  1435,  1122,   821,   823,
     825,  1122,  1994,  1997,   819,   823,  1122,   728,    74,  1422,
    1519,   186,   409,  1629,  1630,  1635,    26,    93,   143,  1430,
     201,  1624,  1634,  1958,  1430,  1577,  1606,  1419,  1420,   755,
    1431,  1432,  1435,  1429,  1676,   765,   764,  1952,  1956,  1412,
    1415,  1420,  1417,  1953,  1120,    34,  1213,   404,   161,   206,
     248,   369,   381,   484,   555,   851,   853,  1835,   608,   713,
    1028,  1029,   472,  1024,  1025,  1026,  1033,  1041,  1043,  1282,
     763,  1827,   328,   521,  1018,  1019,  1020,  1033,  1034,  1035,
    1041,  1043,  1011,  1012,  1018,   466,   218,   765,  1931,  1885,
    1279,  1278,  1821,   765,   581,  1346,  1833,   858,   764,   765,
     968,    29,   295,   961,   963,    71,   113,   150,   467,   497,
     498,   500,   501,   502,   503,   504,   506,   507,   508,   509,
     510,   511,   512,   513,   515,   516,   517,   613,   614,   795,
     796,   803,    93,  1363,   719,  1645,  1361,   369,   552,   609,
     714,  1021,  1022,  1023,  1033,  1037,  1038,  1039,  1040,  1041,
    1043,   282,  1006,  1531,   688,   765,  1701,   770,  1705,  1578,
    1601,  1602,  1704,    95,   755,  1833,  1821,  1833,  1042,   765,
    1669,  1670,   765,    28,   220,  1315,  1644,  1644,   874,   763,
     939,   942,  1833,  1929,  1930,   268,   298,  1905,    24,   755,
    1821,  1833,  1921,  1921,  1921,  1921,   953,  1654,  1441,  1838,
    1381,  1382,  1383,  1384,  1821,   116,   149,   207,   739,  1889,
     105,   754,  1613,  1615,  1888,  1441,   932,   123,   636,  1833,
      59,   873,   876,   932,   939,   940,   944,  1833,   980,   982,
     985,   983,   875,  1885,  1441,   764,  1504,   764,   764,   264,
     413,  1441,  1441,    11,   283,   764,   283,   765,  1480,   764,
     755,   764,   765,   765,   764,   764,    95,   764,  1482,   764,
     765,   764,   765,   765,   765,   765,   754,   765,   764,   763,
    1818,  1825,  1503,   764,   764,  1503,   764,   765,   764,   765,
     764,   764,   125,   765,   765,   765,   764,   764,    95,   765,
    1503,   764,    95,  1441,    95,  1441,    95,  1441,    95,   764,
     764,   764,   765,   764,  1503,   764,   764,   764,   764,  1825,
     765,   764,   765,   764,   765,   765,   765,   765,   765,   764,
     764,   765,   765,   765,   764,   765,   764,   764,   765,   764,
     764,   764,   764,   764,   764,   764,   764,  1821,   764,   764,
     764,   765,   764,  1821,   764,   764,   765,   764,   765,   765,
     764,   765,   765,   765,   764,   764,   765,  1825,  1833,   764,
     770,   764,   765,    11,   490,   765,  1238,   765,   764,  1571,
    1571,  1512,   230,   763,  1961,  1962,  1964,  1965,  1966,  1967,
     768,  1825,  1872,   235,    86,   173,   272,   717,   763,    10,
    1441,  1968,   420,  1442,  1442,   763,  1442,  1442,  1441,  1441,
    1588,   193,  1590,   763,   763,   770,  1435,  1476,  1477,  1478,
     361,   763,  1073,  1074,  1066,  1073,  1067,   577,  1076,   130,
     458,  1441,  1827,   748,  1838,  1838,  1371,   268,  1441,   234,
     287,   722,   763,  1051,  1662,  1665,  1804,   763,    99,  1908,
      95,   765,    24,  1921,  1921,  1921,  1921,  1833,  1833,  1882,
    1873,    93,    93,  1669,    61,  1219,  1221,  1669,   763,   763,
     567,   739,   490,   765,   765,   770,   770,   770,    61,   734,
    1826,  1827,  1832,  1842,  1845,  1846,  1847,  1848,  1849,  1851,
    1852,  1441,  1669,  1875,  1863,  1865,  1866,   764,  1833,   848,
    1827,  1441,  1728,   848,  1728,  1827,    95,  1727,   425,  1825,
     226,   564,   765,   770,   847,  1728,   601,  1606,  1713,  1726,
    1723,  1821,  1728,  1728,  1553,  1833,    42,   117,   128,   135,
     164,   225,   256,  1529,  1530,   234,   765,  1821,   874,  1809,
    1812,  1833,  1810,   873,  1835,    61,  1378,  1833,  1376,  1821,
    1059,  1387,   115,   130,  1247,  1389,    61,   114,   789,   790,
    1441,  1681,  1682,    62,  1748,   804,  1746,  1644,  1747,   913,
     916,   917,   912,   560,   561,   637,   914,    97,   132,   438,
     485,   548,   592,   748,   749,   750,  1896,  1898,  1577,  1644,
     433,   602,   721,  1338,  1339,  1340,  1615,     6,  1758,   765,
     718,  1329,   765,    93,  2011,  1118,  1119,   298,  1904,  1931,
     832,   283,   708,  1260,   177,   177,   807,   808,   848,  1122,
    1122,  1821,   824,   826,  1994,  1997,   848,  1833,   824,  1122,
     263,  1829,  1829,   771,  1631,  1632,  1633,  1833,  1835,  1603,
     280,   125,  1833,  1624,  1634,  1407,   100,  1581,  1601,   765,
    1441,  1816,  1825,  1435,  1678,  1680,   763,  1673,  1412,   230,
     763,  1393,  1962,  1670,  1670,   544,   248,   248,   644,  1827,
     248,   248,   248,  1827,  1827,  1670,   765,  1026,   153,   343,
     389,   470,   532,   550,   551,   555,   556,   557,   623,   671,
     828,   829,    49,   462,   572,   579,   587,   660,   720,   833,
     834,  1670,  1670,   765,  1020,  1013,  1014,  1033,  1034,  1035,
      26,   298,   727,  1925,   249,   351,   480,   553,   680,   740,
    1919,  1920,  1927,   298,  1934,  1273,   177,   843,  1283,   763,
    1980,  1277,  1345,    93,   857,  1441,   264,   964,   963,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   765,   719,  1670,  1670,  1670,  1670,   765,
    1023,   495,   434,  1015,  1016,  1017,  1033,  1034,  1035,  1036,
    1039,  1040,  1041,  1043,   698,   702,  1424,  1425,  1466,  1648,
    1833,   283,  1833,  1441,   138,  1612,  1519,   770,  1705,  1885,
    1908,  1133,  1835,  1838,  1885,   413,   889,   890,   943,    72,
     764,   765,  1923,   316,  1921,   770,   770,   268,   268,   268,
     268,   874,  1662,   765,  1385,  1387,  1829,   739,   493,   375,
      57,    89,   146,   174,   273,   123,    37,    38,   429,   430,
     734,   882,   883,   884,   886,   892,   919,   920,  1826,  1843,
    1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,   413,   923,
     769,   941,   764,   765,   992,   971,   987,  1834,   987,   987,
     873,   765,  1441,  1441,   264,    17,    32,    58,    70,    90,
     124,   279,   291,   392,   394,   546,   653,   701,   724,  1505,
    1509,  1510,  1214,  1214,  1505,  1512,   764,   122,   122,  1441,
    1512,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1443,   770,
     764,   764,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
     764,  1441,    95,  1441,    95,  1441,    95,  1441,   122,  1441,
     764,  1457,  1441,  1456,  1512,  1441,  1441,  1441,  1441,  1441,
    1517,  1441,  1441,  1441,  1441,  1512,   146,   753,  1613,  1617,
     122,  1441,  1441,  1441,  1441,  1441,   770,   770,  1833,  1441,
      17,    32,  1233,  1234,  1235,  1236,  1237,  1616,  1615,   764,
    1441,   754,   754,  1542,  1543,  1544,   763,  1403,  1404,  1405,
    1430,  1958,  1541,  1950,  1959,  1970,  1832,  1441,  1968,  1442,
     764,   765,   764,  1442,    10,  1441,  1968,   420,  1571,  1571,
    1589,  1833,    26,   764,  1488,  1511,  1512,  1825,  1441,   764,
     765,   763,  1082,  1443,  1074,   138,  1108,  1109,  1616,   682,
    1077,   321,  1069,  1065,   905,   268,  1821,   413,  1663,  1666,
    1666,   764,  1111,  1664,  1804,  1814,  1815,  1819,  1833,   230,
    1570,  1833,   571,  1922,  1837,  1921,    95,    95,    95,    95,
    1669,  1669,   777,  1838,  1882,   263,   263,   207,   620,   646,
    1879,  1877,  1876,   770,   770,  1669,  1882,  1864,   765,  1868,
    1870,  1874,   419,   731,  1613,  1618,  1718,  1610,  1611,   425,
    1610,  1610,  1825,   174,  1727,  1577,  1723,   230,   287,  1537,
    1545,  1546,  1547,  1548,  1553,  1554,  1969,  1518,   128,   128,
     185,  1556,   135,   225,  1529,  1556,  1518,  1689,  1690,  1819,
    1520,  1531,   413,   764,   765,    11,   413,  1386,   763,   765,
     748,    93,   298,  1742,  1743,   748,   765,  1897,  1606,    95,
    1341,  1339,  1328,   499,   803,  1330,  1615,   530,   316,  1934,
      92,   341,   458,   639,  1266,  1266,   177,  1821,  1821,   115,
     137,   190,   251,   252,   253,   276,   301,   329,   331,   350,
     369,   376,   391,   401,   416,   473,   483,   520,   533,   573,
     579,   638,   645,   675,   690,   691,   703,   763,  1045,  1049,
    1124,  1126,  1127,  1130,  1131,  1132,  1826,   827,   828,  2001,
    1989,   848,   813,  1998,   628,  1821,  1636,  1835,   765,   770,
    1441,  1604,  1817,  1885,   651,  1625,  1951,  1952,    26,   104,
    1579,  1606,  1432,  1436,  1436,   770,  1682,   764,   765,  1674,
    1430,  1417,   763,  1398,  1399,  1952,  1956,  1221,  1215,   391,
     391,   399,   475,   105,   146,   174,   273,  1044,  1619,  1620,
    1826,  1026,  1670,  1670,    26,  1670,  1672,  1670,   153,   532,
     298,  1670,  1671,  1671,   829,  1827,  1827,  1827,  1827,  1615,
    1827,  1827,   764,   765,  1044,  1044,  1020,   765,  1014,   263,
     579,  1835,   263,   263,   263,    10,  1918,   518,   519,   522,
     523,   524,  1932,  1933,     5,     7,     8,    31,    33,    39,
      73,   143,   178,   182,   193,   215,   321,   357,   405,   406,
     412,   424,   443,   469,   535,   606,   617,   618,   619,   706,
    1057,  1125,  1127,  1287,  1291,  1293,  1296,  1302,  1303,  1304,
    1306,  1307,  1598,   373,   641,   215,  1284,  1833,  1981,    11,
    1980,     6,   361,  1347,   858,   874,  1441,   763,   763,  1615,
     763,  1615,  1615,  1827,  1827,  1618,  1827,  1615,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1615,  1827,   387,   555,   657,
    1802,  1827,  1615,   796,  1827,  1616,  1044,  1044,  1023,   100,
    1670,   765,  1017,   263,  1443,   770,  1519,  1705,   226,  1610,
     221,  1702,  1577,  1315,    93,   891,   764,  1441,   942,  1930,
     298,  1936,   571,   268,   755,   755,  1923,  1923,  1923,  1923,
     954,   177,  1683,  1383,  1821,  1387,   114,  1390,  1774,    16,
      17,    22,    23,    32,    58,    70,    90,   124,   144,   145,
     147,   155,   156,   157,   175,   209,   234,   240,   265,   266,
     267,   290,   291,   337,   339,   340,   355,   392,   394,   417,
     439,   450,   451,   482,   491,   537,   538,   539,   545,   546,
     561,   562,   585,   586,   604,   636,   695,   698,   701,   708,
     724,   743,  1179,  1181,  1182,  1184,  1185,  1186,  1187,  1188,
    1189,  1190,  1191,  1192,  1193,  1194,   456,    35,    47,   765,
     769,  1441,   940,   408,   413,  1441,  1441,   763,  1199,  1200,
    1200,   763,  1196,  1197,  1199,   763,  1197,  1202,   124,  1199,
    1200,  1200,   124,  1200,  1199,   764,   764,   764,   764,  1481,
    1441,  1441,   764,   182,  1497,   764,   764,   765,   765,   764,
     765,   764,   125,  1473,  1474,  1825,   764,   764,   764,   764,
     765,   764,    93,   764,   764,   765,  1441,  1441,  1441,  1441,
     764,   764,    11,  1450,   764,    11,   764,   764,   765,   764,
     765,   764,   765,   764,   765,   764,   764,   764,   764,   146,
     174,   174,   764,   765,  1441,   764,   764,   765,   765,   764,
    1825,  1833,   770,   764,   763,  1228,  1228,    12,    65,   630,
     753,  1230,  1231,  1232,   765,   765,   764,  1441,  1441,  1420,
    1971,  1972,  1973,  1403,   764,  1962,   230,  1430,  1960,  1539,
    1965,  1966,   770,   764,  1512,  1442,   764,   765,   764,  1442,
    1590,  1582,  1817,   182,  1490,   764,   763,  1436,  1478,  1070,
    1071,  1072,  1833,   764,  1618,   122,    26,   763,  1084,   748,
     763,  1074,  1838,   216,  1667,  1668,  1819,   763,  1665,   764,
     764,   765,   230,   770,  1112,  1113,   764,   765,    95,    95,
    1924,  1924,  1924,  1924,  1882,  1882,   764,   764,   370,   711,
     207,  1833,  1833,  1882,  1867,  1869,    57,    89,   146,   174,
     273,  1606,  1611,  1719,  1728,  1555,  1549,   764,  1956,  1959,
    1430,  1958,  1521,  1805,   768,   128,  1556,  1556,  1533,   128,
     177,   283,   765,  1688,  1669,    94,  1426,   297,  1833,   763,
     763,   200,  1567,  1568,  1569,  1833,   790,   763,  1744,   207,
     345,   352,   368,   378,   379,   380,   388,   528,   542,   627,
     642,   678,   692,   918,   917,   763,   541,   748,   765,  1837,
     391,  1821,   810,   811,   404,  1821,  1670,  1670,  1670,  1670,
    1670,   726,  1670,  1670,  1670,  1670,  1670,   404,  1670,  1670,
    1670,  1670,  1670,  1670,  1670,  1670,  1670,  1670,   407,   526,
    1833,  1670,  1670,    36,   137,   580,   770,  1111,  1138,  1139,
    1140,  1141,  1142,  1150,  1151,  1155,  1156,  1157,  1247,  1251,
    1252,  1820,  1833,  1055,  1056,  1057,   765,  1126,  1669,  1124,
     763,   871,   848,   836,  1980,   763,   869,    58,   124,   209,
     677,  1137,   814,  1213,  1216,  1632,  1833,   765,    12,    65,
    1605,   534,   763,  1582,  1580,   734,  1584,    11,  1437,  1827,
    1833,   755,  1825,  1436,  1435,  1677,  1679,  1682,  1408,  1416,
    1419,  1420,  1398,   764,   230,  1397,  1962,  1617,  1617,  1617,
    1617,  1617,  1617,   834,  1014,   263,    11,   283,  1926,  1919,
    1615,  1615,  1615,  1802,   753,  1613,  1614,  1932,    36,   193,
     367,   580,   687,  1142,  1150,  1151,  1308,  1308,   193,  1308,
     193,   268,    36,    92,   193,   580,   687,  1154,  1247,  1308,
    1670,   193,    26,  1059,    11,   268,   748,  1317,  1670,   193,
     129,   690,   129,   193,   690,  1308,   193,   578,   193,   193,
     193,  1125,   765,  1056,  1291,   763,  1141,  1446,  1942,   325,
     423,   837,   268,   405,   412,   839,   764,   765,  1982,  1983,
      11,     6,   763,  1348,   965,   799,   800,  1615,   801,   802,
    1615,   797,   798,  1615,  1833,  1044,  1017,  1833,  1577,   425,
     226,  1431,  1391,    99,  1923,  1931,  1931,  1931,  1931,    76,
      77,   955,   410,  1390,   488,   114,   217,  1780,  1199,  1201,
    1200,   374,  1199,  1206,  1207,  1196,   199,  1196,  1206,    17,
      34,   324,   342,   715,  1183,  1207,  1213,  1223,  1224,  1226,
      32,   290,  1183,  1189,  1191,  1206,  1183,  1196,   763,  1206,
    1183,  1199,  1201,  1183,  1200,   763,  1196,  1206,    32,   291,
     291,   293,  1196,  1199,   708,   763,   881,  1200,  1200,  1200,
     563,  1199,  1200,    61,   921,  1196,   293,  1201,  1201,  1199,
    1199,  1200,  1202,    93,    93,   885,  1833,   874,   971,    57,
     146,   174,   273,  1506,   174,   174,  1507,  1508,   764,  1571,
    1571,    26,   232,  1496,  1441,  1441,  1512,   164,   340,   764,
     298,  1475,  1441,  1441,  1441,  1571,    58,    70,    90,   124,
     209,   279,   392,   394,   545,   546,   701,  1189,  1190,  1451,
    1452,  1453,  1454,  1505,  1441,  1441,  1441,  1441,    86,   272,
    1615,  1623,  1571,  1441,  1441,  1833,  1616,   764,  1238,  1233,
    1231,  1233,  1234,  1615,  1431,  1973,   764,  1956,  1543,  1540,
    1833,   764,  1512,   182,  1591,   765,  1605,    26,   764,  1511,
    1437,   764,   765,  1441,  1068,   193,  1085,  1086,  1616,  1070,
     765,  1669,  1053,  1054,  1665,  1814,  1112,   755,  1833,  1115,
    1419,  1420,  1958,  1423,  1059,  1833,  1924,  1924,  1669,  1669,
    1868,  1873,  1606,  1550,  1551,  1666,  1426,  1538,  1541,  1430,
    1967,  1518,  1533,   128,   128,  1518,  1533,  1523,  1524,  1690,
    1577,    61,  1681,     6,    11,    15,    95,  1427,  1575,  1433,
       6,  1292,  1300,  1301,  1833,   764,   765,  1618,  1749,  1750,
     432,   143,  1679,  1827,   803,   738,   809,   763,   763,  1670,
      61,  1615,  1622,    61,  1615,    61,  1615,    61,  1615,  1128,
    1618,  1615,  1615,  1827,  1827,  1670,  1615,  1835,   438,   485,
     555,  1136,  1615,  1618,  1618,    61,  1615,  1827,    61,   372,
     374,   411,   439,   574,   610,  1135,  1622,  1615,  1622,  1269,
    1820,  1821,    94,  1833,   764,   764,   765,    33,    92,   200,
     277,  1153,  1246,   212,  1240,  1122,  1247,  1248,  1248,  1158,
     770,  1050,  1780,  1126,    61,  1619,  1827,  1833,   872,   850,
      14,   318,  1001,   177,    11,   870,   628,  1995,   662,  1980,
    1215,  1637,  1817,  1885,  1435,  1626,  1627,  1628,   299,   300,
    1583,  1441,  1491,  1585,  1586,  1827,  1833,   770,  1682,   764,
     765,  1430,  1958,  1430,   764,  1952,  1956,  1417,  1413,  1416,
    1420,  1827,   174,   174,   112,  1122,   726,   112,  1121,  1649,
    1366,  1649,  1292,  1213,  1649,   130,  1650,    94,   726,   200,
    1649,  1649,    61,  1833,  1366,  1599,  1600,  1819,  1058,  1821,
      61,  1833,  1366,  1301,  1649,  1366,  1366,  1366,  1292,     5,
      73,  1304,  1138,   318,   438,  1316,   591,  1441,  1441,   177,
     843,   848,   177,   369,   844,  1833,  1804,  1982,  1349,   471,
     264,   764,   765,   764,   765,   764,   765,   425,   571,  1931,
     298,  1935,  1935,  1935,  1935,   874,   951,  1684,   123,  1206,
    1205,  1669,  1206,   279,   304,   653,  1198,  1198,  1223,  1221,
    1225,  1226,  1214,    17,  1224,  1227,   374,  1208,  1206,  1183,
    1198,  1270,  1797,  1206,  1270,  1198,   293,  1198,  1206,   563,
     878,   879,   880,  1833,   921,  1183,   877,   919,  1183,  1198,
    1441,   211,  1195,  1225,  1227,  1183,  1206,  1198,  1198,   887,
     895,   896,  1615,   763,   888,   413,   764,   764,   764,   764,
    1225,   765,  1225,  1225,   764,   764,  1498,  1817,  1797,   138,
    1499,  1500,  1501,   764,   765,   764,   484,   534,   601,   764,
     764,   764,   764,  1196,   124,  1200,    32,  1200,  1455,   764,
     764,   764,   764,   765,   764,   764,   764,  1229,   764,   765,
    1420,  1541,   764,    26,   204,   226,  1592,  1593,  1817,  1817,
     764,  1072,  1571,   130,   458,  1087,   764,   765,   764,  1668,
    1682,  1952,  1956,  1114,  1115,  1420,   770,  1116,  1430,  1958,
    1116,  1431,  1882,  1882,  1423,  1575,  1539,  1970,   177,  1526,
    1533,  1533,   177,  1528,  1441,   763,  1601,   563,  1425,  1425,
    1565,  1566,  1968,   764,   765,  1568,   764,   765,    10,  1751,
     764,  1835,   763,  1267,  1268,  1833,  1267,  1827,   763,  1827,
     764,   763,  1047,  1048,  1046,  1140,   763,   130,   130,  1248,
    1122,  1821,  1269,  1833,  1122,  1122,   337,   339,   340,   355,
     392,   394,   417,   439,   450,   451,   482,   491,   537,   538,
     539,   545,   546,   561,   562,   585,   586,   604,   647,   695,
     698,   701,   724,   743,   919,  1159,  1180,  1181,  1833,    11,
    1117,   118,   125,   187,   865,   866,   867,   868,   851,   852,
    1942,  2002,    63,   120,   280,  1002,   641,  1982,   861,   862,
     863,   864,  1833,  1996,   850,  1827,    11,   361,  1781,  1605,
    1441,   764,   765,    11,   765,   755,  1436,  1682,  1409,  1413,
    1446,  1366,  1446,  1820,  1292,  1820,  1289,  1215,  1820,  1649,
    1300,   130,  1820,  1820,  1292,   765,  1605,  1062,  1616,   298,
    1157,  1292,  1297,  1292,   764,  1833,  1571,   655,  1827,   408,
    1285,   230,   763,  1962,  1984,  1352,  1833,     6,   763,  1350,
     874,   800,   802,   798,  1935,    99,  1932,  1937,  1938,   130,
     261,  1833,   304,   279,  1205,   764,   765,   764,   877,  1179,
     764,   765,   921,   770,   748,  1227,   184,   243,   245,   893,
     894,   895,   898,  1446,  1833,   862,    93,    93,   174,   765,
    1605,   764,  1502,  1610,  1441,   534,   431,  1225,  1618,   764,
    1615,  1601,  1604,   764,    15,   386,   394,   698,   701,   710,
    1594,  1595,  1801,  1605,  1605,   670,  1110,  1069,   763,  1075,
    1088,  1833,  1086,  1116,   755,  1052,  1431,   764,  1525,   283,
    1527,   283,  1570,  1612,  1425,    10,   268,  1563,  1564,  1434,
    1301,  1750,   405,   570,  1267,   764,   765,  1605,   763,   764,
    1747,  1833,  1952,  1956,  1124,  1441,  1122,  1269,  1833,   763,
    1241,   283,  1259,   708,  1269,  1269,  1161,   770,  1152,  1153,
    1160,   770,  1051,   764,   765,   864,    67,   923,   177,   837,
     764,   765,   636,   708,  1179,  1179,  1999,  1982,    79,    82,
     179,   262,  1782,  1783,   140,  1784,  1436,  1628,  1587,  1586,
    1951,  1430,    84,  1294,    84,    73,   234,  1157,  1360,  1220,
    1820,  1315,  1288,  1600,   261,  1316,  1298,  1300,  1290,   838,
     845,   846,  1417,   763,  1401,  1402,  1950,  1954,  1956,   298,
    1985,   764,   765,  1351,   571,  1938,   280,  1821,  1225,  1797,
    1225,   921,   879,  1833,   174,   765,   923,   445,   764,   890,
     993,   764,  1817,   564,   765,   764,   764,   764,  1606,   710,
    1595,  1596,  1801,   636,   589,   426,  1597,   589,  1615,   763,
    1082,  1078,    61,   288,   289,   386,   461,  1089,  1951,  1552,
    1426,  1441,   763,  1441,   763,   764,  1425,  1425,   114,   282,
     443,  1558,  1559,  1562,   764,   349,   763,   764,  1885,  1268,
     174,  1885,   764,   765,  1055,   764,  1269,  1259,   708,  1242,
    1833,   151,  1243,  1266,  1143,  1266,  1145,  1146,   200,   277,
     301,   369,   481,   736,  1162,  1163,  1172,  1210,  1211,  1212,
    1239,  1446,  1826,  1181,    34,    61,   173,   177,   329,   449,
     647,  1166,  1168,  1203,  1204,  1211,  1833,  1129,  1130,   867,
      91,   830,  1435,   842,   843,   864,   708,   881,   563,   922,
      26,    26,    79,    26,  1783,   250,   262,  1785,  1786,  1820,
     577,   763,  1295,    61,    61,  1316,  1366,  1821,  1299,  1338,
     670,   840,   923,  1410,  1419,  1420,  1958,  1401,   764,   230,
    1400,  1962,  1960,    33,   344,   493,  1833,   200,  1353,  1354,
    1833,  1685,  1531,   770,   894,   987,  1605,  1610,  1610,  1430,
     442,    10,   442,   100,   386,   555,   697,  1080,  1081,  1833,
     764,   681,  1083,  1091,   696,   115,   369,   376,   391,   520,
     533,   552,   690,  1105,  1106,  1107,  1722,  1420,  1575,  1570,
    1570,  1247,  1247,  1559,   833,  1885,   298,   369,   483,  1254,
    1258,  1262,  1265,  1826,  1605,   764,  1255,  1257,  1262,  1264,
    1833,  1050,  1149,  1147,  1266,   764,   765,   446,   576,   654,
     177,  1244,   763,  1144,   763,   763,   130,  1827,   687,  1211,
     726,   130,   173,  1669,  1219,   753,   754,   763,  1176,  1177,
    1178,  1461,  1800,  1826,   280,   322,    61,    11,   374,  1204,
    1209,  1990,   839,   563,  1833,   830,  1797,  1797,    26,  1797,
      26,    26,  1786,  1153,  1616,  1085,  1178,  1059,   123,  1441,
     414,   841,   830,  1958,  1430,  1430,   764,  1954,  1956,  1417,
    1414,  1419,  1420,  1958,  1955,   571,    33,    33,   764,   765,
    1691,  1692,  1819,  1775,  1833,  1596,   636,   184,   311,   764,
     765,  1616,   763,  1093,  1095,  1090,   404,  1670,  1670,   404,
    1670,  1670,  1670,  1670,   763,  1100,  1107,   416,   764,   764,
      93,  1557,  1557,   764,   283,   708,  1253,  1256,  1261,  1262,
    1263,   575,  1827,  1670,  1305,  1306,  1307,  1265,  1669,  1305,
    1264,   764,   763,   763,  1148,  1833,    63,   280,  1267,   763,
    1267,  1267,    61,  1619,  1827,  1833,  1802,  1802,  1175,   170,
     722,   636,  1176,  1205,  1203,  1821,   844,  1833,   770,  1797,
    1797,  1797,   764,   763,  1441,  1430,  1411,  1414,  1958,  1984,
     571,   571,  1354,   765,  1669,  1216,  1079,  1081,   763,  1094,
    1095,  1096,   153,  1092,  1095,  1670,  1827,  1827,  1670,  1619,
    1619,  1616,  1835,   682,  1101,  1102,  1670,   100,   128,   182,
    1561,  1560,  1266,  1266,  1305,  1263,  1826,  1615,  1307,  1306,
      61,  1619,  1827,  1833,  1267,  1267,   763,    28,   220,   234,
     555,  1245,  1245,   764,  1267,   764,   764,   764,   763,  1438,
     413,   671,  1167,    93,   408,   770,  1833,  1085,  1954,  1430,
    1692,  1682,  1776,  1083,   764,   765,   153,  1098,  1099,  1443,
    1827,  1827,  1103,   764,   765,  1133,    26,    26,   763,   763,
     764,   764,  1267,    61,   173,   315,   177,   177,  1253,   764,
    1254,  1255,   764,  1616,  1164,  1165,  1210,  1164,   581,   676,
     729,  1169,  1435,   845,  1833,   770,   764,   226,  1787,  1095,
     765,  1097,  1104,  1835,  1102,  1567,  1569,  1240,  1253,   764,
     280,    63,  1253,   764,  1210,  1170,  1171,  1172,  1991,  1833,
     466,  1781,  1099,   764,  1105,   764,   764,  1253,  1245,  1245,
    1172,    75,    26,  1784,   636,  1797,   114,  1788,  1992,   174,
     763,  1790,   441,   588,  1986,  1987,   140,   226,  1789,   764,
     771,  1791,  1792,  1819,   234,  1793,  1835,  1993,  1835,   764,
     765,  1794,  1795,  1819,   923,  1792,   765,  1669,   830,  1795,
    1435,  1682,  1436
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   773,   774,   775,   774,   774,   776,   776,   777,   777,
     777,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   779,   780,
     780,   781,   783,   782,   785,   784,   786,   784,   787,   788,
     787,   789,   789,   790,   792,   791,   794,   793,   795,   795,
     796,   796,   796,   796,   796,   796,   796,   796,   796,   796,
     796,   796,   796,   796,   796,   796,   796,   796,   796,   796,
     797,   797,   797,   798,   799,   799,   799,   800,   801,   801,
     801,   802,   803,   803,   803,   803,   803,   803,   803,   804,
     804,   805,   807,   806,   808,   806,   809,   806,   810,   806,
     811,   806,   812,   806,   813,   806,   814,   806,   815,   806,
     816,   806,   817,   806,   818,   806,   819,   806,   820,   806,
     821,   806,   806,   806,   806,   806,   822,   806,   823,   824,
     825,   825,   826,   826,   827,   827,   828,   828,   829,   829,
     829,   829,   829,   829,   829,   829,   829,   829,   829,   829,
     829,   829,   830,   830,   832,   831,   833,   833,   834,   834,
     834,   834,   834,   834,   834,   836,   835,   838,   837,   837,
     839,   839,   839,   839,   840,   840,   841,   841,   842,   842,
     843,   844,   844,   846,   845,   847,   848,   848,   849,   849,
     850,   850,   851,   851,   851,   851,   851,   851,   851,   852,
     852,   853,   853,   855,   854,   856,   854,   857,   854,   858,
     858,   859,   859,   860,   860,   861,   861,   862,   862,   863,
     864,   864,   864,   864,   864,   864,   865,   865,   866,   866,
     867,   868,   868,   868,   868,   870,   869,   872,   871,   873,
     873,   874,   874,   875,   875,   876,   877,   877,   877,   878,
     879,   880,   880,   881,   882,   883,   883,   883,   883,   884,
     884,   884,   885,   884,   887,   886,   888,   888,   889,   891,
     890,   892,   892,   892,   892,   893,   893,   894,   895,   895,
     896,   897,   897,   898,   898,   898,   898,   898,   898,   899,
     899,   900,   901,   901,   902,   902,   903,   903,   904,   904,
     905,   905,   905,   906,   906,   906,   906,   906,   906,   906,
     906,   906,   906,   906,   906,   907,   908,   909,   909,   910,
     910,   911,   911,   912,   913,   913,   914,   914,   914,   915,
     916,   916,   917,   918,   918,   918,   918,   918,   918,   918,
     918,   918,   918,   918,   918,   918,   919,   919,   920,   920,
     921,   921,   922,   922,   922,   922,   922,   923,   923,   923,
     923,   923,   923,   923,   923,   923,   923,   924,   924,   924,
     924,   926,   925,   928,   927,   929,   929,   931,   930,   930,
     933,   932,   934,   934,   934,   934,   935,   935,   935,   935,
     936,   937,   938,   939,   941,   940,   943,   942,   944,   944,
     945,   945,   946,   947,   947,   947,   948,   948,   949,   950,
     950,   952,   953,   954,   951,   955,   955,   955,   957,   956,
     959,   960,   958,   958,   961,   961,   962,   962,   964,   965,
     963,   967,   968,   966,   969,   969,   970,   971,   971,   972,
     974,   973,   976,   975,   978,   977,   979,   979,   980,   981,
     981,   981,   982,   984,   983,   986,   985,   987,   989,   988,
     990,   988,   991,   992,   993,   988,   994,   988,   996,   995,
     997,   995,   998,   999,   995,  1000,   995,  1001,  1001,  1002,
    1002,  1002,  1003,  1004,  1005,  1006,  1006,  1007,  1007,  1008,
    1009,  1010,  1010,  1012,  1011,  1013,  1013,  1013,  1014,  1014,
    1014,  1015,  1016,  1016,  1016,  1017,  1017,  1017,  1017,  1017,
    1017,  1017,  1017,  1018,  1019,  1019,  1019,  1020,  1020,  1020,
    1020,  1020,  1021,  1022,  1022,  1022,  1023,  1023,  1023,  1023,
    1023,  1023,  1023,  1024,  1025,  1025,  1025,  1026,  1026,  1026,
    1027,  1028,  1029,  1030,  1031,  1032,  1032,  1032,  1033,  1034,
    1035,  1036,  1037,  1038,  1039,  1040,  1041,  1042,  1042,  1043,
    1043,  1044,  1044,  1046,  1045,  1045,  1045,  1047,  1045,  1048,
    1045,  1045,  1049,  1049,  1050,  1050,  1052,  1051,  1051,  1051,
    1053,  1051,  1054,  1051,  1055,  1056,  1056,  1058,  1057,  1059,
    1061,  1060,  1063,  1062,  1064,  1065,  1064,  1064,  1064,  1066,
    1064,  1064,  1067,  1064,  1068,  1068,  1069,  1069,  1070,  1070,
    1071,  1071,  1072,  1073,  1074,  1075,  1076,  1076,  1077,  1078,
    1077,  1079,  1077,  1080,  1080,  1081,  1082,  1083,  1083,  1084,
    1084,  1085,  1085,  1087,  1086,  1088,  1089,  1090,  1089,  1091,
    1089,  1089,  1089,  1089,  1092,  1092,  1093,  1093,  1094,  1094,
    1096,  1097,  1095,  1098,  1098,  1099,  1099,  1100,  1100,  1101,
    1101,  1103,  1102,  1104,  1105,  1105,  1106,  1106,  1107,  1107,
    1107,  1107,  1107,  1107,  1107,  1107,  1107,  1108,  1109,  1108,
    1108,  1110,  1110,  1111,  1113,  1112,  1114,  1114,  1115,  1115,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,  1120,  1121,
    1121,  1122,  1122,  1123,  1123,  1124,  1124,  1125,  1125,  1126,
    1126,  1126,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1128,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1129,  1129,  1130,  1131,  1132,  1133,  1134,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1136,  1136,  1136,  1137,  1137,
    1137,  1137,  1138,  1139,  1139,  1140,  1140,  1140,  1140,  1141,
    1141,  1143,  1142,  1144,  1142,  1145,  1142,  1146,  1142,  1147,
    1142,  1148,  1142,  1149,  1142,  1150,  1151,  1152,  1152,  1153,
    1154,  1154,  1155,  1155,  1156,  1158,  1157,  1160,  1159,  1161,
    1159,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,
    1166,  1166,  1166,  1167,  1166,  1166,  1166,  1168,  1168,  1169,
    1169,  1169,  1169,  1170,  1170,  1171,  1171,  1172,  1172,  1172,
    1172,  1174,  1173,  1175,  1175,  1175,  1176,  1177,  1177,  1178,
    1178,  1179,  1180,  1180,  1181,  1181,  1181,  1181,  1181,  1182,
    1182,  1182,  1182,  1182,  1182,  1182,  1182,  1182,  1182,  1183,
    1183,  1183,  1183,  1184,  1184,  1184,  1184,  1184,  1184,  1184,
    1184,  1185,  1185,  1185,  1185,  1185,  1186,  1186,  1186,  1186,
    1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,
    1186,  1186,  1187,  1187,  1188,  1188,  1188,  1188,  1188,  1188,
    1188,  1188,  1189,  1190,  1190,  1191,  1191,  1192,  1192,  1192,
    1192,  1192,  1193,  1193,  1193,  1193,  1193,  1194,  1194,  1194,
    1195,  1195,  1196,  1196,  1196,  1197,  1198,  1198,  1198,  1198,
    1198,  1198,  1199,  1199,  1199,  1199,  1200,  1200,  1201,  1201,
    1202,  1202,  1203,  1203,  1204,  1204,  1204,  1204,  1204,  1204,
    1204,  1205,  1205,  1206,  1206,  1207,  1208,  1209,  1210,  1210,
    1210,  1211,  1211,  1211,  1211,  1211,  1211,  1212,  1212,  1213,
    1213,  1214,  1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,
    1218,  1219,  1220,  1220,  1221,  1221,  1222,  1222,  1223,  1223,
    1223,  1224,  1225,  1225,  1226,  1226,  1226,  1226,  1226,  1226,
    1227,  1227,  1229,  1228,  1230,  1230,  1231,  1232,  1232,  1232,
    1232,  1233,  1234,  1235,  1235,  1236,  1237,  1237,  1238,  1238,
    1239,  1239,  1240,  1241,  1241,  1242,  1242,  1243,  1243,  1243,
    1243,  1244,  1244,  1244,  1244,  1244,  1245,  1245,  1245,  1245,
    1245,  1246,  1246,  1247,  1247,  1248,  1248,  1249,  1249,  1249,
    1250,  1250,  1251,  1252,  1253,  1253,  1254,  1254,  1255,  1255,
    1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,  1260,
    1260,  1261,  1261,  1262,  1262,  1262,  1262,  1262,  1262,  1263,
    1263,  1264,  1265,  1265,  1266,  1266,  1266,  1267,  1267,  1268,
    1268,  1269,  1269,  1270,  1270,  1272,  1273,  1271,  1274,  1271,
    1271,  1275,  1271,  1276,  1271,  1277,  1271,  1278,  1271,  1279,
    1271,  1271,  1271,  1271,  1271,  1280,  1271,  1271,  1281,  1282,
    1271,  1283,  1283,  1283,  1283,  1284,  1284,  1285,  1285,  1286,
    1286,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,
    1287,  1288,  1287,  1287,  1289,  1287,  1290,  1287,  1287,  1287,
    1287,  1287,  1291,  1292,  1292,  1294,  1293,  1295,  1295,  1295,
    1297,  1296,  1298,  1299,  1298,  1300,  1300,  1301,  1302,  1302,
    1303,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,
    1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,
    1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1305,  1305,
    1305,  1305,  1305,  1306,  1306,  1307,  1307,  1308,  1308,  1309,
    1309,  1311,  1310,  1312,  1312,  1313,  1313,  1314,  1314,  1315,
    1315,  1315,  1316,  1316,  1316,  1317,  1317,  1317,  1317,  1319,
    1318,  1320,  1318,  1318,  1318,  1321,  1322,  1322,  1323,  1323,
    1324,  1324,  1324,  1326,  1325,  1327,  1327,  1328,  1328,  1328,
    1329,  1329,  1329,  1330,  1330,  1332,  1331,  1333,  1333,  1333,
    1334,  1335,  1334,  1337,  1336,  1338,  1338,  1339,  1339,  1340,
    1340,  1340,  1341,  1341,  1343,  1342,  1344,  1344,  1345,  1346,
    1346,  1347,  1347,  1348,  1349,  1348,  1350,  1351,  1350,  1352,
    1352,  1352,  1353,  1353,  1353,  1354,  1354,  1355,  1355,  1356,
    1357,  1356,  1359,  1358,  1360,  1360,  1361,  1361,  1362,  1362,
    1362,  1362,  1362,  1362,  1363,  1363,  1365,  1364,  1366,  1366,
    1366,  1368,  1367,  1367,  1369,  1369,  1370,  1370,  1371,  1373,
    1372,  1374,  1374,  1375,  1375,  1376,  1377,  1378,  1378,  1380,
    1379,  1381,  1381,  1382,  1382,  1383,  1384,  1386,  1385,  1388,
    1387,  1389,  1389,  1390,  1390,  1391,  1392,  1392,  1392,  1392,
    1392,  1392,  1392,  1393,  1393,  1393,  1393,  1393,  1393,  1393,
    1395,  1394,  1396,  1394,  1394,  1397,  1397,  1399,  1398,  1398,
    1400,  1400,  1402,  1401,  1401,  1404,  1403,  1405,  1403,  1403,
    1407,  1406,  1406,  1409,  1408,  1408,  1410,  1411,  1410,  1410,
    1410,  1412,  1412,  1413,  1413,  1414,  1414,  1414,  1415,  1415,
    1415,  1416,  1416,  1416,  1416,  1416,  1418,  1417,  1419,  1420,
    1420,  1421,  1422,  1422,  1423,  1423,  1424,  1424,  1424,  1425,
    1425,  1425,  1426,  1426,  1427,  1427,  1427,  1427,  1428,  1428,
    1429,  1429,  1429,  1430,  1430,  1430,  1431,  1431,  1431,  1432,
    1432,  1433,  1434,  1435,  1436,  1437,  1437,  1437,  1437,  1437,
    1438,  1438,  1438,  1439,  1439,  1439,  1440,  1440,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1444,
    1444,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1448,  1448,
    1448,  1448,  1448,  1449,  1449,  1450,  1450,  1451,  1451,  1451,
    1452,  1452,  1452,  1452,  1452,  1452,  1453,  1453,  1453,  1455,
    1454,  1454,  1456,  1457,  1457,  1458,  1458,  1458,  1458,  1459,
    1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1462,  1462,  1462,
    1463,  1463,  1464,  1464,  1464,  1464,  1464,  1464,  1465,  1465,
    1466,  1466,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,  1467,
    1467,  1467,  1467,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,  1468,
    1468,  1468,  1468,  1468,  1468,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1470,  1470,  1470,  1470,  1470,  1470,  1470,  1470,
    1470,  1472,  1471,  1471,  1471,  1473,  1473,  1474,  1474,  1475,
    1475,  1476,  1476,  1477,  1477,  1478,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1480,  1481,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1482,  1479,  1483,  1483,
    1484,  1484,  1485,  1485,  1485,  1485,  1485,  1485,  1485,  1485,
    1485,  1485,  1485,  1485,  1485,  1486,  1488,  1487,  1487,  1489,
    1489,  1490,  1491,  1493,  1492,  1494,  1494,  1494,  1494,  1495,
    1495,  1496,  1496,  1497,  1497,  1498,  1498,  1499,  1499,  1500,
    1501,  1502,  1502,  1502,  1504,  1503,  1505,  1506,  1505,  1507,
    1505,  1508,  1505,  1505,  1505,  1505,  1509,  1509,  1509,  1509,
    1509,  1509,  1509,  1509,  1510,  1510,  1510,  1511,  1511,  1512,
    1512,  1513,  1513,  1514,  1514,  1515,  1515,  1516,  1516,  1517,
    1517,  1518,  1518,  1519,  1520,  1520,  1521,  1521,  1522,  1523,
    1522,  1524,  1522,  1522,  1525,  1522,  1526,  1522,  1522,  1527,
    1522,  1528,  1522,  1522,  1529,  1529,  1529,  1530,  1530,  1531,
    1531,  1532,  1533,  1533,  1535,  1534,  1536,  1536,  1537,  1537,
    1538,  1537,  1537,  1537,  1537,  1539,  1539,  1540,  1539,  1541,
    1542,  1544,  1543,  1545,  1546,  1546,  1547,  1549,  1548,  1551,
    1552,  1550,  1553,  1554,  1555,  1556,  1556,  1557,  1557,  1557,
    1557,  1558,  1558,  1560,  1559,  1561,  1559,  1562,  1562,  1563,
    1564,  1563,  1566,  1565,  1567,  1567,  1568,  1568,  1569,  1569,
    1570,  1570,  1571,  1571,  1571,  1571,  1571,  1571,  1571,  1571,
    1571,  1571,  1571,  1571,  1572,  1572,  1572,  1572,  1572,  1572,
    1572,  1572,  1572,  1573,  1573,  1573,  1573,  1574,  1574,  1574,
    1575,  1575,  1576,  1576,  1577,  1578,  1577,  1579,  1580,  1579,
    1581,  1581,  1582,  1582,  1583,  1583,  1583,  1584,  1584,  1585,
    1585,  1586,  1588,  1587,  1589,  1589,  1590,  1590,  1591,  1591,
    1592,  1592,  1593,  1593,  1594,  1594,  1595,  1595,  1595,  1596,
    1596,  1596,  1597,  1597,  1597,  1597,  1597,  1597,  1598,  1599,
    1599,  1600,  1601,  1601,  1603,  1602,  1604,  1604,  1605,  1605,
    1605,  1606,  1606,  1607,  1608,  1608,  1608,  1609,  1609,  1609,
    1610,  1610,  1610,  1610,  1610,  1610,  1611,  1612,  1612,  1612,
    1612,  1613,  1613,  1614,  1614,  1615,  1615,  1615,  1615,  1615,
    1615,  1616,  1616,  1616,  1616,  1616,  1617,  1617,  1617,  1617,
    1618,  1618,  1618,  1618,  1618,  1619,  1619,  1619,  1619,  1619,
    1620,  1621,  1621,  1622,  1622,  1623,  1623,  1623,  1625,  1624,
    1626,  1626,  1627,  1627,  1628,  1630,  1629,  1631,  1631,  1632,
    1633,  1633,  1633,  1634,  1636,  1637,  1635,  1635,  1635,  1639,
    1638,  1641,  1640,  1640,  1640,  1640,  1640,  1640,  1640,  1640,
    1642,  1640,  1640,  1640,  1640,  1640,  1640,  1643,  1640,  1644,
    1644,  1645,  1646,  1647,  1647,  1648,  1649,  1649,  1650,  1650,
    1651,  1651,  1653,  1654,  1652,  1656,  1657,  1655,  1658,  1658,
    1658,  1658,  1659,  1659,  1660,  1660,  1661,  1662,  1662,  1662,
    1663,  1662,  1664,  1664,  1665,  1665,  1665,  1666,  1666,  1667,
    1667,  1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,  1672,
    1674,  1673,  1676,  1675,  1677,  1677,  1678,  1678,  1679,  1679,
    1680,  1680,  1681,  1681,  1682,  1682,  1683,  1684,  1685,  1683,
    1687,  1688,  1686,  1689,  1689,  1690,  1690,  1691,  1691,  1692,
    1693,  1693,  1695,  1694,  1696,  1696,  1697,  1697,  1698,  1699,
    1700,  1699,  1701,  1699,  1702,  1702,  1703,  1703,  1704,  1704,
    1705,  1705,  1706,  1706,  1707,  1707,  1707,  1709,  1708,  1710,
    1710,  1711,  1711,  1712,  1712,  1713,  1713,  1713,  1713,  1713,
    1713,  1713,  1713,  1713,  1714,  1714,  1716,  1715,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1718,  1717,  1719,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,
    1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1717,  1720,
    1720,  1720,  1721,  1721,  1722,  1722,  1723,  1723,  1724,  1724,
    1725,  1725,  1726,  1726,  1727,  1727,  1728,  1728,  1728,  1730,
    1729,  1731,  1729,  1732,  1732,  1732,  1732,  1732,  1733,  1733,
    1734,  1735,  1735,  1735,  1736,  1736,  1737,  1737,  1737,  1739,
    1738,  1741,  1740,  1740,  1742,  1742,  1743,  1744,  1743,  1745,
    1745,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,
    1746,  1746,  1746,  1746,  1746,  1746,  1746,  1747,  1747,  1748,
    1748,  1749,  1749,  1749,  1750,  1751,  1751,  1753,  1752,  1754,
    1754,  1756,  1755,  1757,  1755,  1755,  1758,  1758,  1759,  1759,
    1761,  1760,  1762,  1763,  1763,  1765,  1764,  1766,  1766,  1766,
    1767,  1767,  1767,  1768,  1768,  1769,  1769,  1770,  1771,  1773,
    1774,  1775,  1776,  1772,  1777,  1777,  1778,  1778,  1779,  1779,
    1779,  1780,  1780,  1780,  1781,  1781,  1782,  1782,  1783,  1783,
    1783,  1783,  1784,  1784,  1785,  1785,  1786,  1786,  1787,  1787,
    1788,  1788,  1789,  1789,  1790,  1790,  1790,  1791,  1791,  1792,
    1792,  1793,  1793,  1794,  1794,  1795,  1796,  1796,  1796,  1796,
    1797,  1797,  1798,  1798,  1798,  1799,  1799,  1799,  1800,  1800,
    1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,  1801,
    1802,  1802,  1802,  1802,  1802,  1803,  1803,  1803,  1804,  1804,
    1806,  1805,  1807,  1807,  1808,  1808,  1810,  1809,  1811,  1811,
    1812,  1812,  1813,  1814,  1814,  1815,  1815,  1816,  1816,  1817,
    1818,  1818,  1818,  1818,  1818,  1819,  1819,  1819,  1819,  1819,
    1820,  1820,  1820,  1820,  1821,  1821,  1821,  1822,  1822,  1823,
    1824,  1824,  1825,  1825,  1825,  1826,  1827,  1828,  1829,  1830,
    1830,  1831,  1831,  1832,  1832,  1832,  1833,  1833,  1834,  1834,
    1835,  1835,  1835,  1836,  1836,  1836,  1837,  1837,  1838,  1839,
    1839,  1839,  1839,  1839,  1839,  1839,  1839,  1840,  1840,  1840,
    1840,  1840,  1840,  1840,  1840,  1840,  1841,  1841,  1841,  1841,
    1842,  1842,  1842,  1842,  1842,  1842,  1842,  1842,  1843,  1843,
    1843,  1843,  1843,  1843,  1843,  1843,  1843,  1844,  1844,  1844,
    1844,  1844,  1844,  1844,  1844,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,  1845,
    1846,  1846,  1846,  1846,  1846,  1846,  1847,  1847,  1847,  1847,
    1847,  1847,  1847,  1847,  1847,  1847,  1848,  1848,  1848,  1849,
    1849,  1849,  1850,  1850,  1850,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,  1852,
    1852,  1852,  1854,  1853,  1855,  1856,  1853,  1857,  1857,  1859,
    1858,  1860,  1858,  1861,  1858,  1863,  1862,  1862,  1864,  1864,
    1866,  1865,  1867,  1865,  1869,  1868,  1868,  1870,  1870,  1870,
    1871,  1871,  1871,  1871,  1872,  1872,  1872,  1872,  1873,  1873,
    1873,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,
    1874,  1874,  1874,  1874,  1874,  1874,  1875,  1875,  1875,  1875,
    1876,  1877,  1878,  1878,  1879,  1879,  1879,  1879,  1880,  1880,
    1881,  1881,  1881,  1882,  1882,  1882,  1882,  1882,  1884,  1883,
    1885,  1885,  1885,  1886,  1886,  1887,  1887,  1888,  1889,  1889,
    1889,  1889,  1889,  1891,  1890,  1892,  1892,  1893,  1892,  1894,
    1894,  1895,  1895,  1896,  1896,  1896,  1896,  1897,  1896,  1898,
    1898,  1898,  1898,  1898,  1899,  1900,  1900,  1900,  1900,  1900,
    1900,  1900,  1900,  1901,  1901,  1902,  1903,  1903,  1903,  1903,
    1903,  1903,  1903,  1904,  1904,  1905,  1905,  1906,  1906,  1907,
    1908,  1908,  1909,  1909,  1910,  1910,  1911,  1911,  1912,  1912,
    1914,  1913,  1915,  1913,  1916,  1913,  1917,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,  1913,
    1913,  1913,  1913,  1913,  1913,  1918,  1918,  1919,  1919,  1920,
    1920,  1920,  1921,  1921,  1921,  1921,  1922,  1922,  1923,  1923,
    1924,  1924,  1925,  1925,  1926,  1926,  1927,  1927,  1927,  1927,
    1927,  1928,  1928,  1929,  1929,  1930,  1931,  1931,  1931,  1931,
    1931,  1932,  1932,  1932,  1932,  1932,  1933,  1933,  1934,  1934,
    1935,  1935,  1936,  1936,  1937,  1937,  1938,  1938,  1940,  1939,
    1941,  1942,  1942,  1943,  1943,  1944,  1944,  1944,  1945,  1945,
    1945,  1946,  1947,  1947,  1947,  1948,  1949,  1950,  1950,  1950,
    1951,  1951,  1953,  1952,  1955,  1954,  1957,  1956,  1958,  1958,
    1959,  1960,  1960,  1960,  1961,  1961,  1963,  1962,  1964,  1965,
    1965,  1966,  1966,  1967,  1967,  1967,  1968,  1969,  1970,  1971,
    1971,  1972,  1972,  1973,  1973,  1973,  1973,  1973,  1973,  1973,
    1973,  1974,  1974,  1975,  1976,  1977,  1977,  1977,  1978,  1978,
    1979,  1979,  1980,  1980,  1981,  1981,  1983,  1982,  1984,  1984,
    1984,  1984,  1984,  1984,  1984,  1985,  1985,  1985,  1985,  1986,
    1986,  1987,  1987,  1989,  1990,  1991,  1992,  1993,  1988,  1994,
    1996,  1995,  1998,  1999,  1997,  2001,  2002,  2000,  2003,  2003,
    2003,  2003,  2003,  2003,  2004,  2004,  2005,  2005,  2005,  2006,
    2006,  2006,  2007,  2007,  2007,  2008,  2008,  2009,  2010,  2009,
    2011,  2011,  2012,  2012,  2013,  2013,  2014
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     0,     2,     0,     4,     0,     5,     0,     0,
       3,     3,     1,     1,     0,     3,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     1,
       0,     1,     3,     1,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     1,     0,     7,     0,     8,     0,    15,     0,    14,
       0,    14,     0,     6,     0,    10,     0,    11,     0,     5,
       0,     5,     0,     5,     0,     5,     0,     6,     0,     5,
       0,     6,     7,     6,     4,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     2,
       1,     3,     2,     1,     3,     3,     3,     1,     1,     1,
       1,     3,     0,     1,     0,    12,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       4,     0,     2,     0,     3,     0,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     1,     1,
       2,     3,     3,     0,     4,     0,     6,     0,     8,     0,
       3,     0,     1,     3,     1,     0,     1,     3,     1,     1,
       2,     6,     8,     5,     7,     3,     0,     1,     3,     1,
       2,     0,     1,     1,     1,     0,     4,     0,     4,     0,
       3,     2,     3,     0,     3,     2,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     6,     4,     1,
       4,     1,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     3,     0,     3,     1,     3,
       0,     3,     3,     3,     4,     5,     2,     4,     2,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     0,     6,
       0,     0,     4,     1,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     2,     0,     1,     1,
       0,     7,     0,     5,     0,     7,     0,     1,     2,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     7,     3,     3,     0,     5,     0,
       5,     1,     2,     4,     0,     4,     0,     7,     5,     3,
       0,     5,     0,     5,     1,     0,     1,     0,     4,     0,
       0,     3,     0,     6,     6,     0,     4,     2,     2,     0,
       3,     2,     0,     3,     0,     1,     0,     3,     0,     1,
       1,     3,     1,     4,     3,     3,     0,     2,     0,     0,
       7,     0,    10,     1,     3,     1,     1,     0,     2,     0,
       3,     1,     3,     0,     6,     1,     0,     0,     4,     0,
       3,     1,     1,     1,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     0,     5,
       2,     0,     2,     5,     0,     3,     1,     1,     2,     1,
       1,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       3,     0,     3,     1,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     2,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       2,     0,     9,     0,    10,     0,     9,     0,     9,     0,
      10,     0,    11,     0,    10,     2,     7,     0,     1,     4,
       0,     1,     0,     1,     2,     0,     4,     0,     3,     0,
       3,     0,     1,     2,     1,     0,     1,     2,     1,     0,
       1,     2,     3,     0,     6,     5,     5,     0,     2,     0,
       1,     1,     1,     0,     1,     2,     1,     1,     2,     2,
       1,     0,     3,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     3,
       3,     3,     2,     1,     1,     3,     3,     3,     3,     0,
       1,     2,     2,     3,     3,     2,     3,     3,     4,     3,
       3,     3,     1,     2,     2,     2,     2,     3,     3,     2,
       3,     2,     2,     3,     3,     2,     3,     2,     2,     2,
       2,     2,     5,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     3,     0,     1,     1,     5,     0,     1,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     2,     1,     1,     2,     4,     1,     3,     2,
       1,     0,     2,     0,     1,     2,     2,     2,     2,     2,
       1,     1,     3,     3,     3,     3,     2,     1,     2,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     0,     1,     2,     1,
       1,     2,     0,     1,     1,     2,     1,     2,     2,     1,
       0,     1,     0,     4,     1,     1,     1,     0,     1,     2,
       1,     1,     2,     1,     3,     3,     1,     1,     0,     2,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     0,     2,     0,     2,
       2,     2,     2,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     1,     1,     1,     4,     2,     1,
       4,     0,     1,     1,     3,     0,     0,     8,     0,     5,
       7,     0,     5,     0,     5,     0,    10,     0,     9,     0,
      11,     3,     4,     3,     3,     0,     8,     7,     0,     0,
       7,     0,     3,     1,     4,     0,     3,     0,     2,     0,
       1,     0,     2,     2,     2,     2,     1,     1,     1,     4,
       4,     0,     6,     4,     0,     5,     0,     6,     4,     3,
       1,     7,     2,     1,     1,     0,     6,     0,     3,     2,
       0,     5,     0,     0,     6,     1,     3,     1,     1,     3,
       3,     3,     2,     2,     4,     2,     7,     6,     5,     5,
       4,     5,     4,     4,     2,     2,     7,     6,     3,     5,
       1,     1,     1,     1,     1,     3,     3,     3,     0,     1,
       1,     2,     2,     3,     3,     3,     3,     0,     1,     0,
       1,     0,     2,     0,     1,     2,     1,     1,     1,     0,
       1,     1,     0,     2,     1,     0,     1,     1,     1,     0,
       6,     0,     5,     4,     4,     3,     0,     1,     1,     3,
       3,     2,     2,     0,     2,     1,     3,     0,     1,     1,
       0,     2,     4,     1,     3,     0,     5,     0,     1,     1,
       3,     0,     4,     0,     4,     0,     1,     1,     2,     1,
       1,     1,     0,     2,     0,     5,     1,     3,     2,     0,
       3,     1,     4,     1,     0,     4,     1,     0,     4,     0,
       1,     3,     0,     1,     3,     1,     1,     2,     6,     3,
       0,     4,     0,     3,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     0,     2,     0,     6,     0,     1,
       1,     0,     4,     4,     3,     5,     1,     3,     4,     0,
       6,     1,     1,     1,     3,     2,     3,     1,     1,     0,
       6,     1,     1,     1,     3,     3,     4,     0,     6,     0,
       2,     0,     4,     0,     2,     2,     3,     1,     2,     2,
       3,     4,     4,     3,     1,     2,     2,     3,     4,     4,
       0,     3,     0,     5,     3,     4,     2,     0,     2,     3,
       4,     2,     0,     2,     3,     0,     2,     0,     7,     3,
       0,     4,     2,     0,     4,     2,     2,     0,     4,     2,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     2,
       3,     1,     4,     2,     2,     3,     0,     3,     5,     0,
       1,     2,     1,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     0,     2,     3,     1,     4,     4,     2,     1,
       1,     1,     1,     0,     3,     5,     3,     1,     1,     3,
       4,     0,     0,     0,     0,     0,     2,     2,     1,     1,
       0,     2,     3,     0,     2,     3,     0,     2,     3,     3,
       3,     2,     3,     4,     3,     4,     3,     4,     3,     4,
       3,     3,     6,     1,     5,     6,     5,     7,     6,     8,
       5,     6,     4,     3,     5,     4,     6,     3,     4,     1,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       6,     6,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     2,     1,     1,     1,     2,     1,     2,     2,     0,
       3,     1,     4,     1,     3,     1,     1,     1,     1,     3,
       1,     4,     4,     4,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     7,     6,     3,     4,     6,     6,     4,     4,
       4,     4,     4,     4,     6,     8,    10,     1,     1,     3,
       1,     3,     1,     2,     2,     2,     2,     2,     1,     3,
       4,     6,     4,     6,     2,     2,     4,     4,     4,    10,
       6,     8,     6,     4,     4,     6,     4,     3,     4,     1,
       4,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       8,     6,     6,     6,     6,     2,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     4,     2,     2,     2,
       6,     6,     4,     4,     8,     4,     4,     4,     4,     3,
       8,     6,     8,     4,     6,     4,     6,     4,     4,     4,
       6,     8,     4,     3,     6,     4,     6,     5,     8,     7,
      10,     1,     6,     4,     4,     4,     4,     4,     6,     4,
       6,     0,     5,     6,     8,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     4,     4,     5,     4,     4,
       4,     5,     4,     0,     0,     7,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     9,     3,     3,
       1,     1,     3,     3,     3,     3,     3,     4,     4,     4,
       6,     4,     6,     4,     6,     5,     0,     7,     4,     4,
       4,     4,     1,     0,     3,     3,     1,     3,     5,     0,
       1,     0,     2,     0,     3,     4,     2,     0,     1,     1,
       2,     1,     3,     3,     0,     3,     2,     0,     4,     0,
       4,     0,     4,     2,     1,     1,     1,     1,     2,     1,
       2,     2,     1,     2,     1,     2,     2,     0,     1,     1,
       3,     1,     3,     1,     3,     4,     5,     1,     3,     3,
       3,     1,     1,     1,     1,     4,     1,     3,     3,     0,
       6,     0,     8,     4,     0,     8,     0,    10,     6,     0,
       8,     0,    10,     6,     1,     2,     1,     1,     2,     0,
       1,     5,     1,     1,     0,     6,     6,     9,     1,     2,
       0,     4,     2,     3,     3,     1,     1,     0,     3,     2,
       1,     0,     3,     2,     1,     1,     3,     0,     3,     0,
       0,     5,     0,     1,     0,     0,     1,     0,     2,     3,
       3,     1,     1,     0,     7,     0,     7,     1,     2,     0,
       0,     2,     0,     2,     0,     1,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     0,     0,     3,     0,     0,     3,
       0,     4,     4,     2,     0,     1,     1,     0,     2,     3,
       1,     3,     0,     7,     0,     1,     0,     3,     0,     3,
       0,     3,     1,     1,     1,     4,     2,     2,     2,     1,
       2,     2,     0,     3,     2,     2,     3,     3,     3,     3,
       1,     2,     0,     1,     0,     4,     4,     2,     0,     1,
       1,     0,     1,     1,     2,     5,     4,     1,     3,     3,
       1,     3,     1,     1,     1,     1,     1,     0,     2,     3,
       4,     0,     1,     2,     2,     2,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     2,     1,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     6,
       0,     1,     3,     1,     3,     0,     2,     3,     1,     1,
       2,     1,     3,     2,     0,     0,     7,     2,     1,     0,
       3,     0,     8,     7,     4,     6,     4,     4,     5,     5,
       0,     6,     4,     4,     5,     6,     4,     0,     6,     1,
       3,     1,     2,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     0,     0,     8,     0,     0,     6,     0,     1,
       1,     1,     1,     1,     2,     1,     1,     1,     3,     4,
       0,     3,     3,     1,     2,     2,     1,     3,     1,     3,
       1,     3,     1,     1,     0,     1,     1,     1,     1,     1,
       0,     4,     0,     4,     0,     1,     0,     1,     3,     1,
       5,     3,     1,     1,     1,     1,     0,     0,     0,     7,
       0,     0,    11,     3,     1,     3,     3,     3,     1,     3,
       0,     1,     0,     3,     0,     3,     2,     3,     3,     5,
       0,     5,     0,     6,     0,     2,     1,     3,     2,     4,
       0,     2,     0,     2,     1,     1,     1,     0,     5,     0,
       1,     0,     1,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     0,     3,     0,     3,     2,     4,
       4,     3,     4,     4,     1,     3,     3,     3,     3,     6,
       2,     2,     0,     6,     0,     7,     5,     2,     1,     1,
       1,     5,     5,     2,     2,     1,     4,     3,     2,     3,
       2,     2,     1,     4,     4,     3,     3,     3,     2,     3,
       2,     3,     3,     3,     3,     4,     3,     2,     3,     3,
       3,     3,     4,     3,     3,     4,     3,     3,     3,     1,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       1,     1,     0,     2,     0,     2,     0,     3,     3,     0,
       4,     0,     4,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     0,     3,     0,     1,     1,     0,
       4,     0,     4,     1,     0,     1,     4,     0,     3,     3,
       1,     2,     2,     2,     2,     3,     3,     2,     1,     1,
       1,     1,     2,     1,     1,     1,     2,     0,     1,     0,
       5,     0,     1,     3,     1,     0,     3,     0,     3,     3,
       1,     0,     4,     0,     3,     2,     0,     1,     0,     2,
       0,     3,     3,     2,     2,     0,     4,     0,     1,     1,
       2,     2,     3,     0,     1,     1,     2,     1,     2,     0,
       0,     0,     0,    22,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     5,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     1,
       0,     4,     0,     1,     1,     3,     0,     9,     0,     3,
       1,     3,     1,     1,     1,     3,     5,     3,     5,     1,
       1,     3,     4,     5,     4,     1,     3,     4,     4,     5,
       1,     5,     3,     2,     1,     3,     2,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     0,     0,     7,     1,     3,     0,
       3,     0,     3,     0,     3,     0,     3,     2,     0,     2,
       0,     2,     0,     4,     0,     3,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     2,     3,     5,
       5,     3,     5,     5,     4,     6,     8,     8,     2,     3,
       3,     3,     5,     2,     3,     3,     1,     1,     3,     3,
       1,     3,     2,     2,     2,     2,     2,     1,     1,     3,
       1,     4,     4,     1,     1,     1,     1,     1,     0,     5,
       0,     2,     1,     1,     1,     1,     3,     3,     1,     1,
       2,     2,     2,     0,     3,     4,     3,     0,     7,     1,
       2,     1,     1,     1,     1,     1,     1,     0,     5,     1,
       1,     1,     1,     1,     3,     6,     6,     6,     6,     7,
       7,     5,     3,     4,     1,     3,     8,     8,     8,     8,
       9,     6,     4,     0,     3,     0,     3,     1,     3,     2,
       1,     1,     0,     1,     1,     2,     0,     1,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     2,     0,     1,     3,     1,     2,
       2,     2,     1,     3,     3,     1,     1,     3,     1,     3,
       1,     3,     1,     1,     1,     1,     4,     5,     4,     6,
       1,     0,     3,     3,     1,     1,     0,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     1,     0,     2,
       0,     2,     0,     3,     2,     1,     2,     1,     0,     3,
       1,     0,     1,     0,     1,     0,     3,     2,     0,     1,
       2,     4,     4,     5,     4,     2,     3,     1,     1,     1,
       0,     1,     0,     4,     0,     4,     0,     2,     2,     1,
       2,     0,     1,     1,     1,     1,     0,     3,     3,     3,
       4,     2,     3,     1,     1,     2,     4,     0,     0,     0,
       1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     3,     3,     3,     0,     1,
       3,     3,     0,     3,     1,     3,     0,     4,     3,     1,
       2,     2,     3,     4,     4,     0,     3,     4,     4,     1,
       1,     0,     2,     0,     0,     0,     0,     0,    20,     6,
       0,     3,     0,     0,     9,     0,     0,     8,     4,     4,
       3,     4,     3,     3,     0,     3,     1,     3,     5,     1,
       1,     1,     0,     1,     1,     0,     2,     0,     0,     3,
       0,     2,     5,     3,     3,     3,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 2250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 26029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 26056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 26065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 26075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 26088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 26094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 26103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 26113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 26130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 2414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 26142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 26153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 26172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 26182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 26190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 26204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 26212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 26220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 26267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 26275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 26283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 26291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 26299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 26316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 26324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 26404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 26412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 26431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 26439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 26449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 26459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 26469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 26479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 26488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 26500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 26528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 26571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 26599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 26661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 26673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 26699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2859 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 26749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 26763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 26775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26781 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 26789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 26815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 26823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 26831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 26837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2906 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2911 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 26855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR)))
            {
              my_yyabort_error((ER_INVALID_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(GROUP_AGGREGATE);
          }
#line 26867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 26879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_AGGREGATE; }
#line 26891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 26926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 26958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 26970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2998 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 26982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 3006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 3014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 27006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 3022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 3030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 3038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 27046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 3050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 27063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 3065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 3065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 3069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 27085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 3076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 27091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 3086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 27100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 3091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 27109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 3096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 27118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 3101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 27127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 3106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 27136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 3111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 27145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 3116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 27153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 3123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 3144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 3155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 3162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 3168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 3170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 3176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 27229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 3206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 3212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27283 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27289 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 27298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 27334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 27348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 27364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 27412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 27460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 27530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 27546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 27564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd,
                                                                (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].ident_sys),
                                                                (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar),
                                                                (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 27612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyvsp[0].spvar)->mode=(yyvsp[-1].spvar_mode); }
#line 27618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 27630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 27636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 27642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 27666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 27674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 27694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (unlikely(Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 27707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 27713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 27743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 27756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 27785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 27793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 27805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 27815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 27825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 27835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 27854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-5].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, true)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 27877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 27908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 27920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 27972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 28035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(cond->type != sp_condition_value::SQLSTATE))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 28121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 28133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 28147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 28213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 28219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 28225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 28231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 28237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 28243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 28249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 28255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 28261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 28267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 28273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 28279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 28304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 28336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 28376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 28386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 28421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 28441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28447 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 28528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 28544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 28566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 28572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 28582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 28588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 28600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 28681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 28749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 28816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 28838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 28876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 28882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 28891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 28924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            lex->sphead->m_flags|= sp_head::HAS_AGGREGATE_INSTR;
            sp_instr_agg_cfetch *i=
              new (thd->mem_root) sp_instr_agg_cfetch(sp->instructions(),
                                                      lex->spcont);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
         }
#line 28940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 29005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 29041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 29051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 29105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4618 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 29123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 29129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 29152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 29192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[-1].ident_sys); }
#line 29235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 29241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 29247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 29257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 29265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 29282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 29301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 29310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 29322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 29331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 29339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 29350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 29360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 29387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 29396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 29402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 29421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 29499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4917 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4936 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 29541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 29583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 29592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 29600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 29606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 29612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 29618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 29624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 29630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 29653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29661 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 29731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 29740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 29749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 29758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 29767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 29776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 29785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 29814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 29825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 29837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 29846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 29857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 29872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5342 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 29878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 29896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 29908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 29929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 29935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 29941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 29956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 29965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 29973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 29979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 29991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 30011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 5447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 30032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 30048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 5477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 30065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 5489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 5494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 30077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 5500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 30088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 5507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 30094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 5508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 5510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 5512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 30120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 5518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 30129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 5523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 30135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 5525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 30144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 5535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 30156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 5540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 30162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 5542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 30180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 5558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 5559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 5563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 5564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 5569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 30219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 5583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 30229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 5593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 30241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 5604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 30250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 5612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 5614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 5626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30276 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 5628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 30282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 5629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 5632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 30298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 5637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 5641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 5642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 5647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 30331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 30344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 30363 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 30377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 30450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 30470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 30487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 30510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 30525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 30534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 30555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 30614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30639 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 30653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 30684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 30729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 30823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 30839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 30869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 30879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 30889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 30895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 30913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 30919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 30925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 30937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 30947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 30962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 30970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 30984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 31013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 31021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 31033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 31089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 31097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 31113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 31129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 31148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 31157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 31166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 31175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 31184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 31193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 31202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6392 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 31346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 31355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 31364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 31372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 31398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 31407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 31416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 31425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 31431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 31437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 31443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 31453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 31462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 31471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 31526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 31546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 31555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 31571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 31582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 31636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 31660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 31666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 31678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6613 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 31686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 31698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 31704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 31814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 31844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 31852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 31861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6738 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 31867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 31873 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6754 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 31908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6768 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 31934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 31957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 31963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 32025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 32034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 32043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 32131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 32139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 32152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 32163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 32205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 32222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6985 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 32231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 32237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 32243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 32263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7019 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 32271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 32287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 32304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 32324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 32342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 32407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 32413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 32424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 32435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 32443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 32452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7184 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 32533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 32539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 32578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 32584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 32590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 32596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 32602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 32608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 32614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 32620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 32626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 32632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 32698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 32704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 32710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 32716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 32722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 32732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 32750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 32758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 32764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 32770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 32782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 32800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 32848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 32860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 32872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 32890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 32896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 32907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 32913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7336 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 32934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 32940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 32946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 32994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 33040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 33064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 33074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 33084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33117 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7470 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 33129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 33173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 33221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 33230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 33242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7536 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 33254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 33260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 33266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 33272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].charset))
              Lex->charset= (yyvsp[-1].charset); // CHARACTER SET cs COLLATE DEFAULT
            else
            {
              if (!my_charset_same((yyvsp[0].charset), (yyvsp[-1].charset)))
                my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                  (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
              Lex->charset= (yyvsp[0].charset);
            }
          }
#line 33288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= (yyvsp[0].charset); }
#line 33294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 33300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 33306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 33318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 33336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 33342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 33360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 33366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 33375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 33383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 33395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 33406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 33438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 33444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 33474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 33480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7675 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 33486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 33492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7682 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 33572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 33578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 33626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 33638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 33738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 33744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 33778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33811 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7884 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 33868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 33898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 33913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 33927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 33936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 33949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 33961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 33973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 33996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 34007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8024 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 34058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 34076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 34085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 34094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 34103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 34112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 34122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 34128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-4].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 34137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 34151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 34166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34177 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 34220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 34238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 34272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 34282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 34312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 8253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 34352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 8260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 8272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 8295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 34398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 8302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 34406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 8311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 8323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 8329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 34437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 8334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 34445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 8341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 8354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 34466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 8358 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 34474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 8362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 34483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 8369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 8370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 8375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 8397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 8404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 8409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 34533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 8413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 8420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 34552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 8430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 8438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 8445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 34597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 8455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 8466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 34626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 8476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 8487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 8497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 8503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 8509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 34686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 8516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 34696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 8522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 34714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 8536 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 8550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 8555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 34749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 8559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 34758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 34767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 34776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 8576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 34784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 34793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 8604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34811 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8616 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8622 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 8626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 34865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 34871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 34877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 34883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 34943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 8686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34949 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 8688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 34960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 8694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 35013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 8740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 8765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 35067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 35085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 35091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 8782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 35110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 35118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 35141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 35147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 35153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 8840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 35227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 35239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 35279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8911 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8917 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 35308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8932 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 35325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 8946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 8966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 35365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 8973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 35376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 35387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 8991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 35397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 35467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 35473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35479 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 35485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 35613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 35623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 35659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 35669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9184 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 35707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 35717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 35723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 35735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 35747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 9284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 35755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 9288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35763 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 9292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 35775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 9301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 9314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 35795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 9322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 9335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 35815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 9343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 35823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 35831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 35840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 35848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 35857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 35863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 9378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 35872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 9385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 35881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 9395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 35890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 35899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 35907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 9415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 35915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 35923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 35931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 35943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 9472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 35951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 35961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 35971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 35979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 35987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 35995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 36007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 36015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 36023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 36047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 36055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 9594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 36092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 9611 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 36113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 36124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 9639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 36136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 9652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 36151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 9666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 36160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 9671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 36183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 36191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 9698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 36199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 9704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 36207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 9710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 36221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 9717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 9718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 9719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 9720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9844 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9920 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9926 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 9964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 9970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 9994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10115 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 36935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 36965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 36971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 36977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 36995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 37001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 37007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 37013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 37027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 37036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 37060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 37071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 37080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 37086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 37092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 37098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 37104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 37113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 37125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 37131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 37143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 37149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 37167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 37211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 37273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 10435 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 10444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 37353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 10450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37441 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10613 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 37651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10655 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 37663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 10772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 10779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 10785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 10795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 10823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 37925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 10883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 10890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 10907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 10913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 10919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 10925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 10931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 10938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 10944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 10950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 10959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 10970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 10983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 10989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38149 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 10996 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 38161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11004 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38171 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11251 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 38506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 38524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 38530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 38590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 38675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11435 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 38813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11469 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 39015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 39062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 39081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 39103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 39115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11714 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 39155 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 11724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 39161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 11734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 11756 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 11763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11770 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 39266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11808 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11825 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11834 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39389 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39401 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11859 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 11896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11936 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39553 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 39561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 39603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 39623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 39647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 39655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 39676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 39709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 39720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 39732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 39756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 39768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 39786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            TABLE_LIST *tl= (yyval.table_list);
            Select->add_joined_table(tl);
            if ((yyvsp[-2].num))
              tl->vers_conditions= Lex->vers_conditions;
          }
#line 39805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 39874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 39897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 39927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 39933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 39939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_braces(0);
          }
#line 39947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 39959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 39967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 40007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_start_derived())
              MYSQL_YYABORT;
          }
#line 40016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 40026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 40047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 40055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 40061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 40071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 40084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 40104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 40116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 40122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 40128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 40134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 40142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 40150 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 40156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 40162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 40168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 40180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 40186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 40201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 40228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 40234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 40240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 40246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 40252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 40258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40276 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12560 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40312 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 40348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 12570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 40354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 12571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 12572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 40372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 12584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 40388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 40396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 40416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12670 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 12695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40504 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 40523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12739 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 40578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 12760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 40584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 40598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 40608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40619 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 40647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12825 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 40681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 40687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 40693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 12853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 40715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!first_sl->next_select() && first_sl->tvc &&
                           unit->add_fake_select_lex(thd)))
                 MYSQL_YYABORT;
              else if (unlikely(!unit->is_unit_op() &&
                                (first_sl->order_list.elements ||
                                 first_sl->select_limit) &&
                                unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
               lex->push_context(&sel->master_unit()->fake_select_lex->context, thd->mem_root);
             }
          }
#line 40766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->current_select ==
                Lex->current_select->master_unit()->fake_select_lex)
            {
              Lex->pop_context();
            }
          }
#line 40778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 40802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 40808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 40814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces &&
                sel->master_unit()->fake_select_lex)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 40841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 12967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 40879 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 40890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 40901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 40927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 40966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 40975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 40986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13115 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 41172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 41178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 41184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 41190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 41226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 41235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 41270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41276 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 41303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 41311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 41329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 41387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 41397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 41435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41510 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13388 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 13395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13408 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 41555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 41564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 41573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 13424 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 13432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 13453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 41617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 41640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 41649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 41657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 41665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41671 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 41677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 41688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 41697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 41718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 41727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 41750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13567 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 41773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 41812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 13605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 13627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 13642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13651 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41889 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 13652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41895 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 42013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42041 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 42063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 42071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13770 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 42079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 13779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 42090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 42113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 13806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 42133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 42142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42159 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 42180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 42197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 42205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42211 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 42219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13920 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 42260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 42281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42319 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 42349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 42468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 42497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 42520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14118 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 42532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 42544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 42556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 42568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 42606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 42612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 42672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 42683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 42692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 42701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 42710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 42734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 42740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 42746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 42757 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 42769 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 42775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 42787 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 42798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 42809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 42821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 42831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 42840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 42852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 42864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 42876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 42884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 42893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 42913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 42945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 42955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 42965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 42977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14392 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 42986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14430 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14435 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 43077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 43100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 43124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 43130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 43136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 14498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 43142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 43148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 43154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 43160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14517 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 43172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43210 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 43218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 43224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 43233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 43241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 43247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14602 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 43291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 43487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43535 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 43558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 43564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 43570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43597 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 43606 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 43612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43630 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 43638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 43648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 43662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 43673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 43685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 43693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 43723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 43733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 43753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 43762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 43768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 43778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 14921 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            mysql_init_select(lex);

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 43794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 43809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 14944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 43826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 14957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 43832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 43842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 43848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 43854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 43860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 43866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 43872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 43884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 43890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 43896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 43902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 43908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 15009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 43917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 15014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 43928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 15021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 43937 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 15026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 43946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 15044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 43955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 15049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 43964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 15056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 15058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 43976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 15064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 43985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 15071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 15072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 43997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 15076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 15077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 15078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 15083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 15085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 15089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 44033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 15091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 15099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 15100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 15110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 15123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 15128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 15133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 44094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 15138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 44103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 15146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 44115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 15153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 44121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 44168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 15197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 44179 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 15204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 44189 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 15210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 44233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 44416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= 0; }
#line 44422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 44430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->with_cte_resolution= true;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&Lex->with_clauses_list,
                                      Lex->with_clauses_list_last_next);
          }
#line 44446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44461 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 44467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].with_element_head), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 44497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15435 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15448 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if ((yyval.with_element_head) == NULL)
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 44542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15500 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 15563 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 15570 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44709 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 15601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 15607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 15617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 15623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 15632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 15648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 44795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 44804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 15677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 15686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 15695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 44867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 15719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 44920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 44954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 15785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 44966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 44976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 44996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_init();
          }
#line 45004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 16419 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 45016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 16427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 16443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 16449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 45039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 16453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 16458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 16468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 16474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 16488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 16492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 16497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 45099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 16501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 16510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 16518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 16519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 16520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 16524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 16525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 16526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 16527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 16531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 16532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 16533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 16534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 16540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 16545 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 16550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 16559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 16564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 16569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 16574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 16579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 16584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 16589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 16594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 16608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 16619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 16638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 16656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3123:
#line 16668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3124:
#line 16676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3125:
#line 16681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 16704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 16723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 16740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 16741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 16745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 16746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 16747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 16748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 16753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 45497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 16767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 45503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 16771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 45509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 16772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 45515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 16774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 45526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 16783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 16784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 45538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 16786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 16792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 16798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 16809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 16817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 16822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 16824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 45602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 16830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 45612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 16838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45618 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 16839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 45624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 16849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 45644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 16867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 16868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 16870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 16874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 45670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 16875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 16880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 16888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 16897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 16907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 16917 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 45744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 16935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 45759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 16948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 45765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 16949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 45771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 16953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 16954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 16958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 16959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 16960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 45801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 16961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 45807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 16963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 16971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 16975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 45831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 16976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 45837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 16977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 45843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 16978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 45849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 16979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 45855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 45871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 45919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17034 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 45968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 46008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 46019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 46037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 46043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 46049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 46055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 46084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 17171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 17189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 46128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 17190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 17192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 46140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 17195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 46152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 17196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 17198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 46164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 17199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 17200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 46176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 17201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 17202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 46188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 17203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 46194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 17204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 46200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 17205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 46206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 17206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 46212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 17207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 46218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 17208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 46224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 17209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 46230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 17210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 46236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 17211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 17212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 46248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 17213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 46254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 46260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3243:
#line 17215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 46266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3244:
#line 17216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 46272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3245:
#line 17217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 46278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3246:
#line 17218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 46284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 17219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 46290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 17220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 46296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 17221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 46302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 17222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 46308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 46314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 17224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 46320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 17225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 17226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 17230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 17231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 17241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 17248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 17255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 46377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 17265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 17275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 17284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 17293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 17306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 17311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46449 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 17319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 17324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 17332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 17337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 17348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 46496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 17355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 46505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 17360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 46515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 17366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 46525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 17372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 17377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 46540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 17391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 46570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 17421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 46578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 17425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 46586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 17429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 46594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 17433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 46602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 17440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 46612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 17446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 46622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 17452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 46632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 17458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 46642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 17464 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 46652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 17472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 17473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 17477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 17483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 17484 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 17488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 17489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 17493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 17494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 17498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 17499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 17504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 17509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 17514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 46744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 17522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 46750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 17523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 46756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 17527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 17528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 17533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 17534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 17535 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 17540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17541 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17547 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= UNION_TYPE; }
#line 46876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= INTERSECT_TYPE; }
#line 46882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3329:
#line 17609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= EXCEPT_TYPE; }
#line 46888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3330:
#line 17613 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3332:
#line 17619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 46903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 46915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3334:
#line 17635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 46924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3335:
#line 17640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
          }
#line 46932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3336:
#line 17646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 46950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3337:
#line 17660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 46959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 46968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 46986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
	  }
#line 47006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17699 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 47016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 47024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17723 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 47036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 47060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 47066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 47075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 47098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 17769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 47128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 47134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 47146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 47152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17817 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 47158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 47164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 47174 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 47184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 17831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 47190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 47205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 47216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 17876 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 47222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3376:
#line 17877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 47228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 17878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 47234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 17882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 47240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 17883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 47246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 17893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17899 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 17919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;

          }
#line 47314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 17951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 17952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 17967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 17972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 17979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47369 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 17988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3404:
#line 17997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 18003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 18008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3407:
#line 18012 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3408:
#line 18032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $21 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 47454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3409:
#line 18066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 47470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3410:
#line 18082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 47481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 18089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 47491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 18099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 47502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 18108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 18116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 47523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 18124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 47534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 18132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 18137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 47552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 18147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 47560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 18151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 47568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 18155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 47576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 18159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 47584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 18163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 47592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 18167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 47601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 18174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 47607 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 18176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 47624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 18192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 47635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 18199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 47646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 18206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 47657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 18215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47663 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 18216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47669 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 18217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 18221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47681 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 18222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 47687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 18223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 47693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 18227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 18228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 47705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 18233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 18235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 47717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 18240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 18241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 47729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 18246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 18253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 18263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 47761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 18269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 47772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 18280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 47780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 47784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
