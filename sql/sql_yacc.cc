/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "sql_tvc.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (!(A))                                      \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif


/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int LEX::case_stmt_action_expr(Item* expr)
{
  int case_expr_id= spcont->register_case_expr();
  sp_instr_set_case_expr *i;

  if (spcont->push_case_expr_id(case_expr_id))
    return 1;

  i= new (thd->mem_root)
    sp_instr_set_case_expr(sphead->instructions(), spcont, case_expr_id, expr,
                           this);

  sphead->add_cont_backpatch(i);
  return sphead->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int LEX::case_stmt_action_when(Item *when, bool simple)
{
  uint ip= sphead->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new (thd->mem_root)
         Item_case_expr(thd, spcont->get_current_case_expr_id());

#ifdef DBUG_ASSERT_EXISTS
    if (var)
    {
      var->m_sp= sphead;
    }
#endif

    expr= new (thd->mem_root) Item_func_eq(thd, var, when);
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, expr, this);
  }
  else
    i= new (thd->mem_root) sp_instr_jump_if_not(ip, spcont, when, this);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return
    !MY_TEST(i) ||
    sphead->push_backpatch(thd, i, spcont->push_label(thd, &empty_clex_str, 0)) ||
    sphead->add_cont_backpatch(i) ||
    sphead->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int LEX::case_stmt_action_then()
{
  uint ip= sphead->instructions();
  sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, spcont);
  if (!MY_TEST(i) || sphead->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sphead->backpatch(spcont->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to after END CASE
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sphead->push_backpatch(thd, i, spcont->last_label());
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

bool
LEX::set_system_variable(struct sys_var_with_base *tmp,
                         enum enum_var_type var_type, Item *val)
{
  set_var *var;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (spcont && tmp->var == Sys_autocommit_ptr)
    sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), tmp->var->name.str);
    return TRUE;
  }

  if (! (var= new (thd->mem_root)
         set_var(thd, var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return var_list.push_back(var, thd->mem_root);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

bool LEX::set_trigger_new_row(LEX_CSTRING *name, Item *val)
{
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new (thd->mem_root) Item_null(thd);

  DBUG_ASSERT(trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (trg_chistics.event == TRG_EVENT_INSERT ||
               trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(thd, current_context(),
                               Item_trigger_field::NEW_ROW,
                               name, UPDATE_ACL, FALSE);

  if (trg_fld == NULL)
    return TRUE;

  sp_fld= new (thd->mem_root)
        sp_instr_set_trigger_field(sphead->instructions(),
                                   spcont, trg_fld, val, this);

  if (sp_fld == NULL)
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
Item_splocal*
LEX::create_item_for_sp_var(LEX_CSTRING *name, sp_variable *spvar,
                            const char *start_in_q, const char *end_in_q)
{
  Item_splocal *item;
  uint pos_in_q, len_in_q;

  /* If necessary, look for the variable. */
  if (spcont && !spvar)
    spvar= spcont->find_variable(name, false);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name->str);
    return NULL;
  }

  DBUG_ASSERT(spcont && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= (uint)(start_in_q - sphead->m_tmp_query);
  len_in_q= (uint)(end_in_q - start_in_q);

  item= new (thd->mem_root)
    Item_splocal(thd, name, spvar->offset, spvar->type_handler(),
                 pos_in_q, len_in_q);

#ifdef DBUG_ASSERT_EXISTS
  if (item)
    item->m_sp= sphead;
#endif

  return item;
}

/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(thd, left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(thd, left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(thd, left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select
          statement uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
                       is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool LEX::add_select_to_union_list(bool is_union_distinct,
                                   enum sub_select_type type,
                                   bool is_top_level)
{
  const char *type_name= (type == INTERSECT_TYPE ? "INTERSECT" :
                     (type == EXCEPT_TYPE ? "EXCEPT" : "UNION"));
  /*
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "INTO");
    return TRUE;
  }
  if (current_select->order_list.first && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ORDER BY");
    return TRUE;
  }

  if (current_select->explicit_limit && !current_select->braces)
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "LIMIT");
    return TRUE;
  }
  if (current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    thd->parse_error();
    return TRUE;
  }
  if (!is_union_distinct && (type == INTERSECT_TYPE || type == EXCEPT_TYPE))
  {
    my_error(ER_WRONG_USAGE, MYF(0), type_name, "ALL");
    return TRUE;
  }
  /*
    Priority implementation, but also trying to keep things as flat
    as possible */
  if (type == INTERSECT_TYPE &&
      (current_select->linkage != INTERSECT_TYPE &&
       current_select != current_select->master_unit()->first_select()))
  {
    /*
      This and previous SELECTs should go one level down because of
      priority
    */
    SELECT_LEX *prev= exclude_last_select();
    if (add_unit_in_brackets(prev))
      return TRUE;
    return add_select_to_union_list(is_union_distinct, type, 0);
  }
  else
  {
    check_automatic_up(type);
  }
  /* This counter shouldn't be incremented for UNION parts */
  nest_level--;
  if (mysql_new_select(this, 0, NULL))
    return TRUE;
  mysql_init_select(this);
  current_select->linkage= type;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
  {
    current_select->master_unit()->union_distinct=
      current_select;
  }
  else
    DBUG_ASSERT(type == UNION_TYPE);
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    if (no_lookahead)
        lex->sphead->m_tmp_query= lip->get_ptr();
    else
        lex->sphead->m_tmp_query= lip->get_tok_end();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    sp_head *sp= lex->sphead;

    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      LEX_STRING qbuff;
      sp_instr_stmt *i;
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      if (!(i= new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex->spcont, lex)))
        return true;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      if (no_lookahead)
        qbuff.length= lip->get_ptr() - sp->m_tmp_query;
      else
        qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

      if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                          qbuff.length + 5)))
        return true;

      strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
              qbuff.length);
      qbuff.length+= 4;
      i->m_query= qbuff;
      if (sp->add_instr(i))
        return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}

void LEX::add_key_to_list(LEX_CSTRING *field_name,
                          enum Key::Keytype type, bool check_exists)
{
  Key *key;
  MEM_ROOT *mem_root= thd->mem_root;
  key= new (mem_root)
        Key(type, &null_clex_str, HA_KEY_ALG_UNDEF, false,
             DDL_options(check_exists ?
                         DDL_options::OPT_IF_NOT_EXISTS :
                         DDL_options::OPT_NONE));
  key->columns.push_back(new (mem_root) Key_part_spec(field_name, 0),
                         mem_root);
  alter_info.key_list.push_back(key, mem_root);
}

void LEX::init_last_field(Column_definition *field,
                          const LEX_CSTRING *field_name,
                          const CHARSET_INFO *cs)
{
  last_field= field;

  field->field_name= *field_name;

  /* reset LEX fields that are used in Create_field::set_and_check() */
  charset= cs;
}


bool LEX::set_bincmp(CHARSET_INFO *cs, bool bin)
{
  /*
     if charset is NULL - we're parsing a field declaration.
     we cannot call find_bin_collation for a field here, because actual
     field charset is determined in get_sql_field_charset() much later.
     so we only set a flag.
  */
  if (!charset)
  {
    charset= cs;
    last_field->flags|= bin ? BINCMP_FLAG : 0;
    return false;
  }

  charset= bin ? find_bin_collation(cs ? cs : charset)
               :                    cs ? cs : charset;
  return charset == NULL;
}

#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (Lex->set_bincmp(X,Y))          \
       MYSQL_YYABORT;                   \
  } while(0)

Virtual_column_info *add_virtual_expression(THD *thd, Item *expr)
{
  Virtual_column_info *v= new (thd->mem_root) Virtual_column_info();
  if (!v)
  {
     mem_alloc_error(sizeof(Virtual_column_info));
     return 0;
   }
   v->expr= expr;
   v->utf8= 0;  /* connection charset */
   return v;
}


#line 803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACTION = 260,
    ADD = 261,
    ADMIN_SYM = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    ANALYZE_SYM = 271,
    AND_AND_SYM = 272,
    AND_SYM = 273,
    ANY_SYM = 274,
    AS = 275,
    ASC = 276,
    ASCII_SYM = 277,
    ASENSITIVE_SYM = 278,
    AT_SYM = 279,
    ATOMIC_SYM = 280,
    AUTHORS_SYM = 281,
    AUTOEXTEND_SIZE_SYM = 282,
    AUTO_INC = 283,
    AUTO_SYM = 284,
    AVG_ROW_LENGTH = 285,
    AVG_SYM = 286,
    BACKUP_SYM = 287,
    BEFORE_SYM = 288,
    BEGIN_SYM = 289,
    BETWEEN_SYM = 290,
    BIGINT = 291,
    BINARY = 292,
    BINLOG_SYM = 293,
    BIN_NUM = 294,
    BIT_AND = 295,
    BIT_OR = 296,
    BIT_SYM = 297,
    BIT_XOR = 298,
    BLOB_SYM = 299,
    BLOCK_SYM = 300,
    BOOLEAN_SYM = 301,
    BOOL_SYM = 302,
    BOTH = 303,
    BTREE_SYM = 304,
    BY = 305,
    BYTE_SYM = 306,
    CACHE_SYM = 307,
    CALL_SYM = 308,
    CASCADE = 309,
    CASCADED = 310,
    CASE_SYM = 311,
    CAST_SYM = 312,
    CATALOG_NAME_SYM = 313,
    CHAIN_SYM = 314,
    CHANGE = 315,
    CHANGED = 316,
    CHARSET = 317,
    CHAR_SYM = 318,
    CHECKPOINT_SYM = 319,
    CHECKSUM_SYM = 320,
    CHECK_SYM = 321,
    CIPHER_SYM = 322,
    CLASS_ORIGIN_SYM = 323,
    CLIENT_SYM = 324,
    CLOSE_SYM = 325,
    CLOB = 326,
    COALESCE = 327,
    CODE_SYM = 328,
    COLLATE_SYM = 329,
    COLLATION_SYM = 330,
    COLUMNS = 331,
    COLUMN_ADD_SYM = 332,
    COLUMN_CHECK_SYM = 333,
    COLUMN_CREATE_SYM = 334,
    COLUMN_DELETE_SYM = 335,
    COLUMN_GET_SYM = 336,
    COLUMN_SYM = 337,
    COLUMN_NAME_SYM = 338,
    COMMENT_SYM = 339,
    COMMITTED_SYM = 340,
    COMMIT_SYM = 341,
    COMPACT_SYM = 342,
    COMPLETION_SYM = 343,
    COMPRESSED_SYM = 344,
    CONCURRENT = 345,
    CONDITION_SYM = 346,
    CONNECTION_SYM = 347,
    CONSISTENT_SYM = 348,
    CONSTRAINT = 349,
    CONSTRAINT_CATALOG_SYM = 350,
    CONSTRAINT_NAME_SYM = 351,
    CONSTRAINT_SCHEMA_SYM = 352,
    CONTAINS_SYM = 353,
    CONTEXT_SYM = 354,
    CONTINUE_SYM = 355,
    CONTRIBUTORS_SYM = 356,
    CONVERT_SYM = 357,
    COUNT_SYM = 358,
    CPU_SYM = 359,
    CREATE = 360,
    CROSS = 361,
    CUBE_SYM = 362,
    CUME_DIST_SYM = 363,
    CURDATE = 364,
    CURRENT_SYM = 365,
    CURRENT_USER = 366,
    CURRENT_ROLE = 367,
    CURRENT_POS_SYM = 368,
    CURSOR_SYM = 369,
    CURSOR_NAME_SYM = 370,
    CURTIME = 371,
    CYCLE_SYM = 372,
    DATABASE = 373,
    DATABASES = 374,
    DATAFILE_SYM = 375,
    DATA_SYM = 376,
    DATETIME = 377,
    DATE_ADD_INTERVAL = 378,
    DATE_FORMAT_SYM = 379,
    DATE_SUB_INTERVAL = 380,
    DATE_SYM = 381,
    DAY_HOUR_SYM = 382,
    DAY_MICROSECOND_SYM = 383,
    DAY_MINUTE_SYM = 384,
    DAY_SECOND_SYM = 385,
    DAY_SYM = 386,
    DEALLOCATE_SYM = 387,
    DECIMAL_NUM = 388,
    DECIMAL_SYM = 389,
    DECLARE_SYM = 390,
    DECODE_SYM = 391,
    DEFAULT = 392,
    DEFINER_SYM = 393,
    DELAYED_SYM = 394,
    DELAY_KEY_WRITE_SYM = 395,
    DELETE_DOMAIN_ID_SYM = 396,
    DELETE_SYM = 397,
    DENSE_RANK_SYM = 398,
    DESC = 399,
    DESCRIBE = 400,
    DES_KEY_FILE = 401,
    DETERMINISTIC_SYM = 402,
    DIAGNOSTICS_SYM = 403,
    DIRECTORY_SYM = 404,
    DISABLE_SYM = 405,
    DISCARD = 406,
    DISK_SYM = 407,
    DISTINCT = 408,
    DIV_SYM = 409,
    DOUBLE_SYM = 410,
    DO_DOMAIN_IDS_SYM = 411,
    DO_SYM = 412,
    DOT_DOT_SYM = 413,
    DROP = 414,
    DUAL_SYM = 415,
    DUMPFILE = 416,
    DUPLICATE_SYM = 417,
    DYNAMIC_SYM = 418,
    EACH_SYM = 419,
    ELSE = 420,
    ELSEIF_SYM = 421,
    ELSIF_SYM = 422,
    ENABLE_SYM = 423,
    ENCLOSED = 424,
    END = 425,
    ENDS_SYM = 426,
    END_OF_INPUT = 427,
    ENGINES_SYM = 428,
    ENGINE_SYM = 429,
    ENUM = 430,
    EQUAL_SYM = 431,
    ERROR_SYM = 432,
    ERRORS = 433,
    ESCAPED = 434,
    ESCAPE_SYM = 435,
    EVENTS_SYM = 436,
    EVENT_SYM = 437,
    EVERY_SYM = 438,
    EXCHANGE_SYM = 439,
    EXAMINED_SYM = 440,
    EXCEPT_SYM = 441,
    EXCLUDE_SYM = 442,
    EXECUTE_SYM = 443,
    EXCEPTION_SYM = 444,
    EXISTS = 445,
    EXIT_SYM = 446,
    EXPANSION_SYM = 447,
    EXPORT_SYM = 448,
    EXTENDED_SYM = 449,
    EXTENT_SIZE_SYM = 450,
    EXTRACT_SYM = 451,
    FALSE_SYM = 452,
    FAST_SYM = 453,
    FAULTS_SYM = 454,
    FETCH_SYM = 455,
    FILE_SYM = 456,
    FIRST_VALUE_SYM = 457,
    FIRST_SYM = 458,
    FIXED_SYM = 459,
    FLOAT_NUM = 460,
    FLOAT_SYM = 461,
    FLUSH_SYM = 462,
    FOLLOWS_SYM = 463,
    FOLLOWING_SYM = 464,
    FORCE_SYM = 465,
    FOREIGN = 466,
    FOR_SYM = 467,
    FORMAT_SYM = 468,
    FOUND_SYM = 469,
    FROM = 470,
    FULL = 471,
    FULLTEXT_SYM = 472,
    FUNCTION_SYM = 473,
    GE = 474,
    GENERAL = 475,
    GENERATED_SYM = 476,
    GEOMETRYCOLLECTION = 477,
    GEOMETRY_SYM = 478,
    GET_FORMAT = 479,
    GET_SYM = 480,
    GLOBAL_SYM = 481,
    GOTO_SYM = 482,
    GRANT = 483,
    GRANTS = 484,
    GROUP_SYM = 485,
    GROUP_CONCAT_SYM = 486,
    LAG_SYM = 487,
    LEAD_SYM = 488,
    HANDLER_SYM = 489,
    HARD_SYM = 490,
    HASH_SYM = 491,
    HAVING = 492,
    HELP_SYM = 493,
    HEX_NUM = 494,
    HEX_STRING = 495,
    HIGH_PRIORITY = 496,
    INVISIBLE_SYM = 497,
    HOST_SYM = 498,
    HOSTS_SYM = 499,
    HOUR_MICROSECOND_SYM = 500,
    HOUR_MINUTE_SYM = 501,
    HOUR_SECOND_SYM = 502,
    HOUR_SYM = 503,
    ID_SYM = 504,
    IDENT = 505,
    IDENTIFIED_SYM = 506,
    IDENT_QUOTED = 507,
    IF_SYM = 508,
    IGNORE_DOMAIN_IDS_SYM = 509,
    IGNORE_SYM = 510,
    IGNORE_SERVER_IDS_SYM = 511,
    IMMEDIATE_SYM = 512,
    IMPORT = 513,
    INCREMENT_SYM = 514,
    INDEXES = 515,
    INDEX_SYM = 516,
    INFILE = 517,
    INITIAL_SIZE_SYM = 518,
    INNER_SYM = 519,
    INOUT_SYM = 520,
    INSENSITIVE_SYM = 521,
    INSERT = 522,
    INSERT_METHOD = 523,
    INSTALL_SYM = 524,
    INTERSECT_SYM = 525,
    INTERVAL_SYM = 526,
    INTO = 527,
    INT_SYM = 528,
    INVOKER_SYM = 529,
    IN_SYM = 530,
    IO_SYM = 531,
    IPC_SYM = 532,
    IS = 533,
    ISOLATION = 534,
    ISOPEN_SYM = 535,
    ISSUER_SYM = 536,
    ITERATE_SYM = 537,
    JOIN_SYM = 538,
    JSON_SYM = 539,
    KEYS = 540,
    KEY_BLOCK_SIZE = 541,
    KEY_SYM = 542,
    KILL_SYM = 543,
    LANGUAGE_SYM = 544,
    LAST_SYM = 545,
    LAST_VALUE = 546,
    LASTVAL_SYM = 547,
    LE = 548,
    LEADING = 549,
    LEAVES = 550,
    LEAVE_SYM = 551,
    LEFT = 552,
    LESS_SYM = 553,
    LEVEL_SYM = 554,
    LEX_HOSTNAME = 555,
    LIKE = 556,
    LIMIT = 557,
    LINEAR_SYM = 558,
    LINES = 559,
    LINESTRING = 560,
    LIST_SYM = 561,
    LOAD = 562,
    LOCAL_SYM = 563,
    LOCATOR_SYM = 564,
    LOCKS_SYM = 565,
    LOCK_SYM = 566,
    LOGFILE_SYM = 567,
    LOGS_SYM = 568,
    LONGBLOB = 569,
    LONGTEXT = 570,
    LONG_NUM = 571,
    LONG_SYM = 572,
    LOOP_SYM = 573,
    LOW_PRIORITY = 574,
    MASTER_CONNECT_RETRY_SYM = 575,
    MASTER_DELAY_SYM = 576,
    MASTER_GTID_POS_SYM = 577,
    MASTER_HOST_SYM = 578,
    MASTER_LOG_FILE_SYM = 579,
    MASTER_LOG_POS_SYM = 580,
    MASTER_PASSWORD_SYM = 581,
    MASTER_PORT_SYM = 582,
    MASTER_SERVER_ID_SYM = 583,
    MASTER_SSL_CAPATH_SYM = 584,
    MASTER_SSL_CA_SYM = 585,
    MASTER_SSL_CERT_SYM = 586,
    MASTER_SSL_CIPHER_SYM = 587,
    MASTER_SSL_CRL_SYM = 588,
    MASTER_SSL_CRLPATH_SYM = 589,
    MASTER_SSL_KEY_SYM = 590,
    MASTER_SSL_SYM = 591,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 592,
    MASTER_SYM = 593,
    MASTER_USER_SYM = 594,
    MASTER_USE_GTID_SYM = 595,
    MASTER_HEARTBEAT_PERIOD_SYM = 596,
    MATCH = 597,
    MAX_CONNECTIONS_PER_HOUR = 598,
    MAX_QUERIES_PER_HOUR = 599,
    MAX_ROWS = 600,
    MAX_SIZE_SYM = 601,
    MAX_SYM = 602,
    MAX_UPDATES_PER_HOUR = 603,
    MAX_STATEMENT_TIME_SYM = 604,
    MAX_USER_CONNECTIONS_SYM = 605,
    MAXVALUE_SYM = 606,
    MEDIAN_SYM = 607,
    MEDIUMBLOB = 608,
    MEDIUMINT = 609,
    MEDIUMTEXT = 610,
    MEDIUM_SYM = 611,
    MEMORY_SYM = 612,
    MERGE_SYM = 613,
    MESSAGE_TEXT_SYM = 614,
    MICROSECOND_SYM = 615,
    MIGRATE_SYM = 616,
    MINUTE_MICROSECOND_SYM = 617,
    MINUTE_SECOND_SYM = 618,
    MINUTE_SYM = 619,
    MINVALUE_SYM = 620,
    MIN_ROWS = 621,
    MIN_SYM = 622,
    MODE_SYM = 623,
    MODIFIES_SYM = 624,
    MODIFY_SYM = 625,
    MOD_SYM = 626,
    MONTH_SYM = 627,
    MULTILINESTRING = 628,
    MULTIPOINT = 629,
    MULTIPOLYGON = 630,
    MUTEX_SYM = 631,
    MYSQL_SYM = 632,
    MYSQL_ERRNO_SYM = 633,
    NAMES_SYM = 634,
    NAME_SYM = 635,
    NATIONAL_SYM = 636,
    NATURAL = 637,
    NCHAR_STRING = 638,
    NCHAR_SYM = 639,
    NE = 640,
    NEG = 641,
    NEW_SYM = 642,
    NEXT_SYM = 643,
    NEXTVAL_SYM = 644,
    NOCACHE_SYM = 645,
    NOCYCLE_SYM = 646,
    NODEGROUP_SYM = 647,
    NONE_SYM = 648,
    NOT2_SYM = 649,
    NOT_SYM = 650,
    NOTFOUND_SYM = 651,
    NOW_SYM = 652,
    NO_SYM = 653,
    NOMAXVALUE_SYM = 654,
    NOMINVALUE_SYM = 655,
    NO_WAIT_SYM = 656,
    NOWAIT_SYM = 657,
    NO_WRITE_TO_BINLOG = 658,
    NTILE_SYM = 659,
    NULL_SYM = 660,
    NUM = 661,
    NUMBER_SYM = 662,
    NUMERIC_SYM = 663,
    NTH_VALUE_SYM = 664,
    NVARCHAR_SYM = 665,
    OF_SYM = 666,
    OFFSET_SYM = 667,
    OLD_PASSWORD_SYM = 668,
    ON = 669,
    ONE_SYM = 670,
    ONLY_SYM = 671,
    ONLINE_SYM = 672,
    OPEN_SYM = 673,
    OPTIMIZE = 674,
    OPTIONS_SYM = 675,
    OPTION = 676,
    OPTIONALLY = 677,
    OR2_SYM = 678,
    ORDER_SYM = 679,
    OR_OR_SYM = 680,
    OR_SYM = 681,
    OTHERS_SYM = 682,
    OUTER = 683,
    OUTFILE = 684,
    OUT_SYM = 685,
    OVER_SYM = 686,
    OWNER_SYM = 687,
    PACK_KEYS_SYM = 688,
    PAGE_SYM = 689,
    PAGE_CHECKSUM_SYM = 690,
    PARAM_MARKER = 691,
    PARSER_SYM = 692,
    PARSE_VCOL_EXPR_SYM = 693,
    PARTIAL = 694,
    PARTITION_SYM = 695,
    PARTITIONS_SYM = 696,
    PARTITIONING_SYM = 697,
    PASSWORD_SYM = 698,
    PERCENT_RANK_SYM = 699,
    PERCENTILE_CONT_SYM = 700,
    PERCENTILE_DISC_SYM = 701,
    PERSISTENT_SYM = 702,
    PHASE_SYM = 703,
    PLUGINS_SYM = 704,
    PLUGIN_SYM = 705,
    POINT_SYM = 706,
    POLYGON = 707,
    PORT_SYM = 708,
    POSITION_SYM = 709,
    PRECEDES_SYM = 710,
    PRECEDING_SYM = 711,
    PRECISION = 712,
    PREPARE_SYM = 713,
    PRESERVE_SYM = 714,
    PREV_SYM = 715,
    PREVIOUS_SYM = 716,
    PRIMARY_SYM = 717,
    PRIVILEGES = 718,
    PROCEDURE_SYM = 719,
    PROCESS = 720,
    PROCESSLIST_SYM = 721,
    PROFILE_SYM = 722,
    PROFILES_SYM = 723,
    PROXY_SYM = 724,
    PURGE = 725,
    QUARTER_SYM = 726,
    QUERY_SYM = 727,
    QUICK = 728,
    RAISE_SYM = 729,
    RANGE_SYM = 730,
    RANK_SYM = 731,
    RAW = 732,
    READS_SYM = 733,
    READ_ONLY_SYM = 734,
    READ_SYM = 735,
    READ_WRITE_SYM = 736,
    REAL = 737,
    REBUILD_SYM = 738,
    RECOVER_SYM = 739,
    RECURSIVE_SYM = 740,
    REDOFILE_SYM = 741,
    REDO_BUFFER_SIZE_SYM = 742,
    REDUNDANT_SYM = 743,
    REFERENCES = 744,
    REGEXP = 745,
    RELAY = 746,
    RELAYLOG_SYM = 747,
    RELAY_LOG_FILE_SYM = 748,
    RELAY_LOG_POS_SYM = 749,
    RELAY_THREAD = 750,
    RELEASE_SYM = 751,
    RELOAD = 752,
    REMOVE_SYM = 753,
    RENAME = 754,
    REORGANIZE_SYM = 755,
    REPAIR = 756,
    REPEATABLE_SYM = 757,
    REPEAT_SYM = 758,
    REPLACE = 759,
    REPLICATION = 760,
    REQUIRE_SYM = 761,
    RESET_SYM = 762,
    RESTART_SYM = 763,
    RESIGNAL_SYM = 764,
    RESOURCES = 765,
    RESTORE_SYM = 766,
    RESTRICT = 767,
    RESUME_SYM = 768,
    RETURNED_SQLSTATE_SYM = 769,
    RETURNING_SYM = 770,
    RETURNS_SYM = 771,
    RETURN_SYM = 772,
    REUSE_SYM = 773,
    REVERSE_SYM = 774,
    REVOKE = 775,
    RIGHT = 776,
    ROLE_SYM = 777,
    ROLLBACK_SYM = 778,
    ROLLUP_SYM = 779,
    ROUTINE_SYM = 780,
    ROWCOUNT_SYM = 781,
    ROW_SYM = 782,
    ROWS_SYM = 783,
    ROWTYPE_SYM = 784,
    ROW_COUNT_SYM = 785,
    ROW_FORMAT_SYM = 786,
    ROW_NUMBER_SYM = 787,
    RTREE_SYM = 788,
    SAVEPOINT_SYM = 789,
    SCHEDULE_SYM = 790,
    SCHEMA_NAME_SYM = 791,
    SECOND_MICROSECOND_SYM = 792,
    SECOND_SYM = 793,
    SECURITY_SYM = 794,
    SELECT_SYM = 795,
    SENSITIVE_SYM = 796,
    SEPARATOR_SYM = 797,
    SEQUENCE_SYM = 798,
    SERIALIZABLE_SYM = 799,
    SERIAL_SYM = 800,
    SESSION_SYM = 801,
    SERVER_SYM = 802,
    SERVER_OPTIONS = 803,
    SET = 804,
    SETVAL_SYM = 805,
    SET_VAR = 806,
    SHARE_SYM = 807,
    SHIFT_LEFT = 808,
    SHIFT_RIGHT = 809,
    SHOW = 810,
    SHUTDOWN = 811,
    SIGNAL_SYM = 812,
    SIGNED_SYM = 813,
    SIMPLE_SYM = 814,
    SLAVE = 815,
    SLAVES = 816,
    SLAVE_POS_SYM = 817,
    SLOW = 818,
    SMALLINT = 819,
    SNAPSHOT_SYM = 820,
    SOCKET_SYM = 821,
    SOFT_SYM = 822,
    SONAME_SYM = 823,
    SOUNDS_SYM = 824,
    SOURCE_SYM = 825,
    SPATIAL_SYM = 826,
    SPECIFIC_SYM = 827,
    SQLEXCEPTION_SYM = 828,
    SQLSTATE_SYM = 829,
    SQLWARNING_SYM = 830,
    SQL_BIG_RESULT = 831,
    SQL_BUFFER_RESULT = 832,
    SQL_CACHE_SYM = 833,
    SQL_CALC_FOUND_ROWS = 834,
    SQL_NO_CACHE_SYM = 835,
    SQL_SMALL_RESULT = 836,
    SQL_SYM = 837,
    SQL_THREAD = 838,
    REF_SYSTEM_ID_SYM = 839,
    SSL_SYM = 840,
    STARTING = 841,
    STARTS_SYM = 842,
    START_SYM = 843,
    STATEMENT_SYM = 844,
    STATS_AUTO_RECALC_SYM = 845,
    STATS_PERSISTENT_SYM = 846,
    STATS_SAMPLE_PAGES_SYM = 847,
    STATUS_SYM = 848,
    STDDEV_SAMP_SYM = 849,
    STD_SYM = 850,
    STOP_SYM = 851,
    STORAGE_SYM = 852,
    STORED_SYM = 853,
    STRAIGHT_JOIN = 854,
    STRING_SYM = 855,
    SUBCLASS_ORIGIN_SYM = 856,
    SUBDATE_SYM = 857,
    SUBJECT_SYM = 858,
    SUBPARTITIONS_SYM = 859,
    SUBPARTITION_SYM = 860,
    SUBSTRING = 861,
    SUM_SYM = 862,
    SUPER_SYM = 863,
    SUSPEND_SYM = 864,
    SWAPS_SYM = 865,
    SWITCHES_SYM = 866,
    SYSDATE = 867,
    TABLES = 868,
    TABLESPACE = 869,
    TABLE_REF_PRIORITY = 870,
    TABLE_SYM = 871,
    TABLE_CHECKSUM_SYM = 872,
    TABLE_NAME_SYM = 873,
    TEMPORARY = 874,
    TEMPTABLE_SYM = 875,
    TERMINATED = 876,
    TEXT_STRING = 877,
    TEXT_SYM = 878,
    THAN_SYM = 879,
    THEN_SYM = 880,
    TIES_SYM = 881,
    TIMESTAMP = 882,
    TIMESTAMP_ADD = 883,
    TIMESTAMP_DIFF = 884,
    TIME_SYM = 885,
    TINYBLOB = 886,
    TINYINT = 887,
    TINYTEXT = 888,
    TO_SYM = 889,
    TRAILING = 890,
    TRANSACTION_SYM = 891,
    TRANSACTIONAL_SYM = 892,
    TRIGGERS_SYM = 893,
    TRIGGER_SYM = 894,
    TRIM = 895,
    TRUE_SYM = 896,
    TRUNCATE_SYM = 897,
    TYPES_SYM = 898,
    TYPE_SYM = 899,
    UDF_RETURNS_SYM = 900,
    ULONGLONG_NUM = 901,
    UNBOUNDED_SYM = 902,
    UNCOMMITTED_SYM = 903,
    UNDEFINED_SYM = 904,
    UNDERSCORE_CHARSET = 905,
    UNDOFILE_SYM = 906,
    UNDO_BUFFER_SIZE_SYM = 907,
    UNDO_SYM = 908,
    UNICODE_SYM = 909,
    UNINSTALL_SYM = 910,
    UNION_SYM = 911,
    UNIQUE_SYM = 912,
    UNKNOWN_SYM = 913,
    UNLOCK_SYM = 914,
    UNSIGNED = 915,
    UNTIL_SYM = 916,
    UPDATE_SYM = 917,
    UPGRADE_SYM = 918,
    USAGE = 919,
    USER_SYM = 920,
    USE_FRM = 921,
    USE_SYM = 922,
    USING = 923,
    UTC_DATE_SYM = 924,
    UTC_TIMESTAMP_SYM = 925,
    UTC_TIME_SYM = 926,
    VALUES = 927,
    VALUES_IN_SYM = 928,
    VALUES_LESS_SYM = 929,
    VALUE_SYM = 930,
    VARBINARY = 931,
    VARCHAR = 932,
    VARCHAR2 = 933,
    VARIABLES = 934,
    VARIANCE_SYM = 935,
    VARYING = 936,
    VAR_SAMP_SYM = 937,
    VIA_SYM = 938,
    VIEW_SYM = 939,
    VIRTUAL_SYM = 940,
    WAIT_SYM = 941,
    WARNINGS = 942,
    WEEK_SYM = 943,
    WEIGHT_STRING_SYM = 944,
    WHEN_SYM = 945,
    WHERE = 946,
    WINDOW_SYM = 947,
    WHILE_SYM = 948,
    WITH = 949,
    WITHIN = 950,
    WITH_CUBE_SYM = 951,
    WITH_ROLLUP_SYM = 952,
    WORK_SYM = 953,
    WRAPPER_SYM = 954,
    WRITE_SYM = 955,
    X509_SYM = 956,
    XA_SYM = 957,
    XML_SYM = 958,
    XOR = 959,
    YEAR_MONTH_SYM = 960,
    YEAR_SYM = 961,
    ZEROFILL = 962,
    IMPOSSIBLE_ACTION = 963
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADMIN_SYM 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYZE_SYM 271
#define AND_AND_SYM 272
#define AND_SYM 273
#define ANY_SYM 274
#define AS 275
#define ASC 276
#define ASCII_SYM 277
#define ASENSITIVE_SYM 278
#define AT_SYM 279
#define ATOMIC_SYM 280
#define AUTHORS_SYM 281
#define AUTOEXTEND_SIZE_SYM 282
#define AUTO_INC 283
#define AUTO_SYM 284
#define AVG_ROW_LENGTH 285
#define AVG_SYM 286
#define BACKUP_SYM 287
#define BEFORE_SYM 288
#define BEGIN_SYM 289
#define BETWEEN_SYM 290
#define BIGINT 291
#define BINARY 292
#define BINLOG_SYM 293
#define BIN_NUM 294
#define BIT_AND 295
#define BIT_OR 296
#define BIT_SYM 297
#define BIT_XOR 298
#define BLOB_SYM 299
#define BLOCK_SYM 300
#define BOOLEAN_SYM 301
#define BOOL_SYM 302
#define BOTH 303
#define BTREE_SYM 304
#define BY 305
#define BYTE_SYM 306
#define CACHE_SYM 307
#define CALL_SYM 308
#define CASCADE 309
#define CASCADED 310
#define CASE_SYM 311
#define CAST_SYM 312
#define CATALOG_NAME_SYM 313
#define CHAIN_SYM 314
#define CHANGE 315
#define CHANGED 316
#define CHARSET 317
#define CHAR_SYM 318
#define CHECKPOINT_SYM 319
#define CHECKSUM_SYM 320
#define CHECK_SYM 321
#define CIPHER_SYM 322
#define CLASS_ORIGIN_SYM 323
#define CLIENT_SYM 324
#define CLOSE_SYM 325
#define CLOB 326
#define COALESCE 327
#define CODE_SYM 328
#define COLLATE_SYM 329
#define COLLATION_SYM 330
#define COLUMNS 331
#define COLUMN_ADD_SYM 332
#define COLUMN_CHECK_SYM 333
#define COLUMN_CREATE_SYM 334
#define COLUMN_DELETE_SYM 335
#define COLUMN_GET_SYM 336
#define COLUMN_SYM 337
#define COLUMN_NAME_SYM 338
#define COMMENT_SYM 339
#define COMMITTED_SYM 340
#define COMMIT_SYM 341
#define COMPACT_SYM 342
#define COMPLETION_SYM 343
#define COMPRESSED_SYM 344
#define CONCURRENT 345
#define CONDITION_SYM 346
#define CONNECTION_SYM 347
#define CONSISTENT_SYM 348
#define CONSTRAINT 349
#define CONSTRAINT_CATALOG_SYM 350
#define CONSTRAINT_NAME_SYM 351
#define CONSTRAINT_SCHEMA_SYM 352
#define CONTAINS_SYM 353
#define CONTEXT_SYM 354
#define CONTINUE_SYM 355
#define CONTRIBUTORS_SYM 356
#define CONVERT_SYM 357
#define COUNT_SYM 358
#define CPU_SYM 359
#define CREATE 360
#define CROSS 361
#define CUBE_SYM 362
#define CUME_DIST_SYM 363
#define CURDATE 364
#define CURRENT_SYM 365
#define CURRENT_USER 366
#define CURRENT_ROLE 367
#define CURRENT_POS_SYM 368
#define CURSOR_SYM 369
#define CURSOR_NAME_SYM 370
#define CURTIME 371
#define CYCLE_SYM 372
#define DATABASE 373
#define DATABASES 374
#define DATAFILE_SYM 375
#define DATA_SYM 376
#define DATETIME 377
#define DATE_ADD_INTERVAL 378
#define DATE_FORMAT_SYM 379
#define DATE_SUB_INTERVAL 380
#define DATE_SYM 381
#define DAY_HOUR_SYM 382
#define DAY_MICROSECOND_SYM 383
#define DAY_MINUTE_SYM 384
#define DAY_SECOND_SYM 385
#define DAY_SYM 386
#define DEALLOCATE_SYM 387
#define DECIMAL_NUM 388
#define DECIMAL_SYM 389
#define DECLARE_SYM 390
#define DECODE_SYM 391
#define DEFAULT 392
#define DEFINER_SYM 393
#define DELAYED_SYM 394
#define DELAY_KEY_WRITE_SYM 395
#define DELETE_DOMAIN_ID_SYM 396
#define DELETE_SYM 397
#define DENSE_RANK_SYM 398
#define DESC 399
#define DESCRIBE 400
#define DES_KEY_FILE 401
#define DETERMINISTIC_SYM 402
#define DIAGNOSTICS_SYM 403
#define DIRECTORY_SYM 404
#define DISABLE_SYM 405
#define DISCARD 406
#define DISK_SYM 407
#define DISTINCT 408
#define DIV_SYM 409
#define DOUBLE_SYM 410
#define DO_DOMAIN_IDS_SYM 411
#define DO_SYM 412
#define DOT_DOT_SYM 413
#define DROP 414
#define DUAL_SYM 415
#define DUMPFILE 416
#define DUPLICATE_SYM 417
#define DYNAMIC_SYM 418
#define EACH_SYM 419
#define ELSE 420
#define ELSEIF_SYM 421
#define ELSIF_SYM 422
#define ENABLE_SYM 423
#define ENCLOSED 424
#define END 425
#define ENDS_SYM 426
#define END_OF_INPUT 427
#define ENGINES_SYM 428
#define ENGINE_SYM 429
#define ENUM 430
#define EQUAL_SYM 431
#define ERROR_SYM 432
#define ERRORS 433
#define ESCAPED 434
#define ESCAPE_SYM 435
#define EVENTS_SYM 436
#define EVENT_SYM 437
#define EVERY_SYM 438
#define EXCHANGE_SYM 439
#define EXAMINED_SYM 440
#define EXCEPT_SYM 441
#define EXCLUDE_SYM 442
#define EXECUTE_SYM 443
#define EXCEPTION_SYM 444
#define EXISTS 445
#define EXIT_SYM 446
#define EXPANSION_SYM 447
#define EXPORT_SYM 448
#define EXTENDED_SYM 449
#define EXTENT_SIZE_SYM 450
#define EXTRACT_SYM 451
#define FALSE_SYM 452
#define FAST_SYM 453
#define FAULTS_SYM 454
#define FETCH_SYM 455
#define FILE_SYM 456
#define FIRST_VALUE_SYM 457
#define FIRST_SYM 458
#define FIXED_SYM 459
#define FLOAT_NUM 460
#define FLOAT_SYM 461
#define FLUSH_SYM 462
#define FOLLOWS_SYM 463
#define FOLLOWING_SYM 464
#define FORCE_SYM 465
#define FOREIGN 466
#define FOR_SYM 467
#define FORMAT_SYM 468
#define FOUND_SYM 469
#define FROM 470
#define FULL 471
#define FULLTEXT_SYM 472
#define FUNCTION_SYM 473
#define GE 474
#define GENERAL 475
#define GENERATED_SYM 476
#define GEOMETRYCOLLECTION 477
#define GEOMETRY_SYM 478
#define GET_FORMAT 479
#define GET_SYM 480
#define GLOBAL_SYM 481
#define GOTO_SYM 482
#define GRANT 483
#define GRANTS 484
#define GROUP_SYM 485
#define GROUP_CONCAT_SYM 486
#define LAG_SYM 487
#define LEAD_SYM 488
#define HANDLER_SYM 489
#define HARD_SYM 490
#define HASH_SYM 491
#define HAVING 492
#define HELP_SYM 493
#define HEX_NUM 494
#define HEX_STRING 495
#define HIGH_PRIORITY 496
#define INVISIBLE_SYM 497
#define HOST_SYM 498
#define HOSTS_SYM 499
#define HOUR_MICROSECOND_SYM 500
#define HOUR_MINUTE_SYM 501
#define HOUR_SECOND_SYM 502
#define HOUR_SYM 503
#define ID_SYM 504
#define IDENT 505
#define IDENTIFIED_SYM 506
#define IDENT_QUOTED 507
#define IF_SYM 508
#define IGNORE_DOMAIN_IDS_SYM 509
#define IGNORE_SYM 510
#define IGNORE_SERVER_IDS_SYM 511
#define IMMEDIATE_SYM 512
#define IMPORT 513
#define INCREMENT_SYM 514
#define INDEXES 515
#define INDEX_SYM 516
#define INFILE 517
#define INITIAL_SIZE_SYM 518
#define INNER_SYM 519
#define INOUT_SYM 520
#define INSENSITIVE_SYM 521
#define INSERT 522
#define INSERT_METHOD 523
#define INSTALL_SYM 524
#define INTERSECT_SYM 525
#define INTERVAL_SYM 526
#define INTO 527
#define INT_SYM 528
#define INVOKER_SYM 529
#define IN_SYM 530
#define IO_SYM 531
#define IPC_SYM 532
#define IS 533
#define ISOLATION 534
#define ISOPEN_SYM 535
#define ISSUER_SYM 536
#define ITERATE_SYM 537
#define JOIN_SYM 538
#define JSON_SYM 539
#define KEYS 540
#define KEY_BLOCK_SIZE 541
#define KEY_SYM 542
#define KILL_SYM 543
#define LANGUAGE_SYM 544
#define LAST_SYM 545
#define LAST_VALUE 546
#define LASTVAL_SYM 547
#define LE 548
#define LEADING 549
#define LEAVES 550
#define LEAVE_SYM 551
#define LEFT 552
#define LESS_SYM 553
#define LEVEL_SYM 554
#define LEX_HOSTNAME 555
#define LIKE 556
#define LIMIT 557
#define LINEAR_SYM 558
#define LINES 559
#define LINESTRING 560
#define LIST_SYM 561
#define LOAD 562
#define LOCAL_SYM 563
#define LOCATOR_SYM 564
#define LOCKS_SYM 565
#define LOCK_SYM 566
#define LOGFILE_SYM 567
#define LOGS_SYM 568
#define LONGBLOB 569
#define LONGTEXT 570
#define LONG_NUM 571
#define LONG_SYM 572
#define LOOP_SYM 573
#define LOW_PRIORITY 574
#define MASTER_CONNECT_RETRY_SYM 575
#define MASTER_DELAY_SYM 576
#define MASTER_GTID_POS_SYM 577
#define MASTER_HOST_SYM 578
#define MASTER_LOG_FILE_SYM 579
#define MASTER_LOG_POS_SYM 580
#define MASTER_PASSWORD_SYM 581
#define MASTER_PORT_SYM 582
#define MASTER_SERVER_ID_SYM 583
#define MASTER_SSL_CAPATH_SYM 584
#define MASTER_SSL_CA_SYM 585
#define MASTER_SSL_CERT_SYM 586
#define MASTER_SSL_CIPHER_SYM 587
#define MASTER_SSL_CRL_SYM 588
#define MASTER_SSL_CRLPATH_SYM 589
#define MASTER_SSL_KEY_SYM 590
#define MASTER_SSL_SYM 591
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 592
#define MASTER_SYM 593
#define MASTER_USER_SYM 594
#define MASTER_USE_GTID_SYM 595
#define MASTER_HEARTBEAT_PERIOD_SYM 596
#define MATCH 597
#define MAX_CONNECTIONS_PER_HOUR 598
#define MAX_QUERIES_PER_HOUR 599
#define MAX_ROWS 600
#define MAX_SIZE_SYM 601
#define MAX_SYM 602
#define MAX_UPDATES_PER_HOUR 603
#define MAX_STATEMENT_TIME_SYM 604
#define MAX_USER_CONNECTIONS_SYM 605
#define MAXVALUE_SYM 606
#define MEDIAN_SYM 607
#define MEDIUMBLOB 608
#define MEDIUMINT 609
#define MEDIUMTEXT 610
#define MEDIUM_SYM 611
#define MEMORY_SYM 612
#define MERGE_SYM 613
#define MESSAGE_TEXT_SYM 614
#define MICROSECOND_SYM 615
#define MIGRATE_SYM 616
#define MINUTE_MICROSECOND_SYM 617
#define MINUTE_SECOND_SYM 618
#define MINUTE_SYM 619
#define MINVALUE_SYM 620
#define MIN_ROWS 621
#define MIN_SYM 622
#define MODE_SYM 623
#define MODIFIES_SYM 624
#define MODIFY_SYM 625
#define MOD_SYM 626
#define MONTH_SYM 627
#define MULTILINESTRING 628
#define MULTIPOINT 629
#define MULTIPOLYGON 630
#define MUTEX_SYM 631
#define MYSQL_SYM 632
#define MYSQL_ERRNO_SYM 633
#define NAMES_SYM 634
#define NAME_SYM 635
#define NATIONAL_SYM 636
#define NATURAL 637
#define NCHAR_STRING 638
#define NCHAR_SYM 639
#define NE 640
#define NEG 641
#define NEW_SYM 642
#define NEXT_SYM 643
#define NEXTVAL_SYM 644
#define NOCACHE_SYM 645
#define NOCYCLE_SYM 646
#define NODEGROUP_SYM 647
#define NONE_SYM 648
#define NOT2_SYM 649
#define NOT_SYM 650
#define NOTFOUND_SYM 651
#define NOW_SYM 652
#define NO_SYM 653
#define NOMAXVALUE_SYM 654
#define NOMINVALUE_SYM 655
#define NO_WAIT_SYM 656
#define NOWAIT_SYM 657
#define NO_WRITE_TO_BINLOG 658
#define NTILE_SYM 659
#define NULL_SYM 660
#define NUM 661
#define NUMBER_SYM 662
#define NUMERIC_SYM 663
#define NTH_VALUE_SYM 664
#define NVARCHAR_SYM 665
#define OF_SYM 666
#define OFFSET_SYM 667
#define OLD_PASSWORD_SYM 668
#define ON 669
#define ONE_SYM 670
#define ONLY_SYM 671
#define ONLINE_SYM 672
#define OPEN_SYM 673
#define OPTIMIZE 674
#define OPTIONS_SYM 675
#define OPTION 676
#define OPTIONALLY 677
#define OR2_SYM 678
#define ORDER_SYM 679
#define OR_OR_SYM 680
#define OR_SYM 681
#define OTHERS_SYM 682
#define OUTER 683
#define OUTFILE 684
#define OUT_SYM 685
#define OVER_SYM 686
#define OWNER_SYM 687
#define PACK_KEYS_SYM 688
#define PAGE_SYM 689
#define PAGE_CHECKSUM_SYM 690
#define PARAM_MARKER 691
#define PARSER_SYM 692
#define PARSE_VCOL_EXPR_SYM 693
#define PARTIAL 694
#define PARTITION_SYM 695
#define PARTITIONS_SYM 696
#define PARTITIONING_SYM 697
#define PASSWORD_SYM 698
#define PERCENT_RANK_SYM 699
#define PERCENTILE_CONT_SYM 700
#define PERCENTILE_DISC_SYM 701
#define PERSISTENT_SYM 702
#define PHASE_SYM 703
#define PLUGINS_SYM 704
#define PLUGIN_SYM 705
#define POINT_SYM 706
#define POLYGON 707
#define PORT_SYM 708
#define POSITION_SYM 709
#define PRECEDES_SYM 710
#define PRECEDING_SYM 711
#define PRECISION 712
#define PREPARE_SYM 713
#define PRESERVE_SYM 714
#define PREV_SYM 715
#define PREVIOUS_SYM 716
#define PRIMARY_SYM 717
#define PRIVILEGES 718
#define PROCEDURE_SYM 719
#define PROCESS 720
#define PROCESSLIST_SYM 721
#define PROFILE_SYM 722
#define PROFILES_SYM 723
#define PROXY_SYM 724
#define PURGE 725
#define QUARTER_SYM 726
#define QUERY_SYM 727
#define QUICK 728
#define RAISE_SYM 729
#define RANGE_SYM 730
#define RANK_SYM 731
#define RAW 732
#define READS_SYM 733
#define READ_ONLY_SYM 734
#define READ_SYM 735
#define READ_WRITE_SYM 736
#define REAL 737
#define REBUILD_SYM 738
#define RECOVER_SYM 739
#define RECURSIVE_SYM 740
#define REDOFILE_SYM 741
#define REDO_BUFFER_SIZE_SYM 742
#define REDUNDANT_SYM 743
#define REFERENCES 744
#define REGEXP 745
#define RELAY 746
#define RELAYLOG_SYM 747
#define RELAY_LOG_FILE_SYM 748
#define RELAY_LOG_POS_SYM 749
#define RELAY_THREAD 750
#define RELEASE_SYM 751
#define RELOAD 752
#define REMOVE_SYM 753
#define RENAME 754
#define REORGANIZE_SYM 755
#define REPAIR 756
#define REPEATABLE_SYM 757
#define REPEAT_SYM 758
#define REPLACE 759
#define REPLICATION 760
#define REQUIRE_SYM 761
#define RESET_SYM 762
#define RESTART_SYM 763
#define RESIGNAL_SYM 764
#define RESOURCES 765
#define RESTORE_SYM 766
#define RESTRICT 767
#define RESUME_SYM 768
#define RETURNED_SQLSTATE_SYM 769
#define RETURNING_SYM 770
#define RETURNS_SYM 771
#define RETURN_SYM 772
#define REUSE_SYM 773
#define REVERSE_SYM 774
#define REVOKE 775
#define RIGHT 776
#define ROLE_SYM 777
#define ROLLBACK_SYM 778
#define ROLLUP_SYM 779
#define ROUTINE_SYM 780
#define ROWCOUNT_SYM 781
#define ROW_SYM 782
#define ROWS_SYM 783
#define ROWTYPE_SYM 784
#define ROW_COUNT_SYM 785
#define ROW_FORMAT_SYM 786
#define ROW_NUMBER_SYM 787
#define RTREE_SYM 788
#define SAVEPOINT_SYM 789
#define SCHEDULE_SYM 790
#define SCHEMA_NAME_SYM 791
#define SECOND_MICROSECOND_SYM 792
#define SECOND_SYM 793
#define SECURITY_SYM 794
#define SELECT_SYM 795
#define SENSITIVE_SYM 796
#define SEPARATOR_SYM 797
#define SEQUENCE_SYM 798
#define SERIALIZABLE_SYM 799
#define SERIAL_SYM 800
#define SESSION_SYM 801
#define SERVER_SYM 802
#define SERVER_OPTIONS 803
#define SET 804
#define SETVAL_SYM 805
#define SET_VAR 806
#define SHARE_SYM 807
#define SHIFT_LEFT 808
#define SHIFT_RIGHT 809
#define SHOW 810
#define SHUTDOWN 811
#define SIGNAL_SYM 812
#define SIGNED_SYM 813
#define SIMPLE_SYM 814
#define SLAVE 815
#define SLAVES 816
#define SLAVE_POS_SYM 817
#define SLOW 818
#define SMALLINT 819
#define SNAPSHOT_SYM 820
#define SOCKET_SYM 821
#define SOFT_SYM 822
#define SONAME_SYM 823
#define SOUNDS_SYM 824
#define SOURCE_SYM 825
#define SPATIAL_SYM 826
#define SPECIFIC_SYM 827
#define SQLEXCEPTION_SYM 828
#define SQLSTATE_SYM 829
#define SQLWARNING_SYM 830
#define SQL_BIG_RESULT 831
#define SQL_BUFFER_RESULT 832
#define SQL_CACHE_SYM 833
#define SQL_CALC_FOUND_ROWS 834
#define SQL_NO_CACHE_SYM 835
#define SQL_SMALL_RESULT 836
#define SQL_SYM 837
#define SQL_THREAD 838
#define REF_SYSTEM_ID_SYM 839
#define SSL_SYM 840
#define STARTING 841
#define STARTS_SYM 842
#define START_SYM 843
#define STATEMENT_SYM 844
#define STATS_AUTO_RECALC_SYM 845
#define STATS_PERSISTENT_SYM 846
#define STATS_SAMPLE_PAGES_SYM 847
#define STATUS_SYM 848
#define STDDEV_SAMP_SYM 849
#define STD_SYM 850
#define STOP_SYM 851
#define STORAGE_SYM 852
#define STORED_SYM 853
#define STRAIGHT_JOIN 854
#define STRING_SYM 855
#define SUBCLASS_ORIGIN_SYM 856
#define SUBDATE_SYM 857
#define SUBJECT_SYM 858
#define SUBPARTITIONS_SYM 859
#define SUBPARTITION_SYM 860
#define SUBSTRING 861
#define SUM_SYM 862
#define SUPER_SYM 863
#define SUSPEND_SYM 864
#define SWAPS_SYM 865
#define SWITCHES_SYM 866
#define SYSDATE 867
#define TABLES 868
#define TABLESPACE 869
#define TABLE_REF_PRIORITY 870
#define TABLE_SYM 871
#define TABLE_CHECKSUM_SYM 872
#define TABLE_NAME_SYM 873
#define TEMPORARY 874
#define TEMPTABLE_SYM 875
#define TERMINATED 876
#define TEXT_STRING 877
#define TEXT_SYM 878
#define THAN_SYM 879
#define THEN_SYM 880
#define TIES_SYM 881
#define TIMESTAMP 882
#define TIMESTAMP_ADD 883
#define TIMESTAMP_DIFF 884
#define TIME_SYM 885
#define TINYBLOB 886
#define TINYINT 887
#define TINYTEXT 888
#define TO_SYM 889
#define TRAILING 890
#define TRANSACTION_SYM 891
#define TRANSACTIONAL_SYM 892
#define TRIGGERS_SYM 893
#define TRIGGER_SYM 894
#define TRIM 895
#define TRUE_SYM 896
#define TRUNCATE_SYM 897
#define TYPES_SYM 898
#define TYPE_SYM 899
#define UDF_RETURNS_SYM 900
#define ULONGLONG_NUM 901
#define UNBOUNDED_SYM 902
#define UNCOMMITTED_SYM 903
#define UNDEFINED_SYM 904
#define UNDERSCORE_CHARSET 905
#define UNDOFILE_SYM 906
#define UNDO_BUFFER_SIZE_SYM 907
#define UNDO_SYM 908
#define UNICODE_SYM 909
#define UNINSTALL_SYM 910
#define UNION_SYM 911
#define UNIQUE_SYM 912
#define UNKNOWN_SYM 913
#define UNLOCK_SYM 914
#define UNSIGNED 915
#define UNTIL_SYM 916
#define UPDATE_SYM 917
#define UPGRADE_SYM 918
#define USAGE 919
#define USER_SYM 920
#define USE_FRM 921
#define USE_SYM 922
#define USING 923
#define UTC_DATE_SYM 924
#define UTC_TIMESTAMP_SYM 925
#define UTC_TIME_SYM 926
#define VALUES 927
#define VALUES_IN_SYM 928
#define VALUES_LESS_SYM 929
#define VALUE_SYM 930
#define VARBINARY 931
#define VARCHAR 932
#define VARCHAR2 933
#define VARIABLES 934
#define VARIANCE_SYM 935
#define VARYING 936
#define VAR_SAMP_SYM 937
#define VIA_SYM 938
#define VIEW_SYM 939
#define VIRTUAL_SYM 940
#define WAIT_SYM 941
#define WARNINGS 942
#define WEEK_SYM 943
#define WEIGHT_STRING_SYM 944
#define WHEN_SYM 945
#define WHERE 946
#define WINDOW_SYM 947
#define WHILE_SYM 948
#define WITH 949
#define WITHIN 950
#define WITH_CUBE_SYM 951
#define WITH_ROLLUP_SYM 952
#define WORK_SYM 953
#define WRAPPER_SYM 954
#define WRITE_SYM 955
#define X509_SYM 956
#define XA_SYM 957
#define XML_SYM 958
#define XOR 959
#define YEAR_MONTH_SYM 960
#define YEAR_SYM 961
#define ZEROFILL 962
#define IMPOSSIBLE_ACTION 963

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  LEX_SYMBOL symbol;
  Lex_string_with_metadata_st lex_string_with_metadata;
  struct sys_var_with_base variable;
  Lex_string_with_pos_st lex_string_with_pos;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  struct
  {
    LEX_CSTRING name;
    uint offset;
  } sp_cursor_name_and_offset;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_view_suid view_suid;
  enum sub_select_type unit_type;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;

#line 2366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int MYSQLparse (THD *thd);

#endif /* !YY_MYSQL_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);

#line 2383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  683
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   83484

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  731
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1182
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3226
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5568

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   963

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   724,     2,     2,     2,   718,   713,     2,
     721,   722,   716,   715,   723,   714,   728,   717,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   730,   727,
     711,   709,   710,     2,   729,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   719,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   725,   712,   726,   720,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2026,  2026,  2036,  2035,  2060,  2067,  2069,  2073,  2074,
    2075,  2080,  2081,  2082,  2083,  2084,  2085,  2086,  2087,  2088,
    2089,  2090,  2091,  2092,  2093,  2094,  2095,  2096,  2097,  2098,
    2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,  2118,
    2119,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,  2128,
    2129,  2130,  2131,  2132,  2133,  2134,  2135,  2139,  2148,  2149,
    2153,  2165,  2165,  2175,  2174,  2183,  2182,  2193,  2195,  2195,
    2206,  2207,  2211,  2222,  2221,  2238,  2237,  2246,  2247,  2251,
    2255,  2259,  2263,  2267,  2271,  2281,  2286,  2290,  2294,  2298,
    2302,  2306,  2311,  2315,  2320,  2347,  2351,  2355,  2360,  2363,
    2365,  2366,  2370,  2376,  2378,  2379,  2383,  2389,  2391,  2392,
    2396,  2403,  2407,  2422,  2426,  2432,  2438,  2444,  2454,  2458,
    2462,  2476,  2475,  2512,  2511,  2572,  2569,  2582,  2580,  2592,
    2590,  2601,  2600,  2614,  2612,  2623,  2621,  2630,  2629,  2634,
    2633,  2638,  2637,  2642,  2641,  2648,  2647,  2654,  2653,  2658,
    2657,  2663,  2669,  2675,  2679,  2683,  2683,  2689,  2699,  2709,
    2710,  2714,  2716,  2719,  2720,  2724,  2725,  2729,  2734,  2740,
    2746,  2751,  2757,  2763,  2768,  2773,  2778,  2783,  2788,  2793,
    2802,  2816,  2815,  2827,  2828,  2832,  2837,  2844,  2849,  2854,
    2859,  2864,  2872,  2871,  2903,  2902,  2909,  2916,  2917,  2923,
    2929,  2939,  2945,  2951,  2953,  2960,  2961,  2965,  2975,  2976,
    2984,  2984,  3028,  3042,  3047,  3055,  3056,  3060,  3061,  3066,
    3068,  3070,  3072,  3074,  3076,  3078,  3084,  3085,  3089,  3093,
    3101,  3100,  3109,  3111,  3114,  3116,  3120,  3124,  3131,  3133,
    3137,  3138,  3142,  3150,  3155,  3160,  3165,  3170,  3175,  3183,
    3185,  3189,  3190,  3194,  3198,  3199,  3200,  3201,  3206,  3205,
    3218,  3217,  3229,  3230,  3234,  3235,  3240,  3243,  3255,  3260,
    3265,  3270,  3279,  3291,  3295,  3301,  3312,  3316,  3323,  3332,
    3340,  3348,  3359,  3360,  3368,  3367,  3380,  3379,  3396,  3398,
    3403,  3412,  3411,  3427,  3428,  3433,  3435,  3440,  3455,  3463,
    3467,  3486,  3487,  3491,  3495,  3501,  3507,  3513,  3522,  3530,
    3545,  3551,  3552,  3558,  3561,  3565,  3573,  3590,  3592,  3610,
    3616,  3618,  3620,  3622,  3624,  3626,  3628,  3630,  3632,  3634,
    3636,  3638,  3643,  3651,  3667,  3668,  3673,  3679,  3688,  3694,
    3703,  3711,  3720,  3729,  3731,  3740,  3745,  3751,  3760,  3768,
    3770,  3772,  3774,  3776,  3778,  3780,  3782,  3784,  3786,  3788,
    3790,  3792,  3797,  3801,  3813,  3828,  3829,  3842,  3843,  3844,
    3845,  3846,  3850,  3851,  3852,  3853,  3854,  3855,  3856,  3860,
    3861,  3862,  3863,  3868,  3867,  3878,  3878,  3931,  3930,  3944,
    3952,  3960,  3969,  3968,  3987,  3986,  4002,  4008,  4016,  4017,
    4021,  4029,  4034,  4039,  4047,  4048,  4063,  4081,  4095,  4112,
    4114,  4130,  4112,  4149,  4151,  4152,  4157,  4156,  4226,  4228,
    4226,  4237,  4242,  4243,  4247,  4248,  4253,  4257,  4252,  4277,
    4281,  4276,  4299,  4309,  4313,  4317,  4318,  4322,  4333,  4331,
    4348,  4347,  4362,  4361,  4378,  4379,  4383,  4391,  4399,  4406,
    4414,  4429,  4428,  4445,  4444,  4464,  4473,  4472,  4480,  4479,
    4488,  4493,  4502,  4487,  4514,  4513,  4524,  4523,  4533,  4532,
    4543,  4550,  4542,  4569,  4568,  4580,  4582,  4587,  4589,  4591,
    4608,  4613,  4619,  4626,  4627,  4635,  4641,  4650,  4656,  4662,
    4663,  4667,  4667,  4672,  4673,  4674,  4678,  4679,  4680,  4684,
    4688,  4689,  4690,  4694,  4695,  4696,  4697,  4698,  4699,  4700,
    4701,  4705,  4709,  4710,  4711,  4715,  4716,  4717,  4718,  4719,
    4723,  4727,  4728,  4729,  4733,  4734,  4735,  4736,  4737,  4738,
    4739,  4743,  4747,  4748,  4749,  4753,  4754,  4755,  4760,  4768,
    4776,  4784,  4797,  4810,  4815,  4820,  4828,  4836,  4844,  4852,
    4860,  4868,  4876,  4886,  4896,  4906,  4908,  4912,  4917,  4927,
    4928,  4967,  4966,  4969,  4975,  4977,  4976,  4979,  4978,  4980,
    4994,  4995,  4999,  5000,  5006,  5004,  5011,  5016,  5018,  5017,
    5020,  5019,  5024,  5061,  5062,  5067,  5066,  5085,  5100,  5099,
    5117,  5116,  5122,  5130,  5129,  5132,  5134,  5137,  5136,  5145,
    5150,  5151,  5157,  5158,  5175,  5176,  5180,  5181,  5185,  5201,
    5211,  5222,  5231,  5232,  5245,  5247,  5246,  5251,  5249,  5260,
    5261,  5265,  5280,  5292,  5293,  5306,  5315,  5337,  5338,  5343,
    5342,  5367,  5379,  5395,  5394,  5409,  5408,  5422,  5446,  5468,
    5472,  5501,  5513,  5514,  5519,  5530,  5518,  5555,  5556,  5560,
    5573,  5594,  5607,  5633,  5634,  5639,  5638,  5676,  5685,  5686,
    5690,  5691,  5695,  5697,  5703,  5709,  5711,  5713,  5715,  5717,
    5719,  5728,  5736,  5736,  5757,  5758,  5762,  5763,  5767,  5778,
    5779,  5783,  5784,  5788,  5789,  5793,  5794,  5799,  5802,  5810,
    5813,  5820,  5824,  5830,  5832,  5836,  5837,  5841,  5842,  5843,
    5847,  5852,  5857,  5862,  5867,  5872,  5877,  5882,  5897,  5903,
    5918,  5923,  5938,  5944,  5962,  5967,  5972,  5977,  5982,  5987,
    5993,  5992,  6018,  6019,  6020,  6025,  6030,  6035,  6037,  6039,
    6041,  6047,  6052,  6057,  6065,  6073,  6079,  6085,  6093,  6101,
    6118,  6139,  6150,  6151,  6152,  6153,  6154,  6155,  6156,  6160,
    6161,  6162,  6166,  6167,  6168,  6169,  6174,  6181,  6182,  6186,
    6187,  6188,  6192,  6194,  6200,  6199,  6207,  6206,  6214,  6213,
    6221,  6220,  6230,  6227,  6238,  6236,  6245,  6244,  6282,  6289,
    6290,  6294,  6307,  6308,  6312,  6317,  6316,  6352,  6352,  6355,
    6354,  6364,  6365,  6369,  6370,  6375,  6377,  6376,  6385,  6386,
    6391,  6394,  6398,  6402,  6409,  6410,  6414,  6415,  6419,  6425,
    6431,  6432,  6440,  6439,  6458,  6464,  6465,  6475,  6487,  6487,
    6490,  6491,  6499,  6500,  6501,  6502,  6503,  6507,  6508,  6509,
    6525,  6529,  6533,  6537,  6539,  6541,  6547,  6551,  6556,  6561,
    6565,  6570,  6578,  6596,  6597,  6604,  6625,  6636,  6641,  6646,
    6657,  6662,  6667,  6672,  6674,  6676,  6678,  6680,  6682,  6684,
    6692,  6694,  6699,  6700,  6701,  6702,  6703,  6704,  6705,  6706,
    6710,  6714,  6715,  6719,  6720,  6724,  6725,  6726,  6727,  6728,
    6732,  6733,  6734,  6735,  6736,  6740,  6746,  6747,  6752,  6754,
    6761,  6762,  6763,  6767,  6771,  6772,  6773,  6774,  6775,  6776,
    6780,  6781,  6782,  6783,  6786,  6787,  6790,  6791,  6794,  6795,
    6799,  6800,  6804,  6805,  6809,  6810,  6811,  6818,  6819,  6825,
    6832,  6837,  6841,  6842,  6846,  6847,  6853,  6854,  6862,  6870,
    6876,  6885,  6899,  6900,  6904,  6909,  6913,  6914,  6918,  6919,
    6923,  6929,  6933,  6934,  6938,  6946,  6947,  6951,  6952,  6956,
    6957,  6961,  6962,  6963,  6971,  6972,  6973,  6974,  6975,  6979,
    6980,  6985,  6984,  6997,  6998,  7002,  7005,  7006,  7007,  7008,
    7012,  7020,  7027,  7028,  7032,  7042,  7043,  7047,  7048,  7051,
    7053,  7057,  7069,  7070,  7074,  7081,  7094,  7095,  7097,  7099,
    7105,  7110,  7116,  7122,  7129,  7139,  7140,  7141,  7142,  7143,
    7147,  7148,  7152,  7153,  7157,  7158,  7162,  7163,  7164,  7168,
    7169,  7173,  7177,  7189,  7190,  7194,  7195,  7199,  7200,  7204,
    7205,  7209,  7210,  7214,  7215,  7219,  7220,  7224,  7225,  7226,
    7229,  7231,  7236,  7238,  7240,  7248,  7256,  7262,  7270,  7271,
    7275,  7279,  7280,  7290,  7291,  7292,  7296,  7300,  7307,  7313,
    7325,  7326,  7330,  7331,  7335,  7337,  7346,  7360,  7345,  7380,
    7379,  7393,  7402,  7401,  7417,  7416,  7432,  7431,  7444,  7438,
    7451,  7450,  7485,  7490,  7495,  7500,  7506,  7505,  7512,  7519,
    7529,  7518,  7548,  7549,  7550,  7551,  7555,  7556,  7568,  7569,
    7573,  7574,  7577,  7579,  7587,  7595,  7597,  7599,  7600,  7608,
    7609,  7615,  7624,  7622,  7635,  7648,  7647,  7660,  7658,  7671,
    7678,  7688,  7689,  7716,  7723,  7727,  7733,  7731,  7750,  7752,
    7757,  7765,  7764,  7780,  7784,  7783,  7795,  7796,  7800,  7816,
    7817,  7821,  7829,  7834,  7839,  7844,  7848,  7853,  7861,  7869,
    7879,  7890,  7900,  7911,  7921,  7927,  7933,  7942,  7952,  7968,
    7982,  7992,  7996,  8001,  8002,  8005,  8007,  8008,  8009,  8010,
    8013,  8018,  8026,  8031,  8039,  8040,  8044,  8045,  8049,  8049,
    8052,  8054,  8058,  8059,  8063,  8064,  8072,  8073,  8074,  8078,
    8079,  8084,  8093,  8094,  8095,  8096,  8101,  8100,  8110,  8109,
    8117,  8124,  8134,  8151,  8154,  8161,  8165,  8172,  8176,  8180,
    8187,  8187,  8193,  8194,  8198,  8199,  8200,  8204,  8205,  8214,
    8221,  8222,  8227,  8226,  8238,  8239,  8240,  8244,  8246,  8245,
    8252,  8251,  8272,  8273,  8277,  8278,  8282,  8283,  8284,  8288,
    8289,  8294,  8293,  8314,  8315,  8319,  8324,  8325,  8332,  8334,
    8338,  8340,  8339,  8351,  8353,  8352,  8365,  8366,  8371,  8380,
    8381,  8382,  8386,  8393,  8403,  8411,  8413,  8412,  8418,  8417,
    8440,  8441,  8445,  8446,  8450,  8451,  8452,  8453,  8454,  8455,
    8459,  8460,  8465,  8464,  8485,  8486,  8487,  8492,  8491,  8497,
    8504,  8510,  8519,  8520,  8524,  8538,  8537,  8550,  8551,  8555,
    8556,  8560,  8570,  8580,  8581,  8586,  8585,  8596,  8597,  8601,
    8602,  8606,  8616,  8627,  8626,  8634,  8634,  8643,  8644,  8649,
    8650,  8659,  8668,  8669,  8670,  8671,  8672,  8673,  8674,  8678,
    8679,  8680,  8681,  8682,  8683,  8684,  8688,  8688,  8696,  8696,
    8708,  8712,  8712,  8724,  8728,  8728,  8740,  8745,  8745,  8754,
    8754,  8766,  8772,  8770,  8777,  8789,  8787,  8794,  8804,  8809,
    8808,  8813,  8817,  8828,  8829,  8833,  8834,  8838,  8839,  8840,
    8844,  8845,  8846,  8850,  8851,  8852,  8853,  8854,  8858,  8858,
    8876,  8883,  8885,  8889,  8893,  8899,  8906,  8908,  8916,  8917,
    8921,  8922,  8939,  8958,  8960,  8967,  8978,  8979,  8980,  8994,
    8999,  9021,  9027,  9033,  9039,  9040,  9041,  9042,  9043,  9047,
    9048,  9049,  9053,  9054,  9055,  9059,  9060,  9065,  9116,  9123,
    9166,  9172,  9178,  9184,  9190,  9196,  9202,  9208,  9212,  9218,
    9224,  9230,  9236,  9242,  9246,  9252,  9261,  9267,  9275,  9281,
    9290,  9296,  9304,  9314,  9321,  9329,  9335,  9344,  9348,  9354,
    9360,  9366,  9372,  9378,  9384,  9390,  9396,  9402,  9408,  9414,
    9420,  9426,  9432,  9436,  9437,  9441,  9442,  9446,  9447,  9451,
    9452,  9456,  9457,  9458,  9459,  9460,  9461,  9465,  9466,  9471,
    9475,  9479,  9480,  9481,  9485,  9486,  9487,  9488,  9489,  9490,
    9494,  9495,  9496,  9501,  9500,  9506,  9514,  9536,  9543,  9579,
    9580,  9581,  9582,  9583,  9584,  9585,  9586,  9587,  9588,  9589,
    9590,  9597,  9603,  9627,  9637,  9642,  9647,  9653,  9658,  9664,
    9675,  9682,  9687,  9692,  9697,  9702,  9707,  9712,  9720,  9721,
    9732,  9733,  9739,  9745,  9749,  9755,  9761,  9767,  9783,  9789,
    9795,  9804,  9813,  9819,  9825,  9831,  9837,  9851,  9862,  9868,
    9874,  9880,  9886,  9892,  9899,  9906,  9912,  9918,  9924,  9930,
    9936,  9942,  9948,  9954,  9960,  9968,  9989,  9996, 10002, 10009,
   10016, 10023, 10030, 10036, 10042, 10048, 10054, 10060, 10067, 10073,
   10080, 10086, 10091, 10096, 10101, 10106, 10124, 10130, 10136, 10143,
   10150, 10158, 10165, 10172, 10179, 10186, 10203, 10209, 10215, 10221,
   10227, 10234, 10240, 10246, 10255, 10266, 10273, 10279, 10285, 10292,
   10300, 10306, 10312, 10317, 10323, 10331, 10337, 10343, 10349, 10355,
   10363, 10375, 10382, 10397, 10403, 10410, 10417, 10424, 10431, 10438,
   10442, 10449, 10467, 10466, 10538, 10576, 10578, 10583, 10584, 10588,
   10589, 10593, 10594, 10598, 10605, 10613, 10640, 10646, 10652, 10658,
   10664, 10670, 10679, 10686, 10688, 10685, 10695, 10706, 10712, 10718,
   10724, 10730, 10736, 10742, 10748, 10754, 10761, 10760, 10785, 10794,
   10812, 10814, 10821, 10828, 10835, 10842, 10849, 10856, 10863, 10870,
   10877, 10884, 10895, 10902, 10913, 10924, 10944, 10943, 10949, 10966,
   10972, 10981, 10987, 10997, 10996, 11008, 11018, 11026, 11042, 11043,
   11048, 11053, 11056, 11058, 11062, 11064, 11069, 11070, 11074, 11078,
   11085, 11092, 11099, 11112, 11111, 11128, 11131, 11130, 11134, 11139,
   11140, 11144, 11145, 11146, 11147, 11148, 11149, 11150, 11154, 11155,
   11156, 11160, 11161, 11165, 11172, 11180, 11181, 11185, 11192, 11200,
   11208, 11217, 11218, 11228, 11229, 11241, 11252, 11253, 11259, 11260,
   11280, 11284, 11282, 11300, 11298, 11309, 11319, 11317, 11335, 11334,
   11344, 11355, 11353, 11372, 11371, 11382, 11394, 11395, 11396, 11400,
   11401, 11409, 11410, 11414, 11429, 11430, 11434, 11434, 11470, 11531,
   11571, 11572, 11581, 11580, 11589, 11590, 11591, 11595, 11596, 11597,
   11597, 11601, 11607, 11615, 11615, 11630, 11647, 11648, 11656, 11666,
   11665, 11700, 11717, 11700, 11724, 11728, 11737, 11748, 11749, 11754,
   11757, 11758, 11759, 11763, 11764, 11769, 11768, 11774, 11773, 11781,
   11782, 11785, 11787, 11787, 11791, 11791, 11796, 11797, 11801, 11803,
   11808, 11809, 11813, 11824, 11837, 11838, 11839, 11840, 11841, 11842,
   11843, 11844, 11845, 11846, 11847, 11848, 11852, 11853, 11854, 11855,
   11856, 11857, 11858, 11859, 11860, 11864, 11865, 11866, 11867, 11870,
   11872, 11873, 11877, 11878, 11886, 11888, 11892, 11894, 11893, 11907,
   11910, 11909, 11924, 11930, 11944, 11946, 11950, 11952, 11957, 11958,
   11975, 11998, 11999, 12005, 12006, 12010, 12023, 12022, 12030, 12031,
   12039, 12040, 12044, 12045, 12049, 12050, 12064, 12065, 12069, 12079,
   12088, 12095, 12102, 12112, 12113, 12120, 12130, 12131, 12133, 12135,
   12137, 12146, 12150, 12151, 12155, 12167, 12169, 12174, 12173, 12223,
   12225, 12230, 12231, 12232, 12236, 12237, 12241, 12254, 12261, 12266,
   12273, 12280, 12287, 12297, 12305, 12313, 12317, 12323, 12329, 12338,
   12346, 12350, 12357, 12358, 12361, 12363, 12367, 12368, 12371, 12372,
   12373, 12374, 12375, 12376, 12380, 12381, 12382, 12383, 12384, 12388,
   12389, 12390, 12391, 12395, 12396, 12397, 12398, 12399, 12403, 12404,
   12405, 12406, 12407, 12411, 12416, 12417, 12421, 12422, 12426, 12427,
   12428, 12433, 12432, 12466, 12467, 12471, 12472, 12476, 12486, 12486,
   12497, 12498, 12501, 12521, 12525, 12536, 12544, 12549, 12559, 12548,
   12561, 12574, 12586, 12585, 12603, 12602, 12611, 12628, 12634, 12648,
   12663, 12671, 12675, 12680, 12679, 12688, 12693, 12699, 12704, 12709,
   12716, 12714, 12728, 12729, 12733, 12744, 12757, 12758, 12762, 12774,
   12778, 12787, 12790, 12797, 12798, 12806, 12814, 12805, 12824, 12831,
   12823, 12841, 12849, 12850, 12858, 12862, 12863, 12874, 12875, 12879,
   12888, 12889, 12890, 12892, 12891, 12902, 12904, 12908, 12909, 12910,
   12914, 12915, 12919, 12920, 12924, 12934, 12935, 12939, 12940, 12944,
   12945, 12949, 12950, 12955, 12954, 12968, 12969, 12973, 12978, 12986,
   12987, 12993, 13001, 13003, 13005, 13003, 13018, 13026, 13017, 13048,
   13049, 13053, 13061, 13062, 13066, 13076, 13077, 13084, 13083, 13099,
   13110, 13098, 13113, 13112, 13124, 13123, 13136, 13138, 13142, 13143,
   13147, 13160, 13176, 13177, 13181, 13182, 13186, 13187, 13188, 13193,
   13192, 13213, 13215, 13218, 13220, 13223, 13224, 13227, 13231, 13235,
   13239, 13243, 13247, 13251, 13255, 13259, 13267, 13270, 13280, 13279,
   13295, 13302, 13310, 13318, 13326, 13334, 13342, 13349, 13356, 13362,
   13364, 13366, 13375, 13379, 13384, 13383, 13390, 13389, 13394, 13403,
   13410, 13415, 13420, 13425, 13430, 13435, 13437, 13439, 13441, 13448,
   13456, 13458, 13466, 13473, 13480, 13487, 13493, 13498, 13506, 13514,
   13522, 13526, 13531, 13538, 13543, 13550, 13557, 13563, 13570, 13575,
   13582, 13589, 13594, 13599, 13604, 13611, 13633, 13635, 13637, 13642,
   13643, 13646, 13648, 13652, 13653, 13657, 13658, 13662, 13663, 13667,
   13668, 13672, 13673, 13677, 13678, 13686, 13698, 13697, 13713, 13712,
   13722, 13723, 13724, 13725, 13726, 13730, 13731, 13735, 13742, 13743,
   13744, 13748, 13749, 13761, 13762, 13763, 13778, 13777, 13790, 13789,
   13801, 13805, 13806, 13821, 13824, 13823, 13835, 13836, 13841, 13843,
   13845, 13847, 13849, 13851, 13859, 13861, 13863, 13865, 13870, 13872,
   13880, 13882, 13884, 13886, 13902, 13903, 13907, 13908, 13911, 13913,
   13914, 13918, 13925, 13926, 13930, 13929, 13939, 13940, 13944, 13944,
   13948, 13947, 13953, 13957, 13958, 13962, 13963, 13971, 13970, 13981,
   13985, 13989, 14002, 14001, 14016, 14017, 14018, 14021, 14022, 14023,
   14024, 14032, 14036, 14045, 14051, 14063, 14074, 14084, 14094, 14062,
   14102, 14103, 14107, 14108, 14112, 14113, 14121, 14125, 14126, 14127,
   14130, 14132, 14136, 14137, 14141, 14146, 14153, 14158, 14165, 14167,
   14171, 14172, 14176, 14181, 14189, 14190, 14193, 14195, 14203, 14204,
   14208, 14209, 14210, 14214, 14216, 14221, 14222, 14231, 14232, 14236,
   14237, 14241, 14254, 14259, 14264, 14269, 14277, 14285, 14290, 14303,
   14312, 14328, 14338, 14339, 14347, 14348, 14349, 14350, 14364, 14370,
   14376, 14382, 14388, 14394, 14412, 14422, 14432, 14438, 14447, 14459,
   14465, 14471, 14481, 14482, 14491, 14490, 14509, 14510, 14515, 14516,
   14523, 14521, 14542, 14543, 14549, 14554, 14563, 14578, 14579, 14583,
   14592, 14607, 14611, 14619, 14620, 14630, 14635, 14639, 14644, 14648,
   14653, 14661, 14662, 14672, 14679, 14683, 14689, 14695, 14705, 14711,
   14720, 14730, 14731, 14759, 14776, 14793, 14810, 14811, 14821, 14826,
   14837, 14842, 14852, 14853, 14863, 14864, 14865, 14869, 14882, 14912,
   14922, 14922, 14924, 14934, 14935, 14936, 14937, 14938, 14939, 14940,
   14941, 14942, 14943, 14944, 14945, 14946, 14947, 14948, 14949, 14950,
   14951, 14952, 14953, 14954, 14955, 14956, 14957, 14958, 14959, 14960,
   14961, 14962, 14963, 14964, 14965, 14966, 14967, 14968, 14969, 14970,
   14971, 14972, 14973, 14974, 14975, 14976, 14977, 14978, 14979, 14980,
   14981, 14982, 14983, 14984, 14985, 14986, 14987, 14988, 14989, 14990,
   14991, 14992, 14993, 14994, 14999, 14999, 15008, 15009, 15021, 15022,
   15023, 15024, 15025, 15026, 15027, 15028, 15029, 15030, 15031, 15032,
   15041, 15042, 15043, 15044, 15045, 15046, 15047, 15048, 15049, 15050,
   15051, 15052, 15053, 15054, 15055, 15056, 15057, 15058, 15059, 15060,
   15061, 15062, 15063, 15064, 15065, 15066, 15067, 15068, 15069, 15070,
   15075, 15076, 15077, 15078, 15079, 15080, 15081, 15082, 15083, 15084,
   15085, 15086, 15087, 15088, 15089, 15090, 15091, 15092, 15093, 15094,
   15095, 15096, 15097, 15098, 15099, 15100, 15101, 15102, 15103, 15104,
   15105, 15106, 15107, 15108, 15109, 15110, 15111, 15112, 15113, 15114,
   15115, 15116, 15117, 15118, 15119, 15120, 15125, 15126, 15127, 15128,
   15129, 15130, 15131, 15132, 15133, 15134, 15135, 15136, 15137, 15138,
   15139, 15140, 15141, 15142, 15143, 15144, 15145, 15146, 15147, 15148,
   15149, 15150, 15151, 15152, 15153, 15154, 15155, 15156, 15157, 15158,
   15159, 15160, 15161, 15162, 15163, 15164, 15165, 15166, 15167, 15168,
   15169, 15170, 15171, 15172, 15173, 15174, 15175, 15176, 15177, 15178,
   15179, 15180, 15181, 15182, 15183, 15184, 15185, 15186, 15187, 15188,
   15189, 15190, 15191, 15192, 15193, 15194, 15195, 15196, 15197, 15198,
   15199, 15200, 15201, 15202, 15203, 15204, 15205, 15206, 15207, 15208,
   15209, 15210, 15211, 15212, 15213, 15214, 15215, 15216, 15217, 15218,
   15219, 15220, 15221, 15222, 15223, 15224, 15225, 15226, 15227, 15228,
   15229, 15230, 15231, 15232, 15233, 15234, 15235, 15236, 15237, 15238,
   15239, 15240, 15241, 15242, 15243, 15244, 15245, 15246, 15247, 15248,
   15249, 15250, 15251, 15252, 15253, 15254, 15255, 15256, 15257, 15258,
   15259, 15260, 15261, 15262, 15263, 15264, 15265, 15266, 15267, 15268,
   15269, 15270, 15271, 15272, 15273, 15274, 15275, 15276, 15277, 15278,
   15279, 15280, 15281, 15282, 15283, 15284, 15285, 15286, 15287, 15288,
   15289, 15290, 15291, 15292, 15293, 15294, 15295, 15296, 15297, 15298,
   15299, 15300, 15301, 15302, 15303, 15304, 15305, 15306, 15307, 15308,
   15309, 15310, 15311, 15312, 15313, 15314, 15315, 15316, 15317, 15318,
   15319, 15320, 15321, 15322, 15323, 15324, 15325, 15326, 15327, 15328,
   15329, 15330, 15331, 15332, 15333, 15334, 15335, 15336, 15337, 15338,
   15339, 15340, 15341, 15342, 15343, 15344, 15345, 15346, 15347, 15348,
   15349, 15350, 15351, 15352, 15353, 15354, 15355, 15356, 15357, 15358,
   15359, 15360, 15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368,
   15369, 15370, 15371, 15372, 15373, 15374, 15375, 15376, 15377, 15378,
   15379, 15380, 15381, 15382, 15383, 15384, 15385, 15386, 15387, 15388,
   15400, 15399, 15409, 15413, 15408, 15430, 15431, 15437, 15436, 15443,
   15442, 15452, 15451, 15462, 15461, 15467, 15475, 15477, 15482, 15482,
   15491, 15490, 15504, 15503, 15508, 15512, 15513, 15514, 15518, 15519,
   15520, 15521, 15525, 15526, 15527, 15528, 15533, 15557, 15564, 15570,
   15577, 15582, 15594, 15608, 15619, 15638, 15655, 15667, 15675, 15691,
   15696, 15701, 15709, 15710, 15711, 15712, 15716, 15734, 15752, 15753,
   15757, 15758, 15759, 15760, 15764, 15778, 15782, 15783, 15784, 15794,
   15795, 15796, 15802, 15808, 15820, 15819, 15833, 15834, 15840, 15849,
   15850, 15854, 15855, 15859, 15874, 15875, 15876, 15881, 15882, 15887,
   15886, 15903, 15912, 15922, 15921, 15952, 15953, 15957, 15958, 15962,
   15963, 15964, 15965, 15967, 15966, 15979, 15980, 15981, 15982, 15983,
   15989, 15994, 16000, 16005, 16010, 16014, 16021, 16030, 16032, 16037,
   16042, 16049, 16055, 16061, 16068, 16080, 16081, 16084, 16085, 16088,
   16093, 16101, 16111, 16130, 16133, 16135, 16139, 16140, 16147, 16149,
   16153, 16154, 16159, 16158, 16162, 16161, 16165, 16164, 16168, 16167,
   16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179,
   16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189,
   16190, 16191, 16192, 16193, 16194, 16195, 16199, 16200, 16204, 16205,
   16209, 16216, 16223, 16233, 16244, 16253, 16262, 16274, 16279, 16287,
   16292, 16300, 16305, 16312, 16312, 16313, 16313, 16316, 16323, 16328,
   16334, 16340, 16346, 16350, 16354, 16355, 16359, 16387, 16389, 16393,
   16397, 16401, 16408, 16414, 16420, 16426, 16432, 16441, 16442, 16446,
   16447, 16452, 16453, 16457, 16458, 16462, 16463, 16467, 16468, 16473,
   16472, 16482, 16491, 16492, 16496, 16497, 16502, 16503, 16504, 16509,
   16510, 16511, 16515, 16527, 16536, 16542, 16551, 16560, 16573, 16575,
   16577, 16582, 16583, 16588, 16587, 16604, 16603, 16615, 16615, 16636,
   16637, 16644, 16652, 16653, 16654, 16658, 16659, 16664, 16663, 16692,
   16699, 16700, 16704, 16705, 16709, 16710, 16711, 16716, 16724, 16745,
   16770, 16772, 16776, 16777, 16781, 16782, 16790, 16791, 16792, 16793,
   16799, 16805, 16815, 16816, 16821, 16834, 16850, 16851, 16852, 16856,
   16857, 16861, 16862, 16867, 16868, 16872, 16878, 16887, 16887, 16914,
   16915, 16916, 16917, 16918, 16919, 16920, 16924, 16925, 16926, 16927,
   16937, 16939, 16945, 16951, 16961, 16970, 16976, 16981, 16985, 16959,
   17037, 17055, 17054, 17071, 17080, 17069, 17096, 17104, 17095, 17118,
   17122, 17126, 17130, 17134, 17138, 17146, 17147, 17162, 17169, 17176,
   17186, 17187, 17191, 17192, 17193, 17197, 17198, 17203, 17205, 17204,
   17210, 17211, 17215, 17222, 17232, 17238, 17249
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS", "ASC",
  "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR",
  "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM",
  "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM",
  "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM",
  "CHECKPOINT_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "CLOB", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_ADD_SYM",
  "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM",
  "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM",
  "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM",
  "COMPRESSED_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONTRIBUTORS_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CUME_DIST_SYM",
  "CURDATE", "CURRENT_SYM", "CURRENT_USER", "CURRENT_ROLE",
  "CURRENT_POS_SYM", "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME",
  "CYCLE_SYM", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME", "DATE_ADD_INTERVAL", "DATE_FORMAT_SYM", "DATE_SUB_INTERVAL",
  "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DECODE_SYM", "DEFAULT", "DEFINER_SYM",
  "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_DOMAIN_ID_SYM",
  "DELETE_SYM", "DENSE_RANK_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD", "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DO_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ELSIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXAMINED_SYM", "EXCEPT_SYM",
  "EXCLUDE_SYM", "EXECUTE_SYM", "EXCEPTION_SYM", "EXISTS", "EXIT_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM", "FETCH_SYM",
  "FILE_SYM", "FIRST_VALUE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM",
  "FOREIGN", "FOR_SYM", "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL",
  "FULLTEXT_SYM", "FUNCTION_SYM", "GE", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GOTO_SYM", "GRANT", "GRANTS", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HANDLER_SYM", "HARD_SYM",
  "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM", "HEX_STRING",
  "HIGH_PRIORITY", "INVISIBLE_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM",
  "ID_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES", "INDEX_SYM",
  "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IO_SYM", "IPC_SYM", "IS", "ISOLATION", "ISOPEN_SYM",
  "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "JSON_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LAST_VALUE", "LASTVAL_SYM", "LE", "LEADING", "LEAVES", "LEAVE_SYM",
  "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM",
  "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_USE_GTID_SYM", "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_SYM", "MAX_UPDATES_PER_HOUR",
  "MAX_STATEMENT_TIME_SYM", "MAX_USER_CONNECTIONS_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MINVALUE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM",
  "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING",
  "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM", "MYSQL_SYM",
  "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL",
  "NCHAR_STRING", "NCHAR_SYM", "NE", "NEG", "NEW_SYM", "NEXT_SYM",
  "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOTFOUND_SYM", "NOW_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NTILE_SYM", "NULL_SYM", "NUM", "NUMBER_SYM",
  "NUMERIC_SYM", "NTH_VALUE_SYM", "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM",
  "OLD_PASSWORD_SYM", "ON", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OTHERS_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OVER_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM",
  "PAGE_CHECKSUM_SYM", "PARAM_MARKER", "PARSER_SYM", "PARSE_VCOL_EXPR_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD_SYM", "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM",
  "PERCENTILE_DISC_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM",
  "PLUGIN_SYM", "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM",
  "PRECEDES_SYM", "PRECEDING_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RAISE_SYM", "RANGE_SYM", "RANK_SYM", "RAW", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "RECURSIVE_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE", "REPLICATION", "REQUIRE_SYM",
  "RESET_SYM", "RESTART_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM",
  "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNING_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REUSE_SYM", "REVERSE_SYM", "REVOKE",
  "RIGHT", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROWS_SYM", "ROWTYPE_SYM", "ROW_COUNT_SYM",
  "ROW_FORMAT_SYM", "ROW_NUMBER_SYM", "RTREE_SYM", "SAVEPOINT_SYM",
  "SCHEDULE_SYM", "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM",
  "SEPARATOR_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SETVAL_SYM",
  "SET_VAR", "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SMALLINT", "SNAPSHOT_SYM", "SOCKET_SYM",
  "SOFT_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "REF_SYSTEM_ID_SYM", "SSL_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATEMENT_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STORED_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIGGER_SYM",
  "TRIM", "TRUE_SYM", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "ULONGLONG_NUM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM",
  "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER_SYM", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUES_IN_SYM", "VALUES_LESS_SYM", "VALUE_SYM", "VARBINARY",
  "VARCHAR", "VARCHAR2", "VARIABLES", "VARIANCE_SYM", "VARYING",
  "VAR_SAMP_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE",
  "WINDOW_SYM", "WHILE_SYM", "WITH", "WITHIN", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "':'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23",
  "sf_tail_not_aggregate", "sf_tail_aggregate", "create_function_tail",
  "create_aggregate_function_tail", "opt_sequence", "sequence_defs",
  "sequence_def", "server_def", "$@24", "server_options_list",
  "server_option", "event_tail", "$@25", "ev_schedule_time", "$@26",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@27",
  "clear_privileges", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@28",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_param_name", "sp_param_name_and_type",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_parenthesized_fdparam_list", "$@29", "sp_parenthesized_pdparam_list",
  "$@30", "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "sp_decl_body",
  "$@31", "$@32", "opt_parenthesized_cursor_formal_parameters",
  "sp_cursor_stmt_lex", "sp_cursor_stmt", "$@33", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@34",
  "sp_proc_stmt_statement", "$@35", "sp_proc_stmt_return", "$@36",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "assignment_source_lex",
  "assignment_source_expr", "$@37", "for_loop_bound_expr", "$@38",
  "cursor_actual_parameters", "opt_parenthesized_cursor_actual_parameters",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@39", "$@40", "$@41",
  "sp_elseifs", "case_stmt_specification", "$@42", "case_stmt_body",
  "$@43", "$@44", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@45", "$@46", "searched_when_clause", "$@47",
  "$@48", "else_clause_opt", "sp_label", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@49", "sp_unlabeled_block", "$@50",
  "sp_unlabeled_block_not_atomic", "$@51", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "while_body", "$@52", "repeat_body", "$@53", "pop_sp_loop_label",
  "sp_labeled_control", "$@54", "$@55", "$@56", "$@57", "$@58", "$@59",
  "sp_unlabeled_control", "$@60", "$@61", "$@62", "$@63", "$@64",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@65", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@66", "$@67", "$@68", "create_like", "opt_create_select",
  "create_select_query_expression", "$@69", "$@70", "$@71",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@72",
  "have_partitioning", "partition_entry", "$@73", "partition", "$@74",
  "part_type_def", "$@75", "$@76", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@77", "$@78", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@79", "part_name",
  "opt_part_values", "$@80", "$@81", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@82", "$@83",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@84", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select_query_specification", "create_select_part2", "$@85",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@86", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@87", "$@88", "$@89",
  "$@90", "$@91", "$@92", "$@93", "constraint_def", "opt_check_constraint",
  "check_constraint", "opt_constraint", "constraint", "field_spec", "@94",
  "field_type_or_serial", "$@95", "$@96", "opt_serial_attribute",
  "opt_serial_attribute_list", "field_def", "$@97", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@98", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "field_type_numeric", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1", "opt_precision", "opt_attribute",
  "opt_attribute_list", "attribute", "opt_compression_method",
  "serial_attribute", "type_with_opt_collate", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "opt_binary", "opt_bin_mod",
  "ws_nweights", "$@99", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "$@100", "$@101", "$@102", "$@103", "$@104",
  "$@105", "$@106", "$@107", "$@108", "$@109", "$@110",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@111", "$@112", "$@113",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@114", "add_part_extra", "reorg_partition_rule", "$@115",
  "reorg_parts_rule", "$@116", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@117", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@118", "$@119",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@120", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@121", "opt_checksum_type", "repair_table_or_view", "$@122", "repair",
  "$@123", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@124", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@125",
  "persistent_index_stat_spec", "$@126", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@127", "check", "$@128", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@129", "opt_no_write_to_binlog", "rename", "$@130", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@131",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@132",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@133", "cache_keys_spec",
  "$@134", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "select_init", "union_list_part2", "select_paren", "$@135", "$@136",
  "select_paren_union_query_term", "$@137", "select_paren_view", "$@138",
  "select_paren_derived", "$@139", "$@140", "select_init3", "$@141",
  "select_init3_union_query_term", "$@142", "select_init3_view", "$@143",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@144", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "$@145", "dyncall_create_element", "dyncall_create_list",
  "column_default_non_parenthesized_expr", "simple_expr",
  "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "@146", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "sum_expr", "$@147", "$@148", "$@149", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@150", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@151",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause",
  "glimit_clause_init", "glimit_clause", "glimit_options", "in_sum_expr",
  "$@152", "cast_type", "$@153", "cast_type_numeric", "cast_type_temporal",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list",
  "when_list", "when_list_opt_else", "table_ref", "join_table_list",
  "esc_table_ref", "derived_table_list", "join_table", "$@154", "$@155",
  "$@156", "$@157", "$@158", "$@159", "inner_join", "normal_join",
  "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@160", "table_primary_derived",
  "select_derived_union", "$@161", "union_list_derived_part2", "$@162",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@163", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@164", "select_derived2", "$@165", "$@166", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@167",
  "$@168", "index_hints_list", "opt_index_hints_list", "$@169",
  "opt_key_definition", "$@170", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@171", "opt_having_clause", "$@172", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@173",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@174", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@175", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@176", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@177",
  "$@178", "do", "$@179", "drop", "$@180", "$@181", "$@182", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@183", "$@184", "replace",
  "$@185", "$@186", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@187", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@188", "opt_values", "values",
  "expr_or_default", "opt_insert_update", "$@189", "$@190", "update",
  "$@191", "$@192", "update_list", "update_elem", "insert_update_list",
  "insert_update_elem", "opt_low_priority", "delete", "$@193",
  "single_multi", "$@194", "$@195", "$@196", "$@197",
  "opt_select_expressions", "table_wild_list", "table_wild_one",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate",
  "$@198", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@199", "show_param",
  "$@200", "$@201", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@202", "$@203", "explainable_command",
  "describe_command", "analyze_stmt_command", "opt_extended_describe",
  "opt_format_json", "opt_describe_column", "flush", "$@204",
  "flush_options", "$@205", "opt_flush_lock", "flush_lock", "$@206",
  "flush_options_list", "flush_option", "opt_table_list",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@207", "reset_options",
  "reset_option", "$@208", "$@209", "slave_reset_options",
  "master_reset_options", "purge", "$@210", "purge_options",
  "purge_option", "kill", "$@211", "kill_type", "kill_option", "kill_expr",
  "shutdown", "use", "load", "$@212", "$@213", "$@214", "$@215",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "opt_with_clause",
  "with_clause", "$@216", "opt_recursive", "with_list",
  "with_list_element", "$@217", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild", "order_ident",
  "simple_ident", "simple_ident_nospvar", "simple_ident_q",
  "simple_ident_q2", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident_table_alias",
  "ident", "ident_with_tok_start", "label_ident", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_alias", "keyword",
  "keyword_sp", "keyword_sp_verb_clause", "keyword_sp_data_type",
  "keyword_sp_not_data_type", "set", "$@218", "$@219", "$@220",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@221", "$@222", "$@223",
  "start_option_value_list_following_option_type", "$@224",
  "option_value_list_continued", "option_value_list", "$@225", "$@226",
  "option_value", "$@227", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "opt_for_user", "text_or_password", "set_expr_or_default", "lock",
  "$@228", "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@229", "handler", "$@230",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@231", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@232", "$@233", "$@234",
  "$@235", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option", "begin",
  "$@236", "compound_statement", "opt_not", "opt_work", "opt_chain",
  "opt_release", "commit", "rollback", "savepoint", "release",
  "unit_type_decl", "union_clause", "union_list", "$@237",
  "union_list_view", "$@238", "union_order_or_limit", "$@239",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@240", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@241", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@242", "$@243",
  "$@244", "$@245", "$@246", "udf_tail", "sf_return_type", "$@247",
  "sf_tail", "$@248", "$@249", "sp_tail", "$@250", "$@251", "xa",
  "opt_format_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "$@252", "opt_migrate", "install",
  "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,    61,
      62,    60,   124,    38,    45,    43,    42,    47,    37,    94,
     126,    40,    41,    44,    33,   123,   125,    59,    46,    64,
      58
};
# endif

#define YYPACT_NINF -4811

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4811)))

#define YYTABLE_NINF -3160

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7053,  2952,  1670,   901,  -192,   219, 69478, -4811,   129,  1952,
   -4811,  -200,    -2, -4811, -4811, -4811, -4811, -4811,  3462, -4811,
   70178,   100, -4811,  1065, -4811, 37953, -4811, -4811, -4811,  1363,
   -4811,   136,  1952, -4811,   100, -4811, -4811, 69478, -4811,   688,
    2029,   100, -4811, -4811, -4811, 61778, -4811,  -200, 69478,   669,
   -4811, -4811, 61778,   204,   218,   829,  1387, -4811, -4811, 69478,
   -4811,   972,  3028, -4811,  1676,  1559, -4811, -4811,  1319, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811,  3188, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, 38658, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  1226, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  1085, 69478,  1148, 69478,  1709,
    1697, 69478,  1788, 58978, 69478, -4811,  1345,  1217, -4811, -4811,
    1955,  1451, -4811, -4811,  1952,   913, -4811, -4811,  2111,  -200,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  1437,
   -4811, -4811, -4811, -4811, -4811, -4811,  1486,  -192, -4811, -4811,
   -4811,  -173, -4811,  2163,  1974,  1705, 69478,  1333, 17267,  1788,
    1788,  1788,  1970,  2033,  1788,  1788,  1788, 69478, -4811,  1788,
    1788,  1788,  1801,    92, -4811, -4811, 69478, -4811,  2094, 47078,
   69478,  1857,  1045,  -111, 58978, -4811,  1710, 69478,  -192,    42,
   -4811,  2053, -4811, -4811, -4811, 80678,  1952, 17267,  2292,  2197,
    1003, 69478, -4811, -4811, -4811, 80678,   234,  1136,  1747, -4811,
   -4811,  1878, -4811, 47778,   245, -4811, -4811, 25950,  7639,  1878,
    1875,  -192,   632,  1884,  -192, -4811, -4811, 69478,  -192,  1952,
    2137, -4811, 17267, -4811, -4811, -4811,   216,   216,   216,  2248,
     216, -4811,   216, -4811, -4811,  1771, 69478,  2214, -4811,  2214,
   -4811, -4811,  2214,  1942,  2246,  2260,  2272,   -67,   924,   349,
    1479,  1955,  1400,  1451,  2242, -4811, -4811, -4811,  1823, -4811,
   -4811,   615, -4811,  1116,  1317, -4811,  1912, 51978, -4811, -4811,
   69478, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
    1904, -4811,  1979,   140, -4811,  2071,  2433,  1937, -4811,  2044,
   58978, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   37953,  1923, 69478, -4811,  2504, 17267,  1486, -4811,  2042, -4811,
   -4811, 37953, -4811, -4811, 37953,   270,    17, 69478, -4811, -4811,
    2679, -4811, -4811, -4811, 62478,  1333,  1992,  2017,  2055, 22342,
   -4811,  2075,  2085,  2092, 13642,  2099,  2115,  2122,  2127,  2133,
    2138,  2142,  2145,  2149,  2155,  2171,  2188,  2190,  2206,  2217,
    2217,  2217,  2227,  2230,  2238,  2240,  2245,  -199,  2251, -4811,
    2253,  2256,  2259,  2266,  2276, -4811,  2278, -4811,  2294,  2315,
    2322,  2324,  2328,  2333, -4811, -4811,  2338,  2348,  2354, 17992,
    2363,  2366,  2371,  2376, -4811, 34423,  2378,  2380,  2386,  2388,
    2391,  2404,  2407,  2409,  2418,  2459, -4811,  2025,  2468, -4811,
   17267,  2227,  2482, -4811, -4811,  2507,  2520, -4811,  2526,  2531,
    2538,  2546,  2548,  2551,  2561,  2030,  2564,  2581,  2587,  2589,
    2591,  2594,  2597,  2604,  2607,  2613,  2621,  2639,  2643,  2658,
    2667,  2671,  2227, -4811,  1324,  2681,  2699,  1430,  2704, -4811,
    2706, -4811,   443,  2738,  2217,  2227,  2227,  2758,  2760,  2766,
    2773,  2783,  2785,  2793, 22342, 22342, 22342, 17267, -4811, 69478,
   69478, -4811,  2663,  2953, -4811,  2894, 22342, -4811,   251, -4811,
   -4811, -4811, -4811, -4811,  2300, -4811,  2352, -4811, -4811,  2401,
    2179, -4811,  2329,  2200, -4811, -4811, -4811, -4811, -4811, -4811,
    2804,  2178, 69478, 69478, 69478,  2794, 69478, 69478, 69478, -4811,
   58978,  2432, 69478, -4811, -4811,  1788,  1788, -4811, 17267,  2481,
    3815, -4811,  2921, 30188,  2745,  2719,  1792,  2217, -4811, -4811,
     -99,   -83,   764,  2812, -4811, -4811,  2914,   787,  2944, -4811,
     833,   180, -4811,    82,   839,   883, -4811, -4811, -4811, -4811,
   -4811, -4811,  2895,  3117,  2810, -4811, -4811,   154, -4811, -4811,
   69478, -4811,  3371, 17267, -4811, -4811, -4811,  3291,  2982, -4811,
   -4811, -4811,   182,  3500,   256, 37953,   901, 69478, 59678, 82778,
   82778, 69478, -4811, 74378, -4811,  2828, -4811, -4811,  9161, -4811,
   -4811, -4811, -4811, 69478, -4811, -4811,    58,  3535, -4811, -4811,
   -4811, -4811, -4811,  2837, -4811, -4811,  2663, -4811, -4811, -4811,
   -4811, -4811,  3262, -4811, -4811, 55478, 37953,  1540, 81378, -4811,
   -4811, -4811, 35128, -4811, -4811,  3525, -4811,  2859, -4811, -4811,
    2200,  4109, -4811,  3166,  2745,  3191, -4811,  3407, -4811,  3210,
   70878,    17, 63178,  1191,  3081,  1032,  1318,  1740, 46375,   902,
   58978,  1750,    84, 26656, 52678,  1755, -4811, -4811, -4811,  3071,
   -4811,  3457, -4811,     5, -4811,  2919,  2522,     5, 56178,  3348,
    1983, -4811,   285, -4811,  3441, -4811, -4811, -4811, -4811,  3061,
    3042,  3090, -4811,   410,  2743, -4811,  -192, -4811,   898, -4811,
    3072,  3348,     5,  1983, -4811,  3358,  3499,   560,  3461, -4811,
    -164, -4811, -4811, -4811,   752,  3582, -4811,  2955, -4811, -4811,
   -4811, 37953, -4811, -4811, -4811,  3291, -4811,   300, 69478, -4811,
   -4811, -4811, -4811,  2956, -4811, -4811,  3261,  3073, -4811,  2972,
   -4811, -4811,    49,  3511, -4811,   901, 69478, -4811, -4811,  2214,
   -4811,  2214,  2214,  2214,  2214,  2214, -4811, -4811, -4811,  3008,
    3475, -4811,  3476, -4811,  2044,   913, 53378,  2038,  2605,  2974,
     615,  2975,  3027,  3162, -4811, -4811, -4811,   387, -4811, -4811,
     126, -4811, -4811, -4811,  3566,  3583,  2217,  2977, -4811, -4811,
   -4811, -4811, -4811,  3702, -4811, -4811, 37953,  3289,  3591,  3591,
    3591,  3709, -4811, -4811, -4811, 37953, -4811, -4811, -4811,   140,
   -4811, 51978,   304, 69478, 37953,  3030, -4811, 37953, -4811,  3442,
    2993, -4811, -4811,  3278, 17267, -4811, -4811, 17267, 80678,  3549,
    2663, -4811, -4811,    48, -4811, -4811, 37953,   237, -4811,  3661,
    3225, -4811, -4811, -4811,  3702,  3591, 37953, -4811,  3001, -4811,
    2997, -4811, 17267, 17267,   392,  3653,  3716,  3716,  3716, 17267,
    1338,   308,  3564, 17267, 17267, 17267, 17267, 17267, 17267, 17267,
   17267, 17267, 17267, 17267, 17267,  1220,  3014,  3015, -4811, -4811,
   -4811,   386, -4811,  3017, 17267, 17267, 17267, -4811, 17267, 17267,
   17267, 39363,  3018, -4811,  4957, 17267, 17267, 17267,   375,  3588,
   17267, 17267, 17267, 17267, 17267, 17267,  4711, 17267, 37953, 17267,
   17267, 39363,  3732,  3020, -4811,  3016,  1762, 17267, 17267, 17267,
    1797, 17267, 17267, 17267, 17267, 17267,  3538, 37953, -4811, -4811,
   17267, 17267, 17267, 17267,  3023, 17267, 17267, 17267, 17267, 22342,
    3540, 17267,  3031, 17267, 17267, 17267, 17267, 17267,  3036,  3038,
   17267, 37953,  3716,  3716, 17267, 17267,  1842, -4811, -4811, 17267,
    3118,  3118, -4811, 17267, 12192, 17267, -4811, -4811,  3040, -4811,
   -4811, -4811, 39363,  3716,  3716, 17267, 17267, 17267, 17267,  3653,
    3653,  3653,  3041,   354, -4811,  3079, 17267,  3037, 27362, -4811,
   -4811, -4811, -4811, 17267, 17267, 17267, 22342, -4811,  2629, -4811,
   -4811, -4811, -4811, -4811, 18717, 22342, 22342,  3054, 22342, 22342,
   22342, 22342, 22342,  3479, 22342, 22342, 23067, 23792, 22342, 22342,
   22342, 22342,  1108,  3653, 58978, 22342, 42173,  3055,  3553, 17267,
   -4811, -4811, 69478, -4811, -4811,  3056, -4811,  3373,  2432, -4811,
   56878, -4811,   750,  3614, -4811, 55478, 37953, -4811, -4811,  2481,
    2663, -4811, -4811,  3478, -4811,  3480,  3481,  3482, -4811, -4811,
   -4811, -4811,  3744,  3486, -4811,  -192,  3492, -4811, -4811,  3085,
   -4811, -4811, -4811,  3654,  3293, -4811, 25242, 58978, -4811,  3093,
   -4811,  3104, -4811, -4811, -4811, -4811, -4811, -4811,  3204, -4811,
   -4811, -4811, -4811,  3097, -4811, 55478,  3097, -4811, -4811,  3097,
   -4811, -4811,  3097, 51978,    74,  3772, -4811, -4811, 72278, -4811,
   71578, -4811,  3567,  1845, -4811, 35128,  -192, -4811,  3570, 19442,
   -4811, -4811, -4811,  3515,   279,   843, -4811, -4811, -4811, 69478,
    3439,  3613,  3557, -4811, -4811,  3109, 17267,  3514,  3106, -4811,
   -4811,  3111, -4811, -4811, -4811, -4811, -4811, -4811, -4811, 37953,
    1427, -4811,   221,  3112, -4811,  3205,  3115, -4811,  1103, -4811,
   -4811, 37953,  3120, 37953, -4811, -4811, -4811,  3409,  3213, -4811,
    -192,  1136, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  3131,  3147,  3646,  3136, 55478,
   51978,  1176, 69478, -4811, -4811,  3134,  3135,  3141, -4811,   915,
   -4811, 56878, 69478, -4811, -4811, -4811, -4811, -4811,  3791, 17267,
   -4811, 55478, -4811,  1421, -4811,   103,    95,   915, -4811, -4811,
   -4811, -4811, -4811, 69478, 12917, 63878,  3143,  3274,  3593, -4811,
   -4811, -4811,  3153,  2214, 69478, 69478, 69478, 37953, 37953, 69478,
   55478, 37953, -4811,  1316,  1316, -4811, -4811, -4811, 50578, -4811,
   -4811, -4811,     5, 69478, 69478,     5, 51978, -4811,  1983,   -22,
   69478,     5, -4811,  3595,  3263, -4811, -4811, -4811,  3673, -4811,
   -4811,  3663,  3150, -4811,  3695, -4811, -4811,  3285,  1983, -4811,
   -4811, 37953, -4811, -4811,  1983, -4811,  1983,  1983, 17267,     5,
       5,     5, -4811,   -78, -4811, -4811, -4811,  3314,   632, -4811,
   -4811,  1103,  1859, -4811,  3157, -4811,  3160, -4811,   216,  3436,
   -4811, -4811, -4811, 58978, -4811, -4811, -4811, -4811, -4811,  3697,
   -4811, 56878, 51978, 58978, 69478, 69478, 69478, 37953, 37953, -4811,
    2214, -4811,  2214, -4811,  2214, -4811,  2214,  3201, -4811, -4811,
   -4811, -4811,   272,   150,  3838, -4811,  1846, -4811,  1763,  1846,
    3198,  3348, -4811,  3676, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  3176,  2605, -4811, -4811, -4811,
    3170, -4811,  3172,  1116, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,   250, -4811, -4811, -4811,   425,  3746, -4811, 58978,  2870,
     677,    19,  2870, -4811,  3175,  -192,  1117, -4811,  1117, -4811,
    1103, -4811,  3647, -4811,  3649,  -155, -4811, -4811, -4811, -4811,
   -4811, 37953,  3178, -4811,  3455,  3768, 64578, 37953, -4811, -4811,
   -4811,   213,  3183,  3186,  2663,  2663, 75078,  3850,  3222,  5709,
   -4811, -4811, 37953, -4811,   224, -4811, -4811, -4811,  3253, -4811,
   -4811, -4811, -4811,  2308, -4811, -4811,  1253,  3246,  3194, -4811,
    3409, -4811,  1767, 69478,  3703, 42873, -4811,   427,   848, -4811,
    3716,  3199, -4811,  3200,  3203,  3206,  1869,  3753, 17267, 17267,
   -4811,  2398,  1403,  1586,  1562,  1416,   674,  1495,   681, -4811,
    1757,   788,   792,   895,   220, -4811,  3236,  3211, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  3237, -4811, -4811,
   -4811,   951,  1063,  1072,  1592,  1624,  1115,  3240, -4811,  3241,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
    3749, -4811,  1654,  1123,  1930, -4811, -4811, -4811, -4811,  3244,
   -4811, -4811,   179,   205,  1717,  1168,  1170,  1207,  3256,  1736,
    3249,  3254,  1225,  1934,  1995,  3258, 39363, 69478,  3716,  3255,
    1751,  1765,  1826,  3716,  3259,  1275,  1834,  2012,  2028,  2051,
   37953,  3260,  1877,  1296,  1879,  1890, -4811,  1915,  1924,  1313,
    2063,  2879, 37953,  1969, -4811,  1336,  1347,  1984,  1364,  1374,
   -4811, -4811,  2008,  3257,  3265,  3268,  1381,   222,  3716,  3271,
     229,  3272,  3273,  2015, 14367, 15092, 15817,   509,  1385, -4811,
    3275, -4811, -4811,  3266,  3277,  3279,   244,   196,  1410,  2049,
   -4811, 17267,  1262,   171, 69478,    95, -4811,  3434,  2772,   217,
   -4811, -4811, -4811, -4811, -4811, -4811,  1067, -4811,  3282, -4811,
    3283,  2428,  3286, 17267,   231,  3286,  3533,  3053,  3053, 22342,
    3603,  3329, 17992,  1272, 17992,  1272,  3286,  3286,  3286, -4811,
   22342,  3287, 22342, 22342, -4811,  3653, -4811, -4811, -4811, -4811,
    3571,  3292,  2663,  3284,   776, 69478, 37953,   750,  3294, -4811,
   -4811, -4811, -4811, -4811,   915, -4811,  3295,   153, 37953, 37953,
   -4811, 16542,  3871, -4811, -4811, -4811, -4811,  -192, -4811, -4811,
    5504, -4811, 37953, 80678, -4811,  3302,  3392,  3394,  3402, -4811,
   31602, -4811, -4811, -4811, -4811, 31602,    11, -4811, 69478, -4811,
    3391, -4811, -4811, -4811,  -231, 35833, 35833, -4811, 35833, -4811,
   -4811, -4811, -4811, -4811,   180, -4811, -4811, -4811, -4811, -4811,
   -4811,   280,   309,  2662,  3198, -4811, -4811, -4811, -4811, -4811,
   -4811, 41473,  2663, -4811, 37953, -4811,  3764,   779, -4811,    28,
   37953, -4811,  3768,  3756,  3502, 69478, -4811, -4811, -4811,  2663,
   -4811, -4811, 69478, 69478, 80678, 80678, 17267, -4811,  1105, -4811,
    3955,   111,  3596,  1285, 17267,  -192, -4811, 55478, 55478, 37953,
    3398, 37953,   889, 17267, -4811,  -165,  3315, -4811, -4811,    28,
   -4811,  4025, -4811,  4109, 25242, 56878,  3821,  3835, -4811,  3330,
   35833, 35833, 35833, -4811, 69478, 69478, 63178,  3840, 12917,  3843,
     915, 57578, -4811,  2663,   915,  3336,  3339, -4811, -4811,  3762,
     884, -4811,  3341,  3343, -4811,  3334,  3335,  3344, 63178, 17267,
     915, -4811, 22342,  2256, -4811,  2663, -4811,   103, -4811, -4811,
   -4811, -4811, -4811,  -192,  3854,  -192, 17267,  3349, 69478, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811,  3888, -4811,  3546,  -115, -4811, -4811,
    3350, -4811, -4811, -4811, -4811, -4811, -4811,     5, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  3605,  3348,  2743,  3593, -4811,
       5,  1983, 37953,     5,     5,  2663, -4811, -4811, -4811, -4811,
   -4811, -4811,  3357, -4811,  3421, -4811, -4811, -4811, -4811, 69478,
    3369,  3541, -4811,  3361, -4811, -4811, -4811, 37953, -4811, 80678,
   69478, 69478, -4811,  3381, -4811,  3884, -4811, -4811,   253,  1298,
    -155, -4811,  -160,  3691,  3692, -4811, -4811, -4811,  2214, 69478,
   -4811,  2214, -4811, 37953,  2214, -4811, -4811, 69478, -4811, -4811,
    2214, -4811, 69478,  2214, -4811, -4811, -4811,  3485,  3485, -4811,
   28068, -4811, -4811,  3447,  3833, -4811, 69478, -4811, -4811,    96,
   -4811, -4811,  3880, -4811, -4811,  3687, -4811,  3389, -4811, 17267,
   -4811, 16542,  2974, -4811, -4811, -4811,  2038,  1597, -4811,   915,
     915,  3737, -4811,  -192,  3548,  3550,  3555,  3559,  3560,  3584,
   -4811, -4811,  -192,  -192, -4811, -4811,   915, -4811,  1130, -4811,
   -4811, -4811, -4811,  4100,  3125, -4811,   915,   915, -4811,   693,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  1096, -4811, -4811,
     158,   475, 51978,  3428,  3717,  3414, -4811, 37953,  3927, -4811,
   60378, 75778,  3416, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,  3423, -4811, -4811, 17267,  3520, -4811, -4811,  3222,
   -4811,  3438,  3440,  3449,  3451,  3452,  3453,  3454,  3456,  3463,
    3465,  3469,  3470,  3474,  3477,  3484,  3488,  3490,  3491,  3494,
    3501,  3503,  3505,  3506,  3507,  3443, -4811, -4811, -4811,  3508,
   -4811, -4811, -4811,   915,   915,   915,   915, -4811,  2904, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  3876,  2676, 69478,
    3521, -4811, 42873, -4811, -4811,  1859, -4811,  3466, 20167, -4811,
    3487, -4811, 17267, -4811, -4811, -4811, 17267, -4811,  2663,  2523,
    2887, -4811, 58278, -4811, -4811, -4811, 17267, -4811, 17267, -4811,
   17267, 17267, 17267, 17267, 58278,  2887, 17267, -4811,  3489, -4811,
    3920, 17267,  3930, -4811, -4811, 17267, -4811, -4811, 17267, -4811,
   17267, -4811, 17267, 17267, -4811, 17267, -4811, 17267, -4811, 17267,
   17267, 17267, 17267,  3787, 17267, -4811, 17267, -4811, -4811, 22342,
   -4811,  3495,  3497, -4811, -4811, -4811, -4811,  3498, -4811, 17267,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, 17267, -4811, -4811,
   -4811, -4811, 17267, -4811, 17267, -4811, -4811, 17267, 17267, -4811,
   17267, 17267, -4811,   769, -4811, -4811, 20892, 17267, 17267,  3512,
   -4811, -4811, 17267, 17267, 17267, -4811, 17267,   339, 17267,  2058,
   17267,  2105, 17267, -4811, 17267, -4811, 69478, -4811, -4811, -4811,
   17267,   441,  2117,    28,  3513, 17267, -4811,  2329, -4811,   663,
    2121, -4811, -4811, -4811,   417, -4811, -4811, -4811, 58978, 17267,
   -4811, -4811, -4811, -4811, -4811, 22342,   295,  3516, 22342, -4811,
    3533,  4711,  4711,  2723, 17267,   231,  3533, 69478,  4175,  3517,
   -4811, 17267,  3518,  3519, -4811, 17267, 69478, -4811,  1103, -4811,
   56878, -4811, 58978, 55478, -4811, -4811, -4811,  3530,  1105,  2256,
   -4811,  3532, -4811,  2663, -4811,  3534, -4811, -4811, -4811,  3530,
      69, 76478, -4811, -4811,  4070,  3547,  3537, -4811, -4811, -4811,
   -4811, -4811, -4811,  2080, -4811, 51978,  4229, -4811,  3529, -4811,
    3536,  3607,  3628,  3629, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  3348, 80678,  -165, -4811, -4811,
    3543, -4811, -4811,  3278,  3485,  3568,  3959,  4180, -4811, -4811,
   -4811,  1891, -4811, -4811, 77178, -4811, -4811,  4000, -4811, -4811,
    2089, -4811, -4811, 82778, 82778, 82778,  3768, -4811,  3554,  3558,
   -4811, -4811, -4811, -4811,  2117,  3668, -4811,  4262,  2663, -4811,
    3642, -4811, -4811, 37953,   322, -4811, -4811, -4811, -4811, -4811,
     968,  1585, -4811,  2974,  2974, 33718, -4811, -4811, -4811,  3741,
   69478, -4811, -4811, -4811,  3573, -4811, -4811,  3862, 55478, 51978,
    4069,  4071,  4073, -4811, -4811, -4811,  8293, -4811, 55478, 12917,
   -4811, -4811, -4811, -4811, -4811,  3667,  3669,  1886, -4811, -4811,
    4006,  3810, -4811, -4811, -4811,   915,  2663, 12917, -4811,  3143,
    3569, 28774, -4811,  3578, -4811, -4811,  2663,    55, -4811, 54078,
    4111, 54078, 54078, 69478, -4811, -4811,  3891, -4811, -4811,  3854,
   -4811,  3198,  1983, -4811, -4811,   -78,  2476, -4811,  1957,  3577,
    4011,  4016, -4811,  3872,  1069,  3872, -4811, -4811,  3577, 39363,
    1859,  3409, 77878, -4811,  2096, -4811,  4281,    28,  3941, -4811,
   -4811,   262,  4296, -4811,  3428,  4093,   401,   401,  3894, 37953,
   37953,  4100,  6374, 69478, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,   622, -4811, 37953, -4811, -4811, -4811, 58978,  3586,
   -4811, -4811,  3585, -4811, 17267,  1103,  3758, -4811, -4811, -4811,
     417, 17267,  4261,  4077,  3348, -4811, -4811,  2663, -4811,  3598,
    3601,  3606, -4811, -4811,  1846, -4811, -4811, -4811,  3610, -4811,
    1116, 57578, 54778, -4811, -4811, -4811, -4811,  4203, -4811,  4211,
    1556, -4811, -4811,  3527,    19, -4811,   915, -4811,   178,   915,
     915, -4811, -4811,  1764, -4811, -4811,  2782,  1355,  4100, -4811,
    -192,  -192,  -192,  -192,    28,  -192,  -192,  2108, -4811,  3527,
    3527,  1117, -4811,   163, -4811, -4811, -4811, -4811,  5716,   877,
   -4811, -4811, 58978,  3711,  3712, -4811, -4811,  3713, -4811, -4811,
     155, -4811,  2814, -4811,   187, -4811,  3839, 69478,  4320,  3414,
   -4811,  1640, -4811, -4811,  9630, -4811, -4811,  4107,  2010,  3623,
   -4811, -4811,  3620, -4811,  3627, 65278,  2663, 80678, 17267, -4811,
    3631,  3633,  3635,    28,    28,  -192,  -192,  3578,  -192,    28,
    -192,  -192,  -192,  -192,  -192,  -192,  -192,    28,    28,  -192,
    1033,  2126,  -192,    28,  5709, -4811,  -192,  2117,  3527,  3527,
    1253, -4811,  4119,   915, -4811,   185, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  3622,  1859,  3198,  1939,
    3198,  3641, -4811, 17992,  2065, -4811,  2663,  2663, 17267,  3637,
    3637,  3637, -4811,  3640,  3643, -4811,  3637,  4090,  3637,  4092,
    3644, -4811, -4811,  3645,  2118,  2615, -4811,  2193,  2750,  2073,
    3648,  3650,  2329, -4811, 17267,   302, 17267,  2088,  2093,   344,
    2101,   -70,  2113,  2129,  1444,  1450,   473, -4811,  2146,  2151,
    3228, -4811, -4811,  2153,  2183,  2185,  2204,  2208,  1491,  2213,
    2210, -4811,   117,  3962,  2234, 17992,  2215,   612,   621, -4811,
    2249,  1533,  1542,  2261, 17267,  2263, 17267,  2306, 17267,  2331,
    2381,  3495,  2402,  3652,  3652,   156, -4811,  3651, -4811, -4811,
   -4811,  3656, -4811,  2411,  3676, -4811,  2661,   663,  3659,  3027,
    3829, -4811,  1846, -4811,   387,  1262, -4811,  3655,  2663,  3660,
   -4811, -4811, 17267, -4811,   251, -4811, -4811, 22342,   645,  3662,
   -4811,  3571, -4811, 17267, -4811,  3952,  2663, -4811, -4811,  3665,
    2329, -4811, -4811, -4811, -4811, -4811, -4811,   226, 16542,  3671,
   -4811,  3908, -4811, -4811,  4178, -4811,  3672, 17267, -4811,  4247,
   31602, -4811, 69478,  1311,  3972,  3681, 43573, 51978, 51978, 51978,
    3680, -4811, 11336,  3989, 37953, -4811,  4149, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, 17267, -4811,
   -4811,  4248, -4811, -4811, -4811, -4811, -4811, 78578, 69478, -4811,
   22342, -4811,  4356,  3686,  3558,  3700,  3689, 55478, -4811,  4036,
   -4811, -4811,  3911, 39363,  3170,  3170,  2372,  3694,  2268,  3877,
   -4811, -4811, -4811,  3690, -4811,  2270, -4811, 25242,  4204,  3295,
   -4811, 51978, 51978, 51978, -4811, -4811, -4811,  3701,  3704,   141,
    3944, -4811, -4811, -4811, -4811, 12917, -4811, -4811, -4811, -4811,
   -4811, -4811,  2199, -4811,  3348, -4811, -4811, -4811, -4811, 54078,
   -4811, -4811, -4811, -4811, -4811, -4811,     5, -4811,  3718, -4811,
    3710, -4811, -4811,  3719,   357,  2121, -4811, -4811, -4811,  1859,
    3079,  1699, -4811, -4811, -4811,  4142,  3872,  3872,  3577,  4155,
     807,  3720, -4811,   915, -4811,  3243,  3739, -4811, 69478,  3721,
   -4811, -4811, 51978, -4811,  4318, -4811, -4811, -4811, -4811, -4811,
   37953, -4811, -4811,  5843,  4100,   915,   915,   915,   915,   915,
    4291,   915,   915,  4295,   915,   915, 37953,   915,   915,   915,
     915,   915,   915,   915,   915,   915,   915,  1015, 69478,   915,
     915,   915, 32308, -4811, -4811,  4005, -4811,  6053, -4811, -4811,
     915, -4811,  3728, 69478,  3414,  3729,   976, -4811,  2941, -4811,
   28068, 69478,  2663,  3731,  1384, -4811,  4084,  3735, -4811, -4811,
    2663, 17267, -4811,  3766, -4811, -4811, 61078, -4811, 44273, -4811,
   16542, -4811,  2038,  3610,  3742,  3919, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,   769, -4811, -4811,   769,   769,   769, -4811,
   -4811, -4811, -4811,   769,   769, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811,  3125, -4811, -4811, -4811,  1096, -4811,
    3250,   915,  4379,  4023,  4379,  4026,  4030,  3837,  4187,  3859,
    2460,  4189,  4038, -4811,  3865,   915,  4379,  4040,  4431, -4811,
    4042,  4043,   183,  4044,  4046,  4049, -4811, -4811,  7069, -4811,
   -4811, -4811, -4811,  1152, 36543, -4811, -4811, -4811, -4811,  3870,
   -4811,   165, -4811, -4811, -4811, -4811,   191,    28,    28,    28,
    2126,  2293, -4811,  2814,   901,  1295,  3860,  1041, -4811,  2317,
   -4811,  4473, -4811,   168, -4811, -4811,  3637,  3637,  3637, -4811,
   -4811, -4811,  3637, -4811,  3640,  4039,  3774,  3640,  3640, -4811,
   -4811, -4811, -4811, -4811, -4811,   330,   376, -4811, -4811,   330,
   -4811, -4811, -4811,   130,  1698,  3640, -4811, -4811, -4811, -4811,
    -203,  3780, -4811,  3637,  3637,  3637, -4811, -4811,   330,  4091,
    3637, -4811,  3637,  3791, -4811, -4811, -4811, -4811, -4811,  3640,
    -227,  3637,  3637,  3637,  3637,  3643,  4367,  4293,  4294, -4811,
   69478, -4811, 65978, -4811,  3785, -4811,  3786, -4811, 72978,  2663,
     403,  1109,  1221, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, 69478,  3527,  2676, -4811, 42873,  3198,  3687, -4811,
   -4811,  4711, -4811,  2663,  1071, -4811, -4811, -4811, -4811,  1172,
   -4811, -4811, -4811,  4102, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  3195, -4811, -4811,  2887, -4811, -4811, -4811,
    3788,  4711, -4811, 17267,  4711, -4811, -4811, -4811, 17267, -4811,
    4461,  3973, -4811, -4811, 17267, 17267, -4811, 17267, -4811, -4811,
    1029,  3792,  3830, -4811, -4811, -4811, -4811, -4811, 17267, -4811,
   -4811, -4811, -4811, -4811, -4811,   942,  4711, -4811, 17267, -4811,
   -4811, 17267, -4811, 17267, 17267, -4811,  2475, -4811,  2487, -4811,
    2495, -4811, -4811, -4811,  2117,  3801,  4226, -4811, -4811, -4811,
    2117,  4009, -4811, -4811,  2117,    28, -4811, -4811,  3176,  2661,
   -4811,  3807,  1393, -4811, -4811, -4811, -4811, -4811, -4811,  3808,
   69478, -4811, -4811,  2334, -4811, -4811, 17267, -4811,  4112,  3816,
    1384,  4483,  3818, 61078, -4811, -4811, -4811, -4811,  1308,  4345,
    4231, -4811,  3079, -4811,  2663, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,  4315, -4811, -4811, -4811, -4811,  -155,  -155,  -155,
   16542,  2907,  4382, -4811, -4811, -4811,  4149,  4251, -4811,    81,
    2663, -4811, 80678, 82778,  3826,  3828, -4811, -4811, -4811,  3533,
    4246,  4113, -4811, -4811,  2117, 69478, -4811, -4811, -4811,  3831,
   -4811,   915,  3079, -4811,  1946,  2372, 39363, -4811, 44273,  1454,
    2605, -4811, 69478, -4811, 51978,  3330,  3330,  3330, -4811, -4811,
   -4811, -4811, -4811, -4811, 28774, 63178, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  3348, -4811,  -192,  2999, -4811,  2974,  4165,
   -4811, -4811,   417,  1846,  3361,  1262, -4811,  3577,  4269,  4272,
   -4811,  3577, -4811, -4811, 39363,  3198, 16542, -4811, -4811, -4811,
   -4811, -4811,  3857, -4811,  3836,  3841, -4811,  3578,    28,    28,
    -192,  -192,   915,    28, 58978,   915,   161,    28, -4811,  3578,
    3578,   208,   238,  -192,  3552,   238,   240,   257,   277, -4811,
   -4811, -4811,    28,   238, -4811, 40068, 37953, 69478,  3844,  3845,
    3846, -4811, -4811, -4811, -4811,   274, -4811,  4072,  2214,   213,
     213, -4811,  3832,   753, -4811, -4811,  6360, -4811, 48478,  4144,
   -4811, -4811,  2062,  4543, -4811,  4052, -4811, -4811, -4811, -4811,
    4002,  3414, 54778, -4811, -4811, -4811, 17267, -4811, -4811, -4811,
    1103,  3849,  2002, 17267, 69478, -4811, 66678, -4811, -4811, -4811,
   -4811,  1358, -4811, -4811,  1846,  1782,  1846,  3852,  1116, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, 37248,
    2214, -4811, -4811,  4324, 67378, 40068,   100,  1970, 65978,   100,
    2941, -4811, -4811,  1970,  4298,  1788,  4299,  1970,  1970, -4811,
   69478, -4811, 68078,  1970,   100, 39363, -4811,   100, -4811, -4811,
   -4811, -4811, 37953,   100,   100, 65978, -4811,  8473, -4811, -4811,
   33013,  1278, -4811, -4811, -4811,  -192, -4811, -4811, -4811, -4811,
   -4811,  4172,  4174, -4811, -4811, -4811,  4122, 17267, 17267,  4168,
   69478,  4169, -4811,  4503, -4811, 69478, -4811,  3079, -4811, -4811,
   -4811,  4328, -4811, -4811, -4811, -4811, -4811,  1803, -4811,   216,
    1803,  1803, -4811,   203, -4811, -4811, 58278,  4553, -4811,  3081,
   -4811,  3910,   330, -4811, -4811,  3912, -4811, -4811, -4811,  1803,
    4181, 69478,  4367,   216,   330, -4811, -4811, -4811, 69478, -4811,
    1803, -4811,  4010, -4811,   330,  4553,   330,  4553,  1803,  1803,
   17267, -4811, -4811,    32,  3874, -4811, -4811,  3875,  3878, -4811,
   -4811, -4811, 65278,  3974,  2358, -4811, -4811,  2360, -4811, -4811,
    2373, -4811, -4811, -4811, -4811, -4811,  3466, -4811,  4300,  1656,
    3883,  3885,  3889,  3890,   330,  2395,  3887,  3637, -4811,  3640,
   -4811, -4811, -4811,  4535, -4811, -4811,  3637,  4340, -4811, -4811,
   -4811, -4811, -4811, -4811,  3893, -4811,  3895,  2508,  3897,  2553,
   17267,   216,  4314,  2575,  1547,  2413,  4252,  4332, -4811,  4150,
   -4811,  2579, -4811, -4811, -4811,  2443,  1722,  2632,  2637,  2641,
    2648, -4811, -4811, -4811, -4811, -4811,  3902, -4811, -4811,   527,
   -4811,  3903,  3389, -4811, -4811, -4811,  3676,   417, -4811, -4811,
    2452,  4577,  1448, 17267, -4811, 17267, -4811, -4811, -4811,  2471,
   -4811, -4811,  4610, -4811,  4209,  3937,  3937,  3937,  2488, 80678,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  4361, 79278, -4811,
   -4811, 69478,  3913,  1492, -4811,  2512, -4811, -4811,  3914, 39363,
   16542,   417, -4811, -4811, -4811,  1454,  3906,  1846,   126,  1846,
   -4811,  3176, -4811, -4811,  3330, -4811, -4811, -4811, -4811, -4811,
   -4811,  2605,  3170, -4811,  1262, -4811, -4811, -4811,  2511,  3969,
    3577,  3577,  3340,  3970, 17267,  3918, -4811,  3687, -4811, -4811,
      78, -4811, 58978,  3921, 69478, 69478, -4811, -4811, -4811, -4811,
   -4811,  -192, -4811, -4811,  -192, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  3922, -4811, -4811,  3924, -4811,
     249, -4811, 33013,  3923,  4353,  4360,   213, -4811,  2214, 37953,
   -4811, 40068, -4811,  2214,  2214, 10042, 69478, -4811,  4628, -4811,
   -4811, -4811, -4811, -4811,  4114,  1728,  3991, -4811, -4811,   320,
   -4811, 69478, -4811, -4811,  -192,  4630, -4811,  4575,  1384, -4811,
   17267,  3931,  3932, -4811, -4811, -4811, -4811,  2663,  4634,  3933,
   -4811, -4811, -4811, 44973, -4811,  4385, -4811, -4811, -4811, -4811,
    2038,   901,   100,   901, -4811, -4811, -4811,   157, 65978, 40068,
   -4811,  2117, 54778, 40068,  1970, 69478, -4811, 40068, 40068,  3975,
   -4811, -4811, 40068, 65978,  3940, -4811,  1384,  2292, 65978, -4811,
   -4811, 65978, -4811,  3299,  3119, -4811,  3965, 69478, -4811, -4811,
   -4811, -4811, -4811, -4811,  2663,  4711,  4578, -4811, -4811,  4121,
    -192,  4533, -4811,  1615, -4811, 69478,   170, -4811,  3984,  4032,
   -4811,  2558, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, 69478, 10167, -4811,  2577, -4811, -4811,  2624, -4811,
    4367,  3966, -4811,  3986, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,  2663, 45673, -4811, -4811, -4811, 69478,  4481, -4811, 69478,
   -4811, 80678, -4811,    28, -4811,    28, -4811,    28, 51278, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  4290, -4811, -4811, -4811,
   -4811, -4811,   330, -4811, -4811, -4811, -4811, -4811,  3976,  1384,
   -4811, -4811,  3978, 54078, -4811, -4811, 17267, -4811, -4811,  4329,
    4506, -4811, -4811,  3578, -4811, -4811, -4811, -4811, -4811,  3979,
   -4811,    28,  3687, -4811, -4811, 17267, -4811, -4811,  3980,  4579,
    1384,  1384, -4811,    28,  4554, -4811, -4811,  2668, -4811, -4811,
   -4811, -4811, 79978, -4811,  4416,  4097,  4494, -4811, -4811,  3987,
    4262, 69478, -4811,  4113, -4811, -4811, -4811, -4811, -4811,  1846,
   -4811, -4811, -4811, -4811, -4811, -4811,  3389,  3176, -4811,  3985,
   -4811,  4041, -4811, -4811, -4811,  4048,  2663, 69478,  4300, -4811,
     405, -4811,  4305, 69478,  2653,  1384,  3997,  2673, -4811, -4811,
   37953, -4811,   417, -4811,  7069, -4811, 17267,  2214, -4811, -4811,
   40068,  3998,  4058,  1157, 40068, 40068, -4811,  4654, -4811,  4003,
   -4811,  1264,  1295, -4811, -4811, -4811,  4008,  4012, -4811, 69478,
   -4811, -4811,  4585, 80678, -4811, -4811, -4811,  4319, -4811,  4014,
    4017,  9755, -4811, -4811, 10167,  3991, -4811, -4811,  1713,  4433,
   -4811,  2663, -4811, -4811,  4020, 69478, -4811,   417,  1846, -4811,
   -4811,  4552, -4811,  4555,  4606,  4607, -4811, 40068,  2308, -4811,
    3791, -4811, 40068,  3878, -4811,   226,  4130,  1278, -4811, 39363,
   -4811, -4811, -4811, 69478, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  4027,  1116,  4053,  2685, -4811, -4811, -4811,
   -4811, -4811, -4811,   330,   216,  4367, -4811, -4811, 69478,   330,
   -4811, 69478,  4343, -4811, -4811, 40773, -4811, -4811, -4811,  4536,
   -4811,  2691, -4811, -4811, 73678, -4811, -4811, -4811,  4566,  4224,
    4239,  4034, -4811, 17267, -4811, -4811, -4811,   -11,  2665, -4811,
   -4811,  4035, -4811,  4037,  3348,  3731, -4811,  4750,  4233,  3392,
    3394,  3402,  4302,  4576, -4811,  4306, -4811, -4811, -4811,  4701,
    4346, -4811,  2668, -4811,  4104, 37953, -4811, -4811, -4811,  4047,
     418, -4811, -4811, -4811,   417,  3389,  4165, 17267,  4050, 17267,
    4051,  2695, -4811, -4811, -4811,   213,   213, -4811,   405,  4055,
    4054,  2708,  1103, 69478, -4811,  4363,  1103,  4056, -4811, -4811,
    4005,  2690, 40068,  4058,  1281, 69478,  4428,   401, -4811,   401,
   -4811, -4811,  3169, -4811, -4811,  4170, 69478, -4811,  4168, -4811,
     909, -4811, -4811, -4811, -4811, -4811, 69478,   650,  4362, -4811,
   -4811, 82078, -4811,  4730,  4731,  4616,  4736,  1713, -4811,  -128,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, 40068,  -117, -4811,
   -4811, 24517,  1278, -4811, -4811, -4811, -4811, 37953, -4811,   100,
   -4811, -4811,  3878,   968,  4200, -4811, 80678,  1454,  4027,  4068,
    4253,   387, -4811, -4811,  1644, -4811, -4811, 69478, 68778, -4811,
   -4811, -4811, -4811, -4811,  4064, -4811, 45673, -4811, -4811, -4811,
   -4811, -4811,  4609,  3176, -4811, -4811,  1384, 54078, 54078, -4811,
   -4811, -4811,  1846,   132, -4811,  4777,  1058, -4811, -4811,   900,
   -4811, -4811, -4811, -4811, -4811, -4811,  3409, 82778, 22342,  4193,
   69478, -4811, -4811,  4176,  3444, -4811,  3676, -4811,  2663, 69478,
    2663, 69478, -4811,  4586,  4586, -4811, -4811,  3125,  1103,   160,
    1384,  4079,  1595, -4811,   753, -4811, -4811, -4811,   401,  2735,
   -4811,   885,  4388, -4811,  4078, -4811,  4085,  4087,  -192, -4811,
   -4811,  4518, -4811,  3169, -4811, -4811,  4522,  4405,   915, -4811,
   58978,   915, 24517,  4796, -4811,  4151,  4680, -4811,  4800, -4811,
    3446, -4811, -4811, -4811,  1041, -4811, -4811, -4811, -4811,  4411,
   -4811, 69478, -4811,   216,   216,  4773,   216, -4811,  4774,  4775,
    -128, -4811,  4654,  2117,  4113, -4811,  4105,  2126,  2126, 17267,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  4556, -4811,
   17267,  4658, -4811, -4811,   126,  1846,  1846,  4108,  1116, -4811,
   -4811,  4765,  4413,  4770, -4811, -4811,  2742, -4811, -4811, 69478,
   -4811, -4811,  3389, -4811, -4811, -4811, -4811, -4811,  4750, -4811,
    4310, -4811,  4417, -4811, 39363, -4811, -4811, -4811,  2117, -4811,
    2747, -4811, -4811,  4124, -4811,   915,   915,  4694,  4697,   915,
     915,   915,   915,  4128,  3444, -4811,  4676, -4811,  2749,  2786,
    1314, -4811, -4811,  2796,  1370,  -192,   915,  4414,   397,   160,
   -4811, -4811,   915, -4811, -4811,   397,  1595, -4811, -4811, -4811,
    4131,  4132, -4811, -4811, 69478, -4811, -4811, -4811,   372, -4811,
   69478,  4133, 69478, 69478, -4811, -4811, -4811, -4811, -4811, 49178,
   -4811, -4811, 69478, -4811, -4811,  4458,  4183,  4140, -4811,  4503,
   37953, 69478,  4135, -4811, -4811,   216, -4811,   216,   216, -4811,
   -4811, -4811,  2799, 17267, -4811, -4811,  4145, -4811,  4143,  2663,
   17267, -4811,  1846,   923, -4811, -4811, -4811, -4811,  1454,  1615,
    4445, -4811,  4447, -4811, 68778, -4811, -4811, -4811, -4811,  4146,
   -4811,   915,  2941,  4148, -4811, -4811, 69478,  4152, -4811, -4811,
     -47,  -192,  -192,   915,   915,  2385,  2385,  2117, 58978,  4266,
   -4811, -4811,   915, -4811, -4811,  4822, -4811,  4825,  4156,  4157,
   -4811,   401,   401,   397,  1370, -4811, -4811, -4811, -4811,    28,
    2307, -4811,  4568,  4868, -4811, 49878, -4811, -4811, 69478, 69478,
    4160, -4811,  1169,  1169,  2821, 69478,  2826,  2836, -4811, -4811,
   -4811, -4811, -4811,  4161, -4811, -4811,  4727,  4673,  4158, 69478,
   -4811, -4811, -4811, -4811,  1551, -4811,  4113,  2663, -4811,   417,
    1846,   126, -4811, -4811, -4811, -4811, -4811, -4811, 39363, 16542,
   -4811, -4811,  4193, -4811, -4811,  2849, -4811, 21617, -4811, -4811,
   -4811, -4811, -4811,  -192,  -192, -4811, -4811, -4811, -4811, -4811,
    2851, -4811, 58978, -4811, -4811, 65278, 65278, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  2862,
    2878, 69478, -4811,  4885, -4811,   202,  4479,  4480,  1370,  2880,
     160,  1595,  1721, -4811,  -112, -4811, -4811, 69478,  4177, 17267,
    2892, -4811, -4811, -4811, -4811, -4811,  4368, -4811, -4811,  4152,
   -4811,  4179, -4811,  3533, -4811, -4811, 58978, -4811,  4266, -4811,
    4182,  2897,  4072,  1370,  2906, -4811, -4811, -4811,  4235,  4756,
   -4811,  1370, -4811, -4811, -4811,  4184, -4811, -4811, -4811,   282,
   -4811, -4811, -4811, 69478,   473, -4811,  4649,  4575, -4811, 21617,
    4185,  3444, -4811, -4811, -4811, -4811, -4811, -4811,  1370,  1169,
    1169, -4811, -4811, -4811,   282, -4811,  4739, -4811,  4858,  4433,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  4383,   216,  4656,
   -4811, -4811,  4507,  4191,  1102,    43, 29480,  4365, -4811, -4811,
   58978, -4811, -4811, -4811, -4811, -4811, 58978,  2912, -4811, -4811,
   39363, -4811, -4811, 80678, -4811, -4811, 30894,  4192, -4811,   915,
   -4811, -4811, 39363, -4811, -4811, 16542, -4811, -4811
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2382,  1066,  2231,  3089,     0,     0,     0,   426,     0,     0,
    1268,  3094,   701,    68,  2097,  2225,  2226,  2002,  2033,     2,
       0,  1284,   480,   344,   222,     0,    83,   393,  2035,     0,
    2292,     0,     0,   476,  1284,   822,   598,     0,  2287,     0,
       0,  1284,   483,  2038,  2274,   321,   222,  3094,     0,  2860,
    2138,  2303,     0,     0,     0,  2121,     0,  2949,  2086,     0,
     478,  2386,     0,  3226,     0,     3,     8,    21,     0,    43,
      26,    31,    16,    20,    15,    56,    50,    28,  3091,   389,
     390,   391,   392,    41,  3154,    40,    11,    59,    60,    18,
      47,    12,    14,    17,    39,    46,    35,    42,    54,    24,
      25,    32,    48,    64,    22,    61,    57,    23,  2231,    13,
      27,    49,    44,    36,    58,    65,    37,     0,  2383,    55,
      38,    63,    30,    51,    29,     9,    10,    19,    52,    53,
      45,    66,    33,    62,    34,     0,  1100,     0,     0,     0,
       0,     0,  2031,     0,     0,  1178,     0,  1402,  3152,  3153,
    3154,     0,  1286,  1285,     0,  2382,  1468,  1467,     0,  3094,
    2423,  1264,  1295,  2550,  2552,  2551,  2553,  2554,  2555,  2556,
    2557,  2558,  2445,  2559,  2560,  2561,  2563,  2562,  2564,  2565,
    2566,  2446,  2508,  2447,  2520,  2567,  2521,  2522,  2568,  2448,
    2449,  2569,  2570,  2571,  2572,  2450,  2452,  2451,  2573,  2575,
    2574,  2509,  2523,  2576,  2577,  2578,  2580,  2453,  2454,  2455,
    2456,  2457,  2579,  2458,  2581,  2510,  2582,  2583,  2584,  2585,
    2586,  2587,  2588,  2590,  2589,  2459,  2591,  2592,  2594,  2595,
    2596,  2593,  2597,  2598,  2600,  2599,  2525,  2601,  2524,  2602,
    2460,  2603,  2604,  2605,  2606,  2607,  2608,  2609,  2610,  2611,
    2511,  2612,  2613,  2614,  2615,  2634,  2512,  2616,  2618,  2617,
    2526,  2619,  2620,  2621,  2623,  2622,  2624,  2626,  2461,  2462,
    2463,  2625,  2627,  2628,  2629,  2630,  2632,  2631,  2636,  2637,
    2527,  2464,  2465,  2466,  2467,  2633,  2635,  2839,  2638,  2639,
    2528,  2529,  2640,  2468,  2642,  2643,  2641,  2513,  2645,  2644,
    2469,  2646,  2470,  2647,  2648,  2649,  2421,  2650,  2422,  2651,
    2653,  2655,  2652,  2656,  2657,  2663,  2471,  2654,  2658,  2659,
    2660,  2661,  2662,  2530,  2664,  2472,  2666,  2665,  2667,  2668,
    2669,  2670,  2531,  2671,  2672,  2673,  2674,  2675,  2688,  2689,
    2679,  2680,  2682,  2683,  2686,  2681,  2687,  2692,  2691,  2693,
    2694,  2695,  2696,  2697,  2690,  2677,  2684,  2685,  2678,  2698,
    2699,  2676,  2700,  2702,  2701,  2703,  2532,  2704,  2705,  2706,
    2707,  2708,  2709,  2710,  2711,  2713,  2712,  2714,  2533,  2534,
    2535,  2715,  2716,  2717,  2719,  2718,  2536,  2537,  2722,  2720,
    2721,  2723,  2724,  2729,  2730,  2731,  2473,  2726,  2725,  2727,
    2728,  2538,  2539,  2732,  2733,  2734,  2735,  2737,  2736,  2514,
    2475,  2474,  2476,  2477,  2738,  2739,  2478,  2740,  2742,  2741,
    2743,  2744,  2745,  2747,  2746,  2540,  2541,  2479,  2480,  2481,
    2482,  2748,  2749,  2750,  2751,  2752,  2753,  2754,  2755,  2756,
    2757,  2758,  2759,  2760,  2542,  2761,  2762,  2763,  2765,  2764,
    2766,  2767,  2768,  2769,  2770,  2771,  2772,  2483,  2773,  2515,
    2774,  2775,  2484,  2777,  2776,  2485,  2778,  2779,  2780,  2781,
    2782,  2783,  2516,  2784,  2785,  2786,  2543,  2787,  2788,  2789,
    2790,  2517,  2791,  2792,  2793,  2486,  2794,  2795,  2544,  2796,
    2487,  2797,  2799,  2518,  2488,  2798,  2490,  2491,  2800,  2801,
    2802,  2489,  2803,  2492,  2804,  2805,  2807,  2806,  2808,  2809,
    2810,  2493,  2811,  2812,  2494,  2813,  2495,  2814,  2815,  2816,
    2817,  2819,  2818,  2820,  2821,  2822,  2823,  2825,  2827,  2826,
    2824,  2828,  2829,  2545,  2830,  2496,  2546,  2834,  2835,  2547,
    2831,  2832,  2833,  2519,  2836,  2837,  2838,  2499,  2840,  2841,
    2843,  2842,  2497,  2498,  2844,  2845,  2503,  2846,  2847,  2851,
    2548,  2848,  2859,  2849,  2850,  2853,  2852,  2854,  2855,  2505,
    2500,  2856,  2501,  2857,  2502,  2858,  2549,   240,  2428,   224,
    2504,  2429,  2443,  2444,  2506,  2507,   428,   128,  2940,  2939,
    1222,     0,  3095,  3096,     0,     0,     0,  2114,     0,  2031,
    2031,  2031,  2029,     0,  2031,  2031,  2031,     0,  2034,  2031,
    2031,  2031,     0,    71,    73,  2236,     0,   345,     0,     0,
       0,     0,     0,  2420,     0,   419,  2041,     0,     0,  2294,
    2310,     0,  2311,  2305,  2934,   395,     0,     0,     0,     0,
       0,     0,   222,  1287,  1230,   395,  2095,     0,   311,   320,
     322,   323,   319,     0,  3096,  3106,  2862,     0,  2205,   323,
       0,   128,  1203,     0,   128,  2122,  2119,     0,     0,     0,
    2095,  2304,     0,  2387,  2384,  3210,     0,     0,     0,  3205,
       0,  3211,     0,     1,     5,     0,     0,   699,  1021,   699,
    1022,  1020,   699,     0,     0,     0,     0,     0,  3159,  3152,
    3153,  3154,  2629,  2467,  2742,  2218,  2230,  2216,  2415,  1378,
    3127,  1336,  1321,  1323,     0,  1069,  1101,     0,  1074,  2032,
       0,  1072,  1089,  2436,  2435,  2434,  1086,  1085,  1084,  1082,
       0,   551,     0,  1180,   222,     0,     0,     0,  3160,  3159,
       0,  1241,  2220,  2221,  2222,  2223,  2224,  2227,   452,  3090,
       0,   242,     0,   439,   442,     0,   431,   434,     0,   129,
     130,     0,  1266,  1269,     0,     0,  3099,     0,   702,   164,
       0,  2118,  2117,  2116,     0,  2114,  2551,  2445,  2566,     0,
    2372,     0,     0,     0,     0,     0,  2450,     0,  2576,  2578,
    2453,  2454,  2455,  2456,  2457,  2459,     0,     0,     0,  1415,
    1415,  1415,  1412,     0,     0,  2601,     0,  2524,  2602,  2377,
    2603,     0,     0,     0,     0,  2368,     0,  2378,  2467,  2528,
    2640,     0,     0,     0,  2370,  2371,  2648,     0,     0,     0,
    2665,  2667,     0,  2531,  2375,     0,     0,     0,  2707,  2709,
       0,     0,  2714,  2533,  2534,  2535,  2353,  2720,  2721,  1470,
       0,  1412,     0,  2367,  2374,     0,  2734,  2361,  2743,     0,
       0,     0,  2540,  2541,     0,  2750,  2757,     0,     0,     0,
    2782,     0,  2543,  2788,     0,  2793,  2797,     0,     0,  2816,
       0,     0,  1412,  2352,  2546,  2834,  2835,  2547,     0,  2369,
    2519,  2376,     0,  2846,  1415,  1412,  1412,  2851,     0,     0,
    2854,  2855,  2500,  2549,     0,     0,     0,  3138,  1469,     0,
       0,  1693,  1733,  1427,  1433,  1447,     0,  1528,  1462,  1500,
    1501,  1503,  1622,  1502,  1507,  1508,     0,  1670,  1509,     0,
       0,  1506,  2003,  2364,  1505,  1504,  2365,  2366,  1499,  2403,
    2428,  2402,     0,     0,     0,     0,     0,     0,     0,   222,
       0,  2201,     0,   222,  2013,  2031,  2031,    75,     0,    77,
       0,   481,     0,     0,  2998,  3013,  3014,  1415,  3010,  3015,
    2622,  2463,  2636,     0,  3012,  3004,     0,  2752,  2756,  3008,
    2772,  2775,  3002,     0,  2518,  2820,  3034,  3006,  3011,  2992,
    2979,  2993,     0,     0,  2996,  3000,  2417,  1859,  2952,  2953,
       0,    84,     0,     0,  2043,  2044,  2042,  1176,     0,  3223,
    2295,  2296,  2297,     0,  2314,     0,   450,     0,     0,     0,
       0,     0,   397,   395,   382,     0,   381,   383,  2382,   377,
     384,   385,   386,     0,   387,   388,   447,     0,   378,   379,
     477,   380,  2432,     0,  2433,  1282,   823,   600,   599,    71,
    2200,  2199,     0,  2288,  3107,     0,     0,     0,   395,   484,
    2046,  2096,     0,  2045,  2280,     0,  2278,  2275,  2277,   312,
       0,     0,   342,  2552,  2998,  2756,  2970,     0,  2978,     0,
       0,  3099,     0,   943,     0,     0,  2885,  2886,  2719,  2743,
    2783,  2887,  2831,     0,     0,     0,  2861,  2871,  2867,     0,
    2160,     0,   943,  2213,  2161,     0,     0,  2213,     0,  1924,
    2203,  2206,     0,  2889,  2174,  1018,  1017,  1016,  2890,  2199,
       0,  2146,  2162,     0,  2123,  2167,   128,  2891,     0,  2202,
       0,  1924,  2213,     0,  2139,     0,     0,     0,     0,  1401,
       0,   318,  1210,  1210,     0,     0,  1202,  1204,  1205,  1210,
    1210,     0,  3224,  3225,  2950,  1176,   479,     0,     0,  2360,
    2358,  2359,  2424,  3207,  2357,  2356,  3215,  3217,  3201,     0,
    3204,  3203,  3212,     6,    67,     0,     0,   222,   222,   699,
     166,   699,   699,   699,   699,   699,   151,   149,   147,     0,
       0,   157,     0,   153,  3159,  2382,  2233,  1381,  1386,     0,
    1336,     0,     0,     0,  3110,  3109,  3108,  3122,  1324,  1325,
       0,  3157,  3158,  3156,   959,     0,  1415,  2437,  2440,  3155,
    2441,   225,  1083,     0,   552,   225,     0,     0,     0,     0,
       0,     0,   553,   554,   490,     0,  1184,  1185,  1179,  1181,
    1183,     0,     0,     0,     0,     0,  2232,     0,   276,     0,
    1297,  1299,  1298,  1315,   244,   241,   223,     0,   395,     0,
     429,   435,    85,  1224,  2022,  2024,     0,  1270,  3098,     0,
       0,  3100,  3102,   163,     0,     0,     0,  2098,  2102,  2108,
    2112,  2115,     0,     0,  1864,  1531,  1864,  1864,  1864,     0,
       0,  1741,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1864,     0,     0,  1568,  1540,
    1541,     0,  1569,     0,     0,     0,     0,  2379,     0,     0,
       0,     0,     0,  3138,     0,     0,     0,     0,     0,  1698,
       0,     0,     0,     0,     0,  3138,     0,     0,     0,     0,
       0,     0,     0,  1735,  1737,  2402,  1864,     0,     0,     0,
    1864,     0,     0,     0,     0,     0,     0,     0,  1420,  1577,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1864,  1864,     0,     0,  1864,  1585,  2381,     0,
       0,     0,  2380,     0,     0,     0,  2354,  2373,     0,  1588,
    1590,  1589,     0,  1864,  1864,     0,     0,     0,     0,  1534,
    1533,  1535,     0,   825,   824,  2382,     0,     0,     0,  1466,
    1465,  1464,  1463,     0,     0,     0,     0,  1472,     0,  1474,
    1476,  1471,  1473,  1475,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1536,     0,     0,     0,     0,     0,     0,
    2355,  1632,     0,  2007,  2015,  2009,  2030,     0,  2201,  2010,
       0,  2019,   565,     0,  2016,     0,     0,  2020,  2004,    77,
      72,    78,    74,     0,  2261,     0,     0,     0,  2255,  2257,
    2260,  2256,     0,     0,  2262,   128,     0,  2258,  2237,  2240,
    2247,  1401,  2238,     0,   454,   456,     0,     0,   343,   346,
     348,     0,   351,  2999,  2997,  3031,  3030,  3035,     0,  3032,
    3028,  2991,  3021,  3062,  3025,     0,  3062,  3027,  3026,  3062,
    3022,  3029,  3062,     0,  2994,     0,  1860,  1861,     0,  2951,
       0,  2416,     0,     0,  1177,     0,     0,  2298,  2299,     0,
    1305,  2315,  2316,  2312,  1859,  2936,  2941,   276,   416,     0,
       0,  2720,     0,   400,   399,   408,     0,     0,     0,   274,
     396,   414,   417,   470,   466,   474,   468,   448,   444,     0,
     610,    70,     0,  1289,  2442,     0,  1288,  1292,  2936,  1228,
    1231,     0,   463,     0,  2049,  2039,  2048,  1771,  2285,  2282,
     128,     0,   310,   335,   330,   338,   332,   334,   333,   339,
     340,   341,   336,   331,   337,   324,     0,     0,  2997,     0,
       0,  2994,  2517,  3105,  3103,     0,  2909,  2863,  2865,     0,
     942,     0,     0,   945,   947,  2066,  2065,   946,   955,     0,
     944,     0,  2924,     0,  2907,     0,  2892,     0,   951,   953,
     952,  2902,   950,     0,     0,     0,  2876,     0,  2209,  1401,
    1401,  2173,     0,   699,     0,     0,     0,     0,     0,     0,
    2187,     0,  2140,     0,     0,   751,  1926,  2166,     0,  1925,
    2207,  2208,  2213,     0,     0,  2213,     0,  2180,  2203,  2213,
       0,  2213,  2135,     0,     0,  2127,  2132,  2128,     0,  2134,
    2133,  2136,  2124,  2125,     0,  2153,  2182,     0,  2203,  2165,
    2172,     0,  2152,  2159,     0,  2170,  2203,  2203,     0,  2213,
    2213,  2213,  1198,  1214,  1196,  1208,  1209,     0,     0,  1201,
    1200,  2936,  1776,   461,  2385,  2388,  2392,  2396,     0,     0,
    3202,  3218,  3200,     0,  3213,  3214,  3199,     7,     4,     0,
     141,     0,     0,     0,     0,     0,     0,     0,     0,  1402,
     699,  1402,   699,   159,   699,   155,   699,     0,  2219,  2217,
    2234,  2235,  1776,  1988,     0,  1322,  1393,  1370,  1382,  1393,
    1866,  1924,  3120,  1381,  1373,  3151,  3146,  3145,  3148,  3149,
    1392,  3150,  1391,  3147,  3144,  1402,  1387,  1389,  1390,  2073,
    3128,  2061,     0,  1326,  1337,  1378,  3124,  3123,  3113,  3118,
     960,   959,   693,   696,   695,     0,     0,  2439,     0,  1075,
       0,  2201,  1073,  1090,     0,     0,  2201,   501,  2201,   555,
    2936,  1182,  2440,  3061,     0,  3067,  3049,  3161,  3162,  1080,
    1078,     0,  1242,  1243,  1246,   272,     0,     0,   597,  1315,
    1301,  1317,     0,   245,   247,   440,   395,     0,     0,     0,
    1226,  1225,     0,  1223,  1280,  1278,  1277,  1275,     0,  1276,
    1274,  1265,  1271,  1272,  3097,  3101,  2201,   493,  2104,  2026,
    1771,  2028,  2415,     0,     0,     0,  2110,     0,     0,  1865,
    1864,     0,  1713,     0,     0,     0,     0,     0,     0,     0,
    1515,     0,     0,     0,     0,     0,     0,     0,     0,  1497,
       0,     0,     0,     0,     0,  1653,     0,  1713,  1676,  1416,
    1974,  1975,  1955,  1956,  1954,  1957,  1413,     0,  1958,  1973,
    1600,     0,     0,     0,     0,     0,     0,     0,  1674,     0,
    1835,  1836,  1837,  1838,  1846,  1839,  1840,  1841,  1848,  1853,
    1842,  1843,  1849,  1850,  1851,  1844,  1852,  1847,  1845,  1854,
       0,  1834,     0,     0,     0,  1857,  1855,  1858,  1856,     0,
    1699,  1666,     0,     0,     0,     0,     0,   825,     0,  1733,
       0,     0,     0,     0,     0,     0,     0,     0,  1864,     0,
       0,     0,     0,  1864,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1675,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,     0,     0,     0,
    1614,  1672,     0,     0,     0,     0,     0,     0,  1864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1564,
       0,  2406,  2408,  2405,     0,     0,     0,   987,     0,     0,
    1530,     0,     0,     0,     0,  2892,  1694,  1696,  1418,  1417,
    1419,  1430,  1423,  1428,  1421,  1425,     0,  1477,  2558,  1431,
       0,     0,  1459,  3138,  1873,  1460,  1445,  1450,  1451,     0,
    1448,  1449,     0,  1453,     0,  1452,  1456,  1457,  1458,  1461,
       0,     0,     0,     0,  1529,  1532,  1886,  1668,  1669,  1692,
    1890,     0,  1734,  1402,  2404,     0,     0,   565,  2012,  2989,
     568,   567,  2017,   566,  2067,  3047,  2011,  1186,     0,     0,
      76,     0,  2266,  2249,  2248,  2250,  2254,   128,  2259,  2251,
       0,  2263,  2264,   395,   455,   401,  2524,  2546,  2547,   355,
       0,   328,   327,   329,   352,     0,     0,  3024,     0,  3005,
       0,  3009,  3003,  3007,  2987,     0,     0,  2995,     0,  3033,
    3016,  3020,  3019,  3017,     0,  3018,  3023,  3001,  2426,  1863,
    2427,  2637,  2720,     0,  1866,  2955,   394,   420,  2036,  3222,
    2300,  2846,  2301,  2293,     0,  2313,     0,     0,  2938,  1944,
       0,  2935,   272,     0,     0,     0,   411,   401,   410,   398,
     460,   275,     0,     0,   395,   395,     0,   276,  2936,   611,
     607,     0,   622,     0,     0,     0,  2289,     0,     0,     0,
       0,     0,  1232,     0,  2047,  2382,     0,  2025,  1772,  1944,
    2281,  2283,  2276,     0,     0,     0,     0,     0,  3051,  2976,
       0,     0,     0,  3104,     0,     0,     0,     0,     0,  2905,
       0,     0,  2904,  2903,     0,     0,     0,  2926,  2908,     0,
       0,  2870,  2912,  2913,  2916,     0,     0,     0,     0,     0,
       0,  2932,  2933,  2930,  2931,  2929,  2897,  2831,  2872,  2873,
    2878,  2868,  2181,     0,  2211,     0,     0,     0,     0,  2193,
    2185,  2184,  2179,  2177,  2186,  2188,  2178,  2198,  2197,  2196,
    2150,  2149,  1937,  1938,     0,  1936,  1927,  1930,  1935,  2430,
    1933,  2431,  2143,  2204,  2192,  2190,   222,  2213,  2148,  2147,
    2191,  2189,  2129,  2130,  2131,     0,  1924,     0,  2209,  2183,
    2213,  2203,     0,  2213,  2213,  2194,  2195,  2169,  2171,  1199,
    1216,  1215,  1211,  1212,  1217,  1207,  1206,  2120,  1804,     0,
    1746,     0,  1748,  1745,  1744,  1743,  1774,     0,  1775,   395,
       0,     0,  2390,  3208,  3216,  3220,  3206,   700,   959,  2985,
    3067,   191,  1037,     0,     0,   133,   131,   152,   699,     0,
     150,   699,   148,     0,   699,   169,   158,     0,   170,   167,
     699,   154,     0,   699,  1385,  1383,  1384,     0,     0,  2001,
       0,  1996,  1917,     0,     0,  1354,     0,  1371,  1375,  1376,
    1352,  1867,  1874,  3119,  1382,  1915,  1398,  1379,  1397,     0,
    1388,  2075,     0,  1340,  1327,  1328,  1381,     0,   694,  2067,
    2067,     0,  2438,     0,     0,     0,     0,     0,     0,     0,
     226,   235,     0,     0,   499,   500,  2067,   498,   541,   542,
     545,   546,   547,     0,     0,   548,  2067,  2067,   495,   521,
     522,   525,   526,   527,   528,   529,   491,     0,   496,  1067,
       0,     0,     0,  3079,  1092,  3163,  1076,     0,     0,  1245,
       0,   395,     0,  1304,  1296,  1303,  1300,  1315,  1313,  1302,
    1013,  1012,     0,  1316,   243,     0,     0,   427,   436,   430,
     432,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    86,    87,   108,  2023,     0,
    1267,  1279,  1273,  2067,  2067,  2067,  2067,   497,   530,   531,
     534,   535,   536,   537,   540,   538,   539,     0,  2201,     0,
       0,  2099,     0,  2418,  2109,  1776,  2113,  2112,     0,  1596,
       0,  1646,     0,  1648,  1649,  1650,     0,  1516,  1742,     0,
       0,  1597,     0,  1538,  1598,  1599,     0,  1593,     0,  1594,
       0,     0,     0,     0,     0,     0,     0,  1652,     0,  1414,
       0,     0,     0,  1542,  1543,     0,  1519,  1511,     0,  1678,
       0,  1624,     0,     0,  1683,     0,  1681,     0,  1544,     0,
       0,     0,     0,  1604,     0,  1524,     0,  1625,  1736,     0,
    1738,  2404,     0,  1658,  1688,  1606,  1549,     0,  1656,     0,
    1550,  1626,  1627,  1628,  1521,  1522,  1677,     0,  1608,  1609,
    1689,  1690,     0,  1630,     0,  1523,  1610,     0,     0,  1613,
       0,     0,  1552,  1944,  1662,  1660,     0,     0,     0,     0,
    1664,  1554,     0,     0,     0,  1553,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,  1520,     0,  1661,  1663,  1616,
       0,     0,     0,  1944,     0,     0,  1565,   826,  1793,  1347,
    1393,  3126,  3125,  3134,  3135,  3139,  1512,  2409,     0,     0,
    1424,  1429,  1422,  1426,  3138,     0,     0,     0,     0,  1443,
    1442,     0,     0,     0,  3138,  1873,  1446,  1888,     0,     0,
    1686,     0,     0,  1642,  1643,  1731,     0,  2008,  2936,  2018,
       0,  2068,     0,     0,  1188,  1187,  2014,  2021,  2936,  2080,
    2081,    79,    81,  2079,    82,     0,  2252,  2253,  2246,  2265,
    2241,   395,   300,   404,   458,     0,   347,   356,   349,   353,
     354,   350,  3066,     0,  3065,     0,     0,  2984,  3043,  3046,
    2415,     0,     0,     0,  2959,  2966,  2962,  2967,  2960,  2961,
    2965,  2968,  2969,  2956,  2963,  1924,   395,  2382,  2302,  1306,
    1308,  1309,  1307,  1315,     0,     0,  2944,  2945,  2943,  1949,
    1945,     0,  2937,  2942,   395,   412,   415,     0,   402,   406,
       0,   418,   471,   445,   445,   445,   272,  1283,     0,     0,
     609,  1402,   606,   605,     0,   624,   603,   612,  2291,  2290,
       0,  1290,  1293,     0,  1239,  1237,  1236,  1238,  1227,  1233,
    1234,     0,  2053,     0,     0,  2382,  2059,  2040,  2050,     0,
       0,  2286,  2284,  2279,     0,   325,  2977,     0,     0,     0,
       0,     0,     0,  2911,  2910,  2866,  2382,  2896,     0,     0,
     958,   957,   956,   954,  2925,     0,     0,     0,  2918,  2919,
       0,     0,  2893,  2894,  2895,     0,  2900,     0,  2875,  2876,
    2877,     0,  2210,  1944,  2154,  2214,  2215,     0,  2176,     0,
       0,     0,     0,     0,  2175,  2145,     0,  2168,  2126,  2211,
    2144,  1866,  2203,  2141,  2142,  1214,     0,  1197,  1804,  1776,
       0,     0,  1766,  1807,     0,  1807,  1768,  1769,  1776,     0,
    1776,  1771,   395,  2389,     0,  2394,     0,  1944,     0,  3219,
     142,   959,     0,   162,  3079,     0,     0,     0,     0,     0,
       0,   173,   703,     0,  3196,  3184,   143,   171,   160,   172,
     168,  3193,   224,   156,     0,  2425,  2000,  1997,     0,  1989,
    1991,  1992,  2434,  1994,     0,  2936,     0,  1981,  1372,  1377,
    3111,     0,     0,  1869,  1924,  1916,  1402,  1403,  1403,  2402,
       0,  2076,  2078,  2060,  1393,  1364,  1363,  1378,  1341,  3114,
    1330,     0,     0,  1071,   229,   232,   230,     0,   231,     0,
       0,   550,   549,     0,  2201,   543,  2067,   187,  2067,  2067,
    2067,   186,   188,     0,   182,   179,   189,  2067,  1091,   175,
       0,     0,     0,     0,  1944,     0,     0,     0,   193,     0,
       0,  2201,   523,   502,   503,   506,   507,   508,   959,     0,
    3053,  3054,     0,     0,     0,  3071,  3069,     0,  3070,  3068,
    3036,  3050,     0,  1088,     0,  1094,  1096,     0,     0,  3163,
    1244,     0,   304,   303,     0,   292,   278,     0,   373,   287,
     372,   453,     0,   277,     0,  1826,   246,   395,     0,   433,
       0,     0,     0,  1944,  1944,     0,     0,  1944,     0,  1944,
       0,     0,     0,     0,     0,     0,     0,  1944,  1944,     0,
       0,     0,     0,  1944,     0,  1281,     0,     0,     0,     0,
    2201,   532,     0,  2067,   492,   509,   510,   513,   514,   515,
     516,   517,   520,   518,   519,  2027,  2112,  1776,  1866,  2416,
    1866,     0,  2111,     0,     0,  1647,  1714,  1739,     0,   914,
     914,   914,  1728,   900,   918,  1721,   914,  1722,   914,  1724,
       0,  1719,  1720,     0,     0,  1479,  1498,     0,     0,     0,
       0,     0,  1654,  1651,     0,     0,     0,     0,     0,     0,
       0,  1702,     0,     0,     0,     0,     0,  1537,  1734,     0,
    1637,  1659,  1657,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2407,     0,     0,     0,   976,   982,   985,   986,   988,
     980,     0,  1618,     0,  1381,  1792,  3140,  1347,     0,     0,
       0,  3132,  1393,  3136,  3122,     0,  3137,  1062,  1695,     0,
    1440,  1436,     0,  1434,  1872,  1455,  1454,     0,     0,     0,
    1444,  1890,  1889,     0,  1685,     0,  1403,  1633,  1402,     0,
    1732,  2410,  2006,  2990,   564,   750,  3048,  1186,     0,     0,
    2244,     0,  2239,  2242,     0,   301,     0,     0,   401,     0,
       0,  3063,     0,  3083,     0,     0,     0,     0,     0,     0,
       0,  2954,   395,  2082,     0,  1315,  1319,  2306,  2947,  2948,
    2946,  1952,  1953,  1950,  1948,  1951,   451,   413,     0,   409,
     401,     0,   465,   467,   446,   475,   469,   395,   614,   608,
       0,   623,     0,   635,     0,     0,     0,     0,  1294,     0,
    1229,  1235,     0,     0,  2057,  2058,  2382,     0,     0,     0,
    2056,  2398,  2397,  2405,   682,     0,  1832,     0,     0,  2975,
    3052,     0,     0,     0,  2864,  2906,  2899,     0,     0,     0,
       0,  2923,  2917,  2914,  2915,     0,  2898,  2874,  2880,  2879,
    2882,  2884,     0,  2212,  1924,  2164,  2163,  1939,  1929,     0,
    1932,  1931,  1934,  2137,  2156,  2158,  2213,  1213,     0,  1220,
    1218,  1806,  1799,     0,  3117,  1393,  1796,  1797,  1805,  1776,
       0,     0,  1770,  1767,  1808,     0,  1807,  1807,  1776,     0,
    1750,  2087,  2090,     0,  1749,  1859,     0,  2393,     0,     0,
    3209,  3221,     0,   161,     0,  1053,  1055,  1054,  1039,  1038,
       0,   137,   139,   959,   174,  2067,  2067,  2067,  2067,  2067,
       0,  2067,  2067,     0,  2067,  2067,     0,  2067,  2067,  2067,
    2067,  2067,  2067,  2067,  2067,  2067,  2067,     0,     0,  2067,
    2067,  2067,   792,   132,   579,   593,   704,   707,   732,   733,
       0,   202,     0,     0,  3163,     0,     0,   145,   948,  1993,
       0,     0,  2401,  1918,  1921,  1394,     0,     0,  1353,  3112,
    1868,     0,  1870,  1881,  1374,  1396,  1404,  1399,     0,  2074,
       0,  1339,  1381,  1341,     0,     0,  1331,  1332,   749,   748,
     234,   233,   238,   239,  1970,  1971,  1968,  1969,   556,   569,
    1972,   570,   544,  1944,  2072,  2071,  1944,  1944,  1944,   181,
     178,  2070,  2069,  1944,  1944,   176,   197,   196,   198,   199,
     201,   200,   195,  1087,     0,   557,   558,   524,     0,   504,
    1174,  2067,  1174,     0,  1174,     0,     0,     0,     0,     0,
    1174,     0,     0,  1161,     0,  2067,  1174,     0,     0,   597,
       0,     0,  1192,     0,     0,     0,  1108,  1160,   705,  1068,
    1107,  1109,  1121,   593,     0,  1139,  1163,  1164,  1162,     0,
    3057,  3059,  3042,  3041,  3040,  3037,     0,  1944,  1944,  1944,
       0,  1944,  3078,  3080,  3092,     0,     0,   207,  3165,     0,
    3167,     0,  1248,     0,  1247,   894,   916,   916,   914,   842,
     841,   880,   914,   853,   900,   896,     0,   900,   900,   873,
     872,   890,   869,   876,   861,   964,   964,   860,   893,   964,
     877,   875,   879,     0,   881,   900,   886,   874,   878,   895,
       0,     0,   892,   914,   914,   914,   857,   891,   964,     0,
       0,   884,   914,   955,   832,   834,   833,   835,   836,   900,
     916,   916,     0,     0,   914,   918,   375,     0,     0,   296,
       0,   273,     0,  1829,     0,  1830,  1827,  1828,   395,   437,
    1944,  1944,  1944,    93,    94,    89,   121,   122,    91,    92,
      97,    96,    98,    99,   102,   103,   100,    95,   101,    90,
     125,   127,   126,   104,   123,   124,    88,   563,   562,   561,
     560,   533,     0,     0,  2201,   511,     0,  1866,  1915,  2419,
    2103,     0,  1566,  1740,     0,   915,  1715,  1716,  1730,     0,
    1726,   902,   901,     0,   919,  1727,  1718,  1723,  1729,  1725,
    1514,  1539,  1591,     0,  1496,  1592,     0,  1623,  1518,  1517,
       0,     0,  1572,     0,     0,  1574,  1575,  1602,     0,  1576,
       0,  1700,  1684,  1682,     0,     0,  1546,     0,  1605,  1548,
       0,     0,  1639,  1607,  1680,  1629,  1578,  1611,     0,  1551,
    1510,  1962,  1961,  1959,  1525,  1944,     0,  1579,     0,  1584,
    1582,     0,  1555,     0,     0,  1562,     0,  1560,     0,  1561,
       0,  1563,  1615,  1617,     0,     0,   987,   973,   974,   975,
       0,   977,   979,   981,     0,  1944,  1631,  3129,  1402,  3141,
    3143,     0,  3133,  1348,  1793,  3130,  3121,  1791,  1787,  1789,
       0,  1697,  1432,     0,  1441,  1438,     0,  1435,  1892,  1891,
    1921,     0,     0,  1404,  1644,  1634,  2005,    80,  1944,     0,
       0,   482,  2382,   459,   405,   457,   364,   359,   367,   361,
     363,   362,   368,   369,   370,   371,   365,   360,   366,   358,
     357,  3064,     0,  2983,  2988,  3045,  3044,  3067,  3067,  3067,
       0,   423,     0,  2037,  1310,  1315,  1319,     0,  1311,  2317,
     403,   407,   395,   445,     0,   615,   616,   618,  1403,   632,
     610,     0,   601,   604,     0,   614,  1291,  1240,   464,  2054,
    2063,     0,  2382,  2051,   587,  2382,     0,   682,     0,  1381,
    1386,   597,     0,   326,     0,  2972,  2973,  2971,  2928,  2927,
    2921,  2920,  2922,  2901,     0,     0,  1966,  1967,  1965,  1963,
    1964,  2155,  1928,  1924,  2151,     0,     0,  1801,     0,  1859,
    1781,  1782,  1784,  1393,  1795,     0,  1747,  1776,     0,     0,
    1755,  1776,  1751,  1753,     0,  1866,     0,  1824,   462,  2395,
    1402,  2986,     0,   135,     0,     0,   134,  1944,  1944,  1944,
       0,     0,  2067,  1944,     0,  2067,     0,  1944,   580,  1944,
    1944,  1944,  1944,     0,     0,  1944,  1944,  1944,  1944,   738,
     739,   737,  1944,  1944,   730,  1060,     0,     0,     0,     0,
     766,   767,   769,   770,   771,     0,   793,   772,   699,  1014,
    1014,   795,  2411,  2317,   592,   594,   959,   708,     0,     0,
     270,   227,     0,     0,   268,     0,   764,   765,   763,   762,
       0,  3163,     0,  1998,  1990,  1995,     0,  1922,  1923,  1920,
    2936,  1402,  1878,     0,     0,  1380,     0,  1400,  1408,  1407,
    2399,  2404,  2077,  1329,  1393,  1382,  1393,     0,  1333,  1378,
     185,   184,   180,   177,   190,   183,   194,   505,  1175,  1060,
     699,  1143,  1145,   697,     0,     0,  1284,  2029,     0,  1284,
       0,  1154,  1103,  2029,     0,  2031,     0,  2029,  2029,  1155,
       0,  1104,     0,  2029,  1284,     0,   595,  1284,  1123,  1195,
    1193,  1194,     0,  1284,  1284,     0,   706,   959,  1105,  1106,
     792,  1189,  3058,  3056,  3055,     0,  3038,  3074,  3072,  3073,
    3076,     0,     0,  3075,  3077,  3093,     0,     0,     0,  1093,
       0,   210,   208,   218,  3164,     0,  1079,  2382,  3167,  1250,
    1251,     0,   917,   848,   840,   858,   856,   904,   897,     0,
     904,   904,   962,   967,   965,   963,     0,   969,   867,   880,
     862,     0,   964,   868,   866,   882,   885,   887,   889,   904,
       0,     0,   375,     0,   964,   855,   854,   864,     0,   851,
     904,   941,   898,   883,   964,   969,   964,   969,   904,   904,
       0,   288,   294,  1944,   298,   374,  1124,     0,  1125,  1136,
    1138,  1318,     0,     0,     0,   114,   116,     0,   118,   120,
       0,   110,   112,   494,   559,   512,  2112,  2105,  1940,     0,
       0,     0,     0,     0,   964,     0,     0,   914,  1490,   900,
    1486,  1488,  1484,     0,   881,  1487,   914,     0,  1493,  1495,
    1480,  1481,  1482,  1483,     0,  1655,     0,     0,     0,     0,
       0,     0,  1706,     0,     0,     0,     0,     0,  1513,     0,
    1635,     0,  1980,  1979,  1978,     0,     0,     0,     0,     0,
       0,  1559,  1557,  1558,   971,  1620,     0,   984,   978,   976,
     983,     0,  1794,  3142,  1351,  3131,  1381,     0,  1063,  1437,
       0,     0,  1894,     0,  1877,     0,  1687,  1645,  2271,     0,
    2269,  2245,  2272,   302,     0,  3081,  3081,  3081,     0,   395,
     419,   422,  2083,  1312,  1320,  2319,  2318,     0,   395,   449,
     619,     0,     0,     0,   639,     0,   637,   613,     0,     0,
       0,     0,  3117,  2052,  2055,  1381,  2407,  1393,  1382,  1393,
     687,  1402,  1773,  1833,  2974,  2881,  2883,  2157,  1219,  1221,
    1798,  1386,  1800,  1778,     0,  1786,  1785,  3139,     0,  1743,
    1776,  1776,     0,  1743,     0,     0,  2089,  1915,  2091,  1777,
    1821,  3138,     0,     0,     0,     0,   716,   713,   725,   715,
     740,     0,   728,   710,     0,   760,   761,   759,   734,   741,
     711,   712,   718,   717,  1977,  1976,   727,   714,   757,   755,
     752,   754,   753,   758,   756,   729,   747,   720,   719,   722,
     721,   724,   723,   726,   742,     0,   794,  1061,     0,  2414,
     575,   571,   792,     0,     0,     0,  1014,   788,   699,     0,
     773,  1060,  1015,   699,   699,     0,     0,   573,   689,   709,
     746,   745,   743,   744,     0,   264,  3197,   486,   485,     0,
    3167,   248,  3191,   227,     0,     0,   949,  2320,  1921,  1395,
       0,     0,  1984,  1986,  1879,  1880,  1875,  1871,     0,  1882,
    1884,  1406,  1405,     0,  1357,  1376,  1355,  1343,  1334,  1335,
    1381,     0,  1284,     0,  1141,  1170,  1171,     0,     0,     0,
    1115,     0,     0,     0,  2029,     0,  1152,     0,     0,     0,
    1172,  1173,     0,     0,  1911,  1913,  1921,     0,     0,  1158,
    1131,     0,  1120,  1174,  1174,  1140,     0,     0,  1191,  1142,
    3060,  1947,  1946,   217,   206,     0,     0,  1095,  1097,     0,
       0,  1098,  3166,     0,  1077,  1256,     0,   905,   906,   907,
     843,     0,  1064,   845,   839,   968,   961,   970,   966,   863,
     888,   844,     0,     0,   284,     0,   282,   291,     0,   865,
     375,   279,   852,     0,   859,   846,   847,   849,   850,   837,
     838,   376,  1944,   293,   309,   308,     0,     0,  1314,     0,
    1831,   395,   106,  1944,   107,  1944,   105,  1944,     0,  2100,
    1567,   912,   910,   913,   911,  1717,     0,  1492,  1489,   882,
    1491,  1485,   964,  1595,  1570,  1573,  1571,  1603,  1703,  1921,
    1701,  1708,     0,     0,  1707,  1601,     0,  1547,  1636,     0,
       0,  1612,  1526,  1944,  1580,  1583,  1581,  1586,  1587,     0,
    1619,  1944,  1915,  1790,  1439,     0,  1897,  1896,     0,     0,
    1921,  1921,  2267,  1944,     0,  2243,  3084,     0,  2981,  2982,
    2980,  2964,   395,   424,     0,     0,     0,   617,   620,     0,
     612,     0,   636,     0,   602,  2062,  2064,   589,   591,  1393,
     685,   684,   586,   688,   686,   584,   683,  1402,  1783,     0,
    1756,     0,  1760,  1765,  1761,     0,  1752,     0,  1940,  1825,
       0,  1403,     0,     0,     0,  1921,  1058,     0,   735,   736,
    2264,   581,     0,  3117,   703,   768,     0,   699,  1010,  1011,
    1060,   992,  1035,  2411,  1060,  1060,   799,   789,   797,  2413,
     690,  2382,     0,   267,   265,   266,     0,   260,   262,     0,
     236,   228,     0,   395,   489,   487,   488,     0,   144,     0,
     249,     0,   251,   252,     0,  3194,  3190,  3167,     0,  2328,
    1919,  1403,  1982,  1402,     0,     0,  2400,  3111,  1393,  1366,
    1365,     0,  1126,     0,     0,     0,  1114,     0,  1270,  1119,
     955,  1150,     0,  1110,  1153,  1186,     0,  1189,  1112,     0,
    1914,   596,  1111,  1133,  1117,  1144,  1190,   204,   209,   219,
     220,  1081,  1378,  1344,  3170,  3176,     0,  1257,  1253,  1254,
    1249,   908,   909,   964,     0,   375,   283,   286,     0,   964,
     289,     0,     0,   317,   315,   395,   305,   313,   307,     0,
     314,     0,   300,  1137,   395,   115,   119,   111,     0,  1941,
    2106,     0,  1494,     0,  1705,  1667,  1709,  1710,     0,  1638,
    1640,     0,   972,     0,  1924,  1893,  1887,     0,     0,     0,
       0,     0,     0,  1906,  1898,     0,  1876,  1691,  2270,     0,
       0,  3088,  3082,  3086,     0,     0,   472,  1402,   625,     0,
     642,   641,   638,   681,  3111,  1802,  1859,     0,     0,     0,
       0,     0,  2088,  1813,  1814,     0,     0,  1819,  1823,     0,
       0,     0,  2936,     0,  1057,     0,  2936,     0,   576,   578,
     593,     0,  1060,  1035,  2411,     0,   996,     0,   774,     0,
     778,   780,   801,   796,   790,   920,     0,   583,   215,   271,
     264,   263,   237,  3198,  1402,   269,     0,     0,     0,   253,
    3192,     0,   146,     0,     0,     0,     0,  2321,  2323,     0,
    1999,  1987,  1985,  1885,  1883,  1356,  1342,     0,  1128,   698,
    1157,     0,  1189,  1116,  1159,  1151,  1149,     0,  1148,  1284,
    1912,  1132,  1134,  1232,   211,  1099,   395,  1381,  1344,     0,
       0,  3122,  3172,  3171,     0,  3168,  1252,     0,  1259,   870,
    1065,   290,   285,   871,   280,   899,  1944,   295,   316,   299,
     297,  1942,     0,  1402,  2101,   903,  1921,     0,     0,  1545,
    1527,  1621,  1393,     0,  1903,     0,     0,  1901,  1900,     0,
    1895,  1902,  2273,  3087,  3085,  2084,  1771,   445,     0,   633,
       0,   647,   645,     0,   668,   585,  1381,  1779,  1757,     0,
    1762,     0,  1754,  1809,  1809,  1820,  2391,     0,  2936,  1025,
    1921,     0,  1027,   731,  2317,   791,   786,   782,     0,     0,
     995,     0,  1000,  1036,     0,   776,     0,     0,     0,   821,
     990,   818,   800,   802,   936,   804,     0,     0,     0,   927,
       0,   932,     0,     0,   924,     0,     0,   798,     0,   805,
     921,   923,   931,  2412,   207,   216,   261,  3185,   250,     0,
     258,     0,  3195,     0,     0,     0,     0,  2322,     0,     0,
    2329,  2331,     0,     0,     0,  1127,     0,     0,     0,  3138,
     830,   831,  1156,   828,   829,  1147,   597,  1113,     0,  1118,
       0,   213,   221,  3169,  1382,  1393,  1393,     0,  3173,  1378,
    3115,     0,     0,     0,  1258,  1263,     0,  1260,  1262,     0,
     306,  1943,  2107,  1704,  1712,  1711,  1350,  1904,     0,  1905,
       0,  1908,     0,  1909,     0,  2307,   473,  1403,     0,   626,
       0,   629,   631,     0,   643,  2067,  2067,     0,     0,  2067,
    2067,  2067,  2067,   661,   669,   671,     0,  1803,     0,     0,
       0,  1817,  1815,     0,  1023,     0,  2067,     0,  1165,  1026,
    1051,  1033,     0,  1056,  1059,  1165,  1028,  1050,  1031,   572,
       0,     0,   784,   993,     0,   997,   998,   999,     0,   991,
       0,     0,     0,     0,   820,   819,   803,   935,   934,     0,
     929,   930,     0,   925,   809,     0,     0,     0,   922,   218,
       0,     0,     0,  2326,  2327,     0,  2324,     0,     0,  2330,
    1146,  1130,     0,     0,  2363,  2362,     0,  1122,     0,   212,
       0,   205,  1393,  1358,  1361,  1346,  3175,  3174,  1381,     0,
       0,  3177,     0,  1255,     0,   281,  1899,  1907,  1910,  2085,
    2093,     0,   948,     0,   634,   627,     0,   654,   646,   650,
       0,     0,     0,  2067,  2067,     0,     0,     0,     0,     0,
     640,   670,  2067,  1759,  1764,     0,  1810,     0,     0,     0,
     192,     0,     0,  1165,  1024,  1049,  1048,  1029,  1043,  1944,
       0,   138,  1167,  1166,  1034,     0,   140,  1032,     0,     0,
       0,   994,     0,     0,     0,     0,     0,     0,   940,   939,
     937,   938,   933,  1409,   928,   806,     0,     0,   256,     0,
    2325,  2333,  2332,  1129,     0,   827,     0,   214,  1362,     0,
    1393,  1382,  1367,  1368,  3116,  3178,  3179,  1261,     0,     0,
    2308,   621,   633,   630,   654,     0,   652,     0,   648,   644,
     649,   680,   674,     0,     0,   676,   677,   675,   672,   665,
       0,   663,     0,  1812,  1811,  1826,     0,  1041,  1040,   136,
    1030,  1042,  1052,  1169,  1168,  1047,  1046,  1044,  1045,     0,
       0,     0,  1006,     0,  1005,     0,  1002,  1001,  1023,     0,
    1025,  1027,     0,   926,   810,   220,  1402,     0,   254,     0,
       0,  1360,  1345,  1369,  2092,  2094,  2334,   628,   651,     0,
     659,   655,   657,   660,   678,   679,     0,   662,     0,   673,
       0,     0,     0,  1023,     0,  1008,  1009,  1007,     0,     0,
     775,  1023,   779,   781,  1410,     0,   812,   813,   811,   814,
     203,  3186,   257,     0,     0,  1135,     0,  2320,   653,     0,
       0,   668,   667,   664,  1818,  1816,   787,   783,  1023,     0,
       0,   777,  1411,   807,   815,   817,     0,   255,     0,  2328,
     658,   656,   666,   785,  1004,  1003,   816,     0,     0,  2336,
    3187,  2335,     0,  2340,  3182,     0,     0,  2347,  3180,  3181,
       0,  3188,  2338,  2339,  2337,  2342,     0,     0,  2344,  2345,
       0,  2309,  3183,   395,  2346,  2341,     0,  2348,  2350,     0,
    3189,  2343,     0,  1402,  2349,     0,  1403,  2351
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4811, -4811, -4811, -4811,  2050,  3892, -4811, -4811, -4811,  3869,
   -4811, -4811, -4811, -4811,  3445, -4811, -4811,  1643, -4811, -4811,
   -4811, -4811, -4811,  1809, -4811,   310, -4811,   312, -4811,   313,
   -2766,  -546,  3802, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
    3165,  2542, -4811, -4811, -4811,  1982, -2760, -4811, -4811,  -133,
    1383, -4811, -4811,   186, -4811,  -179, -4811, -4811, -4811, -3984,
    -320,  -504, -4811,   108,    22,  3723,   459, -3320, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,   337, -4811, -4390, -4811,
   -4811,    -5, -4811, -4811, -4811, -4811, -4811, -1994,  -601, -1330,
   -4811,   362, -4811,   113, -4811,    -4, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,    94, -4811, -4811, -4811,   -64,   731,  2616,
   -4811, -4811, -4811,  4908, -4811,  4304, -4811, -2088,  2728, -4811,
   -4811, -4811, -4811, -4811,  2819, -2014, -4811, -4811, -4811,  1675,
   -4811,  2486, -4811, -3924,     6, -1008,    62, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -2031,  1648, -4811,  1681, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,   630, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  2473,
   -4811, -4811,  4217, -4811, -4811, -4811, -4811,  1061, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  2774, -4811,  2771,  2770,
   -4811,  2778, -4811, -2740, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  3705, -4811, -4811, -4811,
   -2652, -4811, -4811, -2889,  3158, -4811, -2244, -4811, -4811, -2290,
   -4811, -4811, -2104,  1418, -4811, -4811,  1565,  -384, -4811, -1674,
   -2339, -2324, -4811, -4811, -4811, -2425, -2412,  -848,  2871, -1332,
   -2835, -4811, -4811, -4811, -4811, -4811,   -87,   241, -4811, -4811,
   -4811,    61,  1395,  1947, -4811, -3473, -4811, -4811,   457, -4811,
   -4811, -4811, -4811,  1076,   307,  1073, -4811,   648,  2789, -2344,
   -4811, -4811, -4811, -4811, -4811, -4811,  -303,   -44,  -387, -4811,
   -4784,   314, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -3439, -4811, -4811, -4811,  -493, -4811, -4811,  -460, -4811, -4811,
    -492, -4811,  -193,  1541,  1075, -4811, -4811,   649, -4073, -4811,
   -4811,  2647, -1680, -4811,  -649, -4811, -3326,  1428, -3218, -2909,
   -4811, -1118, -1116, -3895, -4811, -4811, -4811, -4811,   878, -4811,
     565,  1426, -3390, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -3389, -4811, -4454, -4811, -4811, -4223, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -3309, -4811,
   -4811,  -118,  -235, -4811,   -77,   559, -4811, -4811, -4811, -4811,
   -4811, -4811, -1675,  1263,  1382, -4811, -4811, -4811, -4811, -3300,
   -2913,  -657, -2765, -2828, -1067,  1342, -4811, -4811,   -81, -4811,
   -4546, -3213,  -650, -2471, -2890,  -272, -4811, -4811,   -69, -3509,
    2031, -4811,   850, -3396, -1472,  1810, -4811, -4811,  1204, -4811,
   -1230,  1202, -4811, -4811, -4811,  1211, -4811,  -434, -4811, -4811,
   -4811, -4811, -3725, -4811, -1796, -3767, -4811, -4811,  4955,  4956,
   -2609,  -399,  -396, -4811, -4811, -4811,   109, -4811, -4811, -2336,
    -288,  -177,  -172, -2884, -4221,   127, -2791, -4811,   849, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  1458,
   -2534, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -3331, -3860,
   -4811, -4811,   917, -3800, -2978, -2979, -3384,  3901, -4811, -4811,
   -4811, -4811,  3819, -3178, -3552, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,  3331,  1210, -4811, -4811,  2147, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,    64,  2220, -4811, -4811,
   -4811, -4811, -4811,  2584, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,  -230, -4811, -4811, -4811, -4811, -4811,   265,  3192,
   -4811, -4811, -4811, -4811,    -9, -4811, -4811, -4811, -4811,  2848,
   -4811, -4811, -4811, -4811,  3221, -4811, -4811, -4811, -4811, -4811,
   -4811,  1766, -4811,  2279, -4811, -1760, -4811, -4811,  1163,  -144,
   -4811, -4811,  3879, -4811, -4811,  1563, -4811,    79, -4811,  1841,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,  2654, -3353, -1785, -4811, -1175, -1749, -4811, -4811, -3664,
   -4811,  3296, -1712, -3722,  2095,   206,  -142, -2923,  1219, -4811,
    1827,  1653,  6909, -4811, -1329, -1363, -4811, -4811,     7, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  2509,  2514,
   -4577,  -686, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  1828, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  3639, -1435, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  -997, -4811,
   -2460, -4811, -4811, -4811, -4811,  -542, -4811,  3750, -4811,  3809,
   -2737, -1661,  2167,  1689, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,  2176, -4811, -1832, -4811, -3242, -4811, -4811, -4811, -4811,
   -4811,   717, -4811, -3685, -4811,  1258, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811,  2186, -4811, -4811, -2281,    39,
   -4811,   188, -4811, -4811, -4811, -4811, -4811, -4811, -4811,  -310,
     875,  -308, -3612, -1289,  2255, -4811, -4811, -1509,  3804, -2016,
   -4811, -4811, -4811,  2396, -4811,  1609, -4811, -4811, -4811,   331,
     334, -4811, -4811,  1858, -4811, -4811, -4811, -4811,   451,   -56,
   -4811, -4811, -4811,   315, -3566, -2323, -4811,   458, -3709, -1096,
   -4811, -1072, -4811, -1629,  1737,   409, -2474, -4811,  1114, -1302,
    -282, -2968, -3926, -2919, -4811, -1694, -4811,  2726, -4811, -4811,
   -4811,   355, -4811, -4811, -4811,  1638, -4811, -1721, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811,  -616, -1037, -4811,
   -4811,  2590,  -986,  -140,  5056,     2, -4811, -4811,    10, -4811,
   -4811, -4811, -4811,  3597,  3551,  2356, -4811, -4811, -3114, -2688,
   -4811,   782, -1071,  1213,  2119, -4811,  2725, -4811, -4811,  1245,
   -2363, -4811, -4811, -4811,    12, -4811, -4811, -4811,  1164, -4811,
    -239,  4482,    13, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,  3267, -1219,  4376, -4811, -4811, -4811, -4811, -4811, -4811,
    2827, -4811, -4811, -4811, -4811, -4811, -4811,  3483,  4495,  -654,
   -1555, -4811,  -927,  2830,  2250,  -988, -4811, -4811, -4811,  3967,
    4502, -4811, -4811,  5053, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  3034,   435, -4811, -4811,   493, -4811, -4811,
   -4811, -4811,  3574, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811,  1265,  -330, -4811,   209,
    -347, -4811,    47, -4811, -4811, -4811, -4811, -4811,  -377, -4811,
   -4811,  -381, -4811, -1173,  4292, -1624, -4811, -1477, -3021, -4811,
   -1374,  1773, -4811, -4811, -4811,  2825, -4811, -4811, -4811, -4811,
    1250,  2768, -3159,  -769, -1381, -4811, -1386, -3220,   345, -4811,
   -4811,  4264,   120,  -531, -2113, -4811,    -6, -4811,  -993,  -107,
    -583,  -666,  -955,  3657, -1618,  -424, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
    2299, -4811, -4811, -4811,  1235, -4811,  4534, -4811,  3137, -1587,
    4537,  2922,  2916,  2316,  2318, -4811, -4811, -4811, -4811, -2096,
   -4811, -4811, -1536,   211, -4811,  3006, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811, -4811,  3448,  -512,  -511,  3579,  4557,  4138, -4811,
    3678, -4811, -4811, -4811, -4811, -4811,  1601, -4811,   700,  2359,
   -1438, -3060, -4811, -4811,  2744,  1223, -4811,  1922, -2260, -2684,
   -4811,  2275,  -689, -4811, -4811,   329, -4811, -4811, -4811,  1613,
     369,  4569,  4154, -4811, -4811, -4811, -4811, -2614, -2812,  -710,
   -4811, -4810, -4811, -1773, -4811, -1197,  1829, -3153, -4811,  -116,
   -4811, -4811, -3118, -3096,  1255, -1290,  2313,   845, -4811, -4811,
   -2980,   145,  5154,  5155,  5157,  -453, -4811, -2900, -4811, -3974,
   -4811,   -45, -4811, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811,  2858, -4811, -4811,     3, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811,  2202, -4811, -4811, -4811, -4811, -4811, -4811, -4811,
   -4811, -4811
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,   685,  1748,    65,    66,    67,    68,    69,   957,
     958,    70,   959,  1479,  1482,  2121,  2741,  2742,    71,   624,
      72,  1859,  2525,  2526,  4240,  4241,  4234,  4235,  4237,  4238,
    2527,   758,   759,    73,  2952,  2951,  4403,  3994,  3995,  2368,
    3484,  4061,  1761,  1760,  1759,  1766,  2390,  1764,  2384,   693,
    2385,  2957,  2386,  2958,  3443,  3028,  3029,  1180,  2945,  3037,
    3038,  2377,  4049,  4159,  4994,  4163,  5151,  5281,  5114,  3065,
    4561,  4995,  4996,   619,  2961,  1819,  4476,  2440,  4761,  2441,
      74,   751,  1255,  1852,  1853,  4769,  4770,  4771,  4772,  4756,
    4757,  4758,  4759,  4055,  4481,  4051,  4475,  2481,  1023,  1845,
    2482,  4590,  4583,  4584,  4585,  4202,  3074,  3075,  3076,  4602,
    4224,  4607,  3285,  3286,  3872,  3077,  4845,  4846,  4847,  4604,
    1070,  4848,    75,   650,   651,  1072,  1615,  2139,  1616,    76,
      77,   618,  1508,  1509,  1510,  1511,  2761,  2140,  2756,  2757,
    3889,  4591,  3079,  4221,  1024,  1025,  1026,    79,   625,  1027,
    1028,  1029,  1566,  1030,  1031,  2753,  2809,  3318,  2754,  3287,
    2810,  2198,  1032,  1033,  1034,  1035,  1571,  1002,  1003,  2786,
    3901,  4341,    80,   586,   754,   755,  1858,  2499,   756,  2500,
    3088,  4233,   757,  1257,  2496,  1259,  1036,  3322,  1037,  1038,
    2207,  1039,  1557,    81,  1248,  2135,   961,  1505,  1040,  1156,
    2359,  1059,  2223,  3323,  1041,  2204,  2206,  2203,  3321,  5047,
    2205,    82,   635,   672,   616,  1503,   645,  4479,  4767,   727,
     728,   769,  2548,   729,  1273,  1222,  1821,  2466,  2467,  3043,
    3044,  3124,  3125,  3126,  2458,  2459,  2460,  2537,  2538,  2539,
    2447,  2448,  2449,  1826,  2444,  2445,   730,  1223,  1234,  2461,
    2462,  2463,  3130,  2541,  2542,  2543,  2544,  2464,  2112,  2465,
    3528,  3473,  4734,  4732,  4733,  3474,  4467,  2846,  4904,  4361,
    4362,  4043,  4044,  4045,  4537,  2488,    83,   638,  1048,  1580,
    2212,  3334,  2819,  2213,  3336,  3914,  3915,  3916,  2820,  2823,
    4898,  2825,  3333,  5049,  5392,  5190,  5191,  3918,  5189,  3922,
    4355,  4356,  4691,  4900,  5054,  5310,  5193,  5399,  5308,  5395,
    5309,  5397,  5500,  5461,  5462,  5320,  5410,  5411,  5466,  5501,
    5203,  5204,  5205,  3347,  3939,  3940,  4699,  4367,  4702,  4751,
    2940,  1811,  1812,  4514,  2387,    84,  3475,  3587,  3476,  3477,
    4445,  3478,  3479,  3274,  1674,  4435,  4418,  4060,  4029,  4030,
    4031,  4032,  4033,  5084,  5241,  5086,  5087,  5231,  5350,  5230,
    4034,  4943,  4457,  4035,  4036,  4037,  4465,  4747,  4945,  4942,
    5092,  5093,  5107,  5444,  5108,  5489,  5513,  5514,  5094,    85,
     637,  1412,  5140,  5141,  5142,  3673,  3674,  3675,  3676,  3677,
    3678,  3679,  3680,  3681,  3682,  3683,  3684,  3685,  4594,  3750,
    3751,  4570,  3745,  3746,  4173,  3755,  5109,  5110,  5111,  5251,
    5112,  3686,  4186,  1637,  1638,  4063,  1650,  1651,  2871,  2252,
    2872,  1815,  4187,  4188,  4578,  3825,  4659,  3831,  3832,  3833,
    3225,  3226,  3227,  3228,  3229,  2684,  5096,  4460,  4936,  5079,
    5082,  5239,  5436,  4458,  4038,  4463,  1133,   694,  4039,  4040,
    5333,  5218,  5225,  5334,  5226,  5219,  4938,  2948,  5335,  5336,
    5337,  5228,  5221,  3438,  4724,  4725,  4446,  3851,  4571,    86,
     145,  3048,  1214,  1225,  1221,  3069,  2475,  2474,  1227,  1226,
    2453,  3066,  3617,  4821,   715,  3589,  4989,  4798,  4993,  3590,
    4227,  3591,  4978,  5135,  3592,  4813,  4991,  5148,  4228,  4229,
    3593,  3594,  3595,  5341,  5342,  5343,  4103,  1545,   732,   733,
    1238,  1239,  1240,  2736,  4549,  4132,    87,  2344,  2339,    88,
    1146,  1147,  1148,  1722,  1723,  2342,  2343,  2917,  3400,    89,
     761,  1863,  1590,  2221,    90,  1057,  2838,  2839,  2840,  3340,
      91,  1247,  1842,  1843,  2479,  3624,  4171,  4565,  4830,  5008,
    4826,  5166,  5167,    92,   763,  1266,    93,   591,  1871,  1872,
    1873,  2530,    94,  1579,   154,    95,  1056,  1583,  1586,  1587,
      96,   750,  1249,  1250,  1251,  1252,  2484,    97,  2184,  2789,
    2790,  2791,  2792,  1849,  3084,  1850,  1851,  2493,  3908,    98,
     712,  2999,  1201,  1202,  1203,  3514,  3515,  4999,  5000,  3238,
    3239,  3240,  1775,  2980,  4083,  4787,  5153,  5379,  2994,  4788,
    5380,  1776,  1777,  1197,  1198,  2414,  1779,  1780,  2395,  1795,
    1796,  1797,  4703,  2417,  2418,  1719,  2419,  3506,  4077,  5443,
    1312,  1308,   912,   913,   914,   915,  1424,  1425,  5097,   916,
    1434,  2070,  3764,  4270,  4271,  4272,  4273,  4632,  1909,  1910,
     917,   918,   919,   920,   921,   922,   923,  2103,  3791,  3792,
    4290,  2722,  2723,  2724,   924,  2586,  3770,  2603,   925,   926,
     927,   928,   929,  3265,   930,  3862,  4498,   931,  1418,  2056,
    1971,  4282,  3781,  4638,  4642,  4643,  4644,  4866,  1891,  2562,
    3160,  4254,  3161,  3162,  3269,  2687,  1342,  1343,  1291,  1292,
    2350,  2351,  2352,  2353,  2354,  4394,  4395,  4907,  4711,  4909,
    4715,  2927,  2928,  2227,  2228,  2355,  2356,  2357,  2358,  3403,
    4384,  3847,  4317,  3243,  3234,  3235,  3236,  3404,  3405,  3406,
    3407,  3968,  4380,  4381,  5056,  2918,  3409,  3967,  3415,  5211,
    4916,  4917,  5329,  5328,  4918,  4719,  4720,  4399,  4400,  3694,
    3695,  3696,  3355,  1960,  1961,  1969,  1538,  1539,  1892,  2412,
    2981,  3503,  4073,  2709,  2983,  3859,  4496,  4075,  4499,  4500,
    2098,  2717,  3261,  2719,  4322,  4668,  4669,  4883,  5034,  5035,
    5040,  3598,  4534,  4535,  2984,  1781,  2974,  3493,  4069,  1677,
    1678,  1782,  2306,  3387,  3388,  4619,  2801,  4153,  4425,  3230,
    3204,  3383,  3529,  1928,  1929,  4426,  4295,  2407,  3497,  4491,
    4492,  4493,  2399,  2400,  2969,  2970,  2971,  1783,  2401,  3488,
    4487,    99,   598,   100,  2119,  1476,  2118,  2749,  1264,  1594,
    1878,  1879,   946,   146,   612,   101,   626,  2787,   102,   646,
    2225,  1007,  1062,  1595,  1596,  2847,  3343,  3348,  2848,  1800,
    3929,  3930,  2731,  3542,  3543,  3536,  1801,  2421,  2990,  2991,
    2744,  3903,  4684,  5184,   103,   670,  3985,  3421,  3422,  5299,
    5300,  1063,   104,   597,  1277,  3138,  4860,  1884,  2550,  5024,
    1278,  1279,  2553,   774,   775,   105,  1151,   666,  1701,  1702,
    1703,  2326,   106,   658,  1134,  3384,  3963,  2300,  1052,  1473,
    1682,  1137,  1683,  2284,  2894,  1661,   107,  1196,  1195,   747,
     108,   109,   705,   155,  1769,   110,   960,  1498,  2132,  3282,
    3283,  3869,  1499,  1500,  2750,  2746,  4329,  4330,  4675,   111,
     647,  1067,  1068,  1600,  1598,  2853,  2230,   112,   640,  1053,
    2216,   113,   629,  1012,  1549,  2183,   114,   115,   116,  1014,
    3909,  5302,  5456,   633,  2186,  1553,  4468,  4779,  4967,  4968,
    4970,  5130,  5131,  5497,  5533,  5544,  5537,  5547,  5548,  5551,
    5557,  5558,   933,  1163,  1164,   934,  5144,   935,   936,   937,
     117,   118,  1158,   674,  1734,  1735,  2936,  2362,  2934,  1736,
    3350,  3351,  3494,   938,  3352,  2041,   939,  4447,  1265,  1881,
     622,   578,   724,  1165,  2966,  2169,   941,  2310,  1043,  1217,
    1584,  1833,  1834,   580,   581,   582,   583,   584,   585,   119,
     657,  1082,  2247,  1627,  1096,  1656,  1645,  1655,  2278,  2889,
    2281,  2890,  2891,  3954,  3379,  3955,  3380,  1140,  2268,  1628,
    3381,  1629,  2261,  2262,  2263,  2264,  3372,  1643,  2258,  2276,
     120,  1015,  2191,   590,  1555,  1556,  2798,   121,   669,   122,
    1540,  2174,  2175,  2783,  3300,  2784,   123,  1076,  1077,   124,
     990,  2943,  2767,  2108,  1220,  2109,  2158,   993,  1514,   994,
     995,  1529,  1523,  1532,  1526,  3606,  3059,  3060,  2771,  2116,
    1835,  2239,  3052,  4145,  1836,  2149,  2763,  2764,  2473,  4891,
    3613,  3063,  4678,  3893,  4892,  4893,   125,   159,   126,  4762,
     593,   766,  1272,   127,   128,   129,   130,  1207,  3498,  3499,
    2427,  5002,  5289,  1209,  1210,  1784,  3245,  1808,  2690,  2691,
    1199,  2692,  2693,  2694,  2695,  1414,  1415,  3246,  3838,  3839,
    1798,   147,   148,   149,   150,   737,   738,  3068,  3619,  4166,
    4167,  4825,  5005,  5540,  5541,  2382,  3483,  5260,  5516,  5534,
    5553,  2388,  4483,  4774,  2389,  3485,  4961,  2380,  3482,  4763,
     131,  1170,  1166,   682,  1746,  1740,  1742,  2365,  2939,   132,
     133,   134
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     579,   713,   722,  1208,  1136,   736,  2011,  1094,  1132,  1927,
     158,   742,   615,  1809,   614,  1568,  2042,  1639,  1642,   623,
    2426,  2040,  1778,  1770,  1654,   636,  1563,  1564,   577,  2142,
    2425,   639,   644,  1939,  2415,  1709,   726,  1679,  1176,   652,
    1177,  2052,   655,  1178,  1058,  2187,   652,  1978,  2551,  2307,
    1568,  1219,  2220,   671,  2308,  2492,   932,  2408,  2992,  1679,
    2311,  1886,    78,  3439,  2405,  3507,  1344,  2410,  2279,  3597,
    3596,  2141,  2071,  2072,  3325,  3326,  2075,  2076,  2077,  2078,
    3244,  2080,  2081,  2083,  2085,  2086,  2087,  2088,  2089,  2489,
    3723,  3846,  2985,  1285,  3530,  2154,  1813,  2061,  1814,  3866,
    1585,  3163,   708,  1472,  3860,  2069,  4126,   991,   992,  4413,
    2944,  2396,  3519,  3170,  1731,  1143,  4312,  3996,  1150,  1672,
    3530,  3530,  4471,  3131,   161,  3171,  2755,  3848,  3046,  3707,
     716,  2428,   579,  2317,  1218,   579,  3132,   725,   731,  3588,
    2113,   991,  1078,  3047,  1710,  1263,  2855,  2450,  1267,  3849,
    3399,  4324,  2867,  2330,   653,  3344,  3345,   743,  2785,  4084,
     718,  2333,  2334,   721,  4211,   744,  2808,   745,   746,  3621,
    4101,  4102,  4248,  3605,  1536,  4557,  3980,  3827,  4105,  3203,
    4107,  4169,  3411,  4828,  4727,  4143,  4118,  2818,  1419,  1420,
    2456,  3420,  4123,  4195,  4564,  2347,  1419,  1420,  2804,  3530,
    3530,  1530,  2540,  4129,  3555,  3556,  1711,  2734,  3049,  3128,
    1844,  1044,  2456,  1419,  1420,  3042,  2681,   660,  1409,  1410,
    1411,  1044,  1419,  1420,  3129,  4182,  3950,  2192,  3534,   698,
    1453,   663,  3933,  3385,  1419,  1420,  3735,  1419,  1420,  1419,
    1420,  3754,  1860,   634,  5215,  1189,  1419,  1420,  3121,  1527,
    4193,   643,  4041,  4194,  2214,  1159,  3840,   630,  3053,  4047,
    4529,  1419,  1420,   765, -2653,  1102,  1084,  2799,  3545,  2533,
    1573,  2799,  4207,  4464,  1547,  3614,  4371,  1010,  4587,  1659,
    2734,  3280,  2446,  3729,  3730,  2967,  1245,  4385, -1822,  1893,
    1894,  1895,  2155,  4944,  2469,   739,  4705,  2901,  1865,  1536,
    3828,  3945,  3946,  3947,  5398,  1454,  1659, -2415,  1916,  4807,
     594,  2397,  1419,  1420,  2370, -3033,  4794,  1419,  1420,  1419,
    1420,  2265,  3747,  3748,  5133,  1454, -1862, -3039,  3756,  1268,
    3758, -3016,  1744, -1822,  4177,  5486,  4345,  4180,  4181,  5476,
    4453,  5177,  3860,  3863,  3015,  4422,  1551,  5542,  5286,  1989,
    5272,  2471,  4182,  1994,  3780,  4199,  1419,  1420,  1684, -2201,
    1190,  1419,  1420, -2869,  4415,   741,  5088,  4183,  1773,  4951,
     621,  1419,  1420,  1060,  4041,  4424,  1574,  4437,  3612,  4212,
    3123,  4184,  2259,  1274,  2842,  2024,  2025,  1810,  3752,  2029,
    1810,  3559,  1102,  1084,  4439,  1236,  5095,   631,  4182,  1810,
    1806,  5027,  1460,  2266,  5143,  1889,  2044,  2045,   152,  3561,
     306,  2708,   308,  4183,  4441,  1270,   654,  2340,  2759,  3382,
    2110,  -574, -1070,  1317,   595,  -691,  2446,  4184,  1676,  1720,
     160,  1866,  2394,  3801,  -692,  1867,  2529,  2657,  1102,  4189,
     588,  4200,  1837,   589,  1419,  1420,  5216,  2799,  2446,  1868,
    3435,  4416, -2957,   707,  4213,  1160,  1161,  1733,  5128,   942,
     943,   944,  4764,  2766,   948,   949,   950,   587,  4372,   952,
     953,   954,  3054,  1898,  2490,  3329,  1184,  2799,  3223,  2799,
     162, -2958,  1159,  1690,  2946,  4454,  5487,  1102,  1084,  2452,
    1419,  1420,  2472,  5129,  3744,  2682,  2799,  1965,   592,  2429,
    2491,  1966,  4921,   153,  3224,  2341,  4768,  2843,  2947,  2457,
    2844,   762,   989,  1271,  5352,  1721,  2799,  1001,  4201,  1920,
    2115,  1861,  1318,  3802,  5089,  5143,  1419,  1420,   749,    61,
    1753,  2457,  1754,  1755,  1756,  1757,  1758,  3339,  2156,  1602,
    1807,  2760,  3053,  1204,  2546,  1890,   989,  5246,  3827,  1185,
    1774,  -577,  1937,  1061,  3214,  5051,  2845,  1237,  2248,  4417,
    2406,  1575,  1745,  1468, -2869,  2363,  5118,  1191,  2472,  5451,
    2150,  5543,  1344,  5488,  4982,  1552,  2269,  2534,  1838,  2398,
    1704,  2409, -2957,  2260,  4053,  4346,  2110,  4765,  5038,  4150,
     731,  1921,  5450,  1869,  1421,  1044,  1044,  1422, -1862,  1044,
     160,   731,  1421,  1204,  5134,  1422,   648,  5477,  2902,  1011,
     962, -2958,   596,   725,   996,  4913,  1129,  1000,   725,  1421,
    2107,  1008,  1422,  3382, -3033,  1922,  4903,  1205,  1421,  1419,
    1420,  1422,  4663,  1246,  1044,  1054,  1714,  3436,  1419,  1420,
   -3016,  2267,  2799,  1421,  3419,  1421,  1422,   725,  1422,  4706,
    1864,  1095,  1421,  1459,  1548,  1422,  1455,  1856,  1832,  2865,
    4914,  1152,  1419,  1420,  2237,  2735,  4840,  1421,  1269,  1660,
    1422,  3828,  2817,  -577,  5394,  3829,  1455,  2996,  5270,  3588,
    1174,  3307,  1160,  1161,  3545,  2413,  2254,  1205,  2979,  4739,
    2157,  1419,  1420,  1813,  2312,  1814,  1660,  2315,  1419,  1420,
    3131,  2318,  1923,  2321,  3046,  2111,  4795,   760,  3575,  1679,
    1870,   725,  5028,  3132,  1224,  2295,  2710,  4707,  1421,  3047,
    2456,  1422,  3615,  1421,  2672,  1421,  1422,  2713,  1422,  1635,
    2716,  2336,  2337,  2338,   725,  4389,  4455,  2143,  2735,  4393,
    1528,  1767,  3386,  2800,   708, -1822,  1256,  2800,  1009,  4853,
    1055,  1576,  2074,  1903,  1904,   708,  3054,  2142,   708, -1862,
   -2653,  1224,  1421,  3281,   661,  1422,  1531,  1421,  1280,  2095,
    1422,  1862,  3754,  3366,  2450,  2113,  2911,  1421,   664,  4780,
    1422,   760,  1129,  2707,   760,  1964,  3128,  2332,  1153,  3951,
    3244,  3376,  1924,  3045,  3057,  1980,  4579,  3557,  1983,  2141,
    4175,  3129,   764,  4962,  4176,  1419,  1420,  4196,  4589,  1419,
    1420,  1997,  1998,  1999,  3530,  1477,  1478,  4130,  4595, -2653,
    4597,  4363,  3327,   956,  3808,  2528,  2010,  4810,  4469,  1345,
    3731,  4718,  2821,  4144,  1044,  4204,  4205,  4206,  1162,   632,
     662,  3050,  1241,  1471,  4210,  4245,  1194,  1045,  1568, -3039,
    1421,  2849,  3051,  1422,  5217,  2215,  4218,  4185,  4625,  4313,
    2117,  4172,  4172,  1537,  2540,  1419,  1420, -2201,  3055,  3752,
    3830,  2111,  3752,  3752,  3127,  1423,  1862,  2816,  1685,  1080,
    1154, -1862, -3039,  1423,  4374,  4517,  3558,  1636,  2584,  4170,
    3752,  4829,  4131,  2560,  3140,  3395,  1421,  2696,  4244,  1422,
    1423,  2604,  2605,  1416,  1417,  4209,  4097,  4488,  3734,  1423,
    3532,  5011,  1419,  1420,  3752,  4172,  4172,  4216,  4217,  2683,
    4041,  1423,  1452,  2800,  1423,  -582,  1423,  2606,  2607,  4154,
    4864,  4456,  1421,  1423,  3437,  1422,  1463,   579,  1465,  5091,
    1467,  1224,   579,  2585,   725,  2658,   579,  1862,  1423,  2128,
    1832,  2661,  2662,  2800,  2238,  2800,  2446,  1512,   991,  4628,
    1862,  4886,  4887,  2208,  5115,  1464,  2679,  2680,  1419,  1420,
    1469, -2957,  2800,  2451,  1474,  2222,  -574, -1070,  3241, -1862,
    -691,  1640,  4766,  1644,  4185,  4905,  1647,  1652,  1537,  -692,
    3923,  2622,  2800,  2348,  1541,  4352,  2627,  2349,  1899,  1423,
   -2958,  1675,  1967,  1691,  1423,  1968,  1423, -2957,  4345,   708,
    5180,  1558,  1562,  1206,  2288,  1565,  4924,  3251,  3252,  5354,
    2316,  5356,  5357,   158,  3772,  3773,  1715,  1572,  2545,  4406,
    4185,  2659,  1925,  3306,  5353,  1421, -2958,  1218,  1422,  2457,
    1050,  4420,  4421,  1423,  1421,  1862,  3829,  1422,  1423,   725,
     708,   742,  4190,  3671,  2231,    14,   708,  1470,  1423,  3203,
    3056,  1475,  3203,  3203,  3203,  1396,  3777,  3778,  1421,  3203,
    3203,  1422,  4915,  1206,  1623,  4286,  1626,  2051,  3057, -1780,
    1419,  1420,   725,  2835,   725,  3201,  1804,   725,   725,  1419,
    1420,  5052,  5053,  2424,  2110,  1253,  4874,  1421,  2795,  3425,
    1422,  5235,   725,  1218,  1421,  4911,  1186,  1422,  1926, -1359,
    4056,  2379,  1144,  2383,  1641,   998,  2452,  2392,  2800,   991,
    2249,  4639,  3738,  2456,  3740,  -113,  -113,  5429,  5430,  3530,
    5181,  1423,  1419,  1420,  5439,  3978,  3979,  4152,  3486,  4292,
    1419,  1420,  1705,  2090,  2456,   708,  3720,  4082,  4712,  4713,
    2558,  2110,  1737,  4101,  4102, -1338,  4760,  4789,  3597,  3596,
    4118,  4485,  2835,  2442,  4670,  2430,  4671,  4019,  1725,  1832,
    1750,  1502,  4486,  1716,  4753,   617,  3058,  1423, -3020,  2869,
      28,  2799,  1749,  2874,  4754,  1419,  1420,  1419,  1420,  2924,
    1771,  4161,  3272, -1359,  4803,  3786,  3787,   743,  1717,  2887,
    4379, -3019,  3277, -1349,  4250,   744,  2546,   745,   746,  4162,
    5474,  1421,  3512,  1423,  1422,  1421,  3134,  2620,  1422,  3046,
     708,  3982,   641,  5432,  1419,  1420,  2788,  3517,  3588,   708,
    2907,  2673,  4041,  1889,  3047,   725,  4862,   579,   708,   991,
    4388,   708,  1419,  1420,  4392,  2188,   760, -3017,   760,  4057,
    1813,  1778,  1814, -3018,  1679,  4988,  3190,  4346,   656,  2796,
     708,  2428,  2830,  2831,  2700,  1839,  3848,  5179,  1591,  3943,
    1882,  1421,  3390,  3391,  1422,  2308,  2755,  2308,  2308,  3953,
    4382,  2311,  3511,  2311,  2311,  1751,  1752,  4547,  3849,  2808,
    1129,  4984,  1419,  1420,  5119,   156,   157, -3023,  5182,  4797,
    2878,  5172,  1204,  4801, -2201,  4250,  4274,  4804,  4805,  3131,
    5538,  2057,  4041,  1419,  1420,  1345,  1423,  5173,  1421,  4157,
    3599,  1422,  3132,  5359,  5236,  1423,  1145,  3293,  2443,  2905,
    1419,  1420,   708,  2921,  3809,  1345,  1200,  2533,  3142,  4755,
    2450,  1051,  2910,  3810,  3811,  2913,  2914,  2094,  2799,  1423,
     752,   708,  2922,  1419,  1420,  1419,  1420,  3396,  3244,  2446,
    1554,  5223,  2836,   989,  1419,  1420,  3416,  3855,  3856,  3045,
    4836,  4201,  4020,  1915,  1421,   708,  3250,  1422,  1423,  2111,
    2446,  1419,  1420,  2091,  3237,  1423,  1205,  4251,  1187,  5405,
    5406,  1419,  1420,  2446,  2240,  3128,  2043,  2576,  1419,  1420,
    2144,  1588,  1419,  1420,  2578,  4067,  2715,  1597,  4930,  2092,
    3129,  4287,   725,  2849,  3249,  2985,  3041,    43, -3117,  5426,
    1419,  1420,  3255,  3256,  3259,  5346,  1436,  1419,  1420,  4627,
    5145,  3721,  1044,  1419,  1420,  2066,  2111,  5009,  4630,  3495,
    1844,  2836,  2457,  5013,  5237,   665,  2540,  5208,   725,  5209,
    2099,  3127,  1726,  1635,  5215,  4760,  2104,   673,  4058,  2042,
    2799,  1419,  1420,  2457,   725,  2143,  1635,  1419,  1420,   725,
     708,  3349,  2701,  3082,  1064,  3983,  3737,  4252,  4158,  2797,
    -582,  4548,  4992,  3202,  2800,  3837,  1421, -3020,  4251,  1422,
    1192,  1706,  1423,  3242,  3752,  1421,  1423,  2725,  1422,  3600,
    1345,   725,  2737,  2738,  2726,  2188,   735,  2188,  1419,  1420,
   -3019,  2581,  1419,  1420,  5041,  2582,  2446,  5469,  2110,   725,
     160,  2826,  3331,  3382,   989,   999,  5183,   725,  4068,  2189,
    3845,  2110,  2751,  5419,  2173,  3382,  3382,  2992,  1421,   708,
   -3117,  1422, -2228,  2042,  5325,  3906,  1421,  2799,  3423,  1422,
    1419,  1420,  1423,  2193,  1631,  2837, -3017,  5539,  4959,  1419,
    1420,  4960, -3018,  1188,  1419,  1420,  2190,  5433,  1419,  1420,
    2559,  1823,  2827,   708,  4520,    58,  4059,  4041,  4255, -1359,
    1830,  2747,  4985,  4293,  2879,   708,  1285,   708,   771,  1840,
    3417,  1421,  3579,  1421,  1422,  3722,  1422,  5326,  2093,  1423,
    2451,  4542,  1419,  1420,  1058,  2834, -3023,    61,  1065,  1419,
    1420,  1636,  1862,   725,   725,   760,  2243,  2378,  2583,  2381,
     306,  1880,   308,  4398,  1636,   725,  2250,  4986,  5437,  2297,
    1421,  3970,  4800,  1422,  2837,   725,  2366,  4335,  4336,  4337,
    2241,  1419,  1420,  1439,   989,  2534,  2371,  2270,  1421,  1626,
    3581,  1422,   772,  3622,  2110,  1423,  5216,  2800,   579,   579,
     579,   708,   708,   579,   725,   708,  2179, -2228,  2926,  1772,
    4742,  1419,  1420,  5277,  2590,  1211,   683,  2313,   579,  5215,
     725,  5434,  2452,  1981,   579,  4871,  2289,  2290,  2291,  3301,
    2545,  2294,  2298,  3972,  3522, -3117,  1066,  1193,  1421,  5161,
    3133,  1422,  2001,  3244,  5026,   708,  2314,  2131,  2702,  1044,
    5162,  2432,  2320,  1679,  1129,  4576,  3623,  4253,  5435,  1421,
     760,  4247,  1422,   991,  2856,  2703,  2023,  1129,  4689,  2953,
    2209,   684,  2955,  2210,  1419,  1420,  1421,   725,  5327,  1422,
    2535,  2392, -2450,  1568,  2964,   725,   725,   725,  2372,  2373,
    2374,   708,   708,  1419,  1420,  3342,  1676,  5132,  2932,  1421,
    1632,  1421,  1422,  4086,  1422,  2308,   709,  1423,  1419,  1420,
    1421,  2311,  1206,  1422,  4117,  1889,  1423,   686,  3276,  4690,
    1044,  1044,  1419,  1420,  5524,  5525,  2591,  1421,  2546,  2189,
    1422,  2189,  2157,  3134,   714,  2592,  3082,  1421,  4919,   735,
    1422,  4939,  2688,  2111,  1421,  2920,   773,  1422,  1421,  2319,
    1889,  1422,   725,   627,  3375,  3728,  2111, -3117,  4253,  1423,
    3324,  3324,  3324,  1813,  2800,  1814,  1421,  1423,  1862,  1422,
    3523,  -117,  -117,  1421,  2255,   708,  1422,   667,  2595,  1421,
    2485,   708,  1422,  1419,  1420,   306,  2600,   308,  5160,  1004,
    1129,  1419,  1420,  3014,  1920,  1889,   708,   717,  4971,  3897,
    3898,  3899,  1419,  1420,  2256,  2285,  2286,  1421,  5396, -2642,
    1422,  5400,  1423,  1421,  1423,  4137,  1422,  1280,  1774,  2557,
    2142,  5216,  4963,   151,  3045,  4466,  1419,  1420,  3504,  1832,
    1597,  2609,  4964,  2610,  1419,  1420,  1419,  1420,   710,   719,
   -2450, -3159,  2211,  2115, -2228,  2536,  1635,  1419,  1420,  2299,
    1228,  1423,  1679,  3365,  1421,  1988,  3987,  1422,  1421, -2450,
    3739,  1422,  2141,  4666,  1568,  5078,  1921,   720,  3854,  1423,
    2611,   628,  1419,  1420,   710,  1044,  2800,  1212,  1597,  2111,
   -2228,  1419,  1420,  -109,  -109,  2455,  1388,   711,  2616,  4933,
    1993,  1005,  5163,  4940,  4941,   668,  1421,  2042,    61,  1422,
    1922,  2721,  3931,  2921,  1229,  1421,  1213,  3919,  1422,  4397,
    1421,  4191,  2849,  1422,  1421,  4975,  4667,  1422,   152,  1423,
    1345,  2621,  2922,  2689,  4796,  3932,  1419,  1420,  1448,  1449,
    1450,  1451,  2942,  4753,   708,  2028,  2923,  4696,  2629,  4808,
    1423,  1419,  1420,  4754,  4812,  3892,   708,  4814,  1421,  4466,
     734,  1422,  2292,  2293,  5331,  1421,  2296,  1423,  1422,  2637,
    5498,  2730,  3254,  2800,  3311,  1419,  1420, -2642,  1289,  1006,
   -2268, -2268,  1419,  1420,  2472,  1773,  2642,  1923,  5332,  3167,
    1423,   139,  1423,  2257,  3172,  1389, -2642,  1421,  2697,  3541,
    1422,  1423,  1392,  5083,  1773,  5085,  2331,  1044,  2403,  2647,
    3127,  3181, -2228,  1230,  1636,  1676,  1419,  1420,  1423,  4315,
    2648,  4477, -2228,   153,  2985,  1419,  1420,  1421,  1423,  2725,
    1422,  2924,  1419,  1420,  1676,  1423,  4503,  2650,  4268,  1423,
    1419,  1420,  5055,   137, -2228,  4478,  3312,  2651,  3349,  2727,
     708,  3688,  2375,  2376,  2656,  1419,  1420,  1423,  2674,  3200,
    1419,  1420,   708,   708,  1423,  3539,  5274,  5275,  1419,  1420,
    1423, -2228,  1419,  1420,  3689,  2571,   708,  1924,   989,  3540,
    1419,  1420,  -588,  2685,  1512,  4965,   748,  2997,  2575,  1512,
    1421,  5076,  2762,  1422,  2873,  3306,  1419,  1420,  1423,  2770,
    2770,  1393,  2770,   588,  1423,  4822,   589,  2404,  4755,  1421,
     740,   770,  1422,  1419,  1420,   752,  2451,  3784,  1419,  1420,
    1419,  1420,   951,  3785,  1421,   725,   753,  1422,   708,  3382,
    5515,   765,  1832,  3270,   708,  3302,  2476,  1774,  1421,  2807,
    4369,  1422,  2487,  3360,  5232,  1423,  2811,   962,  1680,  1423,
    1419,  1420,  1419,  1420,   767,  5526,  1774,  3313,  3973,   768,
    5001,   725,   725,   708,  3798,   708,  -588,  2577,   991,  3273,
    2925,  1419,  1420,   945,  1589,  1419,  1420,  2406,  1345,   725,
    1419,  1420,  1419,  1420,  2770,  2770,  2770,  1423,  2863,  2864,
    1626,  1094,   963,  4462,  4462,   725,  1423,   760,  -590,  1421,
    1920,  1423,  1422,  1772,  2572,  1423,  3813,  1421,  1681,   809,
    1422,  4386,  1626,   947,  5303,  3814,  1419,  1420,  1421,   710,
    4646,  1422,  2545,  3216,  5449,   997,  1218,  3133,  1419,  1420,
    1419,  1420,  2898, -1284,  2574,  1459, -1284,   710,  3961,  1423,
    3516, -2672,  1421,  2973,  1568,  1422,  1423,  3314,  2926,  1231,
    1421, -2796,  1421,  1422,  4510,  1422,  1635,  5186,  2573,  1459,
    1773,  3000,  1679,  1421,  2593,  4509,  1422,  1516,  2998,  3082,
    3218,  4436,  1921,  1419,  1420,  1013,   708,  1044,  1423,  4444,
    3530,   817,  3956,  2403,  4966,  2829,  4823,  4085,  1421,  2985,
    1676,  1422,  1047,  2919,   955,  2634,  2594,  1421,  1419,  1420,
    1422,   708,  3986,  1724,  1737,  2935,  1922,  2645,  1423,  1729,
    1730,  4567,  1044,  5423,  2408,  5424,  3369,  1925,  4376,  1865,
    -590,  2612,  4504,   579,  4506,  4197,  2599,   708,  4620,  4198,
    1044,  2962,  3926,  1232, -2229,  1233,   579,  2960,  3370,  1044,
    1044,  1044,  1421,  2960,  2972,  1422,  3530,  3530,  1419,  1420,
    2977,  2954,  3134,  2892,  3957,  2895,  1517,  1421,  3964,  4048,
    1422,  1518,  1049,  2989,   588,  1419,  1420,   589,  2570,  1419,
    1420,  1423,  1069,  1676,  2904,  3976,  3530,  1071,  1419,  1420,
    3371,  1421,  2404,  1923,  1422, -2112,  1142,  2612,  1421,  2608,
    1423,  1422,   834,  5484,  4654,  1149,  2705,  5417,  5418, -2672,
    -259,  2728,  4249,  1309,  1310,  1423,  1061,  1519,  2613, -2796,
    4383,  1169,  1774,  4568,  1636,  1640,   725,  1175, -2672,  1423,
    2177,   708,  1421,  2624,  3080,  1422,  1520,  1640, -2796,  2579,
    2580,  1421,  4276,  1653,  1422,  4278,  3698,  2625,  1421,  1179,
   -2112,  1422,  1419,  1420,  2566,  2552,  1421,  3401,  1173,  1422,
    2769,  2769,  1866,  2769,  1419,  1420,  1867,  1181,  1044, -2229,
    4569,  1421,  1419,  1420,  1422,  3958,  1421,  4296,  1920,  1422,
    1868,  1182,  4304,  1924,  1421,  1419,  1420,  1422,  1421,  2793,
    1423,  1422,   854,  1183,  4489,  1554,  1421,  3315,  1423,  1422,
    1419,  1420,  4098,  3136,  5001,  1774,  3139,  1399,  2626,  1423,
    2042,  1000,  1421,  3004,  4113,  1422,  2630,   306,  3349,   308,
    4174,  2849,  3011,  3012,  1588,   588,   725,  4662,   589,  1421,
    1419,  1420,  1422,  1423,  1421,  1215,  1421,  1422,   725,  1422,
    2348,  1423,  1436,  1423,  2349,  2769,  2769,  2769,  2143,  4698,
    1921,  3247,  1419,  1420,  1423,  1235,  1419,  1420,  2042,  2636,
    4307,  2638,  -588,  3423,  4309,  3959,  1421, -2112,  1421,  1422,
    1242,  1422,  2639,  4214,  4215,  1243,  4701,  2920,  1785,  1423,
    1521,  1244,  4357,   989,  3524,  3275,   735,  1421,  1423,  3402,
    1422,  1421,  1419,  1420,  1422,  3763,  1421,  2640,  1421,  1422,
    1663,  1422,   588,  5567,  1254,   589,  2641,  1827,  1828,  1419,
    1420, -3138,  2601,  1459,  1419,  1420,  2617,  1459,  1419,  1420,
    4462,   649, -2112,  1044,  1869,  1419,  1420,  3141,   649,  1258,
    3221,  4114,  1421,  1423,  1785,  1422,  1262,  2912,  1359,  3330,
    1419,  1420,  1419,  1420,  1421,  1275,  1421,  1422,  1423,  1422,
    1568,  2646,   725,  1877,   642,  2238,  2238,  2238,  4494,  4495,
    1356,  3525,  2931,  2456,  1664,  1370,  2649,  1419,  1420,  1387,
    3853,  3262,  1423,  1282,  1832,  1832,  1832,  2618,  1986,  1423,
    3271,  2490,  1400,  1401,   725,  4323,   725,   725,  2956,  1421,
    2652, -1671,  1422,  5220,  2631,  1459,  5227,  2665,  1283,  2042,
    1665,  3257,  4370,  4596,  4536,  4598, -2229,  2491,  4117,  2151,
    2632,  1459,  2152,  1423,  1421,  2153,  1692,  1422,  1786,   725,
    2533,  4790,  1423,  1925,  4368,  5001,  3991,  1419,  1420,  1423,
    3766,  2686,   891,  2633,  1459,  2921,  1284,  1423,  1218,  1218,
    1218,  1870, -2229,  1456,  2979,  2643,  1459,  3742,  1693,  1419,
    1420,  3526,  1423,  4563,  2922,  3767,  1286,  1423,  3398,  1439,
    2507,  2508,  3291,  3292,  1421,  1423,  1287,  1422,  2923,  1423,
    3775,  3319,  3320,  1288,  1786,  3776,  2521,  1423,  3427,  3428,
    1293,  1421,  1162,  3779,  1422,  1421,  2062,   708,  1422,  5480,
    3553,  3554,  1457,  1423,  1421,  3782,  1294,  1422,  4062,  3353,
    3762,  2580,  1694,  1295,  3356,  3960,  1787,  1695,  1296,  1218,
    1423,  3783,   725,   725,  1297,  1423,  2772,  1423,  2773,  1298,
    4360,  3489,   725,  1299,  5507,  2774,  1300,  4377,  3788,  1817,
    1301,  3123,  5511,  3789,  1458,  3793,  1302,  1436,  1044,  1167,
    1168,  2775,  1171,  5220,  1172,  1095,  3133,  1423,  4505,  1423,
    5227,  1679,  1303,  2924,  2873,  1640,  4890,  3392,  1421,  5523,
    4115,  1422,  1787,  1044, -2229,  3794,  1462,  3795,  1423,  1304,
    1421,  1305,  1423,  1422, -2229,  3765,  1459,  1423,  1421,  1423,
    3324,  1422,  4116,  2043,  3149,  4710,  3796,  1306,    78,  1435,
    3797,  1421,  3800,  1459,  1422,  3799, -2229,  3807,  1307,  2446,
    2860,  2861,  2862,   708,   708,  3601,  1421,   579,  1311,  1422,
    3150,  1313,  2776,  1423,  2433,  2777,  3804,  3805,   708,  1314,
    4929,  1315,   725, -2229,   135,  1423,  1316,  1423,  2434,  2523,
    2524,  3812,  1319,  2042,  1320,  3481,  1421,  1321,  3931,  1422,
    1322,  1441,  1442,  3815,  1466,  3817,  1666,  1323,  2533,  4859,
    3935,  3936,  3941,  3942,  2308,   725,   725,  1324,  1421,  1325,
    2311,  1422,  1421,  1102,  1084,  1422,  4572,  4151,  2800,  3151,
    1423,  3607,  3608,  3152,  4867,  1326,  3609,  3610,  3611,  2308,
    1696,  3153,  2457,   156,   157,  2311,  5455,  3739,  3819,  1129,
    4572,  3527,  2925,  1436,  2063,  1423,  1327,  4997,  1421,  4164,
    4165,  1422,  3154,  1328,  2843,  1329,   725,  2844,  1436,  1330,
    2778,  5003,  1459,  3821,  1331,  1421,  4319,  1459,  1422,  1332,
    1421,  3618,   675,  1422,  1421,  1667,    61,  1422,  2534,  1333,
     136,  1421,  4339,  4340,  1422,  1334,  4976,  2110, -2201,  3697,
    4612,  4613,  4614,  4615,  1337,  1423,  1421,  1338,  1421,  1422,
     137,  1422,  1339,  3932,  1439,  4616,  4617,  1340, -2067,  1346,
    1697,  1347,  1423,  3822,  5220,  5227,  1423,  1348,  4640,  1349,
    2926,  4721,  1350,  1421,   676,  1423,  1422,  4623,  4626,  5063,
    5064,  4519,  2779,  3843,  3823,  1351,  2721,  4523,  1352,  1426,
    1353,  4527,  4528,  3836, -3154,  4647,  1459,  4532,  1668,  1354,
    1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  3148,  1481,
    3546,  3547,  3548,  3549,  2644,  3551,  3552,  3607,  3608,  2435,
    3155,  1669,  3609,  3610,  3611,  4652,  4653,  2446,  4370,  1437,
     138,  4704,  1427,  1421,  4664,  1459,  1422,  1698,  3338,  1423,
    1355,  1788,  1789,  1790,  1791,  1792,  1793,  1670, -2067,  1357,
    4368,  1423,  4885,  4672,  4673,  1438,  1504,  4301,   677,  1423,
     135,  4098,  5566,  1360,  1794,   139,  1671,  1436,  1513,  4302,
    4681,  3510,  1423,  4113,  5185,  3705,  3706,  4303,  3708,  4799,
    3710,  3711,  3712,  3713,  3714,  3715,  3716,  1423,  1361,  3719,
    4635,  1428,  3724,  1522,  4692,  4693,  3727,  1788,  1789,  2436,
    1791,  1362,  1793,  3030,  1515,  4285,  1429,  1363,  5155,  1944,
    1439,  4090,  1364,  5088,  4091,  4092,  4093,  1423,  3631,  1365,
    1794,  4094,  4095,  1536,   140,  1439,  4817,  1366,  2437,  1367,
    2064,  3156,  1368,  1129,  1044,  4637,  1441,  1442,  2238,  1423,
    4833,  4834,  1369,  1423,  1512,  1371,  2762,  2065,   156,   157,
    1541,   725,   725,   725,  3441,  3442,  2534,  4645,   708,  4837,
    4838,  4651,  1372,  2802,  1094,  2110,   687,  5207,  1373,  3487,
    1374,  4348,  1375,  1699,  4320,  1376,  -792,  4257,  1377,  1423,
    5176,  4258,  3917,  2507,  2508,  1378,   137,  2732,  1379,  4259,
    4114,   725,  4098,  1635,  1380,  4085,  1423,  2043,  1430,  2521,
    1568,  1423,  1381,  2851,  4099,  1423,  4839,  4834,  2438, -1862,
    4260,  1345,  1423,  1700,  4655,   725,   725,   725,  1525,  4656,
    1382,  1218,  2111,  4657,  1383,  -792,  1948,  1423,  3031,  1423,
    4658,  2780,  2781,  2782,  5288,  4922,  4923,  2849,  4508,  1384,
    2490,  4098,  1436,  2973,  1440,  5287,  5069,  5029,  1385,  4461,
    5072,  2535,  1386,  4099,  1423,  4926,  4923,  5057,  5174,  5175,
    5036,  4261,  1390,  2308,  2308,   688,  2491,  5006,  5007,  2311,
    2311,  5089,  5075,  5019,  4956, -1862,   141,  5062,  3942,   306,
    1391,   308,  3989,  2042,  1439,  1394,   725,  1395,  4536, -1862,
    5068,  4923,  1441,  1442,   708,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  5283,  5284,  3157,  2920,  1441,  1442, -1019,
     708,  4512,  2439, -1862,  1423, -1862,  -989,  5233,  5234,  1398,
    4522,  -792,  4021,  1443,  5293,  5294,  4042,   688,  4262,  5305,
    5306,  5323,  3942, -1862,  5099,  2920,  3541,   579,  1949,  1402,
   -1862,  1403,  1952,  1436,  2972,  4065,   678,  1404,  1044,  1044,
    1953,  1636,  2523,  2524,  1405,   142, -2067, -2067, -1862,   143,
    4079,  1129,  4081,  3790,  1406,  4052,  1407, -1862,  5324,  3942,
    -792,  2490,   679, -1862,  1408, -1862,   688,  3158,  5330,  3554,
    5100,  5373,  4693,  4573,  4574,  1461, -1862,  1524,  5195,  1533,
    5088,  1534,  5214,  1535, -3154,  5101,  5196,  2491,  4802,  5382,
   -1862,  1542,  4581,  5438,  4923, -1862,  1544,  3159,  5440,  4923,
    1546,   680,  1550,  4592, -1862,  1569,  2536,  3032,  5441,  4923,
    2490,  4599,  4600,   156,   157,  5197,   144,  1578,  3033,  1577,
    5378,  5458,  5459,  5467,  5468,  1582,  4263,  1599,  3034,  4264,
     599,  4116,  1601,  5102,  5472,  4923,  2491,  1617,  4042,  1954,
    2111,  1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  1439,
    5473,  4923,  5481,  4923,  2921,  1619,  1444,  1445,  1446,  1447,
    1448,  1449,  1450,  1451,  5495,  4693,   681, -2031, -2201,  5505,
    4232,  4155,  1620,  2922,  1621, -1862,  4078,  3120,  5508,  4923,
    1630,  5090,  1657,  2921,  5555,  5556, -3154,  2923,  1658,  4428,
    1662,  4429,  3001,  3002,   600,  2031,  2032,  4679,  4680,  3905,
    1676,  4697,  2922,  1686,  1687,  1688,  1956, -1862,  1689,  3013,
    1920,  5010,  1431,  1432,  1433,  1708,  2923, -1862,  5452,  3039,
    3040,  1712,  1713,  1718,  1568,  1727,  1739,  4265,  1728,  1738,
     601,  1743,  1741,  1747,  4225,  3919,  4230,  1436,  5089,  4430,
    4100,  3035,  1762,  1763,  1765,  1799,   306,  1803,   308,   710,
    1439,  5036,  1805,  1810,  1816,  5198,  1818, -1862,  1820,  1824,
     689,  1825,  -792,  1829,  1841,  4431,  1847,  1846,  1848,  1857,
    1874,  1875,  2924,   602,  1883,  1885,  4243,  1454,  4333,  1889,
    4246, -2033,  1921,  -989,  1900,  -165,  1918,  1919,  4682,  1930,
    1938,  1970,  1985,  1986,  1987,  2006,  3116,  3117,  3118,  3119,
    2000,  2924,  2012,  2014,  4714,  4953,  4432,  1436,  2020,   690,
    2021,  -792,  2039,  2050, -1862,  2054,  3524,  1446,  1447,  1448,
    1449,  1450,  1451,    61,   603,  2073,  2100,   306,  5032,   308,
    2079,  1441,  1442,  2101,  2105,  3993,   965,  2106,  2114,  5199,
    3036,  2122, -1862,  2123,  2124,  2125,  2126,  3231,  2042,  2127,
    5156,  4008,  1679,  5301, -2033,  2129,  1957,   608,  2130,  4740,
    5200,  2133,  2134,  2146,  4744,  4745,  2145,  2147,  2148,  2180,
    2176,   690,  5154,  2185,  1959,  4266,  5091,  2194,  2195,  2196,
    2197,  5271,  2200,  2201,  2202,  2217,  5201,  5017,  2219,  2218,
     156,   157, -1862,  3525,  4318,   691,  1568,  2229,  4401,  2226,
   -2845,  5104,  1483,   692,  2233,  4267,  2234,  4079,  2235,  2236,
    5105,  2925,  2244,  2245,  2246,  2251,  2280,  2282,  2283,  2287,
     690,  2322,  2324,  2327,  2323,  2325,  2328,   966,  2329,  2345,
    2360,  2361,  1441,  1442,  2364,  2393,  5304,  2367,  2402,  2411,
    2925,  1772,  2416,  2422,  2423,  2431,  2454,  3275, -2442, -1862,
    2470,  2477,  2478,  2480,  1439,  2494,  2497,  -792,  5090,  2495,
   -1862, -1862,  2498,  2547,   968,  1044,  2531,  2549,  2555,  3917,
     -69,  2561,  2563,  2567,  1044,  2564,   604,  2588,  2565,  4490,
    3353,   969,  4366,  3526, -1862, -1862,  4373, -1862,   725,  2926,
    1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  1095,  1626,
    5263,  5264,  1537,  5266,  2159,  1640,  -792,  5282,  2587,  2589,
    2160,  1484,  2596,  2597,  2598, -1862, -1862,  2602,  2926, -1862,
   -1862,  2612,  2614,  2161,  1439,  4525,  2615,  2623,  2043,  2619,
    2653,  2628,  2635,  4078,   605,  2699,  4433,  2654,  5152,  1485,
    2655,  5106,  1486,  2660,  2676,  2663,  2664,  2675,   725,  2677,
     973,  2678,  2042, -1478,  2704,  1451, -1641,  5301,  2714,   606,
    4854,  2718,  2745,  2720,  1317,  5407,  1388,  2730,  2733,  4042,
     708,  4449,  4928,  2752,  1392,  2765,  2794,  5249,  2805,  2806,
    5252,  2818,  2833,   974,  5463,  1487,  2850,  2824,  2852,   975,
    4434,  1129,  4473,  1446,  1447,  1448,  1449,  1450,  1451,  2857,
    2858,  3430,  2866,  2859,  3324,  2868,   725,  2875,  5202,  1488,
    2876,  2877,  2882,  2883,  2880,   306,  2881,   308,  2099,  2893,
    4502,  2897,  2884,  2899,  2900,  2433,   607,  2906,  2903,  1640,
    2915,   608,  2916,   976,  2930,  4378,  1441,  1442,  4932,  2434,
    2929,  5383,  5370,  4042,  5371,  5372,  2938,  4518,  4516,  4042,
    4521,   609,  4230,  5091,  2937,  2949,  2950,  2965,  2976,  2975,
    2982,  1774,  2986,  5381,  4230,  4533,  4531,  3003,  4538,  2043,
    4409,  4410,  3062,  3010,  4540,  4541,   708,   610,  1489,  4230,
    3005,  3064,  3006,  4427,  4042,  3067,  5463,  3007, -3092,  3071,
    5485,  3008,  3009,  3083,  3085,  3087,   611,  3090,  3550,  3091,
    2042,  5345,  3016,  1490,   579,  5549,  1441,  1442,  3092,  4562,
    3093,  3094,  3095,  3096,  2042,  3097,  3114,  1603,  4472,  5559,
    2042,  3115,  3098,  3527,  3099,  5549,  2042,  1604,  3100,  3101,
     725,  5559,  4558,  3102,  5453,  1536,  3103,  1044,  3122,  3137,
    -808,  3174,  1605,  3104,  3141,  4586,  4501,  3105,  5099,  3106,
    3107,  3176,  3080,  3108,  1606,  1607,  1608,  3703,  3704,  3145,
    3109,  3173,  3110,  3709,  3111,  3112,  3113,  3017, -1679,  3191,
    3192,  3717,  3718,  2726,  1609,  3263,  3697,  3725,  3288,  3533,
    5389,  3535,  3537,  3538,  3209,  3232,  3294,  2162,  3253,  3264,
    3267,  3297,  3268,  3279,  5100,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1862,  5088,  3278,  3289,  3295,  1044,  5101,
    3290,   979,  3298,  3299,  3296,  4550,  3304,  3309,  3308,  2163,
    3310, -1862,  3317,  3332,  3335,  3328,  3337,  2164,  1491,  2821,
    2435,  3354,  3357,  3358,  3361,  2259,  3362,  1492,  3363,  3367,
    2260,  3368,  3378,  2800,  3412,  4722,  3389,  3393,  2348,  3413,
    3414,  3429,  3431,  3432,  3434,  3876,  1493,  5102,  3440,  3490,
    3496,  3501,   982,  3491,  3502,  3877,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  3509,  3520,  1494,  3508,   983,  2165,  3510,
    3878,  3513,  3521,  3602,  3603,  3604,  3733, -1862,  3616,  1044,
    3620,  3687,  3879,  3880,  3881,  3917,  3690,  3691,  3692,  3732,
    3736, -1862,  3700,  2043,  3701,  5531,  3702,  2556,  3744,  3018,
    2436,  3749,  3882,  3757,  3753,  3759,  3760,  3761,  3803,  3844,
    3768,  4448,  3769,  3824,  3834,  1495,  3861, -1862,  1496,  3835,
    2166,  3842,  3852,  3850,  3857,   156,   157,  3865,  3870,  2437,
    3871,  5103,  3868,  3894,  3873, -1862,   725,  3895,  4726,  4726,
    5206,  3900, -1862,  3902,  3907,  3912,  3920,  3921,  1497,  3924,
    3925,   986,  5089,  3927,  3928,  1640,  3934,  3937,  3938,  3944,
     306,  1044,   308,  3948,  3952,  3977,  3949,  3965,   588, -1862,
    1044,   589,  3988,  3966,   987, -1862,   988, -1862,  3981,  3992,
    4002,  3969,  3990,  3984,  4005,  3579,  4042,  4824, -1862,  4050,
    4054,  3019,  4070,   708,  4066,  4743,  4071,  -989,  4074,  4089,
    4749,  4098, -1862,  4106,  4088,  3020,  4108, -1862,  1610,  2438,
    4109,  4110,  4111,  4112,  4119,  4773, -1862,  4539,  4120,  4121,
    4124,  4125,  4127,  4155,  4133,  4128,  4134,  1611,  5563,  4135,
    3021,  3022,  4142,  4168,  4160,  4179,  4178,  3271,  3023,  3024,
    3025,  4203,  4208,  4792,  4220,  4222,  4223,  4231,  4256,  4232,
    4275,  4280,  4230,  4042,  4288,  4281,   725,  4042,  4791,  4230,
    4793,  4042,  4042,  4305,  4289,  2682,  4042,  4230,  3829,  4314,
   -1788,  4728,  4230,  4325,  4729,  4230,  4321,  1044,  4331,  4323,
    4326,  4816,  4332,  4334,  4342,  5560,  4344, -1862,  4350,  2209,
    5206,  4351,  4390,  4354,  4359,  4391,  4402,  4404,  4474,  4827,
    4466,  4459,  4405,  4480,   156,   157,  4450,  4451,  4482,  4452,
    4484, -1983,  1044,  2439,  4507,  5104,  3080,  4513,  4551, -1862,
    4552,  4553,  4556,  4559,  5105,  4524,  4526,  4560,  4566, -1862,
    4577,  4213,  4582,  4580,  4593,  4606,  4850,  4608,  4629,  4611,
    4773,  4609,  4618,  4230,  4776,  4621,  3883,  4622,  3026,  4849,
    4626,  4623,  4624,  4631,  4877,  4633,  4641,  4634,   780,  4636,
    4648,  4649,  4650,  1044,  4660,  3884,  4661,  4665,  4674, -1862,
    4676,  4677,  5090,  4685,  4503,  4688,  4694, -1758, -1763,  4717,
    4737,  4490,  4723,  4730,  4736,  1612,  4731,  4738,  4750,  4752,
    4777,  4778,  4062,  4782,  4784,  4783,  4785,  1773,  3997,  3998,
    3999,  4000,  4001,  4809,  4003,  4004,  3614,  4006,  4007,  4806,
    4009,  4010,  4011,  4012,  4013,  4014,  4015,  4016,  4017,  4018,
    4819,  4818,  4022,  4023,  4024,  4901, -1862,  4815,  3027,  4878,
    4820,  4831,  4832,  4852,  4841,  4842,  4861,  4869,  4870,  4863,
    4865,  4872,  4876,  4894,  4889,  4879,  4896,  4906,  4897,  4908,
    1613,  3356,   809,  4895, -1862,  5106,  4910,  4726,  4925,  4935,
    4453,  4147,  4148,  4149,   708,  4920,  4937,  1614,  1419,  1420,
    4949,  4946,  4952,  4954,  4934,  4950,  4955,  4969,  4042,  4042,
    4956,  2096,  4977,  4980,  4981,  4979,  4987,  5004,  4998,  5015,
    5018,  5021,  5022,  4773,  5023,  5048,  5025,  5030,  5038,  5031,
    5037,  3885,  5041,  5039, -1862,  5042,  5045,  5043,  5050,  5071,
    5081,  5059,  5061,  5121,  4104,  5067,   815,  5066,  5073,  2099,
    5123,  5124,  4155,  3886,   817,  5125,  5126,  5150,  4122,   780,
    5158,  4042,  5169,  5159,  5171,  5178,  4042,  5188,  5210,  5240,
    5194,  5224,  5238,  2043,  4741,  5245,  5242,  4230,  5243,  5247,
    5248,  5254,  5117,  5255,  4236,  4239,  4242,  5256,   824,   825,
    5257, -1862,  5261,  5265,  5267,  5268,  5273,  5091,  5278,  5280,
    5285,  5290,  4586, -1862,  5291,  5014,  5292,  5297,  1940,  1941,
    1942,  1943,  1944,  5313,  5298,  5307,  5314,  5206,  3887,  5319,
    5322,  5340,  5348,  5349,  5355,  5363, -1862, -1862,  5364, -1862,
    4878,  5139,   940,  5369,  5376,  3888,  5385,  5375,  5386,  5388,
    5391,  5409,  5413,  5394,  1537,  5414,  4879,  5415,  5416,  3575,
    3561,  5431,  5442,   809,  5445,  5446,  5447, -1862, -1862,   708,
    5475, -1862, -1862,  5478,  5479,   834,  5496,  5509,  5510,  1042,
    5518,   940,  5499,  5527,  5504,  5493,  5512,  5521,  5528,  1042,
    5530,  5532,  5536,  5535,  5550,  5562,  3364,  4726,  1581,  4294,
    1570,  3867,  1139,  3726,  2120,  4855,  4042,  4857,  4856,  5080,
    1707,  2391,  2963,  3444,  5213,  5259,   940,  4096,  4948,  5366,
    5113,  5490,  4775,  4851,  4835,  5116,  5020,   815,  1822,  4311,
    4773,  5012,  5170,  5120,  4603,   817,  1945,  1946,  1947,  1948,
     659,  2854,   846,  1141,  2758,  3890,  3078,  5122,  3911,  3875,
    4683,  4042,  3089,  1261,  4349,  2813,  2815,  2812,  2729,  1876,
    5147,   708,  4328,  2814,   853,   854,  2468,  5229,  4138,   824,
     825,  5074,  4947,  2873,  4811,  3586,  4353,  4899,  4358,  4687,
    2822,  5164,  5168,  5393,  5187,  5457,  5520,  4902,  5503,  5522,
    4850,  5321,  4365,  4028,  4700,  2941,  4136,  4735,  4546,   940,
    4141,  5276,  5365,  4849,  4748,  5253,  4269,  4219,  4192,  5258,
    5390,  5250,  3518,  4575,  3826,  4308,  4310,  4306,  5506,   695,
     696,  5482,  5077,   940,  5192,  5483,  5420,  5344,   940,  5347,
    5070,  4139,  4588,  3356,  4545,  3356,  1732,  5149,  1831,  2346,
    3341,  3070,  3397,  4983,  5387,  2532,   834,  2832,  2486,  4343,
    3904,  1949,  3305,  1950,  1951,  1952,  4087,  5157,  3841,  1802,
    2995,  3505,  4327,  1953,  1940,  1941,  1942,  1943,  1944,  3166,
    3164,  1984,  2420,   940,   725,  2097,  3864,  3424,  3974,  1897,
    3418,  4708,  4316,  5212,  3408,  5470,  5065,  4610,  5471,  1917,
    4072,  3260,  4407,  4408,   940,  5262,  4974,  4412,  4973,  3858,
    4884,  4419,  5296,  4875,  4990,  4423,  3962,  4912,  4064,  1044,
    4438,  4440,  4442,   846,  1421,  2978,  4443,  1422,  4972,  3135,
     697,  4695,  2178,  3303,  2224,  4338,  3544,  2993,  4396,  5454,
    2554,  1281,  1155,  1135,  2908,   853,   854,  2301,  2909,  3394,
    1138,   706,  1768,  5295,  2748,  4927,  4888,  5519,   940,   940,
     940,   940,  5529,  4824,  4347,  2232,  5127,  5269,  2043,  5561,
     940,  5564,  1954,  3975,  1397,  2933,  4364,  2988,  3377,  4375,
    2885,  1097,  2698,  2888,  1098,  2170,  2803,  3374,  3373,  2369,
    2242,   883,  1945,  1946,  1947,  1948,  4880,  4146,  5244,  4881,
    1079,  5408,  1618,  2167,  3891,  4411,  3061,  3359,  4414,  3433,
     889,  5044,   940,  1081,  1501,   891,  4882,  4156,  5351,   892,
    4387,  3410,  4709,  3971,  4726,  1624,  4726,  4726,   699,   700,
    5046,   701,  2959,  5361,  5384,     0,  5362,     0,  1955,  1956,
       0,     0,     0,     0,   708,  5368,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   940,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1042,  1042,     0,     0,  1042,  5168,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5192,     0,     0,     0,  5491,  3275,     0,     0,     0,     0,
       0,     0,   725,     0,     0,     0,     0,  1949,     0,  1950,
    1951,  1952,  1042,     0,     0,     0,     0,     0,     0,  1953,
       0,     0,  5146,     0,     0,  5338,     0,  4605,     0,  5428,
       0,     0,  4726,  4726,     0,     0,     0,     0,     0,  4726,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5502,
       0,     0,     0,  5448,     0,     0,     0,     0,     0,  5360,
       0,     0,   883,     0,     0,     0,     0,  4880,     0,     0,
    4881,     0,  2043,     0,     0,     0,     0,     0,     0,     0,
       0,   889,     0,     0,     0,     0,   891,  5033,     0,  1957,
     892,     0,     0,     0,     0,     0,   725,     0,     0,  3697,
    3697,     0,     0,     0,     0,  1423,  1958,  1959,     0,     0,
       0,  5565,     0,     0,     0,  4726,     0,     0,  1954,     0,
       0,  5401,  5402,  5552,     0,     0,     0,     0,     0,  5554,
       0,  5492,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     725,     0,     0,     0,     0,  5427,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5517,     0,     0,
       0,     0,     0,     0,  1955,  1956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,     0,
       0,   940,  1042,  5464,  5465,     0,     0,     0,     0,     0,
    2043,     0,     0,     0,   725,     0,     0,     0,     0,     0,
     725,  1483,     0,     0,  2043,     0,   940,   940,     0,     0,
    2043,     0,     0,   940,     0,     0,  2043,   940,   940,   940,
     940,   940,   940,   940,   940,   940,   940,   940,   940,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,   940,
     940,     0,   940,   940,   940,     0,     0,     0,     0,   940,
     940,   940,     0,     0,   940,   940,   940,   940,   940,   940,
       0,   940,     0,   940,   940,  5367,     0,     0,     0,     0,
       0,   940,   940,   940,     0,   940,   940,   940,   940,   940,
       0,     0,     0,     0,   940,   940,   940,   940,     0,   940,
     940,   940,   940,   940,     0,   940,     0,   940,   940,   940,
     940,   940,     0,     0,   940,  1957,     0,     0,   940,   940,
    1484,     0,     0,   940,     0,     0,     0,   940,   940,   940,
       0,     0,  1958,  1959,     0,     0,     0,     0,     0,   940,
     940,   940,   940,     0,     0,     0,     0,     0,  1485,     0,
     940,  1486,     0,     0,     0,     0,     0,   940,   940,   940,
     940,     0,     0,     0,     0,     0,     0,     0,   940,   940,
     940,     0,   940,   940,   940,   940,   940,     0,   940,   940,
     940,   940,   940,   940,   940,   940,  4605,     0,     0,   940,
       0,     0,  3560,   940,  1487,     0,     0,  4236,  3561,  4239,
    3562,  4242,  3563,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3445,     0,  3446,     0,  1488,     0,
       0,     0,     0,     0,   306,     0,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4873,  3564,     0,     0,     0,
       0,  3447,  3565,     0,     0,     0,     0,  4328,  3566,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3448,     0,  2168,     0,     0,     0,     0,     0,  3449,     0,
       0,     0,     0,   940,     0,     0,     0,  1489,  3567,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     940,     0,     0,     0,     0,     0,     0,  3450,     0,     0,
       0,     0,  1490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1810,     0,     0,  3451,     0,     0,     0,
       0,     0,     0,     0,     0,  2501,  3568,  3569,     0,     0,
       0,  3445,     0,  3446,     0,  3570,     0,     0,     0,     0,
       0,     0,     0,     0,  3571,     0,     0,     0, -1102,     0,
    3452,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3572,     0,     0,   940,     0,     0,     0,     0,  3447,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,     0,
       0,     0,     0,     0,     0,     0,  3573,  3448,     0,     0,
       0,     0,     0,     0,     0,  3449,     0,     0,     0,     0,
       0,     0,  2309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2502,  3450,  2503,   306,  1491,   308,     0,
       0,     0,     0,     0,  3574,     0,  1492,  3453,     0,     0,
    1810,     0,   940,  3451,  3454,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1493,     0,     0,     0,     0,
       0,     0,  3455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1494,  -703,     0,  3452,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3575,     0,  2504,
    2505,     0,  2506,  2507,  2508,  2509,  2510,     0,  2511,  2512,
    2513,  2514,  2515,  2516,  2517,  2518,  2519,     0,  2520,  2521,
    2522,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3457,     0,     0,  1495,     0,     0,  1496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3445,  3458,  3446,     0,     0,  3576,     0,     0,     0,
       0,     0,     0,   306,     0,   308,     0,  1497,     0,     0,
       0,     0,     0,     0,  3453,     0,     0,     0,     0,     0,
       0,  3454,     0,     0,     0,  -959,  -959,     0,  3447,     0,
    1042,     0,     0,     0,     0,     0,     0,  -959,     0,  3455,
    4605,     0,     0,     0,     0,  3577,     0,  3448,     0,     0,
    3578,     0,     0,     0,     0,  3449,     0,     0,     0,  3459,
       0,  3460,     0,     0,     0,     0,  3579,     0,     0,  3461,
       0,     0,   940,   940,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3450,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3457,     0,
    1810,     0,     0,  3451,     0,     0,     0,     0,     0,  3580,
       0,     0,  2523,  2524,     0,     0,     0,     0,     0,  3458,
       0,     0,     0,     0,  3581,  3582,  3583,  3584,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3452,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3462,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3459,     0,  3460,     0,
       0,     0,     0,     0,     0,     0,  3461,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,   940,
     940,     0,     0,   306,     0,   308,  3464,  3465,  3466,     0,
       0,     0,     0,  3467,  3453,   940,     0,     0,     0,     0,
       0,  3454,     0,     0,     0,     0,     0,     0,     0,     0,
    3468,     0,     0,  3469,     0,     0,     0,   940,     0,  3455,
       0,     0,     0,   940,     0,     0,   940,     0,   940,     0,
       0,     0,     0,  3470,   940,     0,   940,   940,  3585,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3471,     0,  3462,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   940,  3463,     0,  3445,     0,
    3446,     0,     0,     0,  1501,     0,     0,  1042,  3457,     0,
       0,     0,  3445,     0,  3446,     0,     0,     0,  5311,  5312,
       0,     0,  5315,  5316,  5317,  5318,     0,     0,     0,  3458,
       0,     0,     0,     0,     0,  3447,     0,     0,     0,  5339,
       0,     0,     0,  3464,  3465,  3466,  -959,  -959,     0,  3447,
    3467,     0,     0, -1102,  3448,     0,     0,     0,  -959,     0,
       0,     0,  3449,  5421,     0,     0,     0,  3468,  3448,     0,
    3469,     0,     0,     0,     0,     0,  3449,     0,  1042,  1042,
     940,     0,     0,     0,     0,     0,     0,     0,   940,     0,
    3470,  3450,     0,     0,     0,     0,  3459,   940,  3460,     0,
       0,     0,     0,     0,     0,  3450,  3461,  1810,     0,  3471,
    3451,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1810,   940,     0,  3451,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5403,  5404,     0,     0,
       0,     0,     0,   940,  3452,  5412,   940,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3452,     0,
     940,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    -703,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3462,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     306,     0,   308,     0,     0,     0,     0,     0,     0,     0,
       0,  3453,     0,  1042,   306,     0,   308,     0,  3454,     0,
       0,     0,     0,     0,     0,  3453,     0,     0,     0,     0,
       0,     0,  3454,  3464,  3465,  3466,  3455,     0,     0,     0,
    3467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3455,     0,     0,     0,     0,     0,     0,  3468,     0,     0,
    3469,     0,     0,     0,     0,  3456,     0,     0,     0,     0,
       0,     0,     0,   940,     0,   940,     0,     0,     0,     0,
    3470,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3457,     0,     0,     0,  3471,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3457,
       0,     0,     0,     0,     0,     0,  3458,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3458,     0,     0,     0,     0,  1042,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   940,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4046,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3459,     0,  3460,     0,     0,     0,     0,
       0,     0,     0,  3461,     0,     0,     0,  3459,     0,  3460,
       0,     0,     0,     0,     0,     0,     0,  3461,     0,     0,
       0,     0,   940,     0,     0,     0,   940,     0,     0,     0,
     940,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     940,     0,   940,     0,   940,   940,   940,   940,     0,     0,
     940,     0,     0,     0,     0,   940,     0,     0,     0,   940,
       0,     0,   940,     0,   940,     0,   940,   940,     0,   940,
       0,   940,     0,   940,   940,   940,   940,     0,   940,     0,
     940,     0,     0,   940,     0,     0,     0,     0,     0,     0,
       0,  3462,     0,   940,     0,     0,     0,     0,     0,     0,
       0,   940,     0,  3463,     0,  3462,   940,     0,   940,     0,
       0,   940,   940,     0,   940,   940,     0,  3463,     0,     0,
     940,   940,   940,     0,     0,     0,   940,   940,   940,     0,
     940,     0,   940,     0,   940,     0,   940,     0,   940,     0,
       0,     0,     0,     0,   940,     0,     0,     0,     0,   940,
    3464,  3465,  3466,     0,     0,     0,     0,  3467,     0,     0,
       0,     0,     0,   940,  3464,  3465,  3466,     0,     0,   940,
       0,  3467,   940,     0,  3468,     0,     0,  3469,   940,     0,
       0,     0,     0,     0,     0,   940,     0,     0,  3468,   940,
       0,  3469,     0,     0,     0,     0,     0,  3470,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3470,     0,     0,     0,  1042,  3471,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3471,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     1,  1042,     2,
       0,     0,     0,     0,     0,     0,     0,  1042,  1042,  1042,
       0,     0,     0,     0,     0,     0,     0,     3,     0,     0,
       0,     4,     0,     0,     0,  3472,     0,  3445,     0,  3446,
       0,     0,     0,     0,     0,     5,     6,     0,     0,     7,
       0,     0,     0,     8,     0,     0,     0,     0,     9,    10,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  -959,  -959,   940,  3447,     0,     0,     0,     0,    11,
       0,     0,     0,  -959,     0,     0,     0,     0,     0,     0,
       0,   940,     0,  3448,     0,     0,     0,     0,    12,     0,
       0,  3449,     0,  2309,     0,  2309,  2309,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
    3450,     0,     0,     0,     0,    14,  1042,    15,    16,     0,
       0,     0,     0,     0,     0,     0,  1810,     0,     0,  3451,
      17,     0,    18,     0,     0,     0,  3480,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,     0,
       0,    20,     0,  3452,     0,   940,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3531,    23,     0,
       0,    24,     0,     0,     0,     0,     0,    25,     0,     0,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3531,  3531,     0,    27,     0,     0,     0,
       0,     0,  3480,     0,     0,     0,     0,     0,     0,   306,
      28,   308,    29,     0,     0,     0,     0,     0,     0,     0,
    3453,     0,     0,     0,     0,     0,     0,  3454,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1042,   940,     0,     0,  3455,     0,     0,     0,     0,
      31,     0,     0,     0,    32,     0,     0,     0,     0,     0,
       0,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3531,  3531,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   940,     0,     0,
       0,     0,   940,     0,  3457,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3458,     0,     0,   940,     0,
     940,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   940,
       0,     0,    34,     0,     0,     0,     0,     0,   940,     0,
     940,     0,   940,     0,     0,     0,     0,     0,     0,     0,
       0,    35,     0,    36,     0,     0,     0,     0,     0,     0,
       0,     0,  3459,     0,  3460,     0,     0,     0,     0,     0,
       0,    37,  3461,     0,     0,     0,   940,     0,     0,     0,
       0,   940,     0,    38,     0,     0,     0,   940,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   940,     0,     0,     0,  1046,     0,     0,    39,
       0,   940,    40,     0,    41,     0,    42,    43,     0,     0,
      44,     0,    45,     0,     0,     0,  1042,     0,     0,     0,
       0,     0,     0,    46,     0,     0,    47,     0,     0,     0,
       0,  1157,   940,     0,     0,     0,     0,    48,     0,     0,
       0,  1042,     0,     0,   940,     0,     0,     0,     0,     0,
    3462,     0,    49,     0,     0,     0,     0,     0,    50,    51,
      52,     0,  3463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   940,
       0,    53,     0,     0,     0,     0,     0,     0,     0,    54,
       0,     0,  1099,  2309,     0,     0,     0,     0,     0,  3464,
    3465,  3466,     0,     0,  1260,  1100,  3467,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,  1101,     0,     0,
       0,     0,     0,  3468,     0,     0,  3469,     0,     0,     0,
       0,     0,     0,  1290,     0,    55,     0,     0,     0,     0,
       0,  1102,  1084,     0,     0,     0,  3470,  3480,    56,     0,
       0,     0,    57,     0,  1103,    58,     0,     0,     0,     0,
      59,     0,     0,     0,     0,  3471,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1336,     0,
    1104,  3480,  1105,     0,  1106,     0,    60,    61,     0,     0,
       0,     0,     0,     0,     0,    62,     0,     0,  1107,  1358,
       0,    63,     0,     0,     0,   940,     0,     0,     0,     0,
       0,     0,     0,     0,   940,     0,     0,     0,     0,     0,
       0,     0,     0,    15,    16,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2201,  1108,     0,     0,  1413,  1109,     0,     0,
    1110,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3480,     0,     0,  1111,     0,  1112,     0,     0,
       0,     0,     0,     0,     0,  1113,     0,  1480,  1114,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   306,
       0,   308,     0,     0,     0,     0,     0,     0,     0,  1115,
    1116,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1543,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1117,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3531,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   940,     0,     0,
       0,     0,   940,     0,     0,     0,     0,     0,   940,   940,
       0,   940,     0,     0,     0,     0,     0,  1120,     0,     0,
       0,     0,   940,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   940,     0,     0,   940,     0,   940,   940,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1122,  1123,     0,     0,  1124,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     940,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1126,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1854,   940,     0,  1855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1042,     0,     0,
       0,     0,     0,     0,     0,  1127,     0,     0,     0,     0,
       0,  1887,  1888,     0,     0,     0,     0,     0,  1896,  1128,
       0,     0,  1901,  1902,     0,     0,  1905,  1906,  1907,  1908,
    1911,  1912,  1913,  1914,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1931,  1932,  1933,     0,  1934,  1935,  1936,
       0,     0, -2888,     0,  1962,  1963,  1129,     0,     0,  1972,
    1973,  1974,  1975,  1976,  1977,     0,  1979,     0,  1982,     0,
     940,     0,     0,     0,     0,  1130,  1990,  1991,  1992,     0,
    1995,  1996,     0,     0,     0,     0,     0,     0,     0,  2002,
    2003,  2004,  2005,     0,  2007,  2008,  2009,     0,     0,     0,
    2013,     0,  2015,  2016,  2017,  2018,  2019,     0,     0,  2022,
       0,     0,     0,  2026,  2027,     0,     0,     0,  2030,     0,
       0,     0,  2033,  2037,  2038,     0,     0,     1,     0,     2,
    3480,     0,     0,     0,  2046,  2047,  2048,  2049, -2888,     0,
       0,     0,     0,     0,     0,  2053,  1131,     3,     0,     0,
     940,     4,  2058,  2059,  2060,     0,     0,   940,     0,     0,
       0,     0,     0,     0,     0,     5,     6,     0,     0,     7,
       0,     0,     0,     8,     0,     0,     0,     0,     9,    10,
       0,     0,     0,     0,     0,     0,     0,     0,  2102,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,  3480,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   940,   940,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    14,     0,    15,    16,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      17,     0,    18,     0,     0,     0,     0,     0,  2182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2199,     0,     0,     0,  4543,
       0,    20,     0,     0,   940,  3561,     0,  3562,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      21,  3445,     0,  3446,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    23,     0,
       0,    24,     0,     0,     0,     0,     0,    25,     0,     0,
       0,    26,     0,  3564,     0,     0,     0,     0,  3447,     0,
       0,     0,     0,     0,   940,     0,    27,     0,  2253,     0,
       0,     0,     0,     0,     0,     0,     0,  3448,     0,     0,
      28,     0,    29,  2275,     0,  3449,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3567,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,   940,     0,   940,
       0,     0,     0,     0,  3450,     0,     0,     0,     0,     0,
      31,     0,     0,  1042,    32,     0,     0,     0,     0,     0,
    1810,    33,  1042,  3451,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3568,   940,     0,     0,  2335,     0,     0,
       0,     0,  4544,     0,     0,     0,     0,     0,     0,     0,
       0,  3571,     0,     0,     0,     0,     0,  3452,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   940,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3573,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   306,     0,   308,     0,     0,     0,     0,
       0,    35,     0,    36,  3453,     0,     0,     0,     0,     0,
       0,  3454,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    37,     0,     0,   940,     0,     0,     0,     0,  3455,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3575,     0,     0,     0,     0,    39,
       0,     0,    40,     0,    41,     0,    42,    43,     0,     0,
      44,     0,    45,     0,     0,     0,     0,  2568,  2569,     0,
       0,     0,     0,    46,     0,     0,    47,     0,  3457,     0,
       0,     0,     0,     0,     0,     0,     0,    48,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3458,
       0,     0,    49,  3576,     0,     0,     0,     0,    50,    51,
      52,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,     0,     0,     0,     0,
       0,    53,  2309,     0,     0,     0,     0,     0,     0,    54,
       0,     0,     0,     0,     0,     0,     0,  3578,     0,     0,
       0,     0,     0,     0,     0,     0,  3459,  2309,  3460,     0,
     940,     0,     0,     0,     0,     0,  3461,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   940,
       0,     0,     0,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,  2667,  2669,  2671,  1042,     0,    56,     0,
       0,     0,    57,     0,     0,    58,     0,     0,     0,     0,
      59,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2706,     0,     0,     0,    60,    61,     0,     0,
       0,  2711,     0,  2712,     0,    62,     0,     0,  3480,     0,
     940,    63,     0,     0,  3462,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,     0,     0,
    2743,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3464,  3465,  3466,     0,     0,     0,     0,
    3467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3468,     0,     0,
    3469,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1042,
    3470,     0,     0,     0,     0,  1157,     0,     0,  1042,     0,
       0,     0,     0,  2828,     0,     0,     0,   940,     0,  3471,
       0,     0,  2841,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2275,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   940,     0,   940,     0,     1,     0,     2,  2886,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2896,     0,     0,     0,     4,
       0,     0,     0,     0,     0,     0,  5098,     0,     0,  5098,
       0,     0,     0,     5,     6,     0,     0,     0,     0,     0,
       0,     8,     0,     0,     0,  1042,     9,    10,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   940,     0,    11,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,     0,     0,     0,     0,     0,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2309,  2309,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    14,     0,    15,    16,     0,     0,     0,
       0,  1042,   940,     0,     0,     0,     0,     0,    17,     0,
      18,     0,     0,     0,     0,     0,     0,     0,  2987,     0,
    2743,     0,     0,  5222,     0,     0,  5222,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,     0,     0,     0,     0,  5098,     0,     0,
       0,     0,     0,     0,     0,     0,   940,     0,    21,     0,
       0,     0,     0,     0,  5098,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    23,     0,     0,    24,
       0,     0,     0,     0,     0,    25,     0,     0,     0,    26,
       0,     0,     0,   940,  3086,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   940,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3144,    31,     0,
       0,  3146,    32,     0,     0,  3147,     0,     0,  5222,     0,
       0,     0,     0,  5222,     0,  1908,     0,  3165,     0,  1908,
    5222,  3168,  3169,     0,     0,     0,     0,     0,     0,     0,
    3175,     0,     0,     0,  3177,     0,     0,  3178,     0,  3179,
       0,  3180,     0,     0,  3182,     0,  3183,     0,  3184,  3185,
    3186,  3187,     0,  3188,     0,  3189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   940,  3193,     0,
       0,     0,     0,     0,   940,     0,  3194,     0,     0,     0,
       0,  3195,     0,  3196,     0,     0,  3197,  3198,     0,  3199,
       0,     0,     0,     0,     0,  3206,  3207,  3208,     0,     0,
       0,  3210,  3211,  3212,     0,  3213,     0,  3215,     0,  3217,
      34,  3219,     0,  3220,     0,     0,     0,     0,     0,  3222,
       0,     0,     0,     0,  3233,     0,     0,     0,  5222,    35,
       0,    36,     0,     0,  5422,     0,     0,     0,  3248,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    37,
       0,     0,     0,  3258,     0,     0,     0,     0,     0,     0,
    3266,    38,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   940,     0,     0,     0,    39,     0,     0,
      40,   940,    41,     0,     0,    43,  3625,  3626,    44,     0,
      45,     0,  3627,     0,  3628,     0,  3629,  3630,     0,     0,
       0,    46,     0,     0,    47,     0,     0,     0,     0,     0,
       0,     0,     0,  3631,     0,    48,     0,     0,     0,     0,
       0,     0,  5222,     0,  5222,  5222,     0,     0,     0,     0,
      49,     0,     0,   940,     0,     0,    50,    51,    52,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5222,     0,     0,
       0,     0,     0,     0,     0,  5222,     0,     0,     0,    53,
       0,     0,  3632,     0,     0,     0,  3633,    54,     0,     0,
       0,     0,     0,   940,  3634,     0,     0,     0,     0,     0,
       0,     0,  5222,     0,     0,     0,     0,     0,  2275,     0,
       0,     0,     0,     0,     0,  3635,     0,     0,     0,     0,
       0,  3625,  3626,     0,     0,     0,  2275,  3627,     0,  3628,
       0,  3629,  3630,    55,     0,  3636,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    56,  1042,  3631,     0,
      57,     0,     0,    58,     0,     0,     0,     0,    59,   940,
       0,     0,     0,     0,  3637,     0,  3638,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3639,  3640,     0,    61,     0,     0,     0,     0,
       0,     0,     0,    62,     0,     0,     0,     0,     0,    63,
       0,     0,     0,     0,     0,     0,     0,  3632,     0,     0,
       0,  3633,     0,  3492,     0,     0,     0,     0,     0,  3634,
    3500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3641,     0,     0,     0,     0,     0,     0,
    3635,     0,     0,     0,  3642,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3636,     0,     0,     0,     0,  3643,     0,     0,     0,     0,
       0,     0,     0,     0,  3644,  3645,     0,  3646,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3637,
       0,  3638,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3639,  3640,     0,
       0,     0,     0,  3647,  3648,  3649,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3699,     0,     0,
       0,     0,     0,  3650,  3651,  3652,     0,     0,     0,     0,
       0,  3653,     0,     0,  3654,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3641,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3655,  3642,
    3656,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3741,     0,     0,     0,     0,  3743,     0,     0,
    3643,     0,     0,     0,     0,     0,     0,     0,     0,  3644,
    3645,     0,  3646,     0,     0,     0,     0,     0,  3625,  3626,
       0,  3657,  3658,  3771,  3627,  3774,  3628,     0,  3629,  3630,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3631,     0,     0,  3647,  3648,
    3649,     0,  3659,     0,  3806,     0,     0,     0,     0,     0,
       0,     0,     0,  3816,     0,  3818,     0,  3820,  3650,  3651,
    3652,     0,     0,     0,     0,     0,  3653,     0,     0,  3654,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3660,     0,     0,
       0,     0,     0,  3655,  3632,  3656,     0,     0,  3633,     0,
       0,     0,  3492,     0,     0,     0,  3634,     0,     0,  3661,
       0,     0,     0,     0,     0,     0,     0,  2743,     0,     0,
       0,     0,     0,     0,  3662,     0,  3874,  3635,     0,     0,
       0,     0,     0,  3625,  3626,     0,  3657,  3658,     0,  3627,
       0,  3628,     0,  3629,  3630,     0,     0,  3636,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3910,     0,     0,
    3631,     0,     0,     0,     0,     0,     0,  3659,     0,     0,
       0,     0,     0,     0,     0,     0,  3637,     0,  3638,     0,
       0,     0,     0,  3663,     0,     0,     0,  3664,     0,     0,
    3665,  3666,  3667,  3668,  3639,  3640,     0,     0,     0,     0,
       0,     0,     0,     0,  3669,     0,     0,     0,     0,     0,
       0,     0,  4957,     0,  2275,     0,     0,     0,     0,  3632,
       0,     0,     0,  3633,     0,     0,     0,     0,     0,     0,
       0,  3634,     0,     0,  3661,     0,  3670,  3671,     0,     0,
       0,     0,     0,     0,     0,  3641,     0,     0,     0,  3662,
       0,     0,  3635,     0,     0,     0,  3642,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3672,     0,     0,     0,
       0,     0,  3636,     0,     0,     0,     0,  3643,     0,     0,
       0,     0,     0,     0,     0,     0,  3644,  3645,     0,  3646,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3637,     0,  3638,     0,     0,     0,     0,  3663,     0,
       0,     0,  3664,     0,     0,  3665,  3666,  3667,  3668,  3639,
    3640,     0,     0,     0,     0,  3647,  3648,  3649,     0,  4958,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3492,     0,     0,     0,     0,  3650,  3651,  3652,     0,  2743,
       0,     0,     0,  3653,     0,     0,  3654,     0,     0,     0,
       0,  3670,  3671,     0,     0,     0,     0,     0,     0,     0,
    3641,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3655,  3642,  3656,     0,     0,     0,     0,     0,     0,     0,
       0,  3672,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3643,     0,     0,     0,     0,     0,     0,     0,
       0,  3644,  3645,     0,  3646,     0,     0,     0,     0,     0,
       0,     0,     0,  3657,  3658,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3647,  3648,  3649,     0,  3659,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3650,  3651,  3652,     0,     0,     0,     0,     0,  3653,     0,
       0,  3654,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3655,     0,  3656,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4746,     0,     0,
       0,  3661,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3662,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3657,  3658,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3659,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3663,     0,     0,     0,  3664,
       0,     0,  3665,  3666,  3667,  3668,     0,     0,     0,     0,
       0,     0,  4277,     0,     0,     0,     0,  4279,     0,     0,
       0,     0,     0,  4283,  4284,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4291,     0,     0,
       0,     0,     0,     0,     0,     0,  3661,  4297,  3670,  3671,
    4298,     0,  4299,  4300,     0,     0,     0,     0,     0,     0,
       0,  3662,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3663,     0,     0,     0,  3664,     0,     0,  3665,  3666,  3667,
    3668,     0,     0,     0,     0,     0,     0,     0,     0,  2743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3670,  3671,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2743,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3492,     0,     0,     0,     0,
       0,     0,  4497,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4554,  4555,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4601,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3492,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3492,     0,  3492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4716,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
       0,   170,     0,     0,     0,   171,     0,     0,     0,     0,
     173,   174,   175,   176,   177,   178,   179,   180,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,   185,   186,   187,     0,   188,     0,     0,     0,     0,
       0,   191,     7,     0,   192,   193,     0,   194,     0,  4781,
       0,     0,     0,   198,   199,   200,  1017,   202,   203,   204,
       0,   205,   206,     0,     0,     0,     0,     0,     0,   212,
       0,   214,     0,   216,   217,   218,   219,     0,   220,   221,
       0,   222,   223,   224,     0,   226,     0,   227,     0,     0,
     228,     0,     0,   229,     0,     0,   230,     0,     0,   231,
       0,   232,     0,   233,     0,     0,   234,   235,   236,     0,
     237,     0,   238,     0,     0,     0,     0,   239,     0,     0,
       0,     0,   241,     0,   242,     0,   243,     0,     0,     0,
       0,     0,   244,     0,   245,   246,   247,   248,   249,     0,
       0,     0,     0,     0,     0,     0,     0,   251,   252,   253,
       0,  -421,  -421,   254,   255,     0,  -421,   257,     0,   258,
     259,   260,     0,   261,   262,     0,   263,   264,   265,   266,
     267,     0,     0,     0,     0,   271,     0,     0,   272,   273,
     274,   275,     0,     0,   276,   277,  1018,   278,     0,   279,
     280,     0,     0,     0,     0,     0,     0,     0,    22,     0,
     285,     0,   286,     0,   287,  4868,   288,   289,   290,   291,
     292,     0,   294,   295,     0,   296,     0,     0,     0,     0,
       0,   298,   299,     0,  3492,     0,     0,     0,   301,     0,
     303,     0,     0,     0,   304,   305,   306,   307,   308,    27,
       0,     0,   309,   310,   311,   312,   313,     0,     0,   314,
       0,     0,     0,     0,   315,     0,     0,     0,     0,     0,
     317,     0,   318,   319,     0,   320,   321,   322,  1019,     0,
     323,     0,   324,     0,     0,     0,   326,   327,   328,     0,
       0,   329,  1020,     0,   330,   331,     0,     0,     0,     0,
       0,   332,   333,     0,   334,  4931,   335,     0,   336,   337,
       0,     0,     0,     0,    33,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,     0,   363,   364,   365,     0,     0,     0,
       0,     0,   366,   367,   368,   369,   370,   371,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,     0,     0,   397,   398,   399,   400,     0,
       0,     0,     0,   401,     0,     0,   402,   403,   404,   405,
       0,   406,   407,   408,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   414,
     415,     0,  3492,     0,     0,   417,     0,   418,   419,   420,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,     0,     0,     0,     0,   431,   432,   433,     0,   434,
       0,   435,   436,   437,   438,   439,     0,   440,   441,   442,
     443,     0,     0,   444,     0,   445,  5058,     0,  5060,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,     0,   456,     0,     0,   458,     0,   460,    42,
       0,   461,     0,     0,   463,     0,   464,     0,     0,   466,
     467,     0,   468,  1022,   469,   470,     0,     0,   471,     0,
     473,   474,   475,   476,     0,   477,   478,   479,     0,   480,
       0,   482,   483,     0,   484,     0,     0,     0,     0,   486,
     487,   488,   489,     0,     0,     0,   491,     0,   492,     0,
       0,     0,     0,     0,     0,   495,     0,     0,   498,   499,
       0,   500,     0,   502,     0,   504,   505,     0,     0,     0,
       0,     0,     0,   506,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,     0,   512,     0,     0,     0,   513,
       0,     0,     0,   515,     0,     0,   517,   518,   519,   520,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   527,
     528,     0,     0,   529,   530,   531,   532,     0,     0,   533,
     534,     0,     0,   536,   537,   538,   539,     0,     0,     0,
       0,     0,   540,   541,   542,     0,     0,     0,     0,   544,
     545,   546,     0,     0,   548,   549,     0,   550,   551,     0,
       0,     0,     0,     0,   554,     0,     0,   555,     0,     0,
       0,   557,   558,     0,     0,     0,     0,     0,     0,     0,
       0,   559,     0,     0,   560,   561,     0,     0,     0,   562,
     563,   564,   565,   566,   567,   568,     0,     0,     0,    60,
       0,     0,     0,     0,   571,     0,     0,   573,     0,   575,
       0,     0,   576,     0,     0,     0,     0,     0,  1413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5279,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5374,     0,     0,     0,     0,     0,     0,  5377,
       0,     0,     0,     0,     0,     0,     0,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
    2034,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,  2743,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,  5494,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,  2743,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,  2035,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,  2036,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
    2271,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,  2272,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,  2273,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,   850,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,  2274,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,  1289,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,  2666,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,   850,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,  2668,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,  2670,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,   850,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,  2739,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,  2740,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,   850,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,  1335,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
    2067,     0,   170,     0,     0,     0,  2068,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,     0,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,  2181,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,  3143,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,   850,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,  3205,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,   850,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,   829,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,  5460,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,     0,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,   829,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,     0,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,   779,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,  2082,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,   849,     0,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,   904,   905,     0,     0,     0,     0,   906,   907,     0,
       0,   908,   909,     0,     0,   910,   911,   163,     0,   164,
     776,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   777,     0,   173,   174,   175,   176,
     177,   178,   179,   778,   181,     0,   182,     0,     0,   779,
     183,   780,   781,   782,   184,   783,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,   784,   785,
     192,   193,     0,   194,   786,   787,   196,   197,     0,   198,
     199,   200,   201,   202,   788,   204,     0,   789,   206,   790,
     791,   792,   793,   794,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     795,   226,     0,   227,   796,   797,   228,     0,     0,   229,
     798,   799,   230,   800,   801,   231,     0,   232,   802,   233,
     803,     0,   234,   235,   236,   804,   805,   806,   807,     0,
       0,     0,     0,   808,   240,   809,     0,     0,   810,   811,
     242,     0,   243,     0,     0,   812,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,   813,     0,   272,   273,   274,   275,   814,   815,
     276,   277,     0,   278,   816,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   818,   285,     0,   286,     0,
     287,     0,   288,   289,   819,   291,   820,   293,   294,   295,
       0,   296,     0,   821,   822,   823,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     826,   305,   306,   307,   308,   827,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,   828,
     315,   316,     0,  2084,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   830,   831,     0,     0,   329,     0,   832,
     330,   331,     0,     0,     0,     0,     0,   833,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   835,   359,   360,   361,   362,   836,
     363,   364,   365,     0,   837,     0,     0,     0,   366,   367,
     368,   369,   838,   371,     0,     0,   839,   373,   374,   840,
     375,     0,   376,   841,   842,   843,   844,   845,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     847,   848,   391,   392,   393,   394,   849,     0,   395,   851,
     396,   397,   398,   399,   400,     0,   852,   853,   854,   401,
       0,   855,   402,   403,   404,   856,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,   857,   416,
       0,   417,     0,   418,   419,   858,   859,   860,   861,   421,
     422,   423,   424,   862,   863,   427,   864,   428,   429,     0,
     430,   431,   432,   865,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   866,   441,   442,   443,     0,   867,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,   868,   869,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   870,     0,   871,   471,   472,   473,   474,   475,   872,
       0,   477,   873,   479,   874,   480,   481,   482,   483,     0,
     875,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   876,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,   877,   878,   514,   515,
     516,     0,   517,   518,   879,   520,   521,   522,   880,   881,
     523,   524,   525,   526,   882,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,   884,
     885,   886,   887,     0,     0,     0,     0,     0,   540,   541,
     542,     0,   888,   889,   890,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   893,   558,     0,
       0,   894,   895,   896,     0,     0,     0,   897,     0,     0,
     560,   561,   898,     0,   899,   562,   563,   564,   565,   566,
     900,   901,     0,     0,   569,     0,     0,   902,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   903,     0,
       0,     0,     0,     0,     0,     0,   904,   905,     0,     0,
       0,     0,   906,   907,     0,     0,   908,   909,     0,     0,
     910,   911,   163,     0,   164,   776,   166,   167,   168,   169,
       0,     0,   170,     0,     0,     0,   171,     0,     0,   777,
       0,   173,   174,   175,   176,   177,   178,   179,   778,   181,
       0,   182,     0,     0,     0,   183,   780,   781,   782,   184,
     783,     0,   185,   186,   187,     0,   188,     0,   189,   190,
       0,     0,   191,   784,   785,   192,   193,     0,   194,   786,
     787,   196,   197,     0,   198,   199,   200,   201,   202,   788,
     204,     0,   789,   206,   790,   791,   792,   793,   794,     0,
     212,   213,   214,   215,   216,   217,   218,   219,     0,   220,
     221,     0,   222,   223,   224,   795,   226,     0,   227,   796,
     797,   228,     0,     0,   229,   798,   799,   230,   800,   801,
     231,     0,   232,   802,   233,   803,     0,   234,   235,   236,
     804,   805,   806,   807,     0,     0,     0,     0,   808,   240,
     809,     0,     0,   810,   811,   242,     0,   243,     0,     0,
     812,     0,     0,   244,     0,   245,   246,   247,   248,   249,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,     0,     0,     0,   254,   255,     0,   256,   257,     0,
     258,   259,   260,     0,   261,   262,     0,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   813,     0,   272,
     273,   274,   275,   814,   815,   276,   277,     0,   278,   816,
     279,   280,   817,     0,   281,   282,   283,     0,     0,     0,
     818,   285,     0,   286,     0,   287,     0,   288,   289,   819,
     291,   820,   293,   294,   295,     0,   296,     0,   821,   822,
     823,   297,   298,   299,     0,   300,   824,   825,     0,   301,
     302,   303,     0,     0,     0,   826,   305,   306,   307,   308,
     827,     0,     0,   309,   310,   311,   312,   313,     0,     0,
     314,     0,     0,     0,   828,   315,   316,     0,  5136,     0,
       0,   317,     0,   318,   319,     0,   320,   321,   322,     0,
       0,   323,     0,   324,     0,     0,   325,   326,   830,   831,
       0,     0,   329,     0,   832,   330,   331,     0,     0,     0,
       0,     0,   833,   333,     0,   334,     0,   335,     0,   336,
     337,     0,     0,   834,     0,     0,     0,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   835,
     359,   360,   361,   362,   836,   363,   364,   365,     0,   837,
       0,     0,     0,   366,   367,   368,   369,   838,   371,     0,
       0,   839,   373,   374,   840,   375,     0,   376,   841,   842,
     843,   844,   845,   381,   382,   383,   384,   385,   386,     0,
     846,   387,     0,     0,   388,   847,   848,   391,   392,   393,
     394,     0,     0,   395,   851,   396,   397,   398,   399,   400,
       0,   852,   853,   854,   401,     0,   855,   402,   403,   404,
     856,     0,   406,   407,   408,   409,     0,   410,   411,     0,
       0,     0,     0,     0,   412,     0,     0,     0,     0,   413,
     414,   415,     0,   857,   416,     0,   417,     0,   418,   419,
     858,   859,   860,   861,   421,   422,   423,   424,   862,   863,
     427,   864,   428,   429,     0,   430,   431,   432,   865,     0,
     434,     0,   435,   436,   437,   438,   439,     0,   866,   441,
     442,   443,     0,   867,   444,     0,   445,     0,     0,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,   460,
     868,   869,   461,     0,   462,   463,     0,   464,   465,     0,
     466,   467,     0,   468,     0,   469,   870,     0,   871,   471,
     472,   473,   474,   475,   872,     0,   477,   873,   479,   874,
     480,   481,   482,   483,     0,   875,   485,     0,     0,     0,
     486,   487,   488,   489,   490,     0,     0,   876,     0,   492,
       0,     0,     0,   493,     0,   494,   495,   496,   497,   498,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
       0,     0,     0,     0,   506,   507,     0,   508,     0,     0,
     509,     0,     0,     0,   510,   511,   512,     0,     0,     0,
     513,   877,   878,   514,   515,   516,     0,   517,   518,   879,
     520,   521,   522,   880,   881,   523,   524,   525,   526,   882,
     527,   528,     0,     0,   529,   530,   531,   532,     0,   883,
     533,   534,     0,   535,   884,   885,   886,   887,     0,     0,
       0,     0,     0,   540,   541,   542,     0,   888,   889,   890,
     544,   545,   546,   891,   547,   548,   549,   892,   550,   551,
       0,   552,   553,     0,     0,   554,     0,     0,   555,     0,
     556,     0,   893,   558,     0,     0,   894,   895,   896,     0,
       0,     0,   897,     0,     0,   560,   561,   898,     0,   899,
     562,   563,   564,   565,   566,   900,   901,     0,     0,   569,
       0,     0,   902,     0,     0,   571,   572,     0,   573,   574,
     575,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,  5137,  5138,     0,     0,     0,     0,     0,  5139,     0,
       0,     0,   909,     0,     0,   910,   911,   163,     0,   164,
     165,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,     0,     0,     0,
     183,   780,     0,     0,   184,     0,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,     0,     0,
     192,   193,     0,   194,   195,     0,   196,   197,     0,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,     0,     0,   228,     0,     0,   229,
       0,     0,   230,     0,     0,   231,     0,   232,     0,   233,
       0,     0,   234,   235,   236,     0,   237,     0,  2136,     0,
       0,     0,     0,   239,   240,   809,     0,     0,   241,     0,
     242,     0,   243,     0,     0,     0,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,     0,     0,   272,   273,   274,   275,     0,   815,
     276,   277,     0,   278,     0,   279,   280,   817,     0,   281,
     282,   283,     0,     0,     0,   284,   285,     0,   286,     0,
     287,     0,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,     0,     0,     0,     0,   297,   298,   299,     0,
     300,   824,   825,     0,   301,   302,   303,     0,     0,     0,
     304,   305,   306,   307,   308,     0,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,     0,
     315,   316,     0,     0,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   327,   328,     0,     0,   329,     0,     0,
     330,   331,     0,     0,     0,     0,     0,   332,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,   834,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,     0,
     363,   364,   365,     0,     0,     0,     0,     0,   366,   367,
     368,   369,   370,   371,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,   846,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,     0,
     396,   397,   398,   399,   400,     0,     0,   853,   854,   401,
       0,     0,   402,   403,   404,   405,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,     0,   416,
       0,   417,     0,   418,   419,   420,     0,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,     0,
     430,   431,   432,   433,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   440,   441,   442,   443,     0,     0,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,     0,     0,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   470,     0,     0,   471,   472,   473,   474,   475,   476,
       0,   477,   478,   479,     0,   480,   481,   482,   483,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   491,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,     0,     0,   514,   515,
     516,     0,   517,   518,   519,   520,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   883,   533,   534,     0,   535,  2137,
     537,   538,  2138,     0,     0,     0,     0,     0,   540,   541,
     542,     0,     0,   889,   543,   544,   545,   546,   891,   547,
     548,   549,   892,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   557,   558,     0,
       0,     0,     0,     0,     0,     0,     0,   559,     0,     0,
     560,   561,     0,     0,     0,   562,   563,   564,   565,   566,
     567,   568,     0,     0,   569,     0,     0,   570,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   576,     0,
       0,     0,     0,     0,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,     0,   170,     0,     0,     0,   171,
     910,   911,   172,     0,   173,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,     0,     0,     0,   183,     0,
       0,     0,   184,     0,     0,   185,   186,   187,     0,   188,
       0,   189,   190,     0,     0,   191,     0,     0,   192,   193,
       0,   194,  1083,  1084,   196,   197,     0,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,     0,   220,   221,     0,   222,   223,   224,   225,   226,
       0,   227,     0,     0,   228,     0,     0,   229,     0,     0,
     230,     0,     0,   231,     0,   232,     0,   233,     0,     0,
     234,   235,   236,     0,   237,     0,   238,     0,     0,     0,
       0,   239,   240,     0,     0,     0,   241,  1085,   242,     0,
     243,     0,     0,     0,     0,     0,   244,     0,   245,   246,
     247,   248,   249,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,     0,     0,     0,   254,   255,     0,
     256,   257,     0,   258,   259,   260,     0,   261,   262,     0,
     263,   264,   265,   266,   267,   268,     0,   269,   270,   271,
       0,     0,   272,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,     0,     0,   281,   282,   283,
       0,     0,     0,   284,   285,     0,   286,     0,   287,     0,
     288,   289,   290,   291,   292,   293,  1086,   295,     0,   296,
       0,     0,     0,     0,   297,   298,   299,     0,   300,     0,
       0,     0,   301,   302,   303,     0,     0,     0,   304,   305,
     306,   307,   308,     0,     0,     0,   309,   310,   311,   312,
     313,     0,     0,   314,     0,     0,     0,     0,   315,   316,
       0,     0,     0,     0,   317,     0,   318,   319,     0,   320,
     321,   322,     0,     0,   323,     0,   324,     0,     0,   325,
     326,   327,   328,     0,     0,   329,     0,     0,   330,   331,
       0,     0,     0,     0,     0,   332,   333,     0,  1087,     0,
     335,     0,   336,   337,     0,     0,     0,     0,     0,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,     0,   363,   364,
     365,     0,     0,     0,     0,     0,   366,   367,   368,   369,
     370,   371,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,  1088,
     385,   386,     0,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,     0,   396,   397,
     398,   399,   400,     0,     0,     0,     0,   401,     0,     0,
     402,   403,   404,   405,     0,   406,   407,   408,   409,     0,
     410,   411,     0,     0,     0,     0,     0,   412,     0,     0,
       0,     0,   413,   414,   415,     0,     0,   416,     0,   417,
       0,   418,   419,  1089,     0,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,     0,   430,   431,
     432,   433,     0,   434,     0,   435,   436,   437,   438,   439,
       0,   440,   441,   442,   443,     0,     0,   444,     0,   445,
       0,     0,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,   460,     0,     0,   461,     0,   462,   463,     0,
     464,   465,     0,   466,   467,     0,   468,     0,   469,   470,
       0,     0,  1090,   472,   473,   474,   475,   476,     0,   477,
     478,   479,     0,   480,   481,   482,   483,     0,   484,   485,
       0,     0,     0,   486,   487,   488,  1091,   490,     0,     0,
     491,     0,   492,     0,     0,     0,   493,     0,   494,   495,
     496,   497,   498,   499,     0,   500,   501,   502,   503,   504,
     505,     0,     0,     0,     0,     0,     0,   506,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,   511,   512,
       0,     0,     0,   513,     0,     0,   514,   515,   516,     0,
     517,   518,   519,   520,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   527,   528,     0,     0,   529,   530,   531,
     532,     0,     0,   533,   534,     0,   535,   536,   537,   538,
     539,     0,     0,     0,     0,     0,  1092,   541,   542,     0,
       0,     0,   543,   544,   545,   546,     0,   547,   548,   549,
       0,   550,   551,     0,   552,   553,     0,     0,   554,     0,
       0,   555,     0,   556,     0,   557,   558,     0,     0,     0,
       0,     0,     0,     0,     0,   559,     0,     0,   560,   561,
       0,     0,     0,   562,   563,   564,   565,   566,   567,   568,
       0,     0,   569,     0,     0,   570,     0,     0,   571,   572,
       0,   573,   574,   575,     0,     0,   576,     0,     0,     0,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
       0,   170,     0,     0,     0,   171,     0,     0,   172,  1093,
     173,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,     0,     0,     0,   183,     0,     0,     0,   184,     0,
       0,   185,   186,   187,     0,   188,     0,   189,   190,     0,
       0,   191,     0,     0,   192,   193,     0,   194,   195,     0,
     196,   197,     0,   198,   199,   200,   201,   202,   203,   204,
       0,   205,   206,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,     0,   220,   221,
       0,   222,   223,   224,   225,   226,     0,   227,     0,     0,
     228,     0,     0,   229,     0,     0,   230,     0,     0,   231,
       0,   232,     0,   233,     0,     0,   234,   235,   236,     0,
     237,     0,   238,     0,     0,     0,     0,   239,   240,     0,
       0,     0,   241,     0,   242,     0,   243,     0,     0,     0,
       0,     0,   244,     0,   245,   246,   247,   248,   249,     0,
       0,     0,     0,   250,     0,     0,     0,   251,   252,   253,
       0,     0,     0,   254,   255,     0,   256,   257,     0,   258,
     259,   260,     0,   261,   262,     0,   263,   264,   265,   266,
     267,   268,     0,   269,   270,   271,     0,     0,   272,   273,
     274,   275,     0,     0,   276,   277,     0,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,     0,   284,
     285,     0,   286,     0,   287,     0,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,     0,     0,     0,     0,
     297,   298,   299,     0,   300,     0,     0,     0,   301,   302,
     303,     0,     0,     0,   304,   305,   306,   307,   308,     0,
       0,     0,   309,   310,   311,   312,   313,     0,     0,   314,
       0,     0,     0,     0,   315,   316,     0,     0,     0,     0,
     317,     0,   318,   319,     0,   320,   321,   322,     0,     0,
     323,     0,   324,     0,     0,   325,   326,   327,   328,     0,
       0,   329,     0,     0,   330,   331,   723,     0,     0,     0,
       0,   332,   333,     0,   334,     0,   335,     0,   336,   337,
       0,     0,     0,     0,     0,     0,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,     0,   363,   364,   365,     0,     0,     0,
       0,     0,   366,   367,   368,   369,   370,   371,     0,     0,
     372,   373,   374,     0,   375,     0,   376,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,     0,   396,   397,   398,   399,   400,     0,
       0,     0,     0,   401,     0,     0,   402,   403,   404,   405,
       0,   406,   407,   408,   409,     0,   410,   411,     0,     0,
       0,     0,     0,   412,     0,     0,     0,     0,   413,   414,
     415,     0,     0,   416,     0,   417,     0,   418,   419,   420,
       0,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,     0,   430,   431,   432,   433,     0,   434,
       0,   435,   436,   437,   438,   439,     0,   440,   441,   442,
     443,     0,     0,   444,     0,   445,     0,     0,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,     0,   456,   457,     0,   458,   459,   460,     0,
       0,   461,     0,   462,   463,     0,   464,   465,     0,   466,
     467,     0,   468,     0,   469,   470,     0,     0,   471,   472,
     473,   474,   475,   476,     0,   477,   478,   479,     0,   480,
     481,   482,   483,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,   490,     0,     0,   491,     0,   492,     0,
       0,     0,   493,     0,   494,   495,   496,   497,   498,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,     0,
       0,     0,     0,   506,   507,     0,   508,     0,     0,   509,
       0,     0,     0,   510,   511,   512,     0,     0,     0,   513,
       0,     0,   514,   515,   516,     0,   517,   518,   519,   520,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   527,
     528,     0,     0,   529,   530,   531,   532,     0,   160,   533,
     534,     0,   535,   536,   537,   538,   539,     0,     0,     0,
       0,     0,   540,   541,   542,     0,     0,     0,   543,   544,
     545,   546,     0,   547,   548,   549,     0,   550,   551,     0,
     552,   553,     0,     0,   554,     0,     0,   555,     0,   556,
       0,   557,   558,     0,     0,     0,     0,     0,     0,     0,
       0,   559,     0,     0,   560,   561,     0,     0,     0,   562,
     563,   564,   565,   566,   567,   568,     0,     0,   569,     0,
       0,   570,     0,     0,   571,   572,     0,   573,   574,   575,
       0,     0,   576,     0,     0,     0,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,     0,     0,   172,  1646,   173,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,     0,     0,     0,
     183,     0,     0,     0,   184,     0,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,     0,     0,
     192,   193,     0,   194,   195,     0,   196,   197,     0,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,     0,     0,   228,     0,     0,   229,
       0,     0,   230,     0,     0,   231,     0,   232,     0,   233,
       0,     0,   234,   235,   236,     0,   237,     0,   238,     0,
       0,     0,     0,   239,   240,     0,     0,     0,   241,     0,
     242,     0,   243,     0,     0,     0,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,     0,     0,   272,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,     0,     0,   281,
     282,   283,     0,     0,     0,   284,   285,     0,   286,     0,
     287,     0,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,     0,     0,     0,     0,   297,   298,   299,     0,
     300,     0,     0,     0,   301,   302,   303,     0,     0,     0,
     304,   305,   306,   307,   308,     0,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,     0,
     315,   316,     0,     0,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   327,   328,     0,     0,   329,     0,     0,
     330,   331,   723,     0,     0,     0,     0,   332,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,     0,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,     0,
     363,   364,   365,     0,     0,     0,     0,     0,   366,   367,
     368,   369,   370,   371,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,     0,
     396,   397,   398,   399,   400,     0,     0,     0,     0,   401,
       0,     0,   402,   403,   404,   405,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,     0,   416,
       0,   417,     0,   418,   419,   420,     0,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,     0,
     430,   431,   432,   433,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   440,   441,   442,   443,     0,     0,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,     0,     0,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   470,     0,     0,   471,   472,   473,   474,   475,   476,
       0,   477,   478,   479,     0,   480,   481,   482,   483,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   491,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,     0,     0,   514,   515,
     516,     0,   517,   518,   519,   520,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   527,   528,     0,     0,   529,
     530,   531,   532,     0,   160,   533,   534,     0,   535,   536,
     537,   538,   539,     0,     0,     0,     0,     0,   540,   541,
     542,     0,     0,     0,   543,   544,   545,   546,     0,   547,
     548,   549,     0,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   557,   558,     0,
       0,     0,     0,     0,     0,     0,     0,   559,     0,     0,
     560,   561,     0,     0,     0,   562,   563,   564,   565,   566,
     567,   568,     0,     0,   569,     0,     0,   570,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   576,     0,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,  2055,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,     0,   170,
       0,     0,     0,   171,     0,     0,   172,  2968,   173,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,     0,
       0,     0,   183,     0,     0,     0,   184,     0,     0,   185,
     186,   187,     0,   188,     0,   189,   190,     0,     0,   191,
       0,     0,   192,   193,     0,   194,  1083,  1084,   196,   197,
       0,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,     0,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,     0,     0,   228,     0,
       0,   229,     0,     0,   230,     0,     0,   231,     0,   232,
       0,   233,     0,     0,   234,   235,   236,     0,   237,     0,
     238,     0,     0,     0,     0,   239,   240,     0,     0,     0,
     241,  1085,   242,     0,   243,     0,     0,     0,     0,     0,
     244,     0,   245,   246,   247,   248,   249,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,     0,     0,
       0,   254,   255,     0,   256,   257,     0,   258,   259,   260,
       0,   261,   262,     0,   263,   264,   265,   266,   267,   268,
       0,   269,   270,   271,     0,     0,   272,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,     0,   284,   285,     0,
     286,     0,   287,     0,   288,   289,   290,   291,   292,   293,
    1086,   295,     0,   296,     0,     0,     0,     0,   297,   298,
     299,     0,   300,     0,     0,     0,   301,   302,   303,     0,
       0,     0,   304,   305,   306,   307,   308,     0,     0,     0,
     309,   310,   311,   312,   313,     0,     0,   314,     0,     0,
       0,     0,   315,   316,     0,     0,     0,     0,   317,     0,
     318,   319,     0,   320,   321,   322,     0,     0,   323,     0,
     324,     0,     0,   325,   326,   327,   328,     0,     0,   329,
       0,     0,   330,   331,     0,     0,     0,     0,     0,   332,
     333,     0,  1087,     0,   335,     0,   336,   337,     0,     0,
       0,     0,     0,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,     0,   363,   364,   365,     0,     0,     0,     0,     0,
     366,   367,   368,   369,   370,   371,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,  1088,   385,   386,     0,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,     0,   396,   397,   398,   399,   400,     0,     0,     0,
       0,   401,     0,     0,   402,   403,   404,   405,     0,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,     0,
       0,   412,     0,     0,     0,     0,   413,   414,   415,     0,
       0,   416,     0,   417,     0,   418,   419,  1089,     0,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,     0,   430,   431,   432,   433,     0,   434,     0,   435,
     436,   437,   438,   439,     0,   440,   441,   442,   443,     0,
       0,   444,     0,   445,     0,     0,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,   460,     0,     0,   461,
       0,   462,   463,     0,   464,   465,     0,   466,   467,     0,
     468,     0,   469,   470,     0,     0,  1090,   472,   473,   474,
     475,   476,     0,   477,   478,   479,     0,   480,   481,   482,
     483,     0,   484,   485,     0,     0,     0,   486,   487,   488,
    1091,   490,     0,     0,   491,     0,   492,     0,     0,     0,
     493,     0,   494,   495,   496,   497,   498,   499,     0,   500,
     501,   502,   503,   504,   505,     0,     0,     0,     0,     0,
       0,   506,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,   511,   512,     0,     0,     0,   513,     0,     0,
     514,   515,   516,     0,   517,   518,   519,   520,   521,   522,
       0,     0,   523,   524,   525,   526,     0,   527,   528,     0,
       0,   529,   530,   531,   532,     0,     0,   533,   534,     0,
     535,   536,   537,   538,   539,     0,     0,     0,     0,     0,
     540,   541,   542,     0,     0,     0,   543,   544,   545,   546,
       0,   547,   548,   549,     0,   550,   551,     0,   552,   553,
       0,     0,   554,     0,     0,   555,     0,   556,     0,   557,
     558,     0,     0,     0,     0,     0,     0,     0,     0,   559,
       0,     0,   560,   561,     0,     0,     0,   562,   563,   564,
     565,   566,   567,   568,     0,     0,   569,     0,     0,   570,
       0,     0,   571,   572,     0,   573,   574,   575,     0,     0,
     576,     0,     0,     0,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,     0,   170,     0,     0,     0,   171,
       0,     0,   172,  1093,   173,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,     0,     0,     0,   183,     0,
       0,     0,   184,     0,     0,   185,   186,   187,     0,   188,
       0,   189,   190,     0,     0,   191,     0,     0,   192,   193,
       0,   194,   195,     0,   196,   197,     0,   198,   199,   200,
     201,   202,   203,   204,     0,   205,   206,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,     0,   220,   221,     0,   222,   223,   224,   225,   226,
       0,   227,     0,     0,   228,     0,     0,   229,     0,     0,
     230,     0,     0,   231,     0,   232,     0,   233,     0,     0,
     234,   235,   236,     0,   237,     0,   238,     0,     0,     0,
       0,   239,   240,     0,     0,     0,   241,     0,   242,     0,
     243,     0,     0,     0,     0,     0,   244,     0,   245,   246,
     247,   248,   249,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,     0,     0,     0,   254,   255,     0,
     256,   257,     0,   258,   259,   260,     0,   261,   262,     0,
     263,   264,   265,   266,   267,   268,     0,   269,   270,   271,
       0,     0,   272,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,     0,     0,   281,   282,   283,
       0,     0,     0,   284,   285,     0,   286,     0,   287,     0,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
       0,     0,     0,     0,   297,   298,   299,     0,   300,     0,
       0,     0,   301,   302,   303,     0,     0,     0,   304,   305,
     306,   307,   308,     0,     0,     0,   309,   310,   311,   312,
     313,     0,     0,   314,     0,     0,     0,     0,   315,   316,
       0,     0,     0,     0,   317,     0,   318,   319,     0,   320,
     321,   322,     0,     0,   323,     0,   324,     0,     0,   325,
     326,   327,   328,     0,     0,   329,     0,     0,   330,   331,
       0,     0,     0,     0,     0,   332,   333,     0,   334,     0,
     335,     0,   336,   337,     0,     0,     0,     0,     0,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,     0,   363,   364,
     365,     0,     0,     0,     0,     0,   366,   367,   368,   369,
     370,   371,     0,     0,   372,   373,   374,     0,   375,     0,
     376,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,     0,   396,   397,
     398,   399,   400,     0,     0,     0,     0,   401,     0,     0,
     402,   403,   404,   405,     0,   406,   407,   408,   409,     0,
     410,   411,     0,     0,     0,     0,     0,   412,     0,     0,
       0,     0,   413,   414,   415,     0,     0,   416,     0,   417,
       0,   418,   419,   420,     0,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,     0,   430,   431,
     432,   433,     0,   434,     0,   435,   436,   437,   438,   439,
       0,   440,   441,   442,   443,     0,     0,   444,     0,   445,
       0,     0,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,   460,     0,     0,   461,     0,   462,   463,     0,
     464,   465,     0,   466,   467,     0,   468,     0,   469,   470,
       0,     0,   471,   472,   473,   474,   475,   476,     0,   477,
     478,   479,     0,   480,   481,   482,   483,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,   490,     0,     0,
     491,     0,   492,     0,     0,     0,   493,     0,   494,   495,
     496,   497,   498,   499,     0,   500,   501,   502,   503,   504,
     505,     0,     0,     0,     0,     0,     0,   506,   507,     0,
     508,     0,     0,   509,     0,     0,     0,   510,   511,   512,
       0,     0,     0,   513,     0,     0,   514,   515,   516,     0,
     517,   518,   519,   520,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   527,   528,     0,     0,   529,   530,   531,
     532,     0,     0,   533,   534,     0,   535,   536,   537,   538,
     539,     0,     0,     0,     0,     0,   540,   541,   542,     0,
       0,     0,   543,   544,   545,   546,     0,   547,   548,   549,
       0,   550,   551,     0,   552,   553,     0,     0,   554,     0,
       0,   555,     0,   556,     0,   557,   558,     0,     0,     0,
       0,     0,     0,     0,     0,   559,     0,     0,   560,   561,
       0,     0,     0,   562,   563,   564,   565,   566,   567,   568,
       0,     0,   569,     0,     0,   570,     0,     0,   571,   572,
       0,   573,   574,   575,     0,     0,   576,     0,     0,     0,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,  5545,   170,     0,     0,     0,   171,   910,  5546,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,  1506,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,     0,   170,
       0,     0,     0,   171,     0,     0,   172,  1507,   173,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,     0,
       0,     0,   183,     0,     0,     0,   184,     0,     0,   185,
     186,   187,     0,   188,     0,   189,   190,     0,     0,   191,
       0,     0,   192,   193,     0,   194,   195,     0,   196,   197,
       0,   198,   199,   200,   201,   202,   203,   204,     0,   205,
     206,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,     0,   220,   221,     0,   222,
     223,   224,   225,   226,     0,   227,     0,     0,   228,     0,
       0,   229,     0,     0,   230,     0,     0,   231,     0,   232,
       0,   233,     0,     0,   234,   235,   236,     0,   237,     0,
     238,     0,     0,     0,     0,   239,   240,     0,     0,     0,
     241,     0,   242,     0,   243,     0,     0,     0,     0,     0,
     244,     0,   245,   246,   247,   248,   249,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,     0,     0,
       0,   254,   255,     0,   256,   257,     0,   258,   259,   260,
       0,   261,   262,     0,   263,   264,   265,   266,   267,   268,
       0,   269,   270,   271,     0,     0,   272,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,     0,   284,   285,     0,
     286,     0,   287,     0,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,     0,     0,     0,     0,   297,   298,
     299,     0,   300,     0,     0,     0,   301,   302,   303,     0,
       0,     0,   304,   305,   306,   307,   308,     0,     0,     0,
     309,   310,   311,   312,   313,     0,     0,   314,     0,     0,
       0,     0,   315,   316,     0,     0,     0,     0,   317,     0,
     318,   319,     0,   320,   321,   322,     0,     0,   323,     0,
     324,     0,     0,   325,   326,   327,   328,     0,     0,   329,
       0,     0,   330,   331,     0,     0,     0,     0,     0,   332,
     333,     0,   334,     0,   335,     0,   336,   337,     0,     0,
       0,     0,     0,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,     0,   363,   364,   365,     0,     0,     0,     0,     0,
     366,   367,   368,   369,   370,   371,     0,     0,   372,   373,
     374,     0,   375,     0,   376,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,     0,   396,   397,   398,   399,   400,     0,     0,     0,
       0,   401,     0,     0,   402,   403,   404,   405,     0,   406,
     407,   408,   409,     0,   410,   411,     0,     0,     0,     0,
       0,   412,     0,     0,     0,     0,   413,   414,   415,     0,
       0,   416,     0,   417,     0,   418,   419,   420,     0,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,     0,   430,   431,   432,   433,     0,   434,     0,   435,
     436,   437,   438,   439,     0,   440,   441,   442,   443,     0,
       0,   444,     0,   445,     0,     0,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,   460,     0,     0,   461,
       0,   462,   463,     0,   464,   465,     0,   466,   467,     0,
     468,     0,   469,   470,     0,     0,   471,   472,   473,   474,
     475,   476,     0,   477,   478,   479,     0,   480,   481,   482,
     483,     0,   484,   485,     0,     0,     0,   486,   487,   488,
     489,   490,     0,     0,   491,     0,   492,     0,     0,     0,
     493,     0,   494,   495,   496,   497,   498,   499,     0,   500,
     501,   502,   503,   504,   505,     0,     0,     0,     0,     0,
       0,   506,   507,     0,   508,     0,     0,   509,     0,     0,
       0,   510,   511,   512,     0,     0,     0,   513,     0,     0,
     514,   515,   516,     0,   517,   518,   519,   520,   521,   522,
       0,     0,   523,   524,   525,   526,     0,   527,   528,     0,
       0,   529,   530,   531,   532,     0,     0,   533,   534,     0,
     535,   536,   537,   538,   539,     0,     0,     0,     0,     0,
     540,   541,   542,     0,     0,     0,   543,   544,   545,   546,
       0,   547,   548,   549,     0,   550,   551,     0,   552,   553,
       0,     0,   554,     0,     0,   555,     0,   556,     0,   557,
     558,     0,     0,     0,     0,     0,     0,     0,     0,   559,
       0,     0,   560,   561,     0,     0,     0,   562,   563,   564,
     565,   566,   567,   568,     0,     0,   569,     0,     0,   570,
       0,     0,   571,   572,     0,   573,   574,   575,     0,     0,
     576,     0,     0,     0,     0,     0,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,     0,   170,     0,     0,
       0,   171,   910,  5546,   172,     0,   173,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,     0,     0,     0,
     183,     0,     0,     0,   184,     0,     0,   185,   186,   187,
       0,   188,     0,   189,   190,     0,     0,   191,     0,     0,
     192,   193,     0,   194,   195,     0,   196,   197,     0,   198,
     199,   200,   201,   202,   203,   204,     0,   205,   206,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,     0,   220,   221,     0,   222,   223,   224,
     225,   226,     0,   227,     0,     0,   228,     0,     0,   229,
       0,     0,   230,     0,     0,   231,     0,   232,     0,   233,
       0,     0,   234,   235,   236,     0,   237,     0,   238,     0,
       0,     0,     0,   239,   240,     0,     0,     0,   241,     0,
     242,     0,   243,     0,     0,     0,     0,     0,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,     0,     0,     0,   254,
     255,     0,   256,   257,     0,   258,   259,   260,     0,   261,
     262,     0,   263,   264,   265,   266,   267,   268,     0,   269,
     270,   271,     0,     0,   272,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,     0,     0,   281,
     282,   283,     0,     0,     0,   284,   285,     0,   286,     0,
     287,     0,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,     0,     0,     0,     0,   297,   298,   299,     0,
     300,     0,     0,     0,   301,   302,   303,     0,     0,     0,
     304,   305,   306,   307,   308,     0,     0,     0,   309,   310,
     311,   312,   313,     0,     0,   314,     0,     0,     0,     0,
     315,   316,     0,     0,     0,     0,   317,     0,   318,   319,
       0,   320,   321,   322,     0,     0,   323,     0,   324,     0,
       0,   325,   326,   327,   328,     0,     0,   329,     0,     0,
     330,   331,     0,     0,     0,     0,     0,   332,   333,     0,
     334,     0,   335,     0,   336,   337,     0,     0,     0,     0,
       0,     0,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,     0,
     363,   364,   365,     0,     0,     0,     0,     0,   366,   367,
     368,   369,   370,   371,     0,     0,   372,   373,   374,     0,
     375,     0,   376,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,     0,
     396,   397,   398,   399,   400,     0,     0,     0,     0,   401,
       0,     0,   402,   403,   404,   405,     0,   406,   407,   408,
     409,     0,   410,   411,     0,     0,     0,     0,     0,   412,
       0,     0,     0,     0,   413,   414,   415,     0,     0,   416,
       0,   417,     0,   418,   419,   420,     0,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,     0,
     430,   431,   432,   433,     0,   434,     0,   435,   436,   437,
     438,   439,     0,   440,   441,   442,   443,     0,     0,   444,
       0,   445,     0,     0,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,   460,     0,     0,   461,     0,   462,
     463,     0,   464,   465,     0,   466,   467,     0,   468,     0,
     469,   470,     0,     0,   471,   472,   473,   474,   475,   476,
       0,   477,   478,   479,     0,   480,   481,   482,   483,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,   490,
       0,     0,   491,     0,   492,     0,     0,     0,   493,     0,
     494,   495,   496,   497,   498,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,     0,     0,     0,     0,   506,
     507,     0,   508,     0,     0,   509,     0,     0,     0,   510,
     511,   512,     0,     0,     0,   513,     0,     0,   514,   515,
     516,     0,   517,   518,   519,   520,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   527,   528,     0,     0,   529,
     530,   531,   532,     0,     0,   533,   534,     0,   535,   536,
     537,   538,   539,     0,     0,     0,     0,     0,   540,   541,
     542,     0,     0,     0,   543,   544,   545,   546,     0,   547,
     548,   549,     0,   550,   551,     0,   552,   553,     0,     0,
     554,     0,     0,   555,     0,   556,     0,   557,   558,     0,
       0,     0,     0,     0,     0,     0,     0,   559,     0,     0,
     560,   561,     0,     0,     0,   562,   563,   564,   565,   566,
     567,   568,     0,     0,   569,     0,     0,   570,     0,     0,
     571,   572,     0,   573,   574,   575,     0,     0,   576,     0,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,  1507,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,  4025,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,   688,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,  2490,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,  2491,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,  4026,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485, -2382,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,   690,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,    61,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,   172,  4027,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,  4025,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
     688,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,  2490,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
    2491,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,   690,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,  4027,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,    61,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
    3346,     0,   171,     0,     0,   172,   910,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,  1341,     0,     0,   171,     0,     0,
     172,   910,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
    1593,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,   172,   620,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,     0,     0,     0,     0,     0,   163,  2768,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,   620,   171,     0,     0,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,  4140,     0,     0,   171,     0,     0,
     172,  4027,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,  4511,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,   172,  4027,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,   620,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   702,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   703,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   704,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,   172,   620,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
       0,     0,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,   910,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,     0,   576,     0,     0,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,     0,  4027,   173,   174,   175,
     176,   177,   178,   179,   180,     0,     0,  1016,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,     0,     0,     0,     0,   191,     7,
       0,   192,   193,     0,   194,     0,     0,     0,     0,     0,
     198,   199,   200,  1017,   202,   203,   204,     0,   205,   206,
       0,     0,     0,     0,     0,     0,   212,     0,   214,     0,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,     0,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,     0,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
       0,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,     0,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,     0,     0,
       0,     0,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,  1018,   278,     0,   279,   280,     0,     0,
       0,     0,     0,     0,     0,    22,     0,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,     0,   294,
     295,     0,   296,     0,     0,     0,     0,     0,   298,   299,
       0,     0,     0,     0,     0,   301,     0,   303,     0,     0,
       0,   304,   305,   306,   307,   308,    27,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,     0,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,  1019,     0,   323,     0,   324,
       0,     0,     0,   326,   327,   328,     0,     0,   329,  1020,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,    33,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,     0,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   414,   415,     0,     0,
       0,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
       0,     0,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,     0,     0,   458,     0,   460,    42,     0,   461,     0,
       0,   463,     0,   464,     0,     0,   466,   467,     0,   468,
    1022,   469,   470,     0,     0,   471,     0,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,     0,   482,   483,
       0,   484,     0,     0,     0,     0,   486,   487,   488,   489,
       0,     0,     0,   491,     0,   492,     0,     0,     0,     0,
       0,     0,   495,     0,     0,   498,   499,     0,   500,     0,
     502,     0,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,     0,   512,     0,     0,     0,   513,     0,     0,     0,
     515,     0,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,     0,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,     0,   544,   545,   546,     0,
       0,   548,   549,     0,   550,   551,     0,     0,     0,     0,
       0,   554,     0,     0,   555,     0,     0,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,     0,    60,     0,     0,     0,
       0,   571,     0,     0,   573,     0,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,     0,   172,  5016,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,  1216,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,   723,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,   160,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,  1398,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,     0,
       0,     0,   171,     0,  2096,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,  2556,
       0,     0,   171,     0,     0,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,  3896,
       0,     0,   171,     0,     0,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,  4080,
       0,     0,   171,     0,     0,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,     0,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,     0,     0,     0,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,   163,   576,
     164,   165,   166,   167,   168,   169,     0,     0,   170,  4786,
       0,     0,   171,     0,     0,   172,     0,   173,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,     0,     0,
       0,   183,     0,     0,     0,   184,     0,     0,   185,   186,
     187,     0,   188,     0,   189,   190,     0,     0,   191,     0,
       0,   192,   193,     0,   194,   195,     0,   196,   197,     0,
     198,   199,   200,   201,   202,   203,   204,     0,   205,   206,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,   227,     0,     0,   228,     0,     0,
     229,     0,     0,   230,     0,     0,   231,     0,   232,     0,
     233,     0,     0,   234,   235,   236,     0,   237,     0,   238,
       0,     0,     0,     0,   239,   240,     0,     0,     0,   241,
       0,   242,     0,   243,     0,     0,     0,     0,     0,   244,
       0,   245,   246,   247,   248,   249,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,     0,     0,     0,
     254,   255,     0,   256,   257,     0,   258,   259,   260,     0,
     261,   262,     0,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,     0,     0,   272,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,     0,   284,   285,     0,   286,
       0,   287,     0,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,     0,     0,     0,     0,   297,   298,   299,
       0,   300,  2799,     0,     0,   301,   302,   303,     0,     0,
       0,   304,   305,   306,   307,   308,     0,     0,     0,   309,
     310,   311,   312,   313,     0,     0,   314,     0,     0,     0,
       0,   315,   316,     0,     0,     0,     0,   317,     0,   318,
     319,     0,   320,   321,   322,     0,     0,   323,     0,   324,
       0,     0,   325,   326,   327,   328,     0,     0,   329,     0,
       0,   330,   331,     0,     0,     0,     0,     0,   332,   333,
       0,   334,     0,   335,     0,   336,   337,     0,     0,     0,
       0,     0,     0,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
       0,   363,   364,   365,     0,     0,     0,     0,     0,   366,
     367,   368,   369,   370,   371,     0,     0,   372,   373,   374,
       0,   375,     0,   376,     0,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,   156,   157,   395,
       0,   396,   397,   398,   399,   400,     0,     0,     0,     0,
     401,     0,     0,   402,   403,   404,   405,     0,   406,   407,
     408,   409,     0,   410,   411,     0,     0,     0,     0,     0,
     412,     0,     0,     0,     0,   413,   414,   415,     0,     0,
     416,     0,   417,     0,   418,   419,   420,     0,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
       0,   430,   431,   432,   433,     0,   434,     0,   435,   436,
     437,   438,   439,     0,   440,   441,   442,   443,     0,     0,
     444,     0,   445,     0,     0,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,   460,     0,     0,   461,     0,
     462,   463,     0,   464,   465,     0,   466,   467,     0,   468,
       0,   469,   470,     0,     0,   471,   472,   473,   474,   475,
     476,     0,   477,   478,   479,     0,   480,   481,   482,   483,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
     490,     0,     0,   491,     0,   492,     0,     0,     0,   493,
       0,   494,   495,   496,   497,   498,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,  4843,   648,  4844,     0,
     506,   507,     0,   508,     0,     0,   509,     0,     0,     0,
     510,   511,   512,     0,     0,     0,   513,     0,     0,   514,
     515,   516,     0,   517,   518,   519,   520,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   527,   528,     0,     0,
     529,   530,   531,   532,     0,     0,   533,   534,     0,   535,
     536,   537,   538,   539,     0,     0,     0,     0,     0,   540,
     541,   542,     0,     0,     0,   543,   544,   545,   546,     0,
     547,   548,   549,     0,   550,   551,     0,   552,   553,     0,
       0,   554,     0,     0,   555,     0,   556,     0,   557,   558,
       0,     0,     0,     0,     0,     0,     0,     0,   559,     0,
       0,   560,   561,     0,     0,     0,   562,   563,   564,   565,
     566,   567,   568,     0,     0,   569,     0,     0,   570,     0,
       0,   571,   572,     0,   573,   574,   575,     0,     0,   576,
     163,     0,   164,   165,   166,   167,   168,   169,  2800,     0,
     170,     0,     0,     0,   171,     0,     0,   172,     0,   173,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
       0,     0,  1633,   183,     0,     0,     0,   184,     0,     0,
     185,   186,   187,     0,   188,     0,   189,   190,     0,     0,
     191,     0,     0,   192,   193,     0,   194,   195,     0,   196,
     197,     0,   198,   199,   200,   201,   202,   203,   204,     0,
     205,   206,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,     0,   220,   221,     0,
     222,   223,   224,   225,   226,     0,   227,     0,     0,   228,
       0,     0,   229,     0,     0,   230,     0,     0,   231,     0,
     232,     0,   233,     0,     0,   234,   235,   236,     0,   237,
       0,   238,     0,     0,     0,     0,   239,   240,     0,     0,
       0,   241,  1634,   242,     0,   243,     0,     0,     0,     0,
       0,   244,     0,   245,   246,   247,   248,   249,     0,     0,
       0,     0,   250,     0,     0,     0,   251,   252,   253,     0,
       0,     0,   254,   255,     0,   256,   257,     0,   258,   259,
     260,     0,   261,   262,     0,   263,   264,   265,   266,   267,
     268,     0,   269,   270,   271,     0,     0,   272,   273,   274,
     275,     0,     0,   276,   277,     0,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,     0,   284,   285,
       0,   286,     0,   287,     0,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,     0,     0,     0,     0,   297,
     298,   299,     0,   300,     0,     0,     0,   301,   302,   303,
       0,     0,     0,   304,   305,   306,   307,   308,     0,     0,
       0,   309,   310,   311,   312,   313,     0,     0,   314,     0,
       0,     0,     0,   315,   316,     0,     0,     0,     0,   317,
       0,   318,   319,     0,   320,   321,   322,     0,     0,   323,
       0,   324,     0,     0,   325,   326,   327,   328,     0,     0,
     329,     0,     0,   330,   331,   723,     0,     0,     0,     0,
     332,   333,     0,   334,     0,   335,     0,   336,   337,     0,
       0,     0,     0,     0,     0,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,     0,   359,   360,
     361,   362,     0,   363,   364,   365,     0,     0,     0,     0,
       0,   366,   367,   368,   369,   370,   371,     0,     0,   372,
     373,   374,     0,   375,     0,   376,     0,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,     0,   396,   397,   398,   399,   400,     0,     0,
       0,     0,   401,     0,     0,   402,   403,   404,   405,     0,
     406,   407,   408,   409,     0,   410,   411,     0,     0,     0,
       0,     0,   412,     0,     0,     0,     0,   413,   414,   415,
       0,     0,   416,     0,   417,     0,   418,   419,   420,     0,
       0,     0,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,     0,   430,   431,   432,   433,     0,   434,     0,
     435,   436,   437,   438,   439,     0,   440,   441,   442,   443,
       0,     0,   444,     0,   445,     0,     0,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,     0,   456,   457,     0,   458,   459,   460,     0,     0,
     461,     0,   462,   463,     0,   464,   465,     0,   466,   467,
       0,   468,     0,   469,   470,     0,     0,   471,   472,   473,
     474,   475,   476,     0,   477,   478,   479,     0,   480,   481,
     482,   483,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,   490,     0,     0,   491,  1635,   492,     0,     0,
       0,   493,     0,   494,   495,   496,   497,   498,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,     0,     0,
       0,     0,   506,   507,     0,   508,     0,     0,   509,     0,
       0,     0,   510,   511,   512,     0,     0,     0,   513,     0,
       0,   514,   515,   516,     0,   517,   518,   519,   520,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   527,   528,
       0,     0,   529,   530,   531,   532,     0,   160,   533,   534,
       0,   535,   536,   537,   538,   539,     0,     0,     0,     0,
       0,   540,   541,   542,     0,     0,     0,   543,   544,   545,
     546,     0,   547,   548,   549,     0,   550,   551,     0,   552,
     553,     0,     0,   554,     0,     0,   555,     0,   556,     0,
     557,   558,     0,     0,     0,     0,     0,     0,     0,     0,
     559,     0,     0,   560,   561,     0,     0,     0,   562,   563,
     564,   565,   566,   567,   568,     0,     0,   569,     0,     0,
     570,     0,     0,   571,   572,     0,   573,   574,   575,     0,
       0,   576,     0,   163,  1636,   164,   165,   166,   167,   168,
     169,   964,   965,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,   966,     0,   229,     0,     0,   230,     0,
     967,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
     968,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,   969,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     970,   266,   267,   268,     0,   269,   971,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   972,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,   973,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,   974,
       0,   314,     0,     0,     0,   975,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,   976,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   977,   436,   437,   438,   978,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,   979,     0,   451,
     452,   453,   454,   455,     0,   980,   457,     0,   458,   459,
     460,     0,     0,   981,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,   982,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,   983,   984,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   985,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,   986,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
     987,   556,   988,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,  1073,   165,   166,   167,   168,
     169,  1074,   965,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,   966,     0,   229,     0,     0,   230,     0,
     967,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
     968,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,   969,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     970,   266,   267,   268,     0,   269,   971,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   972,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,   973,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,   974,
       0,   314,     0,     0,     0,   975,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,   976,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   977,   436,   437,   438,  1075,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,   979,     0,   451,
     452,   453,   454,   455,     0,   980,   457,     0,   458,   459,
     460,     0,     0,   981,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,   982,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,   983,   984,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   985,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,   986,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
     987,   556,   988,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,  1920,     0,     0,   241,  4470,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,  1921,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,  3524,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  3525,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  3526,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  3527,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,  1920,     0,     0,   241,  5358,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,  1921,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,  3524,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  3525,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  3526,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  3527,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,  1920,     0,     0,   241,  5425,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,  1921,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,  3524,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  3525,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  3526,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  3527,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  2302,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  2303,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,   857,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,  2304,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  2305,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  2302,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  2303,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,   857,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,  4858,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  2305,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,  1216,
     967,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,  1648,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  1649,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,  1159,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,  1160,  1161,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
    1162,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,  2302,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,  2303,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,   857,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,  2305,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,  1633,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  1634,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,  1216,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,  1673,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
     967,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  2870,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,  1633,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,   723,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,  1559,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,  1560,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,  1561,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,  3072,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,  3073,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,  4076,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,   648,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,  1276,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  1625,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  1625,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,  2277,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  2483,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
    3693,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,  4226,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
     160,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  4515,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,  4530,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
    5165,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   613,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,  1622,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,  2171,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,  2172,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
     569,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
     172,     0,   173,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,     0,     0,     0,   183,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,   189,
     190,     0,     0,   191,     0,     0,   192,   193,     0,   194,
     195,     0,   196,   197,     0,   198,   199,   200,   201,   202,
     203,   204,     0,   205,   206,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
     240,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,   256,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
       0,   284,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,     0,     0,
       0,     0,   297,   298,   299,     0,   300,     0,     0,     0,
     301,   302,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,   316,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,   325,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,   396,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,   409,     0,   410,   411,
       0,     0,     0,     0,     0,   412,     0,     0,     0,     0,
     413,   414,   415,     0,     0,   416,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,     0,   430,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
     460,     0,     0,   461,     0,   462,   463,     0,   464,   465,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,   472,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,   481,   482,   483,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,   490,     0,     0,   491,     0,
     492,     0,     0,     0,   493,     0,   494,   495,   496,   497,
     498,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,   511,   512,     0,     0,
       0,   513,     0,     0,   514,   515,   516,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,   535,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
     543,   544,   545,   546,     0,   547,   548,   549,     0,   550,
     551,     0,   552,   553,     0,     0,   554,     0,     0,   555,
       0,   556,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,     0,     0,   570,     0,     0,   571,   572,     0,   573,
     574,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,  -441,     0,   254,   255,     0,  -441,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,  -441,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,  -438,     0,   254,   255,     0,  -438,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,  -438,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  1567,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  -443,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  3081,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  3284,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  3316,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  3426,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  3913,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  4686,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,  -425,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,     0,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,  1017,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,     0,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,  1018,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
    1019,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,  1020,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,  1592,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,  1016,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     7,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,     0,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,     0,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
      22,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,    27,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,    33,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,    42,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,  1022,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,    60,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,   163,   576,   164,   165,   166,   167,   168,
     169,     0,     0,   170,     0,     0,     0,   171,     0,     0,
       0,     0,   173,   174,   175,   176,   177,   178,   179,   180,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,   185,   186,   187,     0,   188,     0,     0,
       0,     0,     0,   191,     0,     0,   192,   193,     0,   194,
       0,     0,     0,     0,     0,   198,   199,   200,     0,   202,
     203,   204,     0,   205,   206,     0,     0,     0,     0,     0,
       0,   212,     0,   214,     0,   216,   217,   218,   219,     0,
     220,   221,     0,   222,   223,   224,     0,   226,     0,   227,
       0,     0,   228,     0,     0,   229,     0,     0,   230,     0,
       0,   231,     0,   232,     0,   233,     0,     0,   234,   235,
     236,     0,   237,     0,   238,     0,     0,     0,     0,   239,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
       0,     0,     0,     0,   244,     0,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   251,
     252,   253,     0,     0,     0,   254,   255,     0,     0,   257,
       0,   258,   259,   260,     0,   261,   262,     0,   263,   264,
     265,   266,   267,     0,     0,     0,     0,   271,     0,     0,
     272,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   285,     0,   286,     0,   287,     0,   288,   289,
     290,   291,   292,     0,   294,   295,     0,   296,     0,     0,
       0,     0,     0,   298,   299,     0,     0,     0,     0,     0,
     301,     0,   303,     0,     0,     0,   304,   305,   306,   307,
     308,     0,     0,     0,   309,   310,   311,   312,   313,     0,
       0,   314,     0,     0,     0,     0,   315,     0,     0,     0,
       0,     0,   317,     0,   318,   319,     0,   320,   321,   322,
       0,     0,   323,     0,   324,     0,     0,     0,   326,   327,
     328,     0,     0,   329,     0,     0,   330,   331,     0,     0,
       0,     0,     0,   332,   333,     0,   334,     0,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,     0,   363,   364,   365,     0,
       0,     0,     0,     0,   366,   367,   368,   369,   370,   371,
       0,     0,   372,   373,   374,     0,   375,     0,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,     0,     0,   397,   398,   399,
     400,     0,     0,     0,     0,   401,     0,     0,   402,   403,
     404,   405,     0,   406,   407,   408,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   414,   415,     0,     0,     0,     0,   417,     0,   418,
     419,   420,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,     0,     0,   431,   432,   433,
       0,   434,     0,   435,   436,   437,   438,   439,     0,   440,
     441,   442,   443,     0,     0,   444,     0,   445,     0,     0,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,     0,   456,     0,     0,   458,     0,
     460,     0,     0,   461,     0,     0,   463,     0,   464,     0,
       0,   466,   467,     0,   468,     0,   469,   470,     0,     0,
     471,     0,   473,   474,   475,   476,     0,   477,   478,   479,
       0,   480,     0,   482,   483,     0,   484,     0,     0,     0,
       0,   486,   487,   488,   489,     0,     0,     0,   491,     0,
     492,     0,     0,     0,     0,     0,     0,   495,     0,     0,
     498,   499,     0,   500,     0,   502,     0,   504,   505,     0,
       0,     0,     0,     0,     0,   506,   507,     0,   508,     0,
       0,   509,     0,     0,     0,   510,     0,   512,     0,     0,
       0,   513,     0,     0,     0,   515,     0,     0,   517,   518,
     519,   520,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   527,   528,     0,     0,   529,   530,   531,   532,     0,
       0,   533,   534,     0,     0,   536,   537,   538,   539,     0,
       0,     0,     0,     0,   540,   541,   542,     0,     0,     0,
       0,   544,   545,   546,     0,     0,   548,   549,     0,   550,
     551,     0,     0,     0,     0,     0,   554,     0,     0,   555,
       0,     0,     0,   557,   558,     0,     0,     0,     0,     0,
       0,     0,     0,   559,     0,     0,   560,   561,     0,     0,
       0,   562,   563,   564,   565,   566,   567,   568,     0,     0,
       0,     0,     0,     0,     0,     0,   571,     0,     0,   573,
       0,   575,     0,     0,   576
};

static const yytype_int16 yycheck[] =
{
       6,   117,   142,   713,   658,   147,  1369,   657,   658,  1311,
       3,   155,    21,  1210,    20,  1023,  1402,  1088,  1089,    25,
    1805,  1402,  1197,  1196,  1095,    34,  1019,  1020,     6,  1506,
    1803,    37,    41,  1323,  1783,  1131,   143,  1109,   687,    45,
     689,  1415,    48,   692,   645,  1554,    52,  1336,  1880,  1678,
    1058,   717,  1588,    59,  1678,  1851,   598,  1778,  2421,  1131,
    1678,  1280,     0,  2947,  1776,  2988,   835,  1779,  1655,  3048,
    3048,  1506,  1435,  1436,  2814,  2815,  1439,  1440,  1441,  1442,
    2694,  1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  1849,
    3111,  3244,  2415,   779,  3013,  1533,  1214,  1426,  1214,  3277,
    1055,  2572,   108,   951,  3263,  1434,  3579,   619,   619,  4004,
    2370,  1772,  3002,  2584,  1151,   661,  3838,  3443,   664,  1107,
    3039,  3040,  4048,  2548,     4,  2585,  2140,  3245,  2467,  3097,
     136,  1811,   138,  1688,   717,   141,  2548,   143,   144,  3048,
    1472,   653,   653,  2467,  1132,   761,  2234,  1821,   764,  3245,
    2916,  3860,  2248,  1708,    46,  2843,  2844,   155,  2174,  3512,
     138,  1716,  1717,   141,  3673,   155,  2197,   155,   155,  3069,
    3560,  3560,  3738,    18,    20,  4159,  3418,    21,  3562,  2653,
    3564,    13,  2919,    13,  4405,    20,  3570,    76,    17,    18,
      27,  2928,  3576,    63,  4168,  1731,    17,    18,  2192,  3118,
    3119,   119,  1876,    20,  3039,  3040,  1133,    54,    50,  2548,
    1247,   635,    27,    17,    18,  2459,    20,    13,   904,   905,
     906,   645,    17,    18,  2548,    22,    85,  1557,    50,    84,
     916,    13,  3346,   178,    17,    18,  3125,    17,    18,    17,
      18,  3154,   194,    32,    84,   698,    17,    18,  2538,    69,
    3646,    40,  3472,  3649,    33,    39,  3236,   121,    67,  3477,
    4120,    17,    18,    18,   172,    62,    63,   239,  3028,    84,
     212,   239,  3668,  4040,    92,    88,  3940,   235,  4202,   301,
      54,   212,   263,  3118,  3119,  2398,   739,  3972,   210,  1286,
    1287,  1288,   218,  4747,  1830,   150,  4369,   412,    61,    20,
     144,  3361,  3362,  3363,   351,    74,   301,   418,  1305,  4532,
     312,   161,    17,    18,  1752,   414,   159,    17,    18,    17,
      18,   226,  3150,  3151,   441,    74,   172,   172,  3156,    59,
    3158,   414,   283,   255,  3634,   447,   255,  3637,  3638,   137,
      66,   209,  3501,  3266,  2448,   137,    90,   304,  5158,  1346,
    5134,   506,    22,  1350,   424,  3655,    17,    18,    73,   174,
      11,    17,    18,   279,   203,   154,    84,    37,   272,  4759,
      25,    17,    18,   139,  3594,   137,   318,   137,  3062,  3679,
     195,    51,   279,   767,   549,  1382,  1383,   137,  3153,  1386,
     137,  3043,    62,    63,   137,   255,  4942,   261,    22,   137,
      13,   412,   933,   308,  4981,    13,  1403,  1404,   308,    12,
     250,   180,   252,    37,   137,   398,    47,   495,   407,  2893,
     401,   172,   172,   622,   426,   172,   263,    51,   302,   593,
     622,   194,   160,   316,   172,   198,   212,   215,    62,    63,
     613,   644,   138,   616,    17,    18,   286,   239,   263,   212,
      49,   290,   172,   108,   681,   239,   240,   157,   586,   599,
     600,   601,   142,   694,   604,   605,   606,   338,  3941,   609,
     610,   611,   281,   165,   261,  2819,   543,   239,    37,   239,
     261,   172,    39,    73,   644,   211,   598,    62,    63,  1821,
      17,    18,   723,   621,   721,   299,   239,   122,   698,    74,
     287,   126,  4723,   403,    63,   583,  4480,   672,   668,   346,
     675,   684,   619,   496,   142,   679,   239,   624,   721,   133,
    1475,   473,   721,   406,   242,  5102,    17,    18,   159,   694,
    1179,   346,  1181,  1182,  1183,  1184,  1185,   215,   464,  1070,
     153,   530,    67,   186,  1876,   153,   653,  5093,    21,   616,
     424,   302,  1321,   319,   215,   137,   721,   417,  1629,   398,
     464,   503,   513,   947,   480,  1738,  4956,   218,   723,  5379,
    1525,   528,  1341,   685,  4797,   319,  1647,   392,   274,   429,
    1126,  1778,   302,   480,  3484,   504,   401,   267,   456,  3610,
     596,   205,  5376,   356,   423,  1019,  1020,   426,   319,  1023,
     622,   607,   423,   186,   721,   426,   574,   405,   723,   567,
     616,   302,   614,   619,   620,   210,   597,   728,   624,   423,
    1468,   627,   426,  3097,   723,   239,  4699,   270,   423,    17,
      18,   426,  4317,   740,  1058,   641,    76,   236,    17,    18,
     723,   546,   239,   423,  2925,   423,   426,   653,   426,  4371,
    1266,   657,   423,   723,   472,   426,   425,  1258,  1241,  2246,
     255,   667,    17,    18,  1619,   512,  4590,   423,   398,   691,
     426,   144,  2208,   424,   721,   519,   425,  2426,  5132,  3588,
     686,  2794,   239,   240,  3444,  1781,  1641,   270,  2409,  4456,
     616,    17,    18,  1811,  1682,  1811,   691,  1685,    17,    18,
    3125,  1689,   316,  1691,  3043,   686,   549,   587,   311,  1781,
     473,   717,   723,  3125,   720,  1670,  2079,  4381,   423,  3043,
      27,   426,   535,   423,   215,   423,   426,  2090,   426,   551,
    2093,  1719,  1720,  1721,   740,  3977,   462,  1506,   512,  3981,
     560,  1194,   687,   715,   750,   667,   752,   715,   628,  4609,
     642,   693,  1438,  1295,  1296,   761,   281,  2234,   764,   480,
     668,   767,   423,   694,   560,   426,   684,   423,   774,  1455,
     426,   723,  3685,  2869,  2448,  2107,  2331,   423,   560,  4488,
     426,   661,   597,  2073,   664,  1327,  3125,  1714,   668,   648,
    3404,  2887,   406,  2467,   603,  1337,  4192,  3041,  1340,  2234,
    3628,  3125,   591,  4777,  3632,    17,    18,   677,  4204,    17,
      18,  1353,  1354,  1355,  3733,   955,   956,   634,  4214,   727,
    4216,  3935,  2816,   612,   212,  1862,  1368,  4536,  4046,   835,
    3120,  4397,   721,   668,  1258,  3663,  3664,  3665,   622,   703,
     636,   683,   734,   950,  3672,  3734,   701,   636,  1856,   694,
     423,  2225,   694,   426,   694,   634,  3684,   654,  4254,  3839,
    1476,  3626,  3627,   709,  2538,    17,    18,   174,   393,  3634,
     714,   686,  3637,  3638,  2548,   704,   723,  2207,   593,   634,
     669,   727,   727,   704,  3944,  4105,   723,   709,   668,   721,
    3655,   721,   709,  1890,  2555,  2911,   423,   726,  3733,   426,
     704,   722,   723,   909,   910,  3670,  3558,  4066,   723,   704,
    3014,  4835,    17,    18,  3679,  3680,  3681,  3682,  3683,   723,
    4140,   704,   915,   715,   704,   172,   704,   722,   723,  3613,
    4639,   657,   423,   704,   533,   426,   942,   943,   944,   657,
     946,   947,   948,   723,   950,   723,   952,   723,   704,  1495,
    1533,   722,   723,   715,  1620,   715,   263,   963,  1470,  4259,
     723,  4670,  4671,  1579,  4948,   943,   722,   723,    17,    18,
     948,   691,   715,  1821,   952,  1591,   727,   727,  2690,   700,
     727,  1088,   662,  1090,   654,  4707,  1093,  1094,   709,   727,
    3334,  1988,   715,   721,  1000,  3918,  1993,   725,   690,   704,
     691,  1108,   627,   593,   704,   630,   704,   727,   255,  1015,
     110,  1017,  1018,   656,  1663,  1021,  4725,   722,   723,  5240,
    1686,  5242,  5243,  1016,   722,   723,   466,  1033,  1876,  3997,
     654,  2028,   646,  2793,   662,   423,   727,  1620,   426,   346,
      37,  4009,  4010,   704,   423,   723,   519,   426,   704,  1055,
    1056,  1195,   676,   677,  1600,   142,  1062,   949,   704,  3533,
     585,   953,  3536,  3537,  3538,   622,   722,   723,   423,  3543,
    3544,   426,   667,   656,  1080,    46,  1082,   723,   603,   722,
      17,    18,  1088,   194,  1090,   316,  1202,  1093,  1094,    17,
      18,   673,   674,  1803,   401,   750,  4662,   423,   319,  2931,
     426,   216,  1108,  1686,   423,  4717,   182,   426,   722,   186,
     134,  1760,   480,  1762,   212,    70,  2448,  1766,   715,  1631,
    1631,  4280,  3138,    27,  3140,   722,   723,  5348,  5349,  4048,
     230,   704,    17,    18,  5355,  3416,  3417,  3611,   516,   197,
      17,    18,   244,    35,    27,  1151,   113,  3510,  4390,  4391,
     723,   401,  1158,  4543,  4543,   540,  4476,  4510,  4137,  4137,
    4544,  4061,   194,   486,  4323,  1815,  4325,   152,   416,  1752,
    1176,   960,  4062,   613,   265,   110,   701,   704,   414,  2250,
     267,   239,  1175,  2254,   275,    17,    18,    17,    18,   382,
    1196,   150,  2728,   270,  4525,   722,   723,  1195,   638,  2270,
    3966,   414,  2738,   540,   133,  1195,  2538,  1195,  1195,   168,
    5431,   423,  2997,   704,   426,   423,  2548,  1986,   426,  3558,
    1226,   414,   534,    54,    17,    18,  2181,  3000,  4137,  1235,
    2326,   722,  4452,    13,  3558,  1241,  4632,  1243,  1244,  1751,
    3977,  1247,    17,    18,  3981,   402,  1126,   414,  1128,   273,
    2368,  2426,  2368,   414,  2326,  4807,  2619,   504,   589,   480,
    1266,  2941,  2217,  2218,   197,  1243,  4384,   209,  1057,  3357,
    1276,   423,  2901,  2902,   426,  2899,  3290,  2901,  2902,  3375,
    3968,  2899,  2994,  2901,  2902,  1177,  1178,     9,  4384,  3320,
     597,  4800,    17,    18,   644,   394,   395,   414,   398,  4519,
     416,  5023,   186,  4523,   174,   133,  3766,  4527,  4528,  3734,
     208,  1418,  4532,    17,    18,  1321,   704,  5026,   423,    24,
     443,   426,  3734,  5249,   439,   704,   694,  2765,   651,  2317,
      17,    18,  1338,   264,   722,  1341,   721,    84,  2557,   430,
    3014,   338,  2330,   722,   723,  2333,  2334,  1454,   239,   704,
     728,  1357,   283,    17,    18,    17,    18,  2912,  3972,   263,
    1015,  5070,   473,  1470,    17,    18,   297,   722,   723,  3043,
    4583,   721,   357,   153,   423,  1381,  2705,   426,   704,   686,
     263,    17,    18,   275,   721,   704,   270,   316,   464,  5315,
    5316,    17,    18,   263,   218,  3734,  1402,   723,    17,    18,
    1507,  1056,    17,    18,   723,    21,  2092,  1062,  4734,   301,
    3734,   382,  1418,  2787,  2704,  3738,   723,   504,   302,  5345,
      17,    18,  2711,  2712,  2714,  5225,   154,    17,    18,  4257,
    4982,   398,  1856,    17,    18,  1428,   686,  4833,  4266,  2975,
    2477,   473,   346,  4839,   559,   616,  3120,  5059,  1454,  5061,
    1456,  3125,   700,   551,    84,  4775,  1462,   485,   482,  2845,
     239,    17,    18,   346,  1470,  2234,   551,    17,    18,  1475,
    1476,  2845,   405,  2481,   338,   668,  3137,   406,   183,   700,
     727,   203,  4813,   714,   715,  3234,   423,   723,   316,   426,
      11,   593,   704,  2690,  4259,   423,   704,   721,   426,   622,
    1506,  1507,  2118,  2119,   728,   402,   582,   402,    17,    18,
     723,   723,    17,    18,   456,   723,   263,  5412,   401,  1525,
     622,   236,  2824,  3997,  1631,   480,   626,  1533,   144,   686,
    3242,   401,  2133,  5333,  1540,  4009,  4010,  3900,   423,  1545,
     424,   426,   142,  2929,   230,  3305,   423,   239,  2929,   426,
      17,    18,   704,  1559,   522,   666,   723,   455,  4771,    17,
      18,  4774,   723,   639,    17,    18,   723,   398,    17,    18,
     722,  1226,   287,  1579,  4108,   662,   600,  4797,   406,   656,
    1235,  2127,  4802,   641,   700,  1591,  2272,  1593,   255,  1244,
     521,   423,   440,   423,   426,   562,   426,   283,   490,   704,
    2448,  4135,    17,    18,  2205,  2221,   723,   694,   472,    17,
      18,   709,   723,  1619,  1620,  1495,  1622,  1759,   723,  1761,
     250,  1276,   252,  3986,   709,  1631,  1632,  4805,  5353,   313,
     423,  3404,  4522,   426,   666,  1641,  1743,  3897,  3898,  3899,
     464,    17,    18,   371,  1751,   392,  1753,  1653,   423,  1655,
     498,   426,   319,    13,   401,   704,   286,   715,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1546,   267,   599,   215,
    4461,    17,    18,  5146,   723,   358,     0,  1683,  1684,    84,
    1686,   512,  3014,  1338,  1690,  4653,  1664,  1665,  1666,  2785,
    2538,  1669,   376,  3405,   138,   302,   560,   218,   423,    55,
    2548,   426,  1357,  4317,  4863,  1711,  1684,  1501,   641,  2133,
      66,  1818,  1690,  2785,   597,  4186,    76,   646,   549,   423,
    1600,  3737,   426,  2235,  2235,   658,  1381,   597,   236,  2378,
     303,   172,  2381,   306,    17,    18,   423,  1743,   424,   426,
     487,  2390,   551,  2751,  2393,  1751,  1752,  1753,  1754,  1755,
    1756,  1757,  1758,    17,    18,   170,   302,  4977,  2359,   423,
     728,   423,   426,  3512,   426,  3389,   540,   704,    17,    18,
     423,  3389,   656,   426,  3570,    13,   704,   458,  2733,   287,
    2204,  2205,    17,    18,  5509,  5510,   723,   423,  3120,   686,
     426,   686,   616,  3125,   709,   723,  2804,   423,  4721,   582,
     426,   644,   540,   686,   423,   106,   473,   426,   423,  1689,
      13,   426,  1818,   450,  2885,  3117,   686,   424,   646,   704,
    2813,  2814,  2815,  2941,   715,  2941,   423,   704,   723,   426,
     274,   722,   723,   423,   413,  1841,   426,   450,   723,   423,
    1846,  1847,   426,    17,    18,   250,   723,   252,  5001,   139,
     597,    17,    18,   723,   133,    13,  1862,   709,  4781,  3297,
    3298,  3299,    17,    18,   443,  1659,  1660,   423,  5307,   551,
     426,  5310,   704,   423,   704,   723,   426,  1883,   424,  1885,
    3357,   286,   169,   213,  3558,   728,    17,    18,  2984,  2472,
    1545,   723,   179,   723,    17,    18,    17,    18,   672,   190,
     709,   684,   475,  2858,   504,   652,   551,    17,    18,   593,
       6,   704,  2984,  2868,   423,   153,  3425,   426,   423,   728,
    3139,   426,  3357,   475,  2932,   644,   205,   230,  3257,   704,
     723,   568,    17,    18,   672,  2359,   715,   620,  1593,   686,
     540,    17,    18,   722,   723,  1825,   622,   721,   723,  4740,
     153,   241,   308,  4744,  4745,   568,   423,  3343,   694,   426,
     239,  2103,  3343,   264,    60,   423,   649,  3330,   426,  3985,
     423,  3646,  3346,   426,   423,  4787,   528,   426,   308,   704,
    1986,  1987,   283,   721,  4518,   721,    17,    18,   716,   717,
     718,   719,   694,   265,  2000,   153,   297,  4360,   723,  4533,
     704,    17,    18,   275,  4538,   694,  2012,  4541,   423,   728,
     665,   426,  1667,  1668,   644,   423,  1671,   704,   426,   723,
    5459,   723,  2708,   715,   133,    17,    18,   709,   690,   319,
     722,   723,    17,    18,   723,   272,   723,   316,   668,  2581,
     704,   253,   704,   622,  2586,   721,   728,   423,  2054,   694,
     426,   704,   622,  4937,   272,  4939,  1711,  2481,   212,   723,
    3734,  2603,   662,   159,   709,   302,    17,    18,   704,  3842,
     723,     9,   672,   403,  4397,    17,    18,   423,   704,   721,
     426,   382,    17,    18,   302,   704,   728,   723,  3763,   704,
      17,    18,  4904,   138,   694,    33,   205,   723,  3472,  2105,
    2106,    91,  1757,  1758,   723,    17,    18,   704,   723,  2651,
      17,    18,  2118,  2119,   704,   351,  5137,  5138,    17,    18,
     704,   721,    17,    18,   114,   722,  2132,   406,  2235,   365,
      17,    18,   186,   723,  2140,   422,    25,   540,   722,  2145,
     423,  4932,  2148,   426,  2251,  3905,    17,    18,   704,  2155,
    2156,   721,  2158,   613,   704,   540,   616,   311,   430,   423,
     709,   596,   426,    17,    18,   728,  3014,   723,    17,    18,
      17,    18,   607,   723,   423,  2181,   690,   426,  2184,  4653,
    5489,    18,  2765,  2725,  2190,  2786,  1841,   424,   423,  2195,
    3939,   426,  1847,  2859,  5078,   704,  2202,  2203,   215,   704,
      17,    18,    17,    18,   230,  5514,   424,   316,  3405,   504,
    4824,  2217,  2218,  2219,   723,  2221,   270,   722,  2730,  2730,
     521,    17,    18,   253,   684,    17,    18,   464,  2234,  2235,
      17,    18,    17,    18,  2240,  2241,  2242,   704,  2244,  2245,
    2246,  2891,   148,  4039,  4040,  2251,   704,  2127,   302,   423,
     133,   704,   426,   215,   668,   704,   723,   423,   275,   133,
     426,  3973,  2268,   230,  5187,   723,    17,    18,   423,   672,
     723,   426,  3120,   215,   723,   418,  2859,  3125,    17,    18,
      17,    18,  2288,   613,   722,   723,   616,   672,  3384,   704,
    3000,   551,   423,  2400,  3302,   426,   704,   406,   599,   395,
     423,   551,   423,   426,  4089,   426,   551,  5047,   722,   723,
     272,  2427,  3384,   423,   722,  4088,   426,   525,   721,  3327,
     215,  4015,   205,    17,    18,   272,  2332,  2751,   704,  4023,
    5249,   205,   133,   212,   621,  2215,   721,  3512,   423,  4662,
     302,   426,    50,  2349,   543,  2000,   722,   423,    17,    18,
     426,  2357,  3423,  1143,  2360,  2361,   239,  2012,   704,  1149,
    1150,   558,  2786,  5342,  4085,  5343,   480,   646,  3955,    61,
     424,   715,  4084,  2379,  4086,   677,   722,  2383,   722,   681,
    2804,  2387,  3337,   479,   142,   481,  2392,  2384,   502,  2813,
    2814,  2815,   423,  2390,  2400,   426,  5315,  5316,    17,    18,
    2406,  2379,  3734,  2283,   205,  2285,   614,   423,  3396,  3480,
     426,   619,   215,  2419,   613,    17,    18,   616,    20,    17,
      18,   704,   675,   302,  2316,   726,  5345,   549,    17,    18,
     544,   423,   311,   316,   426,   668,   561,   715,   423,   722,
     704,   426,   316,   722,   722,   561,    18,  5331,  5332,   709,
     722,  2106,  3741,   800,   801,   704,   319,   665,   722,   709,
    3969,   213,   424,   660,   709,  2572,  2472,   253,   728,   704,
     625,  2477,   423,   722,  2480,   426,   684,  2584,   728,   722,
     723,   423,  3771,   728,   426,  3774,  3087,   722,   423,   547,
     723,   426,    17,    18,   625,   728,   423,   540,   727,   426,
    2155,  2156,   194,  2158,    17,    18,   198,   261,  2932,   267,
     707,   423,    17,    18,   426,   316,   423,  3806,   133,   426,
     212,   261,  3824,   406,   423,    17,    18,   426,   423,  2184,
     704,   426,   406,   261,  4070,  2190,   423,   646,   704,   426,
      17,    18,    82,  2549,  5158,   424,  2552,   894,   722,   704,
    3936,   728,   423,  2433,    94,   426,   722,   250,  3932,   252,
    3627,  3935,  2442,  2443,  2219,   613,  2572,  4316,   616,   423,
      17,    18,   426,   704,   423,   663,   423,   426,  2584,   426,
     721,   704,   154,   704,   725,  2240,  2241,  2242,  3357,  4362,
     205,  2698,    17,    18,   704,   616,    17,    18,  3984,   722,
    3830,   722,   656,  3984,  3834,   406,   423,   668,   423,   426,
     539,   426,   722,  3680,  3681,   182,  4365,   106,    13,   704,
     967,   684,  3924,  2730,   239,  2732,   582,   423,   704,   672,
     426,   423,    17,    18,   426,    20,   423,   722,   423,   426,
     118,   426,   613,  5566,   721,   616,   722,  1229,  1230,    17,
      18,   694,   722,   723,    17,    18,   722,   723,    17,    18,
    4456,    45,   723,  3087,   356,    17,    18,   728,    52,   165,
    2676,   211,   423,   704,    13,   426,   634,  2332,   851,  2821,
      17,    18,    17,    18,   423,     6,   423,   426,   704,   426,
    3698,   722,  2698,  1275,   665,  3361,  3362,  3363,   696,   697,
     675,   316,  2357,    27,   182,   675,   722,    17,    18,   882,
    3252,  2717,   704,   721,  3297,  3298,  3299,   722,   723,   704,
    2726,   261,   895,   896,  2730,   723,  2732,  2733,  2383,   423,
     722,   431,   426,  5069,   722,   723,  5072,   722,   721,  4125,
     218,    18,  3939,  4215,  4125,  4217,   504,   287,  4544,  1526,
     722,   723,  1529,   704,   423,  1532,    13,   426,   153,  2765,
      84,  4510,   704,   646,  3939,  5379,  3432,    17,    18,   704,
      20,   722,   646,   722,   723,   264,   721,   704,  3361,  3362,
    3363,   473,   540,   431,  4505,   722,   723,   722,    45,    17,
      18,   406,   704,  4167,   283,   722,   721,   704,   322,   371,
     324,   325,   722,   723,   423,   704,   721,   426,   297,   704,
     722,   722,   723,   721,   153,   722,   340,   704,   722,   723,
     721,   423,   622,   722,   426,   423,   197,  2833,   426,  5438,
     722,   723,   431,   704,   423,   722,   721,   426,  3488,  2845,
     722,   723,    99,   721,  2850,   646,   241,   104,   721,  3432,
     704,   722,  2858,  2859,   721,   704,  2156,   704,  2158,   721,
    3931,  2968,  2868,   721,  5473,   203,   721,  3963,   722,  1216,
     721,   195,  5481,   722,   695,   722,   721,   154,  3302,   677,
     678,   219,   680,  5219,   682,  2891,  3734,   704,  4085,   704,
    5226,  3963,   721,   382,  3001,  3002,   228,  2903,   423,  5508,
     440,   426,   241,  3327,   662,   722,   728,   722,   704,   721,
     423,   721,   704,   426,   672,   722,   723,   704,   423,   704,
    3913,   426,   462,  2929,    37,   414,   722,   721,  2866,    35,
     722,   423,   722,   723,   426,   722,   694,   722,   721,   263,
    2240,  2241,  2242,  2949,  2950,  3052,   423,  2953,   721,   426,
      63,   721,   290,   704,    84,   293,   722,   723,  2964,   721,
    4733,   721,  2968,   721,    12,   704,   721,   704,    98,   493,
     494,   722,   721,  4359,   721,  2953,   423,   721,  4359,   426,
     721,   553,   554,   722,   190,   722,   464,   721,    84,  4618,
     722,   723,   722,   723,  4618,  3001,  3002,   721,   423,   721,
    4618,   426,   423,    62,    63,   426,  4179,   714,   715,   122,
     704,   343,   344,   126,  4643,   721,   348,   349,   350,  4643,
     277,   134,   346,   394,   395,  4643,  5389,  4246,   722,   597,
    4203,   646,   521,   154,   405,   704,   721,  4822,   423,   722,
     723,   426,   155,   721,   672,   721,  3052,   675,   154,   721,
     388,  4824,   723,   722,   721,   423,   722,   723,   426,   721,
     423,  3067,    34,   426,   423,   543,   694,   426,   392,   721,
     118,   423,   165,   166,   426,   721,  4788,   401,   174,  3085,
     722,   723,   722,   723,   721,   704,   423,   721,   423,   426,
     138,   426,   721,   721,   371,   722,   723,   721,   316,   721,
     357,   721,   704,   722,  5440,  5441,   704,   721,  4281,   721,
     599,  4401,   721,   423,    86,   704,   426,   722,   723,  4915,
    4916,  4107,   460,  3239,   722,   721,  3268,  4113,   721,   176,
     721,  4117,  4118,   722,   182,   722,   723,  4123,   616,   721,
     712,   713,   714,   715,   716,   717,   718,   719,   625,   668,
    3030,  3031,  3032,  3033,   275,  3035,  3036,   343,   344,   289,
     273,   639,   348,   349,   350,   722,   723,   263,  4365,   275,
     218,  4368,   219,   423,   722,   723,   426,   434,  2833,   704,
     721,   576,   577,   578,   579,   580,   581,   665,   406,   721,
    4365,   704,  4669,   722,   723,   301,   275,   722,   170,   704,
      12,    82,  5565,   721,   599,   253,   684,   154,   463,   722,
     722,   723,   704,    94,  5046,  3095,  3096,   722,  3098,  4521,
    3100,  3101,  3102,  3103,  3104,  3105,  3106,   704,   721,  3109,
     722,   278,  3112,   421,   722,   723,  3116,   576,   577,   369,
     579,   721,   581,   118,   525,  3787,   293,   721,  4997,   131,
     371,  3533,   721,    84,  3536,  3537,  3538,   704,    63,   721,
     599,  3543,  3544,    20,   312,   371,  4555,   721,   398,   721,
     641,   384,   721,   597,  3698,   722,   553,   554,  3944,   704,
     722,   723,   721,   704,  3290,   721,  3292,   658,   394,   395,
    3296,  3297,  3298,  3299,  2949,  2950,   392,   722,  3304,   722,
     723,   722,   721,  2189,  3954,   401,   118,  5056,   721,  2964,
     721,  3912,   721,   570,  3856,   721,    66,   122,   721,   704,
    5032,   126,  3328,   324,   325,   721,   138,  2114,   721,   134,
     211,  3337,    82,   551,   721,  4510,   704,  3343,   385,   340,
    4348,   704,   721,  2229,    94,   704,   722,   723,   478,   106,
     155,  3357,   704,   610,   722,  3361,  3362,  3363,   414,   722,
     721,  3944,   686,   722,   721,    66,   248,   704,   243,   704,
     722,   709,   710,   711,  5159,   722,   723,  4751,  4088,   721,
     261,    82,   154,  3490,   490,  5158,  4922,   722,   721,  4038,
    4926,   487,   721,    94,   704,   722,   723,  4906,  5027,  5028,
    4877,   206,   721,  5027,  5028,   217,   287,   722,   723,  5027,
    5028,   242,   722,   722,   723,   172,   464,   722,   723,   250,
     721,   252,  3428,  4809,   371,   721,  3432,   721,  4809,   186,
     722,   723,   553,   554,  3440,   712,   713,   714,   715,   716,
     717,   718,   719,  5155,  5156,   558,   106,   553,   554,   261,
    3456,  4100,   582,   210,   704,   212,   287,   722,   723,   721,
    4110,   211,  3468,   569,   722,   723,  3472,   217,   273,   722,
     723,   722,   723,   230,    28,   106,   694,  3483,   360,   721,
     237,   721,   364,   154,  3490,  3491,   458,   721,  3912,  3913,
     372,   709,   493,   494,   721,   543,   714,   715,   255,   547,
    3506,   597,  3508,   275,   721,  3483,   721,   264,   722,   723,
     211,   261,   484,   270,   721,   272,   217,   630,   722,   723,
      74,   722,   723,  4180,  4181,   721,   283,   613,    84,   634,
      84,   414,  5068,   723,   582,    89,    92,   287,  4524,  5288,
     297,   170,  4199,   722,   723,   302,   255,   660,   722,   723,
     568,   523,    52,  4210,   311,   727,   652,   432,   722,   723,
     261,  4218,  4219,   394,   395,   121,   614,   730,   443,    34,
    5282,   722,   723,   722,   723,   313,   381,    52,   453,   384,
     118,   462,   723,   137,   722,   723,   287,   421,  3594,   471,
     686,   712,   713,   714,   715,   716,   717,   718,   719,   371,
     722,   723,   722,   723,   264,   414,   712,   713,   714,   715,
     716,   717,   718,   719,   722,   723,   588,   665,   174,   722,
     723,  3614,   215,   283,   414,   382,  3506,   723,   722,   723,
     549,   462,   561,   264,   722,   723,   684,   297,   181,    87,
     721,    89,  2429,  2430,   182,  1390,  1391,  4336,  4337,  3304,
     302,  4361,   283,   212,   593,   613,   538,   414,   568,  2446,
     133,  4834,   709,   710,   711,   593,   297,   424,  5380,  2456,
    2457,   313,   173,   212,  4682,    93,   415,   482,   723,   723,
     218,   709,   609,   172,  3690,  5048,  3692,   154,   242,   137,
     440,   566,   684,   218,   218,   721,   250,   722,   252,   672,
     371,  5178,   540,   137,   121,   261,   729,   464,     6,   420,
     522,   120,   462,     4,   684,   163,   723,   275,   440,   170,
      59,   496,   382,   261,   723,   728,  3732,    74,  3872,    13,
    3736,   543,   205,   287,   170,   547,   722,   722,  4339,   722,
     722,   153,    10,   723,   728,   722,  2533,  2534,  2535,  2536,
     212,   382,   212,   722,   414,  4763,   204,   154,   722,   571,
     722,   462,   722,   722,   521,   728,   239,   714,   715,   716,
     717,   718,   719,   694,   312,   721,   721,   250,  4874,   252,
     301,   553,   554,   230,   728,  3440,    14,   414,   174,   345,
     665,   313,   549,   313,   313,   313,    52,  2683,  5184,   313,
    4997,  3456,  4874,  5184,   616,   313,   688,   619,   723,  4458,
     366,   157,   519,   709,  4463,  4464,   723,   613,   721,   249,
     253,   571,  4997,   308,   706,   630,   657,   388,   215,   272,
     721,  5133,   318,   727,   723,   723,   392,  4845,   723,   634,
     394,   395,   599,   316,  3850,   657,  4854,   634,  3990,   440,
     730,   405,    37,   665,   723,   660,   709,  3863,   212,   723,
     414,   521,   728,   728,   723,    74,   723,   593,   275,   716,
     571,   276,   199,   723,   611,   212,   181,   105,   593,   565,
     723,   721,   553,   554,   448,   684,  5188,   190,    50,   691,
     521,   215,   716,   723,   722,   149,   721,  4004,   251,   656,
     251,   723,   447,   135,   371,   722,    56,   657,   462,   723,
     667,   668,   690,   667,   142,  4339,   663,   723,   215,  3925,
     458,   722,   722,   170,  4348,   722,   464,   716,   722,  4071,
    3936,   159,  3938,   406,   691,   692,  3942,   694,  3944,   599,
     712,   713,   714,   715,   716,   717,   718,   719,  3954,  3955,
    5123,  5124,   709,  5126,   182,  4062,   657,  5154,   722,   722,
     188,   146,   722,   722,   215,   722,   723,   723,   599,   726,
     727,   715,   723,   201,   371,  4115,   722,   722,  3984,   721,
     723,   722,   722,  3863,   522,   551,   434,   722,  4996,   174,
     722,   545,   177,   722,   728,   723,   723,   722,  4004,   722,
     228,   722,  5388,   721,   721,   719,   722,  5388,   721,   547,
    4611,   440,   141,   721,   622,  5317,   622,   723,   723,  4025,
    4026,  4027,  4732,   721,   622,   634,   262,  5098,   272,   527,
    5101,    76,   634,   261,  5397,   220,   721,   441,    13,   267,
     488,   597,  4048,   714,   715,   716,   717,   718,   719,   228,
     215,  2937,   212,   723,  5047,   212,  4062,   721,   614,   244,
     721,   299,   728,   728,   723,   250,   723,   252,  4074,   215,
    4076,   722,   728,   185,   528,    84,   614,   472,   728,  4186,
     723,   619,   661,   311,   723,  3965,   553,   554,  4737,    98,
     549,  5288,  5265,  4099,  5267,  5268,   212,  4106,  4104,  4105,
    4109,   639,  4108,   657,   723,   414,   414,   622,   275,   662,
     230,   424,   723,  5288,  4120,  4124,  4122,   380,  4127,  4125,
    4000,  4001,   694,   539,  4133,  4134,  4132,   665,   313,  4135,
     582,   414,   582,  4013,  4140,   721,  5499,   582,   147,   212,
    5442,   582,   582,   727,   721,   625,   684,   709,  3034,   709,
    5536,  5222,    52,   338,  4160,  5536,   553,   554,   709,  4165,
     709,   709,   709,   709,  5550,   709,   723,    58,  4048,  5550,
    5556,   663,   709,   646,   709,  5556,  5562,    68,   709,   709,
    4186,  5562,  4160,   709,  5381,    20,   709,  4611,   312,   668,
      20,   271,    83,   709,   728,  4201,  4076,   709,    28,   709,
     709,   271,  4208,   709,    95,    96,    97,  3093,  3094,   722,
     709,   722,   709,  3099,   709,   709,   709,   117,   431,   722,
     722,  3107,  3108,   728,   115,    50,  4232,  3113,   158,  3016,
    5301,  3018,  3019,  3020,   722,   722,     7,   465,   722,   722,
     722,   634,   723,   709,    74,   712,   713,   714,   715,   716,
     717,   718,   719,   723,    84,   723,   709,   728,  4682,    89,
     723,   489,   634,   634,   728,  4145,   723,   308,   700,   497,
      90,   106,   272,   605,    12,   721,   634,   505,   463,   721,
     289,   540,   709,   421,   215,   279,   215,   472,   215,   622,
     480,   622,   723,   715,   283,  4402,   185,   406,   721,   283,
     428,    20,   361,     7,   211,    58,   491,   137,   414,   723,
     552,    50,   540,   728,   237,    68,   713,   714,   715,   716,
     717,   718,   719,   722,   121,   510,   728,   555,   556,   723,
      83,   721,   121,   622,   622,   622,  3123,   172,   499,  4763,
      20,   234,    95,    96,    97,  4351,   723,   727,   721,   230,
     728,   186,   721,  4359,   721,  5528,   721,   716,   721,   259,
     369,   721,   115,   273,   721,   273,   722,   722,   406,   540,
     722,  4026,   722,   721,   723,   560,   424,   212,   563,   723,
     608,   722,   722,   728,   722,   394,   395,   722,   480,   398,
     212,   221,   721,   421,   722,   230,  4402,   716,  4404,  4405,
    5054,   721,   237,   414,   255,   157,    50,   721,   593,   709,
     721,   639,   242,   377,   503,  4522,   722,   540,   728,   215,
     250,  4845,   252,   722,   480,   283,   722,   709,   613,   264,
    4854,   616,   693,   723,   662,   270,   664,   272,   283,   121,
     149,   722,   721,   723,   149,   440,  4452,  4563,   283,   721,
     721,   351,   368,  4459,   723,  4461,   721,   287,   692,   540,
    4466,    82,   297,   440,   722,   365,   440,   302,   359,   478,
     440,   634,   285,   614,   285,  4481,   311,  4132,   440,   614,
     440,    50,   440,  4476,   440,   442,   440,   378,  5559,   440,
     390,   391,   622,    20,   634,   721,   457,  4503,   398,   399,
     400,   721,   411,  4512,   137,   212,   212,   722,   406,   723,
     722,    50,  4518,  4519,   722,   542,  4522,  4523,  4511,  4525,
    4513,  4527,  4528,   722,   694,   299,  4532,  4533,   519,   722,
     722,  4411,  4538,    50,  4414,  4541,   424,  4961,   193,   723,
     722,  4547,   311,   228,   162,  5553,   295,   382,   722,   303,
    5204,   723,   283,   440,   723,   283,   699,   721,   414,  4565,
     728,   489,   721,    20,   394,   395,   722,   722,   516,   723,
     568,   722,  4996,   582,   722,   405,  4582,   253,   406,   414,
     406,   459,   414,   414,   414,   287,   287,    84,   260,   424,
      37,   681,   411,   681,   584,   721,  4602,   722,    63,   625,
    4606,   723,   302,  4609,  4484,   722,   359,   722,   508,  4602,
     723,   722,   722,   273,    35,   722,   302,   722,    39,   722,
     368,   289,   472,  5047,   722,   378,   723,    50,    18,   464,
     421,   694,   462,   272,   728,   722,   722,   668,   668,   721,
     287,  4783,   721,   721,   721,   536,   722,   287,    20,   535,
      20,    76,  5302,   722,    20,   723,   723,   272,  3445,  3446,
    3447,  3448,  3449,   723,  3451,  3452,    88,  3454,  3455,   694,
    3457,  3458,  3459,  3460,  3461,  3462,  3463,  3464,  3465,  3466,
    4560,   560,  3469,  3470,  3471,  4691,   521,   722,   588,   110,
     157,   707,   660,   212,   728,   709,   406,   368,   192,   723,
     722,   722,   722,   287,   150,   126,   212,   722,   721,   668,
     601,  4717,   133,   616,   549,   545,   668,  4723,   721,   721,
      66,  3607,  3608,  3609,  4730,   420,   668,   618,    17,    18,
     722,   728,   147,   414,  4740,   723,   722,   304,  4744,  4745,
     723,   721,   190,   137,   137,   190,   616,   694,   721,   406,
     214,   185,   528,  4759,   515,  4897,   722,   722,   456,   722,
     527,   514,   456,   187,   599,    64,   662,   421,   721,   406,
     342,   721,   721,   411,  3561,   721,   197,   722,   722,  4785,
      50,    50,  4775,   536,   205,   169,    50,   587,  3575,    39,
     722,  4797,   728,   540,   185,    18,  4802,   604,   212,   721,
     624,   722,   414,  4809,  4459,   287,   721,  4813,   721,   287,
     405,    15,  4954,   662,  3700,  3701,  3702,   137,   239,   240,
      20,   656,   411,    50,    50,    50,   721,   657,   272,   171,
     722,    66,  4838,   668,   421,  4841,    66,   527,   127,   128,
     129,   130,   131,   149,   427,   721,   149,  5501,   601,   721,
     174,   437,   721,   721,   721,   397,   691,   692,   675,   694,
     110,   721,   598,   728,   721,   618,   421,   722,   421,   723,
     722,   605,    50,   721,   709,    50,   126,   721,   721,   311,
      12,   721,   721,   133,   157,   212,   728,   722,   723,  4895,
       5,   726,   727,   414,   414,   316,   528,   662,   142,   635,
     251,   637,   723,   164,   722,   728,   722,   722,    50,   645,
     527,   255,   721,   406,   549,   723,  2866,  4923,  1049,  3805,
    1028,  3278,   658,  3114,  1479,  4613,  4932,  4617,  4615,  4935,
    1128,  1766,  2390,  2951,  5067,  5114,   672,  3554,  4752,  5259,
    4946,  5445,  4483,  4606,  4582,  4950,  4852,   197,  1225,  3835,
    4956,  4838,  5016,  4957,  4223,   205,   245,   246,   247,   248,
      52,  2233,   383,   659,  2145,  3290,  2480,  4961,  3320,  3288,
    4340,  4977,  2499,   756,  3913,  2204,  2206,  2203,  2107,  1274,
    4989,  4987,  3868,  2205,   405,   406,  1828,  5074,  3593,   239,
     240,  4930,  4751,  5100,  4537,  3048,  3920,  4690,  3925,  4351,
    2211,  5007,  5008,  5306,  5048,  5392,  5499,  4693,  5468,  5501,
    5016,  5204,  3937,  3472,  4365,  2368,  3588,  4452,  4140,   755,
    3594,  5139,  5257,  5016,  4465,  5102,  3763,  3685,  3646,  5110,
    5302,  5100,  3001,  4183,  3224,  3831,  3834,  3826,  5472,    84,
      84,  5440,  4933,   779,  5050,  5441,  5334,  5219,   784,  5226,
    4923,  3593,  4203,  5059,  4137,  5061,  1155,  4993,  1239,  1728,
    2840,  2477,  2915,  4798,  5294,  1873,   316,  2219,  1847,  3906,
    3304,   360,  2793,   362,   363,   364,  3513,  4998,  3237,  1200,
    2426,  2986,  3863,   372,   127,   128,   129,   130,   131,  2580,
    2576,  1341,  1796,   829,  5100,  1456,  3268,  2930,  3409,  1290,
    2924,  4384,  3844,  5064,  2918,  5415,  4918,  4232,  5416,  1305,
    3501,  2715,  3998,  3999,   850,  5121,  4785,  4003,  4784,  3261,
    4669,  4007,  5178,  4665,  4809,  4011,  3389,  4718,  3490,  5553,
    4016,  4017,  4018,   383,   423,  2409,  4022,   426,  4783,  2549,
      84,  4359,  1545,  2787,  1593,  3900,  3027,  2422,  3984,  5388,
    1883,   775,   670,   658,  2327,   405,   406,  1674,  2328,  2909,
     658,   108,  1195,  5169,  2130,  4730,  4673,  5497,   904,   905,
     906,   907,  5519,  5289,  3909,  1601,  4967,  5130,  5184,  5556,
     916,  5562,   471,  3410,   892,  2360,  3936,  2419,  2889,  3954,
    2268,   657,  2055,  2277,   657,  1538,  2190,  2881,  2880,  1751,
    1621,   622,   245,   246,   247,   248,   627,  3606,  5088,   630,
     653,  5318,  1074,  1535,  3292,  4002,  2472,  2858,  4005,  2944,
     641,  4892,   958,   654,   960,   646,   647,  3614,  5234,   650,
    3975,  2918,  4387,  3404,  5240,  1081,  5242,  5243,    84,    84,
    4895,    84,  2384,  5249,  5289,    -1,  5252,    -1,   537,   538,
      -1,    -1,    -1,    -1,  5260,  5261,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1003,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1019,  1020,    -1,    -1,  1023,  5294,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5306,    -1,    -1,    -1,  5446,  5412,    -1,    -1,    -1,    -1,
      -1,    -1,  5318,    -1,    -1,    -1,    -1,   360,    -1,   362,
     363,   364,  1058,    -1,    -1,    -1,    -1,    -1,    -1,   372,
      -1,    -1,  4987,    -1,    -1,  5215,    -1,  4223,    -1,  5345,
      -1,    -1,  5348,  5349,    -1,    -1,    -1,    -1,    -1,  5355,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5466,
      -1,    -1,    -1,  5369,    -1,    -1,    -1,    -1,    -1,  5249,
      -1,    -1,   622,    -1,    -1,    -1,    -1,   627,    -1,    -1,
     630,    -1,  5388,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   641,    -1,    -1,    -1,    -1,   646,   647,    -1,   688,
     650,    -1,    -1,    -1,    -1,    -1,  5412,    -1,    -1,  5415,
    5416,    -1,    -1,    -1,    -1,   704,   705,   706,    -1,    -1,
      -1,  5563,    -1,    -1,    -1,  5431,    -1,    -1,   471,    -1,
      -1,  5311,  5312,  5540,    -1,    -1,    -1,    -1,    -1,  5546,
      -1,  5447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5466,    -1,    -1,    -1,    -1,  5345,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5493,    -1,    -1,
      -1,    -1,    -1,    -1,   537,   538,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1254,    -1,
      -1,  1257,  1258,  5403,  5404,    -1,    -1,    -1,    -1,    -1,
    5536,    -1,    -1,    -1,  5540,    -1,    -1,    -1,    -1,    -1,
    5546,    37,    -1,    -1,  5550,    -1,  1282,  1283,    -1,    -1,
    5556,    -1,    -1,  1289,    -1,    -1,  5562,  1293,  1294,  1295,
    1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1314,  1315,
    1316,    -1,  1318,  1319,  1320,    -1,    -1,    -1,    -1,  1325,
    1326,  1327,    -1,    -1,  1330,  1331,  1332,  1333,  1334,  1335,
      -1,  1337,    -1,  1339,  1340,  5260,    -1,    -1,    -1,    -1,
      -1,  1347,  1348,  1349,    -1,  1351,  1352,  1353,  1354,  1355,
      -1,    -1,    -1,    -1,  1360,  1361,  1362,  1363,    -1,  1365,
    1366,  1367,  1368,  1369,    -1,  1371,    -1,  1373,  1374,  1375,
    1376,  1377,    -1,    -1,  1380,   688,    -1,    -1,  1384,  1385,
     146,    -1,    -1,  1389,    -1,    -1,    -1,  1393,  1394,  1395,
      -1,    -1,   705,   706,    -1,    -1,    -1,    -1,    -1,  1405,
    1406,  1407,  1408,    -1,    -1,    -1,    -1,    -1,   174,    -1,
    1416,   177,    -1,    -1,    -1,    -1,    -1,  1423,  1424,  1425,
    1426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1434,  1435,
    1436,    -1,  1438,  1439,  1440,  1441,  1442,    -1,  1444,  1445,
    1446,  1447,  1448,  1449,  1450,  1451,  4602,    -1,    -1,  1455,
      -1,    -1,     6,  1459,   220,    -1,    -1,  4613,    12,  4615,
      14,  4617,    16,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    28,    -1,    30,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4661,    60,    -1,    -1,    -1,
      -1,    65,    66,    -1,    -1,    -1,    -1,  4673,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    -1,  1538,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,  1549,    -1,    -1,    -1,   313,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1566,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,
      -1,    -1,   338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   137,    -1,    -1,   140,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   156,   150,   151,    -1,    -1,
      -1,    28,    -1,    30,    -1,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   168,    -1,    -1,    -1,   172,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     184,    -1,    -1,  1639,    -1,    -1,    -1,    -1,    65,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1654,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   210,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,
      -1,    -1,  1678,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   254,   121,   256,   250,   463,   252,    -1,
      -1,    -1,    -1,    -1,   258,    -1,   472,   261,    -1,    -1,
     137,    -1,  1718,   140,   268,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,
      -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   510,   172,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   311,    -1,   320,
     321,    -1,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   345,    -1,    -1,   560,    -1,    -1,   563,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    28,   366,    30,    -1,    -1,   370,    -1,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,   593,    -1,    -1,
      -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    62,    63,    -1,    65,    -1,
    1856,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,   286,
    5016,    -1,    -1,    -1,    -1,   419,    -1,    84,    -1,    -1,
     424,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,   433,
      -1,   435,    -1,    -1,    -1,    -1,   440,    -1,    -1,   443,
      -1,    -1,  1898,  1899,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,
     137,    -1,    -1,   140,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,   493,   494,    -1,    -1,    -1,    -1,    -1,   366,
      -1,    -1,    -1,    -1,   498,   499,   500,   501,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   531,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   433,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2034,  2035,
    2036,    -1,    -1,   250,    -1,   252,   590,   591,   592,    -1,
      -1,    -1,    -1,   597,   261,  2051,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     614,    -1,    -1,   617,    -1,    -1,    -1,  2073,    -1,   286,
      -1,    -1,    -1,  2079,    -1,    -1,  2082,    -1,  2084,    -1,
      -1,    -1,    -1,   637,  2090,    -1,  2092,  2093,   642,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   656,    -1,   531,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2121,   543,    -1,    28,    -1,
      30,    -1,    -1,    -1,  2130,    -1,    -1,  2133,   345,    -1,
      -1,    -1,    28,    -1,    30,    -1,    -1,    -1,  5195,  5196,
      -1,    -1,  5199,  5200,  5201,  5202,    -1,    -1,    -1,   366,
      -1,    -1,    -1,    -1,    -1,    65,    -1,    -1,    -1,  5216,
      -1,    -1,    -1,   590,   591,   592,    62,    63,    -1,    65,
     597,    -1,    -1,   727,    84,    -1,    -1,    -1,    74,    -1,
      -1,    -1,    92,  5339,    -1,    -1,    -1,   614,    84,    -1,
     617,    -1,    -1,    -1,    -1,    -1,    92,    -1,  2204,  2205,
    2206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2214,    -1,
     637,   121,    -1,    -1,    -1,    -1,   433,  2223,   435,    -1,
      -1,    -1,    -1,    -1,    -1,   121,   443,   137,    -1,   656,
     140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   137,  2248,    -1,   140,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5313,  5314,    -1,    -1,
      -1,    -1,    -1,  2269,   174,  5322,  2272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
    2286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     727,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   531,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,  2359,   250,    -1,   252,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   590,   591,   592,   286,    -1,    -1,    -1,
     597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     286,    -1,    -1,    -1,    -1,    -1,    -1,   614,    -1,    -1,
     617,    -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2419,    -1,  2421,    -1,    -1,    -1,    -1,
     637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   345,    -1,    -1,    -1,   656,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   345,
      -1,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     366,    -1,    -1,    -1,    -1,  2481,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2495,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   723,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   433,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   443,    -1,    -1,    -1,   433,    -1,   435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,
      -1,    -1,  2558,    -1,    -1,    -1,  2562,    -1,    -1,    -1,
    2566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2576,    -1,  2578,    -1,  2580,  2581,  2582,  2583,    -1,    -1,
    2586,    -1,    -1,    -1,    -1,  2591,    -1,    -1,    -1,  2595,
      -1,    -1,  2598,    -1,  2600,    -1,  2602,  2603,    -1,  2605,
      -1,  2607,    -1,  2609,  2610,  2611,  2612,    -1,  2614,    -1,
    2616,    -1,    -1,  2619,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   531,    -1,  2629,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2637,    -1,   543,    -1,   531,  2642,    -1,  2644,    -1,
      -1,  2647,  2648,    -1,  2650,  2651,    -1,   543,    -1,    -1,
    2656,  2657,  2658,    -1,    -1,    -1,  2662,  2663,  2664,    -1,
    2666,    -1,  2668,    -1,  2670,    -1,  2672,    -1,  2674,    -1,
      -1,    -1,    -1,    -1,  2680,    -1,    -1,    -1,    -1,  2685,
     590,   591,   592,    -1,    -1,    -1,    -1,   597,    -1,    -1,
      -1,    -1,    -1,  2699,   590,   591,   592,    -1,    -1,  2705,
      -1,   597,  2708,    -1,   614,    -1,    -1,   617,  2714,    -1,
      -1,    -1,    -1,    -1,    -1,  2721,    -1,    -1,   614,  2725,
      -1,   617,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   637,    -1,    -1,    -1,  2751,   656,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     656,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2786,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,  2804,    16,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2813,  2814,  2815,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,   721,    -1,    28,    -1,    30,
      -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    -1,    56,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    65,    66,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    62,    63,  2869,    65,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2887,    -1,    84,    -1,    -1,    -1,    -1,   105,    -1,
      -1,    92,    -1,  2899,    -1,  2901,  2902,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   132,    -1,    -1,    -1,    -1,
     121,    -1,    -1,    -1,    -1,   142,  2932,   144,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,    -1,   140,
     157,    -1,   159,    -1,    -1,    -1,  2952,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2974,    -1,
      -1,   188,    -1,   174,    -1,  2981,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3013,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3039,  3040,    -1,   253,    -1,    -1,    -1,
      -1,    -1,  3048,    -1,    -1,    -1,    -1,    -1,    -1,   250,
     267,   252,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     261,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
      -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3087,  3088,    -1,    -1,   286,    -1,    -1,    -1,    -1,
     307,    -1,    -1,    -1,   311,    -1,    -1,    -1,    -1,    -1,
      -1,   318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3118,  3119,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3143,    -1,    -1,
      -1,    -1,  3148,    -1,   345,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,  3174,    -1,
    3176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3205,
      -1,    -1,   419,    -1,    -1,    -1,    -1,    -1,  3214,    -1,
    3216,    -1,  3218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   438,    -1,   440,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   433,    -1,   435,    -1,    -1,    -1,    -1,    -1,
      -1,   458,   443,    -1,    -1,    -1,  3252,    -1,    -1,    -1,
      -1,  3257,    -1,   470,    -1,    -1,    -1,  3263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3278,    -1,    -1,    -1,   637,    -1,    -1,   496,
      -1,  3287,   499,    -1,   501,    -1,   503,   504,    -1,    -1,
     507,    -1,   509,    -1,    -1,    -1,  3302,    -1,    -1,    -1,
      -1,    -1,    -1,   520,    -1,    -1,   523,    -1,    -1,    -1,
      -1,   672,  3318,    -1,    -1,    -1,    -1,   534,    -1,    -1,
      -1,  3327,    -1,    -1,  3330,    -1,    -1,    -1,    -1,    -1,
     531,    -1,   549,    -1,    -1,    -1,    -1,    -1,   555,   556,
     557,    -1,   543,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3375,
      -1,   588,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   596,
      -1,    -1,    13,  3389,    -1,    -1,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   755,    26,   597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,   617,    -1,    -1,    -1,
      -1,    -1,    -1,   784,    -1,   642,    -1,    -1,    -1,    -1,
      -1,    62,    63,    -1,    -1,    -1,   637,  3443,   655,    -1,
      -1,    -1,   659,    -1,    75,   662,    -1,    -1,    -1,    -1,
     667,    -1,    -1,    -1,    -1,   656,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   829,    -1,
     101,  3477,   103,    -1,   105,    -1,   693,   694,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   702,    -1,    -1,   119,   850,
      -1,   708,    -1,    -1,    -1,  3501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3510,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,   145,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,   174,    -1,    -1,   907,   178,    -1,    -1,
     181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3588,    -1,    -1,   216,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,   958,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1003,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   308,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3698,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   338,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3733,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3773,    -1,    -1,
      -1,    -1,  3778,    -1,    -1,    -1,    -1,    -1,  3784,  3785,
      -1,  3787,    -1,    -1,    -1,    -1,    -1,   418,    -1,    -1,
      -1,    -1,  3798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3808,    -1,    -1,  3811,    -1,  3813,  3814,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   449,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   463,   464,    -1,    -1,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3856,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1254,  3900,    -1,  1257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3912,  3913,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,
      -1,  1282,  1283,    -1,    -1,    -1,    -1,    -1,  1289,   560,
      -1,    -1,  1293,  1294,    -1,    -1,  1297,  1298,  1299,  1300,
    1301,  1302,  1303,  1304,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1314,  1315,  1316,    -1,  1318,  1319,  1320,
      -1,    -1,   593,    -1,  1325,  1326,   597,    -1,    -1,  1330,
    1331,  1332,  1333,  1334,  1335,    -1,  1337,    -1,  1339,    -1,
    3986,    -1,    -1,    -1,    -1,   616,  1347,  1348,  1349,    -1,
    1351,  1352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1360,
    1361,  1362,  1363,    -1,  1365,  1366,  1367,    -1,    -1,    -1,
    1371,    -1,  1373,  1374,  1375,  1376,  1377,    -1,    -1,  1380,
      -1,    -1,    -1,  1384,  1385,    -1,    -1,    -1,  1389,    -1,
      -1,    -1,  1393,  1394,  1395,    -1,    -1,    14,    -1,    16,
    4046,    -1,    -1,    -1,  1405,  1406,  1407,  1408,   679,    -1,
      -1,    -1,    -1,    -1,    -1,  1416,   687,    34,    -1,    -1,
    4066,    38,  1423,  1424,  1425,    -1,    -1,  4073,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    52,    53,    -1,    -1,    56,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    65,    66,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1459,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,
      -1,  4137,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4157,  4158,    -1,    -1,   132,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,   144,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,   159,    -1,    -1,    -1,    -1,    -1,  1549,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1566,    -1,    -1,    -1,     6,
      -1,   188,    -1,    -1,  4220,    12,    -1,    14,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    28,    -1,    30,    -1,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,   238,    -1,    60,    -1,    -1,    -1,    -1,    65,    -1,
      -1,    -1,    -1,    -1,  4280,    -1,   253,    -1,  1639,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    -1,    -1,
     267,    -1,   269,  1654,    -1,    92,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,
      -1,   288,    -1,    -1,    -1,    -1,    -1,  4323,    -1,  4325,
      -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,
     307,    -1,    -1,  4339,   311,    -1,    -1,    -1,    -1,    -1,
     137,   318,  4348,   140,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   150,  4360,    -1,    -1,  1718,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   168,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4394,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,    -1,    -1,
      -1,   438,    -1,   440,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   458,    -1,    -1,  4490,    -1,    -1,    -1,    -1,   286,
      -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   311,    -1,    -1,    -1,    -1,   496,
      -1,    -1,   499,    -1,   501,    -1,   503,   504,    -1,    -1,
     507,    -1,   509,    -1,    -1,    -1,    -1,  1898,  1899,    -1,
      -1,    -1,    -1,   520,    -1,    -1,   523,    -1,   345,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   534,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   366,
      -1,    -1,   549,   370,    -1,    -1,    -1,    -1,   555,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4611,    -1,    -1,    -1,    -1,
      -1,   588,  4618,    -1,    -1,    -1,    -1,    -1,    -1,   596,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   424,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   433,  4643,   435,    -1,
    4646,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4665,
      -1,    -1,    -1,    -1,    -1,   642,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2034,  2035,  2036,  4682,    -1,   655,    -1,
      -1,    -1,   659,    -1,    -1,   662,    -1,    -1,    -1,    -1,
     667,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2073,    -1,    -1,    -1,   693,   694,    -1,    -1,
      -1,  2082,    -1,  2084,    -1,   702,    -1,    -1,  4734,    -1,
    4736,   708,    -1,    -1,   531,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4763,    -1,    -1,
    2121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,    -1,    -1,
     597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   614,    -1,    -1,
     617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4845,
     637,    -1,    -1,    -1,    -1,  2206,    -1,    -1,  4854,    -1,
      -1,    -1,    -1,  2214,    -1,    -1,    -1,  4863,    -1,   656,
      -1,    -1,  2223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4907,    -1,  4909,    -1,    14,    -1,    16,  2269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2286,    -1,    -1,    -1,    38,
      -1,    -1,    -1,    -1,    -1,    -1,  4942,    -1,    -1,  4945,
      -1,    -1,    -1,    52,    53,    -1,    -1,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    -1,  4961,    65,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4981,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4996,    -1,    -1,    -1,    -1,    -1,   105,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5027,  5028,   132,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,   144,   145,    -1,    -1,    -1,
      -1,  5047,  5048,    -1,    -1,    -1,    -1,    -1,   157,    -1,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2419,    -1,
    2421,    -1,    -1,  5069,    -1,    -1,  5072,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5093,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5102,    -1,   207,    -1,
      -1,    -1,    -1,    -1,  5110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,   238,
      -1,    -1,    -1,  5139,  2495,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5150,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2558,   307,    -1,
      -1,  2562,   311,    -1,    -1,  2566,    -1,    -1,  5214,    -1,
      -1,    -1,    -1,  5219,    -1,  2576,    -1,  2578,    -1,  2580,
    5226,  2582,  2583,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2591,    -1,    -1,    -1,  2595,    -1,    -1,  2598,    -1,  2600,
      -1,  2602,    -1,    -1,  2605,    -1,  2607,    -1,  2609,  2610,
    2611,  2612,    -1,  2614,    -1,  2616,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5273,  2629,    -1,
      -1,    -1,    -1,    -1,  5280,    -1,  2637,    -1,    -1,    -1,
      -1,  2642,    -1,  2644,    -1,    -1,  2647,  2648,    -1,  2650,
      -1,    -1,    -1,    -1,    -1,  2656,  2657,  2658,    -1,    -1,
      -1,  2662,  2663,  2664,    -1,  2666,    -1,  2668,    -1,  2670,
     419,  2672,    -1,  2674,    -1,    -1,    -1,    -1,    -1,  2680,
      -1,    -1,    -1,    -1,  2685,    -1,    -1,    -1,  5334,   438,
      -1,   440,    -1,    -1,  5340,    -1,    -1,    -1,  2699,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
      -1,    -1,    -1,  2714,    -1,    -1,    -1,    -1,    -1,    -1,
    2721,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5389,    -1,    -1,    -1,   496,    -1,    -1,
     499,  5397,   501,    -1,    -1,   504,    36,    37,   507,    -1,
     509,    -1,    42,    -1,    44,    -1,    46,    47,    -1,    -1,
      -1,   520,    -1,    -1,   523,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    63,    -1,   534,    -1,    -1,    -1,    -1,
      -1,    -1,  5438,    -1,  5440,  5441,    -1,    -1,    -1,    -1,
     549,    -1,    -1,  5449,    -1,    -1,   555,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5473,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5481,    -1,    -1,    -1,   588,
      -1,    -1,   122,    -1,    -1,    -1,   126,   596,    -1,    -1,
      -1,    -1,    -1,  5499,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5508,    -1,    -1,    -1,    -1,    -1,  2869,    -1,
      -1,    -1,    -1,    -1,    -1,   155,    -1,    -1,    -1,    -1,
      -1,    36,    37,    -1,    -1,    -1,  2887,    42,    -1,    44,
      -1,    46,    47,   642,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   655,  5553,    63,    -1,
     659,    -1,    -1,   662,    -1,    -1,    -1,    -1,   667,  5565,
      -1,    -1,    -1,    -1,   204,    -1,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   222,   223,    -1,   694,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   702,    -1,    -1,    -1,    -1,    -1,   708,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   122,    -1,    -1,
      -1,   126,    -1,  2974,    -1,    -1,    -1,    -1,    -1,   134,
    2981,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
     155,    -1,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   314,   315,    -1,   317,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,   223,    -1,
      -1,    -1,    -1,   353,   354,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3088,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   284,
     410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3143,    -1,    -1,    -1,    -1,  3148,    -1,    -1,
     305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   314,
     315,    -1,   317,    -1,    -1,    -1,    -1,    -1,    36,    37,
      -1,   451,   452,  3174,    42,  3176,    44,    -1,    46,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,   353,   354,
     355,    -1,   482,    -1,  3205,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3214,    -1,  3216,    -1,  3218,   373,   374,
     375,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   527,    -1,    -1,
      -1,    -1,    -1,   408,   122,   410,    -1,    -1,   126,    -1,
      -1,    -1,  3263,    -1,    -1,    -1,   134,    -1,    -1,   549,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3278,    -1,    -1,
      -1,    -1,    -1,    -1,   564,    -1,  3287,   155,    -1,    -1,
      -1,    -1,    -1,    36,    37,    -1,   451,   452,    -1,    42,
      -1,    44,    -1,    46,    47,    -1,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3318,    -1,    -1,
      63,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,   206,    -1,
      -1,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,    -1,
     630,   631,   632,   633,   222,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   527,    -1,  3375,    -1,    -1,    -1,    -1,   122,
      -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,   549,    -1,   676,   677,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,   564,
      -1,    -1,   155,    -1,    -1,    -1,   284,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   706,    -1,    -1,    -1,
      -1,    -1,   175,    -1,    -1,    -1,    -1,   305,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   314,   315,    -1,   317,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   204,    -1,   206,    -1,    -1,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,    -1,   630,   631,   632,   633,   222,
     223,    -1,    -1,    -1,    -1,   353,   354,   355,    -1,   644,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3501,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,  3510,
      -1,    -1,    -1,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,   676,   677,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     408,   284,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   314,   315,    -1,   317,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,   452,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     353,   354,   355,    -1,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,   374,   375,    -1,    -1,    -1,    -1,    -1,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,    -1,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   545,    -1,    -1,
      -1,   549,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,   452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,  3773,    -1,    -1,    -1,    -1,  3778,    -1,    -1,
      -1,    -1,    -1,  3784,  3785,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3798,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   549,  3808,   676,   677,
    3811,    -1,  3813,  3814,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3900,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   676,   677,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3986,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4066,    -1,    -1,    -1,    -1,
      -1,    -1,  4073,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4157,  4158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4323,    -1,  4325,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4360,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4394,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    -1,    -1,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,
      -1,    45,    46,    47,    -1,    49,    -1,    -1,    -1,    -1,
      -1,    55,    56,    -1,    58,    59,    -1,    61,    -1,  4490,
      -1,    -1,    -1,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    -1,    -1,    -1,    -1,    -1,    -1,    83,
      -1,    85,    -1,    87,    88,    89,    90,    -1,    92,    93,
      -1,    95,    96,    97,    -1,    99,    -1,   101,    -1,    -1,
     104,    -1,    -1,   107,    -1,    -1,   110,    -1,    -1,   113,
      -1,   115,    -1,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,   126,    -1,    -1,    -1,    -1,   131,    -1,    -1,
      -1,    -1,   136,    -1,   138,    -1,   140,    -1,    -1,    -1,
      -1,    -1,   146,    -1,   148,   149,   150,   151,   152,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,   162,   163,
      -1,   165,   166,   167,   168,    -1,   170,   171,    -1,   173,
     174,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,    -1,    -1,    -1,    -1,   189,    -1,    -1,   192,   193,
     194,   195,    -1,    -1,   198,   199,   200,   201,    -1,   203,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,
     214,    -1,   216,    -1,   218,  4646,   220,   221,   222,   223,
     224,    -1,   226,   227,    -1,   229,    -1,    -1,    -1,    -1,
      -1,   235,   236,    -1,  4665,    -1,    -1,    -1,   242,    -1,
     244,    -1,    -1,    -1,   248,   249,   250,   251,   252,   253,
      -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,   263,
      -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,    -1,   286,    -1,    -1,    -1,   290,   291,   292,    -1,
      -1,   295,   296,    -1,   298,   299,    -1,    -1,    -1,    -1,
      -1,   305,   306,    -1,   308,  4736,   310,    -1,   312,   313,
      -1,    -1,    -1,    -1,   318,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,
      -1,    -1,   356,   357,   358,   359,   360,   361,    -1,    -1,
     364,   365,   366,    -1,   368,    -1,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,    -1,    -1,   399,   400,   401,   402,    -1,
      -1,    -1,    -1,   407,    -1,    -1,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   433,
     434,    -1,  4863,    -1,    -1,   439,    -1,   441,   442,   443,
      -1,    -1,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,    -1,    -1,    -1,    -1,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,    -1,   471,   472,   473,
     474,    -1,    -1,   477,    -1,   479,  4907,    -1,  4909,   483,
     484,    -1,   486,   487,   488,    -1,    -1,   491,   492,   493,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,   502,   503,
      -1,   505,    -1,    -1,   508,    -1,   510,    -1,    -1,   513,
     514,    -1,   516,   517,   518,   519,    -1,    -1,   522,    -1,
     524,   525,   526,   527,    -1,   529,   530,   531,    -1,   533,
      -1,   535,   536,    -1,   538,    -1,    -1,    -1,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,   550,    -1,   552,    -1,
      -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,   562,   563,
      -1,   565,    -1,   567,    -1,   569,   570,    -1,    -1,    -1,
      -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,   583,
      -1,    -1,    -1,   587,    -1,   589,    -1,    -1,    -1,   593,
      -1,    -1,    -1,   597,    -1,    -1,   600,   601,   602,   603,
     604,   605,    -1,    -1,   608,   609,   610,   611,    -1,   613,
     614,    -1,    -1,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,    -1,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,    -1,    -1,    -1,   643,
     644,   645,    -1,    -1,   648,   649,    -1,   651,   652,    -1,
      -1,    -1,    -1,    -1,   658,    -1,    -1,   661,    -1,    -1,
      -1,   665,   666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   675,    -1,    -1,   678,   679,    -1,    -1,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,    -1,    -1,   693,
      -1,    -1,    -1,    -1,   698,    -1,    -1,   701,    -1,   703,
      -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,  5139,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5150,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5273,    -1,    -1,    -1,    -1,    -1,    -1,  5280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,  5389,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,  5449,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,  5565,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,   294,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,   635,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,   690,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,   255,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,   720,   721,    -1,
      -1,   724,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    37,
      38,    39,    40,    41,    42,    43,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,   137,
     138,    -1,   140,    -1,    -1,   143,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,   231,   232,   233,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,   253,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,   297,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,   476,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,   503,   504,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,   521,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,   532,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,   669,   670,   671,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   714,   715,    -1,    -1,
      -1,    -1,   720,   721,    -1,    -1,   724,   725,    -1,    -1,
     728,   729,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,
      -1,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    34,    -1,    -1,    -1,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    -1,    49,    -1,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    -1,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,   126,    -1,    -1,    -1,    -1,   131,   132,
     133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,    -1,
     143,    -1,    -1,   146,    -1,   148,   149,   150,   151,   152,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,
     163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,
     173,   174,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,    -1,    -1,    -1,
     213,   214,    -1,   216,    -1,   218,    -1,   220,   221,   222,
     223,   224,   225,   226,   227,    -1,   229,    -1,   231,   232,
     233,   234,   235,   236,    -1,   238,   239,   240,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,   249,   250,   251,   252,
     253,    -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,   279,   280,   281,    -1,
      -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,   292,
      -1,    -1,   295,    -1,   297,   298,   299,    -1,    -1,    -1,
      -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,
     313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
      -1,    -1,    -1,   356,   357,   358,   359,   360,   361,    -1,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,    -1,   420,   421,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,
     433,   434,    -1,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,   467,   468,   469,    -1,   471,   472,
     473,   474,    -1,   476,   477,    -1,   479,    -1,    -1,    -1,
     483,   484,    -1,   486,   487,   488,    -1,    -1,   491,   492,
     493,   494,   495,    -1,   497,   498,    -1,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,    -1,   510,   511,    -1,
     513,   514,    -1,   516,    -1,   518,   519,    -1,   521,   522,
     523,   524,   525,   526,   527,    -1,   529,   530,   531,   532,
     533,   534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,
     543,   544,   545,   546,   547,    -1,    -1,   550,    -1,   552,
      -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,   570,    -1,    -1,
      -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,
     583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,    -1,    -1,   617,   618,   619,   620,    -1,   622,
     623,   624,    -1,   626,   627,   628,   629,   630,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,
     663,    -1,   665,   666,    -1,    -1,   669,   670,   671,    -1,
      -1,    -1,   675,    -1,    -1,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,   689,    -1,    -1,   692,
      -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,
     703,    -1,    -1,   706,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   714,   715,    -1,    -1,    -1,    -1,    -1,   721,    -1,
      -1,    -1,   725,    -1,    -1,   728,   729,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    -1,
      38,    39,    -1,    -1,    42,    -1,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,    -1,
      58,    59,    -1,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,   107,
      -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,    -1,
      -1,    -1,    -1,   131,   132,   133,    -1,    -1,   136,    -1,
     138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,    -1,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,    -1,   201,    -1,   203,   204,   205,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,    -1,
     238,   239,   240,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,    -1,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,    -1,
     268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,    -1,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,    -1,
     348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,    -1,
     368,    -1,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
      -1,    -1,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,   437,
      -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,    -1,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,    -1,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,    -1,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,    -1,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,    -1,    -1,
     608,   609,   610,   611,    -1,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,    -1,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,    -1,    -1,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    19,
     728,   729,    22,    -1,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    -1,    42,    -1,    -1,    45,    46,    47,    -1,    49,
      -1,    51,    52,    -1,    -1,    55,    -1,    -1,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    -1,    95,    96,    97,    98,    99,
      -1,   101,    -1,    -1,   104,    -1,    -1,   107,    -1,    -1,
     110,    -1,    -1,   113,    -1,   115,    -1,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,   126,    -1,    -1,    -1,
      -1,   131,   132,    -1,    -1,    -1,   136,   137,   138,    -1,
     140,    -1,    -1,    -1,    -1,    -1,   146,    -1,   148,   149,
     150,   151,   152,    -1,    -1,    -1,    -1,   157,    -1,    -1,
      -1,   161,   162,   163,    -1,    -1,    -1,   167,   168,    -1,
     170,   171,    -1,   173,   174,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
      -1,    -1,   192,   193,   194,   195,    -1,    -1,   198,   199,
      -1,   201,    -1,   203,   204,    -1,    -1,   207,   208,   209,
      -1,    -1,    -1,   213,   214,    -1,   216,    -1,   218,    -1,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,   236,    -1,   238,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,   249,
     250,   251,   252,    -1,    -1,    -1,   256,   257,   258,   259,
     260,    -1,    -1,   263,    -1,    -1,    -1,    -1,   268,   269,
      -1,    -1,    -1,    -1,   274,    -1,   276,   277,    -1,   279,
     280,   281,    -1,    -1,   284,    -1,   286,    -1,    -1,   289,
     290,   291,   292,    -1,    -1,   295,    -1,    -1,   298,   299,
      -1,    -1,    -1,    -1,    -1,   305,   306,    -1,   308,    -1,
     310,    -1,   312,   313,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,   356,   357,   358,   359,
     360,   361,    -1,    -1,   364,   365,   366,    -1,   368,    -1,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,    -1,    -1,    -1,   407,    -1,    -1,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,    -1,
     420,   421,    -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,
      -1,    -1,   432,   433,   434,    -1,    -1,   437,    -1,   439,
      -1,   441,   442,   443,    -1,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,    -1,   455,   456,    -1,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,   467,   468,   469,
      -1,   471,   472,   473,   474,    -1,    -1,   477,    -1,   479,
      -1,    -1,    -1,   483,   484,    -1,   486,   487,   488,    -1,
      -1,   491,   492,   493,   494,   495,    -1,   497,   498,    -1,
     500,   501,   502,    -1,    -1,   505,    -1,   507,   508,    -1,
     510,   511,    -1,   513,   514,    -1,   516,    -1,   518,   519,
      -1,    -1,   522,   523,   524,   525,   526,   527,    -1,   529,
     530,   531,    -1,   533,   534,   535,   536,    -1,   538,   539,
      -1,    -1,    -1,   543,   544,   545,   546,   547,    -1,    -1,
     550,    -1,   552,    -1,    -1,    -1,   556,    -1,   558,   559,
     560,   561,   562,   563,    -1,   565,   566,   567,   568,   569,
     570,    -1,    -1,    -1,    -1,    -1,    -1,   577,   578,    -1,
     580,    -1,    -1,   583,    -1,    -1,    -1,   587,   588,   589,
      -1,    -1,    -1,   593,    -1,    -1,   596,   597,   598,    -1,
     600,   601,   602,   603,   604,   605,    -1,    -1,   608,   609,
     610,   611,    -1,   613,   614,    -1,    -1,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
      -1,    -1,   642,   643,   644,   645,    -1,   647,   648,   649,
      -1,   651,   652,    -1,   654,   655,    -1,    -1,   658,    -1,
      -1,   661,    -1,   663,    -1,   665,   666,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,   678,   679,
      -1,    -1,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,    -1,   692,    -1,    -1,   695,    -1,    -1,   698,   699,
      -1,   701,   702,   703,    -1,    -1,   706,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    19,    -1,    -1,    22,   729,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    -1,    42,    -1,
      -1,    45,    46,    47,    -1,    49,    -1,    51,    52,    -1,
      -1,    55,    -1,    -1,    58,    59,    -1,    61,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      -1,    95,    96,    97,    98,    99,    -1,   101,    -1,    -1,
     104,    -1,    -1,   107,    -1,    -1,   110,    -1,    -1,   113,
      -1,   115,    -1,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,   126,    -1,    -1,    -1,    -1,   131,   132,    -1,
      -1,    -1,   136,    -1,   138,    -1,   140,    -1,    -1,    -1,
      -1,    -1,   146,    -1,   148,   149,   150,   151,   152,    -1,
      -1,    -1,    -1,   157,    -1,    -1,    -1,   161,   162,   163,
      -1,    -1,    -1,   167,   168,    -1,   170,   171,    -1,   173,
     174,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,    -1,    -1,   192,   193,
     194,   195,    -1,    -1,   198,   199,    -1,   201,    -1,   203,
     204,    -1,    -1,   207,   208,   209,    -1,    -1,    -1,   213,
     214,    -1,   216,    -1,   218,    -1,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,   236,    -1,   238,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,   249,   250,   251,   252,    -1,
      -1,    -1,   256,   257,   258,   259,   260,    -1,    -1,   263,
      -1,    -1,    -1,    -1,   268,   269,    -1,    -1,    -1,    -1,
     274,    -1,   276,   277,    -1,   279,   280,   281,    -1,    -1,
     284,    -1,   286,    -1,    -1,   289,   290,   291,   292,    -1,
      -1,   295,    -1,    -1,   298,   299,   300,    -1,    -1,    -1,
      -1,   305,   306,    -1,   308,    -1,   310,    -1,   312,   313,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,
      -1,    -1,   356,   357,   358,   359,   360,   361,    -1,    -1,
     364,   365,   366,    -1,   368,    -1,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
      -1,    -1,    -1,   407,    -1,    -1,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,    -1,   420,   421,    -1,    -1,
      -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,   432,   433,
     434,    -1,    -1,   437,    -1,   439,    -1,   441,   442,   443,
      -1,    -1,    -1,   447,   448,   449,   450,   451,   452,   453,
      -1,   455,   456,    -1,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,    -1,   471,   472,   473,
     474,    -1,    -1,   477,    -1,   479,    -1,    -1,    -1,   483,
     484,    -1,   486,   487,   488,    -1,    -1,   491,   492,   493,
     494,   495,    -1,   497,   498,    -1,   500,   501,   502,    -1,
      -1,   505,    -1,   507,   508,    -1,   510,   511,    -1,   513,
     514,    -1,   516,    -1,   518,   519,    -1,    -1,   522,   523,
     524,   525,   526,   527,    -1,   529,   530,   531,    -1,   533,
     534,   535,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
     544,   545,   546,   547,    -1,    -1,   550,    -1,   552,    -1,
      -1,    -1,   556,    -1,   558,   559,   560,   561,   562,   563,
      -1,   565,   566,   567,   568,   569,   570,    -1,    -1,    -1,
      -1,    -1,    -1,   577,   578,    -1,   580,    -1,    -1,   583,
      -1,    -1,    -1,   587,   588,   589,    -1,    -1,    -1,   593,
      -1,    -1,   596,   597,   598,    -1,   600,   601,   602,   603,
     604,   605,    -1,    -1,   608,   609,   610,   611,    -1,   613,
     614,    -1,    -1,   617,   618,   619,   620,    -1,   622,   623,
     624,    -1,   626,   627,   628,   629,   630,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,    -1,    -1,   642,   643,
     644,   645,    -1,   647,   648,   649,    -1,   651,   652,    -1,
     654,   655,    -1,    -1,   658,    -1,    -1,   661,    -1,   663,
      -1,   665,   666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   675,    -1,    -1,   678,   679,    -1,    -1,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,    -1,   692,    -1,
      -1,   695,    -1,    -1,   698,   699,    -1,   701,   702,   703,
      -1,    -1,   706,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,    -1,    -1,    22,   729,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,    -1,
      58,    59,    -1,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,   107,
      -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,    -1,
      -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,    -1,
     138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,    -1,    -1,   192,   193,   194,   195,    -1,    -1,
     198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,    -1,
     238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,    -1,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,    -1,
     268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,    -1,
     298,   299,   300,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,    -1,
     348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,    -1,
     368,    -1,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,   407,
      -1,    -1,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,   437,
      -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,    -1,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,    -1,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,    -1,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,    -1,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,    -1,    -1,
     608,   609,   610,   611,    -1,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,   622,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,   647,
     648,   649,    -1,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,    -1,    -1,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,   729,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    19,    -1,    -1,    22,   729,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,
      46,    47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,
      -1,    -1,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    -1,    95,
      96,    97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,
      -1,   107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,
      -1,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
     126,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,
     136,   137,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,
     146,    -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,
      -1,   157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,
      -1,   167,   168,    -1,   170,   171,    -1,   173,   174,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,    -1,    -1,   192,   193,   194,   195,
      -1,    -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,
      -1,   207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,
     216,    -1,   218,    -1,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
     236,    -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,
     256,   257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,
      -1,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,
     276,   277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,
     286,    -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,
      -1,    -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,
     306,    -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,
     356,   357,   358,   359,   360,   361,    -1,    -1,   364,   365,
     366,    -1,   368,    -1,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,
      -1,   407,    -1,    -1,   410,   411,   412,   413,    -1,   415,
     416,   417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,
      -1,   427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,
      -1,   437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,    -1,   455,
     456,    -1,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,   467,   468,   469,    -1,   471,   472,   473,   474,    -1,
      -1,   477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,
     486,   487,   488,    -1,    -1,   491,   492,   493,   494,   495,
      -1,   497,   498,    -1,   500,   501,   502,    -1,    -1,   505,
      -1,   507,   508,    -1,   510,   511,    -1,   513,   514,    -1,
     516,    -1,   518,   519,    -1,    -1,   522,   523,   524,   525,
     526,   527,    -1,   529,   530,   531,    -1,   533,   534,   535,
     536,    -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,
     546,   547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,
     556,    -1,   558,   559,   560,   561,   562,   563,    -1,   565,
     566,   567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,
      -1,   577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,
      -1,   587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,
     596,   597,   598,    -1,   600,   601,   602,   603,   604,   605,
      -1,    -1,   608,   609,   610,   611,    -1,   613,   614,    -1,
      -1,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,    -1,    -1,   642,   643,   644,   645,
      -1,   647,   648,   649,    -1,   651,   652,    -1,   654,   655,
      -1,    -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,
     666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,
      -1,    -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,
      -1,    -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,
     706,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    19,
      -1,    -1,    22,   729,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    -1,    42,    -1,    -1,    45,    46,    47,    -1,    49,
      -1,    51,    52,    -1,    -1,    55,    -1,    -1,    58,    59,
      -1,    61,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    -1,    95,    96,    97,    98,    99,
      -1,   101,    -1,    -1,   104,    -1,    -1,   107,    -1,    -1,
     110,    -1,    -1,   113,    -1,   115,    -1,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,   126,    -1,    -1,    -1,
      -1,   131,   132,    -1,    -1,    -1,   136,    -1,   138,    -1,
     140,    -1,    -1,    -1,    -1,    -1,   146,    -1,   148,   149,
     150,   151,   152,    -1,    -1,    -1,    -1,   157,    -1,    -1,
      -1,   161,   162,   163,    -1,    -1,    -1,   167,   168,    -1,
     170,   171,    -1,   173,   174,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
      -1,    -1,   192,   193,   194,   195,    -1,    -1,   198,   199,
      -1,   201,    -1,   203,   204,    -1,    -1,   207,   208,   209,
      -1,    -1,    -1,   213,   214,    -1,   216,    -1,   218,    -1,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,   236,    -1,   238,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,   249,
     250,   251,   252,    -1,    -1,    -1,   256,   257,   258,   259,
     260,    -1,    -1,   263,    -1,    -1,    -1,    -1,   268,   269,
      -1,    -1,    -1,    -1,   274,    -1,   276,   277,    -1,   279,
     280,   281,    -1,    -1,   284,    -1,   286,    -1,    -1,   289,
     290,   291,   292,    -1,    -1,   295,    -1,    -1,   298,   299,
      -1,    -1,    -1,    -1,    -1,   305,   306,    -1,   308,    -1,
     310,    -1,   312,   313,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,    -1,   348,   349,
     350,    -1,    -1,    -1,    -1,    -1,   356,   357,   358,   359,
     360,   361,    -1,    -1,   364,   365,   366,    -1,   368,    -1,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,    -1,    -1,    -1,   407,    -1,    -1,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,    -1,
     420,   421,    -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,
      -1,    -1,   432,   433,   434,    -1,    -1,   437,    -1,   439,
      -1,   441,   442,   443,    -1,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,    -1,   455,   456,    -1,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,   467,   468,   469,
      -1,   471,   472,   473,   474,    -1,    -1,   477,    -1,   479,
      -1,    -1,    -1,   483,   484,    -1,   486,   487,   488,    -1,
      -1,   491,   492,   493,   494,   495,    -1,   497,   498,    -1,
     500,   501,   502,    -1,    -1,   505,    -1,   507,   508,    -1,
     510,   511,    -1,   513,   514,    -1,   516,    -1,   518,   519,
      -1,    -1,   522,   523,   524,   525,   526,   527,    -1,   529,
     530,   531,    -1,   533,   534,   535,   536,    -1,   538,   539,
      -1,    -1,    -1,   543,   544,   545,   546,   547,    -1,    -1,
     550,    -1,   552,    -1,    -1,    -1,   556,    -1,   558,   559,
     560,   561,   562,   563,    -1,   565,   566,   567,   568,   569,
     570,    -1,    -1,    -1,    -1,    -1,    -1,   577,   578,    -1,
     580,    -1,    -1,   583,    -1,    -1,    -1,   587,   588,   589,
      -1,    -1,    -1,   593,    -1,    -1,   596,   597,   598,    -1,
     600,   601,   602,   603,   604,   605,    -1,    -1,   608,   609,
     610,   611,    -1,   613,   614,    -1,    -1,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,   628,   629,
     630,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
      -1,    -1,   642,   643,   644,   645,    -1,   647,   648,   649,
      -1,   651,   652,    -1,   654,   655,    -1,    -1,   658,    -1,
      -1,   661,    -1,   663,    -1,   665,   666,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,   678,   679,
      -1,    -1,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,    -1,   692,    -1,    -1,   695,    -1,    -1,   698,   699,
      -1,   701,   702,   703,    -1,    -1,   706,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,   722,    15,    -1,    -1,    -1,    19,   728,   729,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    19,    -1,    -1,    22,   729,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,
      46,    47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,
      -1,    -1,    58,    59,    -1,    61,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    -1,    95,
      96,    97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,
      -1,   107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,
      -1,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
     126,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,
     136,    -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,
     146,    -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,
      -1,   157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,
      -1,   167,   168,    -1,   170,   171,    -1,   173,   174,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,    -1,    -1,   192,   193,   194,   195,
      -1,    -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,
      -1,   207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,
     216,    -1,   218,    -1,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
     236,    -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,
     256,   257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,
      -1,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,
     276,   277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,
     286,    -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,
      -1,    -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,
     306,    -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,
     356,   357,   358,   359,   360,   361,    -1,    -1,   364,   365,
     366,    -1,   368,    -1,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,
      -1,   407,    -1,    -1,   410,   411,   412,   413,    -1,   415,
     416,   417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,
      -1,   427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,
      -1,   437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,    -1,   455,
     456,    -1,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,   467,   468,   469,    -1,   471,   472,   473,   474,    -1,
      -1,   477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,
     486,   487,   488,    -1,    -1,   491,   492,   493,   494,   495,
      -1,   497,   498,    -1,   500,   501,   502,    -1,    -1,   505,
      -1,   507,   508,    -1,   510,   511,    -1,   513,   514,    -1,
     516,    -1,   518,   519,    -1,    -1,   522,   523,   524,   525,
     526,   527,    -1,   529,   530,   531,    -1,   533,   534,   535,
     536,    -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,
     546,   547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,
     556,    -1,   558,   559,   560,   561,   562,   563,    -1,   565,
     566,   567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,
      -1,   577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,
      -1,   587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,
     596,   597,   598,    -1,   600,   601,   602,   603,   604,   605,
      -1,    -1,   608,   609,   610,   611,    -1,   613,   614,    -1,
      -1,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,    -1,    -1,   642,   643,   644,   645,
      -1,   647,   648,   649,    -1,   651,   652,    -1,   654,   655,
      -1,    -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,
     666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,
      -1,    -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,
      -1,    -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,
     706,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    19,   728,   729,    22,    -1,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,    47,
      -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,    -1,
      58,    59,    -1,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    -1,    95,    96,    97,
      98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,   107,
      -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,    -1,
      -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,    -1,
     138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,    -1,
     148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,   167,
     168,    -1,   170,   171,    -1,   173,   174,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,    -1,    -1,   192,   193,   194,   195,    -1,    -1,
     198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,   207,
     208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,    -1,
     218,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,    -1,
     238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,   249,   250,   251,   252,    -1,    -1,    -1,   256,   257,
     258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,    -1,
     268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,   277,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,    -1,
      -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,    -1,
     298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,    -1,
     308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,    -1,
     348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,   357,
     358,   359,   360,   361,    -1,    -1,   364,   365,   366,    -1,
     368,    -1,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,   407,
      -1,    -1,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,   437,
      -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,    -1,   455,   456,    -1,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,    -1,    -1,   477,
      -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,   487,
     488,    -1,    -1,   491,   492,   493,   494,   495,    -1,   497,
     498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,   507,
     508,    -1,   510,   511,    -1,   513,   514,    -1,   516,    -1,
     518,   519,    -1,    -1,   522,   523,   524,   525,   526,   527,
      -1,   529,   530,   531,    -1,   533,   534,   535,   536,    -1,
     538,   539,    -1,    -1,    -1,   543,   544,   545,   546,   547,
      -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,    -1,
     558,   559,   560,   561,   562,   563,    -1,   565,   566,   567,
     568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,   577,
     578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,   587,
     588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,   597,
     598,    -1,   600,   601,   602,   603,   604,   605,    -1,    -1,
     608,   609,   610,   611,    -1,   613,   614,    -1,    -1,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
     628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,   647,
     648,   649,    -1,   651,   652,    -1,   654,   655,    -1,    -1,
     658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,
     678,   679,    -1,    -1,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,    -1,
     698,   699,    -1,   701,   702,   703,    -1,    -1,   706,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,   729,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,   217,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,   287,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,   301,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,   540,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,   571,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,   694,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    22,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
     217,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
     287,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,   571,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,   728,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,   694,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
     722,    -1,    19,    -1,    -1,    22,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,   721,    -1,    -1,    19,    -1,    -1,
      22,   728,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
     272,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    22,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,   716,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   728,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,   721,    -1,    -1,    19,    -1,    -1,
      22,   728,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    22,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,   728,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    22,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,   728,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,    -1,   706,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    -1,   728,    24,    25,    26,
      27,    28,    29,    30,    31,    -1,    -1,    34,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    -1,    -1,    -1,    -1,    55,    56,
      -1,    58,    59,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    -1,    -1,    -1,    -1,    -1,    83,    -1,    85,    -1,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    -1,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,    -1,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,    -1,    -1,
      -1,    -1,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,   200,   201,    -1,   203,   204,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,    -1,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,    -1,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,    -1,    -1,   242,    -1,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,   253,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,    -1,   286,
      -1,    -1,    -1,   290,   291,   292,    -1,    -1,   295,   296,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,   318,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,    -1,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   433,   434,    -1,    -1,
      -1,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,    -1,    -1,
      -1,    -1,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,   502,   503,    -1,   505,    -1,
      -1,   508,    -1,   510,    -1,    -1,   513,   514,    -1,   516,
     517,   518,   519,    -1,    -1,   522,    -1,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,    -1,   535,   536,
      -1,   538,    -1,    -1,    -1,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,    -1,
      -1,    -1,   559,    -1,    -1,   562,   563,    -1,   565,    -1,
     567,    -1,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,    -1,   589,    -1,    -1,    -1,   593,    -1,    -1,    -1,
     597,    -1,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,    -1,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,    -1,   643,   644,   645,    -1,
      -1,   648,   649,    -1,   651,   652,    -1,    -1,    -1,    -1,
      -1,   658,    -1,    -1,   661,    -1,    -1,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,    -1,   693,    -1,    -1,    -1,
      -1,   698,    -1,    -1,   701,    -1,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,    -1,    22,   723,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,   111,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,   300,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,   622,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,   721,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    19,    -1,   721,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,   716,
      -1,    -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,   716,
      -1,    -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,   716,
      -1,    -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,    -1,    -1,    -1,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,     5,   706,
       7,     8,     9,    10,    11,    12,    -1,    -1,    15,   716,
      -1,    -1,    19,    -1,    -1,    22,    -1,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    -1,    42,    -1,    -1,    45,    46,
      47,    -1,    49,    -1,    51,    52,    -1,    -1,    55,    -1,
      -1,    58,    59,    -1,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    -1,    95,    96,
      97,    98,    99,    -1,   101,    -1,    -1,   104,    -1,    -1,
     107,    -1,    -1,   110,    -1,    -1,   113,    -1,   115,    -1,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,   126,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,   136,
      -1,   138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,
      -1,   148,   149,   150,   151,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,   161,   162,   163,    -1,    -1,    -1,
     167,   168,    -1,   170,   171,    -1,   173,   174,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,    -1,    -1,   192,   193,   194,   195,    -1,
      -1,   198,   199,    -1,   201,    -1,   203,   204,    -1,    -1,
     207,   208,   209,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,   220,   221,   222,   223,   224,   225,   226,
     227,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,   236,
      -1,   238,   239,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,   249,   250,   251,   252,    -1,    -1,    -1,   256,
     257,   258,   259,   260,    -1,    -1,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
      -1,    -1,   289,   290,   291,   292,    -1,    -1,   295,    -1,
      -1,   298,   299,    -1,    -1,    -1,    -1,    -1,   305,   306,
      -1,   308,    -1,   310,    -1,   312,   313,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
      -1,   348,   349,   350,    -1,    -1,    -1,    -1,    -1,   356,
     357,   358,   359,   360,   361,    -1,    -1,   364,   365,   366,
      -1,   368,    -1,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,   402,    -1,    -1,    -1,    -1,
     407,    -1,    -1,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,    -1,   420,   421,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,   432,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,   441,   442,   443,    -1,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,    -1,   455,   456,
      -1,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,   473,   474,    -1,    -1,
     477,    -1,   479,    -1,    -1,    -1,   483,   484,    -1,   486,
     487,   488,    -1,    -1,   491,   492,   493,   494,   495,    -1,
     497,   498,    -1,   500,   501,   502,    -1,    -1,   505,    -1,
     507,   508,    -1,   510,   511,    -1,   513,   514,    -1,   516,
      -1,   518,   519,    -1,    -1,   522,   523,   524,   525,   526,
     527,    -1,   529,   530,   531,    -1,   533,   534,   535,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,   544,   545,   546,
     547,    -1,    -1,   550,    -1,   552,    -1,    -1,    -1,   556,
      -1,   558,   559,   560,   561,   562,   563,    -1,   565,   566,
     567,   568,   569,   570,    -1,    -1,   573,   574,   575,    -1,
     577,   578,    -1,   580,    -1,    -1,   583,    -1,    -1,    -1,
     587,   588,   589,    -1,    -1,    -1,   593,    -1,    -1,   596,
     597,   598,    -1,   600,   601,   602,   603,   604,   605,    -1,
      -1,   608,   609,   610,   611,    -1,   613,   614,    -1,    -1,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,   628,   629,   630,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,    -1,    -1,   642,   643,   644,   645,    -1,
     647,   648,   649,    -1,   651,   652,    -1,   654,   655,    -1,
      -1,   658,    -1,    -1,   661,    -1,   663,    -1,   665,   666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,   678,   679,    -1,    -1,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,    -1,   692,    -1,    -1,   695,    -1,
      -1,   698,   699,    -1,   701,   702,   703,    -1,    -1,   706,
       5,    -1,     7,     8,     9,    10,    11,    12,   715,    -1,
      15,    -1,    -1,    -1,    19,    -1,    -1,    22,    -1,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    -1,    34,
      -1,    -1,    37,    38,    -1,    -1,    -1,    42,    -1,    -1,
      45,    46,    47,    -1,    49,    -1,    51,    52,    -1,    -1,
      55,    -1,    -1,    58,    59,    -1,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    -1,
      95,    96,    97,    98,    99,    -1,   101,    -1,    -1,   104,
      -1,    -1,   107,    -1,    -1,   110,    -1,    -1,   113,    -1,
     115,    -1,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,   126,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,
      -1,   136,   137,   138,    -1,   140,    -1,    -1,    -1,    -1,
      -1,   146,    -1,   148,   149,   150,   151,   152,    -1,    -1,
      -1,    -1,   157,    -1,    -1,    -1,   161,   162,   163,    -1,
      -1,    -1,   167,   168,    -1,   170,   171,    -1,   173,   174,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,    -1,    -1,   192,   193,   194,
     195,    -1,    -1,   198,   199,    -1,   201,    -1,   203,   204,
      -1,    -1,   207,   208,   209,    -1,    -1,    -1,   213,   214,
      -1,   216,    -1,   218,    -1,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,   236,    -1,   238,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,   249,   250,   251,   252,    -1,    -1,
      -1,   256,   257,   258,   259,   260,    -1,    -1,   263,    -1,
      -1,    -1,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,
      -1,   276,   277,    -1,   279,   280,   281,    -1,    -1,   284,
      -1,   286,    -1,    -1,   289,   290,   291,   292,    -1,    -1,
     295,    -1,    -1,   298,   299,   300,    -1,    -1,    -1,    -1,
     305,   306,    -1,   308,    -1,   310,    -1,   312,   313,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,    -1,   348,   349,   350,    -1,    -1,    -1,    -1,
      -1,   356,   357,   358,   359,   360,   361,    -1,    -1,   364,
     365,   366,    -1,   368,    -1,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,    -1,
      -1,    -1,   407,    -1,    -1,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,    -1,   420,   421,    -1,    -1,    -1,
      -1,    -1,   427,    -1,    -1,    -1,    -1,   432,   433,   434,
      -1,    -1,   437,    -1,   439,    -1,   441,   442,   443,    -1,
      -1,    -1,   447,   448,   449,   450,   451,   452,   453,    -1,
     455,   456,    -1,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,   467,   468,   469,    -1,   471,   472,   473,   474,
      -1,    -1,   477,    -1,   479,    -1,    -1,    -1,   483,   484,
      -1,   486,   487,   488,    -1,    -1,   491,   492,   493,   494,
     495,    -1,   497,   498,    -1,   500,   501,   502,    -1,    -1,
     505,    -1,   507,   508,    -1,   510,   511,    -1,   513,   514,
      -1,   516,    -1,   518,   519,    -1,    -1,   522,   523,   524,
     525,   526,   527,    -1,   529,   530,   531,    -1,   533,   534,
     535,   536,    -1,   538,   539,    -1,    -1,    -1,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,    -1,    -1,
      -1,   556,    -1,   558,   559,   560,   561,   562,   563,    -1,
     565,   566,   567,   568,   569,   570,    -1,    -1,    -1,    -1,
      -1,    -1,   577,   578,    -1,   580,    -1,    -1,   583,    -1,
      -1,    -1,   587,   588,   589,    -1,    -1,    -1,   593,    -1,
      -1,   596,   597,   598,    -1,   600,   601,   602,   603,   604,
     605,    -1,    -1,   608,   609,   610,   611,    -1,   613,   614,
      -1,    -1,   617,   618,   619,   620,    -1,   622,   623,   624,
      -1,   626,   627,   628,   629,   630,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,    -1,    -1,   642,   643,   644,
     645,    -1,   647,   648,   649,    -1,   651,   652,    -1,   654,
     655,    -1,    -1,   658,    -1,    -1,   661,    -1,   663,    -1,
     665,   666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     675,    -1,    -1,   678,   679,    -1,    -1,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,    -1,   692,    -1,    -1,
     695,    -1,    -1,   698,   699,    -1,   701,   702,   703,    -1,
      -1,   706,    -1,     5,   709,     7,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,   105,    -1,   107,    -1,    -1,   110,    -1,
     112,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
     142,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,   159,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,    -1,    -1,    -1,   267,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,   489,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,   540,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,   555,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,   639,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
     662,   663,   664,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,   105,    -1,   107,    -1,    -1,   110,    -1,
     112,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
     142,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,   159,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,    -1,    -1,    -1,   267,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,   489,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,   540,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,   555,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,   639,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
     662,   663,   664,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,   133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,   205,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,   239,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,   133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,   205,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,   239,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,   133,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,   205,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,   239,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,   436,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,   436,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,   111,
     112,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    37,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    39,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,   239,   240,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,   316,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,   406,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,   436,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    37,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,   111,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
     112,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    37,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,   300,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,   230,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    20,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,   574,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
     622,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,   137,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
     692,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      22,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    51,
      52,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    98,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,   207,   208,   209,    -1,    -1,
      -1,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,   236,    -1,   238,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,   289,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,   420,   421,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,
     432,   433,   434,    -1,    -1,   437,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,    -1,   455,   456,    -1,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,   498,    -1,   500,   501,
     502,    -1,    -1,   505,    -1,   507,   508,    -1,   510,   511,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,   523,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,   534,   535,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,   544,   545,   546,   547,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,   556,    -1,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,   588,   589,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,   598,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
     642,   643,   644,   645,    -1,   647,   648,   649,    -1,   651,
     652,    -1,   654,   655,    -1,    -1,   658,    -1,    -1,   661,
      -1,   663,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,    -1,    -1,   695,    -1,    -1,   698,   699,    -1,   701,
     702,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,   690,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,   690,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,   170,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,    -1,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,    -1,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,   200,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,   296,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    56,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    -1,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,    -1,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,   253,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,   318,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,   503,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,   517,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,   693,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,     5,   706,     7,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    19,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    45,    46,    47,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    55,    -1,    -1,    58,    59,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    67,    68,    69,    -1,    71,
      72,    73,    -1,    75,    76,    -1,    -1,    -1,    -1,    -1,
      -1,    83,    -1,    85,    -1,    87,    88,    89,    90,    -1,
      92,    93,    -1,    95,    96,    97,    -1,    99,    -1,   101,
      -1,    -1,   104,    -1,    -1,   107,    -1,    -1,   110,    -1,
      -1,   113,    -1,   115,    -1,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,   136,    -1,   138,    -1,   140,    -1,
      -1,    -1,    -1,    -1,   146,    -1,   148,   149,   150,   151,
     152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
     162,   163,    -1,    -1,    -1,   167,   168,    -1,    -1,   171,
      -1,   173,   174,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,    -1,    -1,    -1,    -1,   189,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,   198,   199,    -1,   201,
      -1,   203,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,    -1,   226,   227,    -1,   229,    -1,    -1,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,    -1,    -1,
     242,    -1,   244,    -1,    -1,    -1,   248,   249,   250,   251,
     252,    -1,    -1,    -1,   256,   257,   258,   259,   260,    -1,
      -1,   263,    -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,    -1,   286,    -1,    -1,    -1,   290,   291,
     292,    -1,    -1,   295,    -1,    -1,   298,   299,    -1,    -1,
      -1,    -1,    -1,   305,   306,    -1,   308,    -1,   310,    -1,
     312,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,    -1,   348,   349,   350,    -1,
      -1,    -1,    -1,    -1,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,    -1,   368,    -1,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,    -1,    -1,   399,   400,   401,
     402,    -1,    -1,    -1,    -1,   407,    -1,    -1,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   433,   434,    -1,    -1,    -1,    -1,   439,    -1,   441,
     442,   443,    -1,    -1,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,    -1,   471,
     472,   473,   474,    -1,    -1,   477,    -1,   479,    -1,    -1,
      -1,   483,   484,    -1,   486,   487,   488,    -1,    -1,   491,
     492,   493,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
     502,    -1,    -1,   505,    -1,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,   516,    -1,   518,   519,    -1,    -1,
     522,    -1,   524,   525,   526,   527,    -1,   529,   530,   531,
      -1,   533,    -1,   535,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,   550,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,   559,    -1,    -1,
     562,   563,    -1,   565,    -1,   567,    -1,   569,   570,    -1,
      -1,    -1,    -1,    -1,    -1,   577,   578,    -1,   580,    -1,
      -1,   583,    -1,    -1,    -1,   587,    -1,   589,    -1,    -1,
      -1,   593,    -1,    -1,    -1,   597,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,    -1,   608,   609,   610,   611,
      -1,   613,   614,    -1,    -1,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,    -1,   627,   628,   629,   630,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,   645,    -1,    -1,   648,   649,    -1,   651,
     652,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,   661,
      -1,    -1,    -1,   665,   666,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   675,    -1,    -1,   678,   679,    -1,    -1,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   698,    -1,    -1,   701,
      -1,   703,    -1,    -1,   706
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    16,    34,    38,    52,    53,    56,    60,    65,
      66,    86,   105,   132,   142,   144,   145,   157,   159,   172,
     188,   207,   212,   225,   228,   234,   238,   253,   267,   269,
     288,   307,   311,   318,   419,   438,   440,   458,   470,   496,
     499,   501,   503,   504,   507,   509,   520,   523,   534,   549,
     555,   556,   557,   588,   596,   642,   655,   659,   662,   667,
     693,   694,   702,   708,   732,   735,   736,   737,   738,   739,
     742,   749,   751,   764,   811,   853,   860,   861,   877,   878,
     903,   924,   942,  1007,  1066,  1110,  1200,  1247,  1250,  1260,
    1265,  1271,  1284,  1287,  1293,  1296,  1301,  1308,  1320,  1552,
    1554,  1566,  1569,  1595,  1603,  1616,  1623,  1637,  1641,  1642,
    1646,  1660,  1668,  1672,  1677,  1678,  1679,  1711,  1712,  1750,
    1781,  1788,  1790,  1797,  1800,  1837,  1839,  1844,  1845,  1846,
    1847,  1901,  1910,  1911,  1912,    12,   118,   138,   218,   253,
     312,   464,   543,   547,   614,  1201,  1564,  1872,  1873,  1874,
    1875,   213,   308,   403,  1295,  1644,   394,   395,  1369,  1838,
     622,  1733,   261,     5,     7,     8,     9,    10,    11,    12,
      15,    19,    22,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    34,    38,    42,    45,    46,    47,    49,    51,
      52,    55,    58,    59,    61,    62,    64,    65,    67,    68,
      69,    70,    71,    72,    73,    75,    76,    77,    78,    79,
      80,    81,    83,    84,    85,    86,    87,    88,    89,    90,
      92,    93,    95,    96,    97,    98,    99,   101,   104,   107,
     110,   113,   115,   117,   120,   121,   122,   124,   126,   131,
     132,   136,   138,   140,   146,   148,   149,   150,   151,   152,
     157,   161,   162,   163,   167,   168,   170,   171,   173,   174,
     175,   177,   178,   180,   181,   182,   183,   184,   185,   187,
     188,   189,   192,   193,   194,   195,   198,   199,   201,   203,
     204,   207,   208,   209,   213,   214,   216,   218,   220,   221,
     222,   223,   224,   225,   226,   227,   229,   234,   235,   236,
     238,   242,   243,   244,   248,   249,   250,   251,   252,   256,
     257,   258,   259,   260,   263,   268,   269,   274,   276,   277,
     279,   280,   281,   284,   286,   289,   290,   291,   292,   295,
     298,   299,   305,   306,   308,   310,   312,   313,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   338,   339,   340,   341,   343,
     344,   345,   346,   348,   349,   350,   356,   357,   358,   359,
     360,   361,   364,   365,   366,   368,   370,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   384,   387,   388,
     389,   390,   391,   392,   393,   396,   398,   399,   400,   401,
     402,   407,   410,   411,   412,   413,   415,   416,   417,   418,
     420,   421,   427,   432,   433,   434,   437,   439,   441,   442,
     443,   447,   448,   449,   450,   451,   452,   453,   455,   456,
     458,   459,   460,   461,   463,   465,   466,   467,   468,   469,
     471,   472,   473,   474,   477,   479,   483,   484,   486,   487,
     488,   491,   492,   493,   494,   495,   497,   498,   500,   501,
     502,   505,   507,   508,   510,   511,   513,   514,   516,   518,
     519,   522,   523,   524,   525,   526,   527,   529,   530,   531,
     533,   534,   535,   536,   538,   539,   543,   544,   545,   546,
     547,   550,   552,   556,   558,   559,   560,   561,   562,   563,
     565,   566,   567,   568,   569,   570,   577,   578,   580,   583,
     587,   588,   589,   593,   596,   597,   598,   600,   601,   602,
     603,   604,   605,   608,   609,   610,   611,   613,   614,   617,
     618,   619,   620,   623,   624,   626,   627,   628,   629,   630,
     636,   637,   638,   642,   643,   644,   645,   647,   648,   649,
     651,   652,   654,   655,   658,   661,   663,   665,   666,   675,
     678,   679,   683,   684,   685,   686,   687,   688,   689,   692,
     695,   698,   699,   701,   702,   703,   706,   805,  1732,  1737,
    1744,  1745,  1746,  1747,  1748,  1749,   904,   338,   613,   616,
    1784,  1288,   698,  1841,   312,   426,   614,  1604,  1553,   118,
     182,   218,   261,   312,   464,   522,   547,   614,   619,   639,
     665,   684,  1565,   257,  1737,  1295,   945,   110,   862,   804,
     728,  1729,  1731,  1737,   750,   879,  1567,   450,   568,  1673,
     121,   261,   703,  1684,  1784,   943,  1295,  1111,  1008,  1737,
    1669,   534,   665,  1784,  1295,   947,  1570,  1661,   574,   850,
     854,   855,  1737,   804,  1841,  1737,   589,  1751,  1624,   854,
      13,   560,   636,    13,   560,   616,  1618,   450,   568,  1789,
    1596,  1737,   944,   485,  1714,    34,    86,   170,   458,   484,
     523,   588,  1904,     0,   172,   733,   458,   118,   217,   522,
     571,   657,   665,   780,  1178,  1179,  1180,  1565,  1872,  1873,
    1874,  1875,   194,   213,   441,  1643,  1644,  1729,  1737,   540,
     672,   721,  1321,  1860,   709,  1215,  1737,   709,   805,   190,
     230,   805,  1564,   300,  1733,  1737,  1740,   950,   951,   954,
     977,  1737,  1239,  1240,   665,   582,  1357,  1876,  1877,  1872,
     709,  1784,  1320,  1566,  1569,  1595,  1603,  1640,    25,  1841,
    1302,   812,   728,   690,   905,   906,   909,   913,   762,   763,
    1733,  1261,   684,  1285,  1784,    18,  1842,   230,   504,   952,
     977,   255,   319,   473,  1614,  1615,     8,    22,    31,    37,
      39,    40,    41,    43,    56,    57,    62,    63,    72,    75,
      77,    78,    79,    80,    81,    98,   102,   103,   108,   109,
     111,   112,   116,   118,   123,   124,   125,   126,   131,   133,
     136,   137,   143,   190,   196,   197,   202,   205,   213,   222,
     224,   231,   232,   233,   239,   240,   248,   253,   267,   271,
     291,   292,   297,   305,   316,   342,   347,   352,   360,   364,
     367,   371,   372,   373,   374,   375,   383,   388,   389,   394,
     395,   397,   404,   405,   406,   409,   413,   436,   443,   444,
     445,   446,   451,   452,   454,   461,   471,   476,   503,   504,
     519,   521,   527,   530,   532,   538,   550,   594,   595,   602,
     606,   607,   612,   622,   627,   628,   629,   630,   640,   641,
     642,   646,   650,   665,   669,   670,   671,   675,   680,   682,
     688,   689,   695,   706,   714,   715,   720,   721,   724,   725,
     728,   729,  1363,  1364,  1365,  1366,  1370,  1381,  1382,  1383,
    1384,  1385,  1386,  1387,  1395,  1399,  1400,  1401,  1402,  1403,
    1405,  1408,  1426,  1703,  1706,  1708,  1709,  1710,  1724,  1727,
    1732,  1737,  1564,  1564,  1564,   253,  1563,   230,  1564,  1564,
    1564,   977,  1564,  1564,  1564,   543,  1784,   740,   741,   743,
    1647,   927,  1737,   148,    13,    14,   105,   112,   142,   159,
     182,   188,   201,   228,   261,   267,   311,   465,   469,   489,
     497,   505,   540,   555,   556,   608,   639,   662,   664,  1740,
    1801,  1805,  1806,  1808,  1810,  1811,  1737,   418,    70,   480,
     728,  1740,   898,   899,   139,   241,   319,  1572,  1737,  1733,
     235,   567,  1674,   272,  1680,  1782,    34,    70,   200,   282,
     296,   418,   517,   829,   875,   876,   877,   880,   881,   882,
     884,   885,   893,   894,   895,   896,   917,   919,   920,   922,
     929,   935,  1732,  1739,  1746,  1784,  1363,    50,  1009,   215,
      37,   338,  1629,  1670,  1737,   804,  1297,  1266,   829,   932,
     139,   319,  1573,  1602,   338,   472,   560,  1662,  1663,   675,
     851,   549,   856,     7,    13,   469,  1798,  1799,  1806,  1808,
     634,  1842,  1752,    62,    63,   137,   226,   308,   379,   443,
     522,   546,   636,   729,  1143,  1737,  1755,  1767,  1771,    13,
      26,    38,    62,    75,   101,   103,   105,   119,   174,   178,
     181,   216,   218,   226,   229,   260,   261,   285,   308,   338,
     418,   449,   463,   464,   467,   468,   492,   546,   560,   597,
     616,   687,  1143,  1177,  1625,  1629,  1630,  1632,  1641,  1732,
    1768,   856,   561,   762,   480,   694,  1251,  1252,  1253,   561,
     762,  1617,  1737,  1733,  1784,  1602,   930,  1363,  1713,    39,
     239,   240,   622,  1704,  1705,  1734,  1903,  1903,  1903,   213,
    1902,  1903,  1903,   727,  1737,   253,  1065,  1065,  1065,   547,
     788,   261,   261,   261,   543,   616,   182,   464,   639,  1876,
      11,   218,    11,   218,  1872,  1639,  1638,  1344,  1345,  1861,
     721,  1323,  1324,  1325,   186,   270,   656,  1848,  1850,  1854,
    1855,   358,   620,   649,  1203,   663,   111,  1740,  1741,  1742,
    1805,  1205,   956,   978,  1737,  1204,  1210,  1209,     6,    60,
     159,   395,   479,   481,   979,   616,   255,   417,  1241,  1242,
    1243,   804,   539,   182,   684,  1876,  1740,  1272,   925,  1303,
    1304,  1305,  1306,  1729,   721,   813,  1737,   914,   165,   916,
    1363,   913,   634,  1558,  1559,  1729,  1286,  1558,    59,   398,
     398,   496,  1843,   955,   978,     6,   215,  1605,  1611,  1612,
    1737,  1614,   721,   721,   721,  1382,   721,   721,   721,   690,
    1363,  1429,  1430,   721,   721,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   721,   721,  1362,  1362,
    1362,   721,  1361,   721,   721,   721,   721,   622,   721,   721,
     721,   721,   721,   721,   721,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,  1363,   721,   721,   721,
     721,   721,  1427,  1428,  1724,  1737,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   675,   721,  1363,  1361,
     721,   721,   721,   721,   721,   721,   721,   721,   721,   721,
     675,   721,   721,   721,   721,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   721,  1361,   622,   721,
     721,   721,   622,   721,   721,   721,   622,  1705,   721,  1362,
    1361,  1361,   721,   721,   721,   721,   721,   721,   721,  1382,
    1382,  1382,  1112,  1363,  1866,  1867,  1737,  1737,  1409,    17,
      18,   423,   426,   704,  1367,  1368,   176,   219,   278,   293,
     385,   709,   710,   711,  1371,    35,   154,   275,   301,   371,
     490,   553,   554,   569,   712,   713,   714,   715,   716,   717,
     718,   719,  1369,  1382,    74,   425,   431,   431,   695,   723,
    1734,   721,   728,  1737,   805,  1737,   190,  1737,   978,   805,
     804,  1740,   988,  1630,   805,   804,  1556,  1564,  1564,   744,
    1363,   668,   745,    37,   146,   174,   177,   220,   244,   313,
     338,   463,   472,   491,   510,   560,   563,   593,  1648,  1653,
    1654,  1732,  1784,   946,   275,   928,    91,   729,   863,   864,
     865,   866,  1737,   463,  1809,   525,   525,   614,   619,   665,
     684,  1362,   421,  1813,   613,   414,  1815,    69,   560,  1812,
     119,   684,  1814,   634,   414,   723,    20,   709,  1487,  1488,
    1791,  1737,   170,  1363,   255,  1238,   568,    92,   472,  1675,
      52,    90,   319,  1686,  1729,  1785,  1786,   923,  1737,   215,
     230,   388,  1737,  1739,  1739,  1737,   883,   170,   876,   727,
     736,   897,  1737,   212,   318,   503,   693,    34,   730,  1294,
    1010,   740,   313,  1298,  1741,  1743,  1299,  1300,  1729,   684,
    1263,  1784,   661,   272,  1560,  1574,  1575,  1729,  1665,    52,
    1664,   723,  1734,    58,    68,    83,    95,    96,    97,   115,
     359,   378,   536,   601,   618,   857,   859,   421,  1809,   414,
     215,   414,   534,  1737,  1843,   137,  1737,  1754,  1770,  1772,
     549,   522,   728,    37,   137,   551,   709,  1144,  1145,  1583,
    1740,   212,  1583,  1778,  1740,  1757,   729,  1740,    37,   137,
    1147,  1148,  1740,   728,  1583,  1758,  1756,   561,   181,   301,
     691,  1636,   721,   118,   182,   218,   464,   543,   616,   639,
     665,   684,  1636,    13,  1075,  1740,   302,  1520,  1521,  1522,
     215,   275,  1631,  1633,    73,   593,   212,   593,   613,   568,
      73,   593,    13,    45,    99,   104,   277,   357,   434,   570,
     610,  1619,  1620,  1621,   762,   244,   593,   763,   593,  1520,
    1636,  1633,   313,   173,    76,   466,   613,   638,   212,  1356,
     593,   679,  1254,  1255,  1254,   416,   700,    93,   723,  1254,
    1254,  1559,  1238,   157,  1715,  1716,  1720,  1737,   723,   415,
    1906,   609,  1907,   709,   283,   513,  1905,   172,   734,  1369,
    1737,   804,   804,  1065,  1065,  1065,  1065,  1065,  1065,   775,
     774,   773,   684,   218,   778,   218,   776,  1876,  1640,  1645,
    1704,  1737,   215,   272,   424,  1333,  1342,  1343,  1346,  1347,
    1348,  1516,  1522,  1548,  1856,    13,   153,   241,   576,   577,
     578,   579,   580,   581,   599,  1350,  1351,  1352,  1871,   721,
    1580,  1587,  1323,   722,  1860,   540,    13,   153,  1858,  1856,
     137,  1062,  1063,  1072,  1073,  1152,   121,  1362,   729,   806,
       6,   957,   806,  1729,   420,   120,   974,   974,   974,     4,
    1729,  1243,  1741,  1742,  1743,  1821,  1825,   138,   274,   805,
    1729,   684,  1273,  1274,  1559,   830,   275,   723,   440,  1314,
    1316,  1317,   814,   815,  1363,  1363,   829,   170,   907,   752,
     194,   473,   723,  1262,  1558,    61,   194,   198,   212,   356,
     473,  1289,  1290,  1291,    59,   496,   957,   974,  1561,  1562,
    1729,  1730,  1737,   723,  1608,   728,  1613,  1363,  1363,    13,
     153,  1419,  1489,  1419,  1419,  1419,  1363,  1430,   165,   690,
     170,  1363,  1363,  1426,  1426,  1363,  1363,  1363,  1363,  1379,
    1380,  1363,  1363,  1363,  1363,   153,  1419,  1489,   722,   722,
     133,   205,   239,   316,   406,   646,   722,  1530,  1534,  1535,
     722,  1363,  1363,  1363,  1363,  1363,  1363,  1724,   722,  1866,
     127,   128,   129,   130,   131,   245,   246,   247,   248,   360,
     362,   363,   364,   372,   471,   537,   538,   688,   705,   706,
    1484,  1485,  1363,  1363,  1426,   122,   126,   627,   630,  1486,
     153,  1411,  1363,  1363,  1363,  1363,  1363,  1363,  1484,  1363,
    1426,  1729,  1363,  1426,  1428,    10,   723,   728,   153,  1419,
    1363,  1363,  1363,   153,  1419,  1363,  1363,  1426,  1426,  1426,
     212,  1729,  1363,  1363,  1363,  1363,   722,  1363,  1363,  1363,
    1426,  1366,   212,  1363,   722,  1363,  1363,  1363,  1363,  1363,
     722,   722,  1363,  1729,  1419,  1419,  1363,  1363,   153,  1419,
    1363,  1485,  1485,  1363,    48,   294,   635,  1363,  1363,   722,
    1725,  1726,  1727,  1737,  1419,  1419,  1363,  1363,  1363,  1363,
     722,   723,  1711,  1363,   728,   729,  1410,  1740,  1363,  1363,
    1363,  1365,   197,   405,   641,   658,  1369,    13,    19,  1365,
    1372,  1366,  1366,   721,  1382,  1366,  1366,  1366,  1366,   301,
    1366,  1366,   271,  1366,   271,  1366,  1366,  1366,  1366,  1366,
      35,   275,   301,   490,  1740,  1382,   721,  1407,  1501,  1737,
     721,   230,  1363,  1388,  1737,   728,   414,   988,  1804,  1806,
     401,   686,   989,   990,   174,  1743,  1820,  1558,  1557,  1555,
     745,   746,   313,   313,   313,   313,    52,   313,   762,   313,
     723,  1356,  1649,   157,   519,   926,   126,   627,   630,   858,
     868,  1408,  1708,  1724,  1740,   723,   709,   613,   721,  1826,
    1743,  1826,  1826,  1826,  1821,   218,   464,   616,  1807,   182,
     188,   201,   465,   497,   505,   556,   608,  1811,  1732,  1736,
    1744,   203,   388,  1737,  1792,  1793,   253,   625,  1574,  1733,
     249,   665,  1363,  1676,  1309,   308,  1685,  1488,   402,   686,
     723,  1783,   830,  1737,   388,   215,   272,   721,   892,  1363,
     318,   727,   723,   938,   936,   941,   937,   921,  1558,   303,
     306,   475,  1011,  1014,    33,   634,  1671,   723,   634,   723,
    1783,  1264,  1558,   933,  1575,  1571,   440,  1444,  1445,   634,
    1667,   762,  1663,   723,   709,   212,   723,  1743,  1742,  1822,
     218,   464,  1807,  1737,   728,   728,   723,  1753,  1583,  1806,
    1737,    74,  1150,  1363,  1743,   413,   443,   622,  1779,   279,
     480,  1773,  1774,  1775,  1776,   226,   308,   546,  1769,  1583,
    1737,    13,    37,   137,   414,  1363,  1780,   636,  1759,  1770,
     723,  1761,   593,   275,  1634,  1356,  1356,   716,  1065,   805,
     805,   805,  1729,  1729,   805,  1743,  1729,   313,   376,   593,
    1628,  1628,   316,   406,   528,   646,  1523,  1524,  1706,  1732,
    1738,  1745,  1636,  1737,   805,  1636,  1742,  1631,  1636,  1733,
     805,  1636,   276,   611,   199,   212,  1622,   723,   181,   593,
    1631,  1729,  1633,  1631,  1631,  1363,  1636,  1636,  1636,  1249,
     495,   583,  1256,  1257,  1248,   565,  1253,  1783,   721,   725,
    1431,  1432,  1433,  1434,  1435,  1446,  1447,  1448,  1449,   931,
     723,   721,  1718,  1704,   448,  1908,  1740,   190,   770,  1804,
    1821,  1740,  1737,  1737,  1737,  1729,  1729,   792,  1357,  1065,
    1898,  1357,  1886,  1065,   779,   781,   783,  1065,  1892,  1895,
     777,   781,  1065,   684,   160,  1349,  1432,   161,   429,  1543,
    1544,  1549,    50,   212,   311,  1353,   464,  1538,  1548,  1856,
    1353,   691,  1490,  1520,  1346,  1347,   716,  1354,  1355,  1357,
    1352,  1588,   723,   722,  1850,  1854,  1344,  1851,  1063,    74,
    1143,   149,  1740,    84,    98,   289,   369,   398,   478,   582,
     808,   810,   486,   651,   975,   976,   263,   971,   972,   973,
     980,   988,   990,  1211,   721,  1733,    27,   346,   965,   966,
     967,   980,   981,   982,   988,   990,   958,   959,   965,  1783,
     251,   506,   723,  1829,  1208,  1207,  1729,   723,   447,  1275,
     135,   828,   831,   137,  1307,  1737,  1305,  1729,  1006,  1316,
     261,   287,  1175,  1318,   722,   723,   915,    56,   690,   908,
     910,   156,   254,   256,   320,   321,   323,   324,   325,   326,
     327,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     339,   340,   341,   493,   494,   753,   754,   761,  1559,   212,
    1292,   663,  1290,    84,   392,   487,   652,   968,   969,   970,
     980,   984,   985,   986,   987,   988,   990,   667,   953,   723,
    1609,  1444,   728,  1613,  1612,   215,   716,  1737,   723,   722,
    1419,   722,  1420,   722,   722,   722,   625,   170,  1363,  1363,
      20,   722,   668,   722,   722,   722,   723,   722,   723,   722,
     723,   723,   723,   723,   668,   723,  1396,   722,   716,   722,
     723,   723,   723,   722,   722,   723,   722,   722,   215,   722,
     723,   722,   723,  1398,   722,   723,   722,   723,   722,   723,
     723,   723,   715,   722,   723,   722,   723,   722,   722,   721,
    1724,  1737,  1419,   722,   722,   722,   722,  1419,   722,   723,
     722,   722,   722,   722,  1729,   722,   722,   723,   722,   722,
     722,   722,   723,   722,   275,  1729,   722,   723,   723,   722,
     723,   723,   722,   723,   722,   722,   723,   215,   723,  1419,
     722,   722,   723,   723,   723,   722,   215,  1363,   215,  1363,
     215,  1363,   215,   722,   723,   722,   728,   722,   722,   722,
     723,    20,   299,   723,  1166,   723,   722,  1426,   540,   721,
    1859,  1860,  1862,  1863,  1864,  1865,   726,  1737,  1769,   551,
     197,   405,   641,   658,   721,    18,  1363,  1866,   180,  1494,
    1366,  1363,  1363,  1366,   721,  1382,  1366,  1502,   440,  1504,
     721,  1357,  1392,  1393,  1394,   721,   728,  1737,  1729,   989,
     723,  1583,  1584,   723,    54,   512,  1244,  1558,  1558,   137,
     255,   747,   748,  1363,  1591,   141,  1656,   762,  1654,  1558,
    1655,   829,   721,   886,   889,   866,   869,   870,   865,   407,
     530,   867,  1737,  1827,  1828,   634,   694,  1803,   716,  1729,
    1737,  1819,  1819,  1819,   203,   219,   290,   293,   388,   460,
     709,   710,   711,  1794,  1796,  1490,   900,  1568,  1743,  1310,
    1311,  1312,  1313,  1729,   262,   319,   480,   700,  1787,   239,
     715,  1527,  1529,  1786,   828,   272,   527,  1737,   886,   887,
     891,  1737,   927,   929,   932,   930,   830,  1783,    76,  1013,
    1019,   721,  1019,  1020,   441,  1022,   236,   287,  1363,  1733,
    1743,  1743,  1300,   634,  1558,   194,   473,   666,  1267,  1268,
    1269,  1363,   549,   672,   675,   721,   998,  1576,  1579,  1711,
     721,  1529,    13,  1666,   859,   858,  1806,   228,   215,   723,
    1819,  1819,  1819,  1737,  1737,  1770,   212,  1780,   212,  1583,
     137,  1149,  1151,  1740,  1583,   721,   721,   299,   416,   700,
     723,   723,   728,   728,   728,  1772,  1363,  1583,  1773,  1760,
    1762,  1763,  1733,   215,  1635,  1733,  1363,   722,  1737,   185,
     528,   412,   723,   728,   804,  1636,   472,  1520,  1621,  1634,
    1636,  1631,  1729,  1636,  1636,   723,   661,  1258,  1466,  1737,
     106,   264,   283,   297,   382,   521,   599,  1442,  1443,   549,
     723,  1729,   829,  1716,  1719,  1737,  1717,   723,   212,  1909,
    1061,  1062,   694,  1802,  1829,   789,   644,   668,  1188,   414,
     414,   766,   765,  1065,   805,  1065,  1729,   782,   784,  1892,
    1895,   805,  1737,   782,  1065,   622,  1735,  1735,   729,  1545,
    1546,  1547,  1737,  1740,  1517,   662,   275,  1737,  1538,  1548,
    1334,  1491,   230,  1495,  1515,  1516,   723,  1363,  1722,  1737,
    1589,  1590,  1591,  1587,  1339,  1342,  1347,   540,   721,  1322,
    1860,  1584,  1584,   380,  1733,   582,   582,   582,   582,   582,
     539,  1733,  1733,  1584,   723,   973,    52,   117,   259,   351,
     365,   390,   391,   398,   399,   400,   508,   588,   786,   787,
     118,   243,   432,   443,   453,   566,   665,   790,   791,  1584,
    1584,   723,   967,   960,   961,   980,   981,   982,  1202,    50,
     683,   694,  1823,    67,   281,   393,   585,   603,   701,  1817,
    1818,  1825,   694,  1832,   414,   800,  1212,   721,  1878,  1206,
    1274,   212,   100,   191,   837,   838,   839,   846,   872,   873,
    1737,   170,   876,   727,  1315,   721,  1363,   625,   911,   910,
     709,   709,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   723,   663,  1584,  1584,  1584,  1584,
     723,   970,   312,   195,   962,   963,   964,   980,   981,   982,
     983,   986,   987,   988,   990,  1562,  1737,   668,  1606,  1737,
    1432,   728,  1613,   271,  1363,   722,  1363,  1363,   625,    37,
      63,   122,   126,   134,   155,   273,   384,   558,   630,   660,
    1421,  1423,  1424,  1144,  1380,  1363,  1379,  1426,  1363,  1363,
    1144,  1421,  1426,   722,   271,  1363,   271,  1363,  1363,  1363,
    1363,  1426,  1363,  1363,  1363,  1363,  1363,  1363,  1363,  1363,
    1366,   722,   722,  1363,  1363,  1363,  1363,  1363,  1363,  1363,
    1426,   316,   714,  1527,  1531,   271,  1363,  1363,  1363,   722,
    1363,  1363,  1363,  1363,   215,  1363,   215,  1363,   215,  1363,
    1363,  1737,  1363,    37,    63,  1161,  1162,  1163,  1164,  1165,
    1530,  1529,   722,  1363,  1455,  1456,  1457,   721,  1330,  1331,
    1332,  1353,  1856,  1454,  1848,  1857,  1868,  1740,  1363,  1866,
    1365,   722,   723,   722,  1382,  1484,  1484,    18,  1363,  1866,
    1494,  1503,  1737,    50,   722,  1404,  1363,   722,   723,  1425,
    1426,  1737,  1783,  1806,  1074,  1740,  1743,  1783,   723,   709,
     212,   694,  1650,  1651,   170,   843,   844,   890,   158,   709,
     723,   722,   723,  1821,     7,   728,   728,   634,   634,   634,
    1795,  1520,   829,  1576,   723,  1314,  1316,  1735,   700,   308,
      90,   133,   205,   316,   406,   646,   170,   272,   888,   722,
     723,   939,   918,   934,  1739,   934,   934,   828,   721,  1020,
    1357,  1530,   605,  1023,  1012,    12,  1015,   634,  1729,   215,
    1270,  1268,   170,  1577,  1580,  1580,   722,  1054,  1578,  1711,
    1721,  1722,  1725,  1737,   540,  1483,  1737,   709,   421,  1820,
    1742,   215,   215,   215,   735,  1743,  1780,   622,   622,   480,
     502,   544,  1777,  1775,  1774,  1583,  1780,  1761,   723,  1765,
    1767,  1771,  1527,  1532,  1626,   178,   687,  1524,  1525,   185,
    1524,  1524,  1737,   406,  1635,  1490,  1631,  1257,   322,   761,
    1259,   540,   672,  1450,  1458,  1459,  1460,  1461,  1466,  1467,
    1867,  1431,   283,   283,   428,  1469,   297,   521,  1442,  1469,
    1431,  1598,  1599,  1725,  1433,  1444,   170,   722,   723,    20,
    1529,   361,     7,  1832,   211,    49,   236,   533,  1194,  1194,
     414,  1729,  1729,   785,   786,    28,    30,    65,    84,    92,
     121,   140,   174,   261,   268,   286,   301,   345,   366,   433,
     435,   443,   531,   543,   590,   591,   592,   597,   614,   617,
     637,   656,   721,   992,   996,  1067,  1069,  1070,  1072,  1073,
    1732,   805,  1899,  1887,   771,  1896,   516,  1729,  1550,  1740,
     723,   728,  1363,  1518,  1723,  1783,   552,  1539,  1849,  1850,
    1363,    50,   237,  1492,  1520,  1355,  1358,  1358,   728,   722,
     723,  1353,  1344,   721,  1326,  1327,  1850,  1854,  1151,  1145,
     121,   121,   138,   274,   239,   316,   406,   646,   991,  1533,
    1534,  1732,   973,  1584,    50,  1584,  1586,  1584,  1584,   351,
     365,   694,  1584,  1585,  1585,   787,  1733,  1733,  1733,  1733,
    1529,  1733,  1733,   722,   723,   991,   991,   967,   723,   961,
       6,    12,    14,    16,    60,    66,    72,   102,   150,   151,
     159,   168,   184,   210,   258,   311,   370,   419,   424,   440,
     483,   498,   499,   500,   501,   642,  1004,  1068,  1070,  1216,
    1220,  1222,  1225,  1231,  1232,  1233,  1235,  1236,  1512,   443,
     622,  1740,   622,   622,   622,    18,  1816,   343,   344,   348,
     349,   350,  1830,  1831,    88,   535,   499,  1213,  1737,  1879,
      20,  1878,    13,    76,  1276,    36,    37,    42,    44,    46,
      47,    63,   122,   126,   134,   155,   175,   204,   206,   222,
     223,   273,   284,   305,   314,   315,   317,   353,   354,   355,
     373,   374,   375,   381,   384,   408,   410,   451,   452,   482,
     527,   549,   564,   623,   627,   630,   631,   632,   633,   644,
     676,   677,   706,  1116,  1117,  1118,  1119,  1120,  1121,  1122,
    1123,  1124,  1125,  1126,  1127,  1128,  1142,   234,    91,   114,
     723,   727,   721,   462,  1480,  1481,  1482,  1737,   829,  1363,
     721,   721,   721,  1529,  1529,  1733,  1733,  1532,  1733,  1529,
    1733,  1733,  1733,  1733,  1733,  1733,  1733,  1529,  1529,  1733,
     113,   398,   562,  1709,  1733,  1529,   754,  1733,  1530,   991,
     991,   970,   230,  1584,   723,   964,   728,  1432,  1490,  1613,
    1490,  1363,   722,  1363,   721,  1133,  1134,  1134,  1134,   721,
    1130,  1131,  1133,   721,  1131,  1136,  1134,   273,  1134,   273,
     722,   722,   722,    20,  1373,   722,    20,   722,   722,   722,
    1397,  1363,   722,   723,  1363,   722,   722,   722,   723,   722,
     424,  1413,   722,   722,   723,   723,   722,   723,   722,   722,
     275,  1389,  1390,   722,   722,   722,   722,   722,   723,   722,
     722,   316,   406,   406,   722,   723,  1363,   722,   212,   722,
     722,   723,   722,   723,   723,   722,  1363,   722,  1363,   722,
    1363,   722,   722,   722,   721,  1156,  1156,    21,   144,   519,
     714,  1158,  1159,  1160,   723,   723,   722,  1347,  1869,  1870,
    1871,  1330,   722,  1860,   540,  1353,  1858,  1452,  1863,  1864,
     728,  1198,   722,  1426,  1365,   722,   723,   722,  1504,  1496,
    1723,   424,  1406,  1358,  1394,   722,  1244,   748,   721,  1652,
     480,   212,   845,   722,  1363,   889,    58,    68,    83,    95,
      96,    97,   115,   359,   378,   514,   536,   601,   618,   871,
     870,  1828,   694,  1834,   421,   716,   716,  1821,  1821,  1821,
     721,   901,   414,  1592,  1312,  1729,  1316,   255,  1319,  1681,
    1363,   887,   157,   170,  1016,  1017,  1018,  1737,  1028,  1366,
      50,   721,  1030,  1020,   709,   721,  1743,   377,   503,  1581,
    1582,  1725,   721,  1579,   722,   722,   723,   540,   728,  1055,
    1056,   722,   723,   858,   215,  1822,  1822,  1822,   722,   722,
      85,   648,   480,  1780,  1764,  1766,   133,   205,   316,   406,
     646,  1520,  1525,  1627,  1636,   709,   723,  1468,  1462,   722,
    1854,  1857,  1353,  1856,  1434,  1712,   726,   283,  1469,  1469,
    1446,   283,   414,   668,   723,  1597,  1583,  1488,   693,  1737,
     721,  1742,   121,  1729,   768,   769,  1067,  1584,  1584,  1584,
    1584,  1584,   149,  1584,  1584,   149,  1584,  1584,  1729,  1584,
    1584,  1584,  1584,  1584,  1584,  1584,  1584,  1584,  1584,   152,
     357,  1737,  1584,  1584,  1584,    94,   301,   728,  1054,  1079,
    1080,  1081,  1082,  1083,  1091,  1094,  1095,  1096,  1175,  1179,
    1180,  1728,  1737,  1002,  1003,  1004,   723,  1069,  1583,   793,
     721,   826,   805,  1878,   721,   824,   134,   273,   482,   600,
    1078,   772,  1143,  1146,  1546,  1737,   723,    21,   144,  1519,
     368,   721,  1496,  1493,   692,  1498,    20,  1359,  1733,  1737,
     716,  1737,  1591,  1335,  1343,  1346,  1347,  1326,   722,   540,
    1531,  1531,  1531,  1531,  1531,  1531,   791,   961,    82,    94,
     440,  1083,  1091,  1237,  1584,  1237,   440,  1237,   440,   440,
     634,   285,   614,    94,   211,   440,   462,  1175,  1237,   285,
     440,   614,  1584,  1237,   440,    50,  1006,   440,   442,    20,
     634,   709,  1246,   440,   440,   440,  1068,   723,  1003,  1220,
     721,  1082,   622,    20,   668,  1824,  1817,  1529,  1529,  1529,
    1709,   714,  1527,  1528,  1830,  1369,  1840,    24,   183,   794,
     634,   150,   168,   796,   722,   723,  1880,  1881,    20,    13,
     721,  1277,  1133,  1135,  1135,  1134,  1134,  1130,   457,   721,
    1130,  1130,    22,    37,    51,   654,  1143,  1153,  1154,    63,
     676,  1123,  1125,  1154,  1154,    63,   677,   677,   681,  1130,
     644,   721,   836,   721,  1134,  1134,  1134,  1154,   411,  1133,
    1134,  1150,  1130,   681,  1135,  1135,  1133,  1133,  1134,  1136,
     137,   874,   212,   212,   841,  1737,    13,  1221,  1229,  1230,
    1737,   722,   723,   912,   757,   758,  1529,   759,   760,  1529,
     755,   756,  1529,  1737,   991,   964,  1737,  1490,  1515,  1484,
     133,   316,   406,   646,  1422,   406,   406,   122,   126,   134,
     155,   206,   273,   381,   384,   482,   630,   660,  1123,  1124,
    1374,  1375,  1376,  1377,  1421,   722,  1484,  1363,  1484,  1363,
      50,   542,  1412,  1363,  1363,  1426,    46,   382,   722,   694,
    1391,  1363,   197,   641,  1529,  1537,  1484,  1363,  1363,  1363,
    1363,   722,   722,   722,  1530,   722,  1166,  1161,  1159,  1161,
    1162,  1529,  1354,  1871,   722,  1854,  1456,  1453,  1737,   722,
    1426,   424,  1505,   723,  1519,    50,   722,  1359,  1529,  1657,
    1658,   193,   311,  1320,   228,  1829,  1829,  1829,  1590,   165,
     166,   902,   162,  1319,   295,   255,   504,  1687,   829,   918,
     722,   723,  1358,  1014,   440,  1031,  1032,  1530,  1016,   723,
    1583,  1000,  1001,  1579,  1721,  1055,  1737,  1058,  1346,  1347,
    1856,  1350,  1006,  1737,  1822,  1765,  1770,  1520,  1733,   761,
    1463,  1464,  1580,  1488,  1451,  1454,  1353,  1865,  1431,  1446,
     283,   283,  1431,  1446,  1436,  1437,  1599,  1490,  1591,  1478,
    1479,  1357,   699,   767,   721,   721,  1532,  1529,  1529,  1733,
    1733,  1584,  1529,  1074,  1584,   203,   290,   398,  1077,  1529,
    1532,  1532,   137,  1529,   137,  1529,  1536,  1733,    87,    89,
     137,   163,   204,   434,   488,  1076,  1536,   137,  1529,   137,
    1529,   137,  1529,  1529,  1536,  1071,  1197,  1728,  1729,  1737,
     722,   722,   723,    66,   211,   462,   657,  1093,  1174,   489,
    1168,  1065,  1175,  1176,  1176,  1097,   728,   997,  1687,  1069,
     137,  1533,  1733,  1737,   414,   827,   807,     9,    33,   948,
      20,   825,   516,  1893,   568,  1878,  1145,  1551,  1723,  1783,
    1357,  1540,  1541,  1542,   696,   697,  1497,  1363,  1407,  1499,
    1500,  1733,  1737,   728,  1353,  1856,  1353,   722,  1850,  1854,
    1344,   253,  1065,   253,  1064,   137,  1737,  1728,  1295,  1563,
    1221,  1295,  1143,  1563,   287,  1564,   287,  1563,  1563,  1230,
     137,  1737,  1563,  1295,  1513,  1514,  1725,  1005,  1295,  1729,
    1295,  1295,  1221,     6,   159,  1233,  1079,     9,   203,  1245,
    1733,   406,   406,   459,  1363,  1363,   414,   800,   805,   414,
      84,   801,  1737,  1711,  1880,  1278,   260,   558,   660,   707,
    1132,  1199,  1704,  1132,  1132,  1153,  1144,    37,  1155,  1154,
     681,  1132,   411,   833,   834,   835,  1737,   874,  1199,  1154,
     832,   872,  1132,   584,  1129,  1154,  1155,  1154,  1155,  1132,
    1132,  1363,   840,   849,   850,  1529,   721,   842,   722,   723,
    1481,   625,   722,   723,   722,   723,   722,   723,   302,  1526,
     722,   722,   722,   722,   722,  1154,   723,  1134,  1130,    63,
    1134,   273,  1378,   722,   722,   722,   722,   722,  1414,  1723,
    1704,   302,  1415,  1416,  1417,   722,   723,   722,   368,   289,
     472,   722,   722,   723,   722,   722,   722,   722,   722,  1157,
     722,   723,  1347,  1454,   722,    50,   475,   528,  1506,  1507,
    1723,  1723,   722,   723,    18,  1659,   421,   694,  1833,  1833,
    1833,   722,   829,   898,  1593,   272,   170,  1018,   722,   236,
     287,  1033,   722,   723,   722,  1582,  1591,  1850,  1854,  1057,
    1058,  1347,  1059,  1353,  1856,  1059,  1354,  1350,  1452,  1868,
     414,  1439,  1446,  1446,   414,  1441,  1363,   721,  1515,  1476,
    1477,  1866,  1740,   721,  1195,  1196,  1737,  1195,  1733,  1733,
     721,   722,   994,   995,   993,  1081,   721,   287,   287,  1176,
    1065,  1729,  1197,  1737,  1065,  1065,   545,  1098,  1116,  1737,
      20,  1060,   535,   265,   275,   430,   820,   821,   822,   823,
     808,   809,  1840,  1900,   142,   267,   662,   949,  1880,   816,
     817,   818,   819,  1737,  1894,   807,  1733,    20,    76,  1688,
    1519,  1363,   722,   723,    20,   723,   716,  1336,  1340,  1343,
    1347,  1369,  1295,  1369,   159,   549,  1221,  1728,  1218,  1530,
    1145,  1728,  1563,  1229,  1728,  1728,   694,  1096,  1221,   723,
    1519,  1009,  1221,  1226,  1221,   722,  1737,  1484,   560,  1733,
     157,  1214,   540,   721,  1860,  1882,  1281,  1737,    13,   721,
    1279,   707,   660,   722,   723,   832,  1142,   722,   723,   722,
     874,   728,   709,   573,   575,   847,   848,   849,   852,  1369,
    1737,   817,   212,  1230,   829,   758,   760,   756,   528,  1524,
    1607,   406,  1154,   723,  1519,   722,  1418,  1524,  1363,   368,
     192,  1532,   722,  1529,  1515,  1518,   722,    35,   110,   126,
     627,   630,   647,  1508,  1509,  1708,  1519,  1519,  1658,   150,
     228,  1830,  1835,  1836,   287,   616,   212,   721,  1021,  1015,
    1034,  1737,  1032,  1059,   999,  1354,   722,  1438,   668,  1440,
     668,  1483,  1526,   210,   255,   667,  1471,  1472,  1475,  1358,
     420,  1195,   722,   723,  1519,   721,   722,  1655,  1850,  1854,
    1067,  1363,  1065,  1197,  1737,   721,  1169,   668,  1187,   644,
    1197,  1197,  1100,  1092,  1093,  1099,   728,   998,   794,   722,
     723,   819,   147,   876,   414,   722,   723,   527,   644,  1142,
    1142,  1897,  1880,   169,   179,   422,   621,  1689,  1690,   304,
    1691,  1358,  1542,  1501,  1500,  1849,  1353,   190,  1223,   190,
     137,   137,  1096,  1289,  1150,  1728,  1244,   616,  1245,  1217,
    1514,  1227,  1229,  1219,   795,   802,   803,  1344,   721,  1328,
    1329,  1848,  1852,  1854,   694,  1883,   722,   723,  1280,  1154,
    1704,   874,   834,  1154,  1737,   406,   723,   876,   214,   722,
     844,   185,   528,   515,  1610,   722,  1723,   412,   723,   722,
     722,   722,  1520,   647,  1509,  1510,  1708,   527,   456,   187,
    1511,   456,    64,   421,  1836,   662,  1729,   940,  1357,  1024,
     721,   137,   673,   674,  1035,  1849,  1465,  1488,  1363,   721,
    1363,   721,   722,  1175,  1175,  1472,   722,   721,   722,  1783,
    1196,   406,  1783,   722,  1002,   722,  1197,  1187,   644,  1170,
    1737,   342,  1171,  1194,  1084,  1194,  1086,  1087,    84,   242,
     462,   657,  1101,  1102,  1109,  1141,  1167,  1369,  1732,    28,
      74,    89,   137,   221,   405,   414,   545,  1103,  1105,  1137,
    1138,  1139,  1141,  1737,   799,   800,   822,  1357,   819,   644,
     836,   411,   875,    50,    50,   169,    50,  1690,   586,   621,
    1692,  1693,  1728,   441,   721,  1224,   271,   714,   715,   721,
    1113,  1114,  1115,  1381,  1707,  1245,  1729,  1295,  1228,  1267,
     587,   797,   876,  1337,  1346,  1347,  1856,  1328,   722,   540,
    1858,    55,    66,   308,  1737,   462,  1282,  1283,  1737,   728,
     848,   185,  1354,  1519,  1524,  1524,  1353,   209,    18,   209,
     110,   230,   398,   626,  1594,  1444,   934,  1028,   604,  1029,
    1026,  1027,  1737,  1037,   624,    84,    92,   121,   261,   345,
     366,   392,   614,  1051,  1052,  1053,  1630,  1347,  1483,  1483,
     212,  1470,  1470,   790,  1783,    84,   286,   694,  1182,  1186,
    1190,  1193,  1732,  1519,   722,  1183,  1185,  1190,  1192,   997,
    1090,  1088,  1194,   722,   723,   216,   439,   559,   414,  1172,
     721,  1085,   721,   721,  1733,   287,  1141,   287,   405,  1583,
    1149,  1140,  1583,  1115,    15,   662,   137,    20,  1139,   796,
    1888,   411,  1737,  1704,  1704,    50,  1704,    50,    50,  1693,
    1093,  1530,  1031,   721,  1709,  1709,  1112,  1006,   272,  1363,
     171,   798,  1856,  1353,  1353,   722,  1852,  1854,  1344,  1853,
      66,   421,    66,   722,   723,  1737,  1510,   527,   427,  1600,
    1601,  1725,  1682,  1358,  1530,   722,   723,   721,  1039,  1041,
    1036,  1584,  1584,   149,   149,  1584,  1584,  1584,  1584,   721,
    1046,  1053,   174,   722,   722,   230,   283,   424,  1474,  1473,
     722,   644,   668,  1181,  1184,  1189,  1190,  1191,  1733,  1584,
     437,  1234,  1235,  1236,  1193,  1583,  1234,  1192,   721,   721,
    1089,  1737,   142,   662,  1195,   721,  1195,  1195,   137,  1533,
    1733,  1737,  1737,   397,   675,  1113,   801,  1729,  1737,   728,
    1704,  1704,  1704,   722,  1363,   722,   721,  1363,  1353,  1338,
    1341,  1346,  1347,  1856,  1882,   421,   421,  1283,   723,  1583,
    1146,   722,  1025,  1027,   721,  1040,  1041,  1042,   351,  1038,
    1041,  1733,  1733,  1584,  1584,  1533,  1533,  1530,  1740,   605,
    1047,  1048,  1584,    50,    50,   721,   721,  1194,  1194,  1234,
    1191,  1529,  1732,  1236,  1235,   137,  1533,  1733,  1737,  1195,
    1195,   721,    54,   398,   512,   549,  1173,  1173,   722,  1195,
     722,   722,   721,  1360,  1104,   157,   212,   728,  1737,   723,
    1031,  1852,  1353,  1856,  1601,  1591,  1683,  1029,   722,   723,
     351,  1044,  1045,  1366,  1733,  1733,  1049,   722,   723,  1074,
    1480,  1482,   722,   722,  1195,     5,   137,   405,   414,   414,
    1181,   722,  1182,  1183,   722,  1530,   447,   598,   685,  1106,
     802,  1357,  1737,   728,  1363,   722,   528,  1694,  1041,   723,
    1043,  1050,  1740,  1048,   722,   722,  1168,  1181,   722,   662,
     142,  1181,   722,  1107,  1108,  1109,  1889,  1737,   251,  1688,
    1045,   722,  1051,  1181,  1173,  1173,  1109,   164,    50,  1691,
     527,  1704,   255,  1695,  1890,   406,   721,  1697,   208,   455,
    1884,  1885,   304,   528,  1696,   722,   729,  1698,  1699,  1725,
     549,  1700,  1740,  1891,  1740,   722,   723,  1701,  1702,  1725,
     876,  1699,   723,  1583,  1702,  1357,  1591,  1358
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   731,   732,   733,   732,   732,   734,   734,   735,   735,
     735,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   737,   738,   738,
     739,   741,   740,   743,   742,   744,   742,   745,   746,   745,
     747,   747,   748,   750,   749,   752,   751,   753,   753,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   755,
     755,   755,   756,   757,   757,   757,   758,   759,   759,   759,
     760,   761,   761,   761,   761,   761,   761,   761,   762,   762,
     763,   765,   764,   766,   764,   767,   764,   768,   764,   769,
     764,   770,   764,   771,   764,   772,   764,   773,   764,   774,
     764,   775,   764,   776,   764,   777,   764,   778,   764,   779,
     764,   764,   764,   764,   764,   780,   764,   781,   782,   783,
     783,   784,   784,   785,   785,   786,   786,   787,   787,   787,
     787,   787,   787,   787,   787,   787,   787,   787,   787,   787,
     787,   789,   788,   790,   790,   791,   791,   791,   791,   791,
     791,   791,   793,   792,   795,   794,   794,   796,   796,   796,
     796,   797,   797,   798,   798,   799,   799,   800,   801,   801,
     803,   802,   804,   805,   805,   806,   806,   807,   807,   808,
     808,   808,   808,   808,   808,   808,   809,   809,   810,   810,
     812,   811,   813,   813,   814,   814,   815,   815,   816,   816,
     817,   817,   818,   819,   819,   819,   819,   819,   819,   820,
     820,   821,   821,   822,   823,   823,   823,   823,   825,   824,
     827,   826,   828,   828,   829,   829,   830,   830,   831,   832,
     832,   832,   833,   834,   835,   835,   836,   837,   838,   838,
     838,   838,   839,   839,   840,   839,   841,   839,   842,   842,
     843,   845,   844,   846,   846,   847,   847,   848,   849,   849,
     850,   851,   851,   852,   852,   852,   852,   852,   853,   854,
     854,   855,   855,   856,   856,   857,   857,   858,   858,   858,
     859,   859,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   860,   861,   862,   862,   863,   863,   864,   864,
     865,   866,   866,   867,   867,   868,   869,   869,   870,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   872,   873,   873,   874,   874,   875,   875,   875,
     875,   875,   876,   876,   876,   876,   876,   876,   876,   877,
     877,   877,   877,   879,   878,   881,   880,   883,   882,   884,
     885,   886,   888,   887,   890,   889,   891,   891,   892,   892,
     893,   894,   894,   894,   895,   895,   896,   897,   897,   899,
     900,   901,   898,   902,   902,   902,   904,   903,   906,   907,
     905,   905,   908,   908,   909,   909,   911,   912,   910,   914,
     915,   913,   916,   916,   917,   918,   918,   919,   921,   920,
     923,   922,   925,   924,   926,   926,   927,   928,   928,   928,
     929,   931,   930,   933,   932,   934,   936,   935,   937,   935,
     938,   939,   940,   935,   941,   935,   943,   942,   944,   942,
     945,   946,   942,   947,   942,   948,   948,   949,   949,   949,
     950,   951,   952,   953,   953,   954,   954,   955,   956,   957,
     957,   959,   958,   960,   960,   960,   961,   961,   961,   962,
     963,   963,   963,   964,   964,   964,   964,   964,   964,   964,
     964,   965,   966,   966,   966,   967,   967,   967,   967,   967,
     968,   969,   969,   969,   970,   970,   970,   970,   970,   970,
     970,   971,   972,   972,   972,   973,   973,   973,   974,   975,
     976,   977,   978,   979,   979,   979,   980,   981,   982,   983,
     984,   985,   986,   987,   988,   989,   989,   990,   990,   991,
     991,   993,   992,   992,   992,   994,   992,   995,   992,   992,
     996,   996,   997,   997,   999,   998,   998,   998,  1000,   998,
    1001,   998,  1002,  1003,  1003,  1005,  1004,  1006,  1008,  1007,
    1010,  1009,  1011,  1012,  1011,  1011,  1011,  1013,  1011,  1011,
    1014,  1014,  1015,  1015,  1016,  1016,  1017,  1017,  1018,  1019,
    1020,  1021,  1022,  1022,  1023,  1024,  1023,  1025,  1023,  1026,
    1026,  1027,  1028,  1029,  1029,  1030,  1030,  1031,  1031,  1033,
    1032,  1034,  1035,  1036,  1035,  1037,  1035,  1035,  1038,  1038,
    1039,  1039,  1040,  1040,  1042,  1043,  1041,  1044,  1044,  1045,
    1045,  1046,  1046,  1047,  1047,  1049,  1048,  1050,  1051,  1051,
    1052,  1052,  1053,  1053,  1053,  1053,  1053,  1053,  1053,  1053,
    1053,  1054,  1056,  1055,  1057,  1057,  1058,  1058,  1059,  1060,
    1060,  1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,
    1065,  1066,  1066,  1067,  1067,  1068,  1068,  1069,  1069,  1069,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1071,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1072,  1073,
    1074,  1075,  1076,  1076,  1076,  1076,  1076,  1076,  1076,  1077,
    1077,  1077,  1078,  1078,  1078,  1078,  1079,  1080,  1080,  1081,
    1081,  1081,  1082,  1082,  1084,  1083,  1085,  1083,  1086,  1083,
    1087,  1083,  1088,  1083,  1089,  1083,  1090,  1083,  1091,  1092,
    1092,  1093,  1094,  1094,  1095,  1097,  1096,  1099,  1098,  1100,
    1098,  1101,  1101,  1102,  1102,  1103,  1104,  1103,  1105,  1105,
    1106,  1106,  1106,  1106,  1107,  1107,  1108,  1108,  1109,  1109,
    1109,  1109,  1111,  1110,  1112,  1112,  1112,  1113,  1114,  1114,
    1115,  1115,  1116,  1116,  1116,  1116,  1116,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1118,  1118,  1118,  1118,
    1118,  1118,  1119,  1119,  1119,  1119,  1119,  1120,  1120,  1120,
    1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,
    1121,  1121,  1122,  1122,  1122,  1122,  1122,  1122,  1122,  1122,
    1123,  1124,  1124,  1125,  1125,  1126,  1126,  1126,  1126,  1126,
    1127,  1127,  1127,  1127,  1127,  1128,  1128,  1128,  1129,  1129,
    1130,  1130,  1130,  1131,  1132,  1132,  1132,  1132,  1132,  1132,
    1133,  1133,  1133,  1133,  1134,  1134,  1135,  1135,  1136,  1136,
    1137,  1137,  1138,  1138,  1139,  1139,  1139,  1139,  1139,  1139,
    1139,  1139,  1140,  1140,  1141,  1141,  1141,  1141,  1141,  1141,
    1141,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,
    1147,  1147,  1148,  1148,  1149,  1150,  1150,  1151,  1151,  1152,
    1152,  1153,  1153,  1153,  1154,  1154,  1154,  1154,  1154,  1155,
    1155,  1157,  1156,  1158,  1158,  1159,  1160,  1160,  1160,  1160,
    1161,  1162,  1163,  1163,  1164,  1165,  1165,  1166,  1166,  1167,
    1167,  1168,  1169,  1169,  1170,  1170,  1171,  1171,  1171,  1171,
    1172,  1172,  1172,  1172,  1172,  1173,  1173,  1173,  1173,  1173,
    1174,  1174,  1175,  1175,  1176,  1176,  1177,  1177,  1177,  1178,
    1178,  1179,  1180,  1181,  1181,  1182,  1182,  1183,  1183,  1184,
    1184,  1185,  1185,  1186,  1186,  1187,  1187,  1188,  1188,  1188,
    1189,  1189,  1190,  1190,  1190,  1190,  1190,  1190,  1191,  1191,
    1192,  1193,  1193,  1194,  1194,  1194,  1195,  1195,  1196,  1196,
    1197,  1197,  1198,  1198,  1199,  1199,  1201,  1202,  1200,  1203,
    1200,  1200,  1204,  1200,  1205,  1200,  1206,  1200,  1207,  1200,
    1208,  1200,  1200,  1200,  1200,  1200,  1209,  1200,  1200,  1210,
    1211,  1200,  1212,  1212,  1212,  1212,  1213,  1213,  1214,  1214,
    1215,  1215,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,
    1216,  1216,  1217,  1216,  1216,  1218,  1216,  1219,  1216,  1216,
    1216,  1216,  1216,  1220,  1221,  1221,  1223,  1222,  1224,  1224,
    1224,  1226,  1225,  1227,  1228,  1227,  1229,  1229,  1230,  1231,
    1231,  1232,  1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,
    1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,
    1233,  1233,  1233,  1233,  1233,  1234,  1234,  1234,  1234,  1234,
    1235,  1235,  1236,  1236,  1237,  1237,  1238,  1238,  1240,  1239,
    1241,  1241,  1242,  1242,  1243,  1243,  1244,  1244,  1244,  1245,
    1245,  1245,  1246,  1246,  1246,  1246,  1248,  1247,  1249,  1247,
    1247,  1247,  1250,  1251,  1251,  1252,  1252,  1253,  1253,  1253,
    1255,  1254,  1256,  1256,  1257,  1257,  1257,  1258,  1258,  1258,
    1259,  1259,  1261,  1260,  1262,  1262,  1262,  1263,  1264,  1263,
    1266,  1265,  1267,  1267,  1268,  1268,  1269,  1269,  1269,  1270,
    1270,  1272,  1271,  1273,  1273,  1274,  1275,  1275,  1276,  1276,
    1277,  1278,  1277,  1279,  1280,  1279,  1281,  1281,  1281,  1282,
    1282,  1282,  1283,  1283,  1284,  1285,  1286,  1285,  1288,  1287,
    1289,  1289,  1290,  1290,  1291,  1291,  1291,  1291,  1291,  1291,
    1292,  1292,  1294,  1293,  1295,  1295,  1295,  1297,  1296,  1296,
    1298,  1298,  1299,  1299,  1300,  1302,  1301,  1303,  1303,  1304,
    1304,  1305,  1306,  1307,  1307,  1309,  1308,  1310,  1310,  1311,
    1311,  1312,  1313,  1315,  1314,  1317,  1316,  1318,  1318,  1319,
    1319,  1320,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1324,  1323,  1325,  1323,
    1323,  1327,  1326,  1326,  1329,  1328,  1328,  1331,  1330,  1332,
    1330,  1330,  1334,  1333,  1333,  1336,  1335,  1335,  1337,  1338,
    1337,  1337,  1337,  1339,  1339,  1340,  1340,  1341,  1341,  1341,
    1342,  1342,  1342,  1343,  1343,  1343,  1343,  1343,  1345,  1344,
    1346,  1347,  1347,  1348,  1349,  1349,  1350,  1350,  1351,  1351,
    1352,  1352,  1352,  1353,  1353,  1353,  1354,  1354,  1354,  1355,
    1355,  1356,  1357,  1358,  1359,  1359,  1359,  1359,  1359,  1360,
    1360,  1360,  1361,  1361,  1361,  1362,  1362,  1363,  1363,  1363,
    1363,  1363,  1363,  1363,  1363,  1363,  1363,  1363,  1364,  1364,
    1364,  1364,  1364,  1364,  1365,  1365,  1365,  1365,  1365,  1365,
    1365,  1365,  1365,  1365,  1365,  1365,  1365,  1365,  1366,  1366,
    1366,  1366,  1366,  1366,  1366,  1366,  1366,  1366,  1366,  1366,
    1366,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,  1370,
    1370,  1371,  1371,  1371,  1371,  1371,  1371,  1372,  1372,  1373,
    1373,  1374,  1374,  1374,  1375,  1375,  1375,  1375,  1375,  1375,
    1376,  1376,  1376,  1378,  1377,  1377,  1379,  1380,  1380,  1381,
    1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1382,  1382,
    1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1384,  1384,  1384,  1384,
    1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,
    1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,  1384,
    1384,  1384,  1384,  1384,  1384,  1384,  1385,  1385,  1385,  1385,
    1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,
    1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,  1385,
    1385,  1385,  1385,  1386,  1386,  1386,  1386,  1386,  1386,  1386,
    1386,  1386,  1388,  1387,  1387,  1389,  1389,  1390,  1390,  1391,
    1391,  1392,  1392,  1393,  1393,  1394,  1395,  1395,  1395,  1395,
    1395,  1395,  1395,  1396,  1397,  1395,  1395,  1395,  1395,  1395,
    1395,  1395,  1395,  1395,  1395,  1395,  1398,  1395,  1399,  1399,
    1400,  1400,  1401,  1401,  1401,  1401,  1401,  1401,  1401,  1401,
    1401,  1401,  1401,  1401,  1401,  1402,  1404,  1403,  1403,  1405,
    1405,  1406,  1407,  1409,  1408,  1410,  1410,  1410,  1411,  1411,
    1412,  1412,  1413,  1413,  1414,  1414,  1415,  1415,  1416,  1417,
    1418,  1418,  1418,  1420,  1419,  1421,  1422,  1421,  1421,  1421,
    1421,  1423,  1423,  1423,  1423,  1423,  1423,  1423,  1424,  1424,
    1424,  1425,  1425,  1426,  1426,  1427,  1427,  1428,  1428,  1429,
    1429,  1430,  1430,  1431,  1431,  1432,  1433,  1433,  1434,  1434,
    1435,  1436,  1435,  1437,  1435,  1435,  1438,  1435,  1439,  1435,
    1435,  1440,  1435,  1441,  1435,  1435,  1442,  1442,  1442,  1443,
    1443,  1444,  1444,  1445,  1446,  1446,  1448,  1447,  1449,  1449,
    1450,  1450,  1451,  1450,  1450,  1450,  1450,  1452,  1452,  1453,
    1452,  1454,  1455,  1457,  1456,  1458,  1459,  1459,  1460,  1462,
    1461,  1464,  1465,  1463,  1466,  1467,  1468,  1469,  1469,  1470,
    1470,  1470,  1470,  1471,  1471,  1473,  1472,  1474,  1472,  1475,
    1475,  1476,  1477,  1476,  1479,  1478,  1480,  1480,  1481,  1481,
    1482,  1482,  1483,  1483,  1484,  1484,  1484,  1484,  1484,  1484,
    1484,  1484,  1484,  1484,  1484,  1484,  1485,  1485,  1485,  1485,
    1485,  1485,  1485,  1485,  1485,  1486,  1486,  1486,  1486,  1487,
    1487,  1487,  1488,  1488,  1489,  1489,  1490,  1491,  1490,  1492,
    1493,  1492,  1494,  1494,  1495,  1495,  1496,  1496,  1497,  1497,
    1497,  1498,  1498,  1499,  1499,  1500,  1502,  1501,  1503,  1503,
    1504,  1504,  1505,  1505,  1506,  1506,  1507,  1507,  1508,  1508,
    1509,  1509,  1509,  1510,  1510,  1510,  1511,  1511,  1511,  1511,
    1511,  1512,  1513,  1513,  1514,  1515,  1515,  1517,  1516,  1518,
    1518,  1519,  1519,  1519,  1520,  1520,  1521,  1522,  1522,  1522,
    1523,  1523,  1523,  1524,  1524,  1524,  1524,  1524,  1524,  1525,
    1526,  1526,  1526,  1526,  1527,  1527,  1528,  1528,  1529,  1529,
    1529,  1529,  1529,  1529,  1530,  1530,  1530,  1530,  1530,  1531,
    1531,  1531,  1531,  1532,  1532,  1532,  1532,  1532,  1533,  1533,
    1533,  1533,  1533,  1534,  1535,  1535,  1536,  1536,  1537,  1537,
    1537,  1539,  1538,  1540,  1540,  1541,  1541,  1542,  1544,  1543,
    1545,  1545,  1546,  1547,  1547,  1547,  1548,  1550,  1551,  1549,
    1549,  1549,  1553,  1552,  1555,  1554,  1554,  1554,  1554,  1554,
    1554,  1554,  1554,  1556,  1554,  1554,  1554,  1554,  1554,  1554,
    1557,  1554,  1558,  1558,  1559,  1560,  1561,  1561,  1562,  1563,
    1563,  1564,  1564,  1565,  1565,  1567,  1568,  1566,  1570,  1571,
    1569,  1572,  1572,  1572,  1572,  1573,  1573,  1574,  1574,  1575,
    1576,  1576,  1576,  1577,  1576,  1578,  1578,  1579,  1579,  1579,
    1580,  1580,  1581,  1581,  1582,  1583,  1583,  1584,  1584,  1585,
    1585,  1586,  1586,  1588,  1587,  1589,  1589,  1590,  1590,  1591,
    1591,  1591,  1592,  1593,  1594,  1592,  1596,  1597,  1595,  1598,
    1598,  1599,  1600,  1600,  1601,  1602,  1602,  1604,  1603,  1606,
    1607,  1605,  1608,  1605,  1609,  1605,  1610,  1610,  1611,  1611,
    1612,  1612,  1613,  1613,  1614,  1614,  1615,  1615,  1615,  1617,
    1616,  1618,  1618,  1619,  1619,  1620,  1620,  1621,  1621,  1621,
    1621,  1621,  1621,  1621,  1621,  1621,  1622,  1622,  1624,  1623,
    1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,
    1625,  1625,  1625,  1625,  1626,  1625,  1627,  1625,  1625,  1625,
    1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,
    1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,
    1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,  1625,
    1625,  1625,  1625,  1625,  1625,  1625,  1628,  1628,  1628,  1629,
    1629,  1630,  1630,  1631,  1631,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1636,  1636,  1638,  1637,  1639,  1637,
    1640,  1640,  1640,  1640,  1640,  1641,  1641,  1642,  1643,  1643,
    1643,  1644,  1644,  1645,  1645,  1645,  1647,  1646,  1649,  1648,
    1648,  1650,  1650,  1651,  1652,  1651,  1653,  1653,  1654,  1654,
    1654,  1654,  1654,  1654,  1654,  1654,  1654,  1654,  1654,  1654,
    1654,  1654,  1654,  1654,  1655,  1655,  1656,  1656,  1657,  1657,
    1657,  1658,  1659,  1659,  1661,  1660,  1662,  1662,  1664,  1663,
    1665,  1663,  1663,  1666,  1666,  1667,  1667,  1669,  1668,  1670,
    1671,  1671,  1673,  1672,  1674,  1674,  1674,  1675,  1675,  1675,
    1675,  1676,  1676,  1677,  1678,  1680,  1681,  1682,  1683,  1679,
    1684,  1684,  1685,  1685,  1686,  1686,  1686,  1687,  1687,  1687,
    1688,  1688,  1689,  1689,  1690,  1690,  1690,  1690,  1691,  1691,
    1692,  1692,  1693,  1693,  1694,  1694,  1695,  1695,  1696,  1696,
    1697,  1697,  1697,  1698,  1698,  1699,  1699,  1700,  1700,  1701,
    1701,  1702,  1703,  1703,  1703,  1703,  1704,  1704,  1705,  1705,
    1705,  1706,  1707,  1707,  1708,  1708,  1708,  1708,  1708,  1708,
    1708,  1708,  1708,  1708,  1709,  1709,  1709,  1709,  1709,  1710,
    1710,  1710,  1711,  1711,  1713,  1712,  1714,  1714,  1715,  1715,
    1717,  1716,  1718,  1718,  1719,  1719,  1720,  1721,  1721,  1722,
    1722,  1723,  1724,  1724,  1724,  1725,  1725,  1726,  1726,  1727,
    1727,  1728,  1728,  1728,  1728,  1729,  1729,  1729,  1730,  1730,
    1731,  1732,  1732,  1733,  1734,  1735,  1736,  1736,  1737,  1737,
    1738,  1738,  1739,  1739,  1740,  1740,  1740,  1741,  1741,  1741,
    1742,  1742,  1743,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1745,  1745,  1746,  1746,  1747,  1747,
    1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,  1747,
    1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,
    1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,
    1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,  1748,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,  1749,
    1751,  1750,  1752,  1753,  1750,  1754,  1754,  1756,  1755,  1757,
    1755,  1758,  1755,  1760,  1759,  1759,  1761,  1761,  1763,  1762,
    1764,  1762,  1766,  1765,  1765,  1767,  1767,  1767,  1768,  1768,
    1768,  1768,  1769,  1769,  1769,  1769,  1770,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1772,
    1772,  1772,  1773,  1773,  1773,  1773,  1774,  1775,  1776,  1776,
    1777,  1777,  1777,  1777,  1778,  1778,  1779,  1779,  1779,  1780,
    1780,  1780,  1780,  1780,  1782,  1781,  1783,  1783,  1783,  1784,
    1784,  1785,  1785,  1786,  1787,  1787,  1787,  1787,  1787,  1789,
    1788,  1790,  1790,  1791,  1790,  1792,  1792,  1793,  1793,  1794,
    1794,  1794,  1794,  1795,  1794,  1796,  1796,  1796,  1796,  1796,
    1797,  1798,  1798,  1798,  1798,  1798,  1798,  1799,  1799,  1800,
    1801,  1801,  1801,  1801,  1801,  1802,  1802,  1803,  1803,  1804,
    1804,  1805,  1806,  1806,  1807,  1807,  1808,  1808,  1809,  1809,
    1810,  1810,  1812,  1811,  1813,  1811,  1814,  1811,  1815,  1811,
    1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,
    1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,  1811,
    1811,  1811,  1811,  1811,  1811,  1811,  1816,  1816,  1817,  1817,
    1818,  1818,  1818,  1819,  1819,  1819,  1819,  1820,  1820,  1821,
    1821,  1822,  1822,  1823,  1823,  1824,  1824,  1825,  1825,  1825,
    1825,  1825,  1826,  1826,  1827,  1827,  1828,  1829,  1829,  1829,
    1829,  1829,  1830,  1830,  1830,  1830,  1830,  1831,  1831,  1832,
    1832,  1833,  1833,  1834,  1834,  1835,  1835,  1836,  1836,  1838,
    1837,  1839,  1840,  1840,  1841,  1841,  1842,  1842,  1842,  1843,
    1843,  1843,  1844,  1845,  1845,  1845,  1846,  1847,  1848,  1848,
    1848,  1849,  1849,  1851,  1850,  1853,  1852,  1855,  1854,  1856,
    1856,  1857,  1858,  1858,  1858,  1859,  1859,  1861,  1860,  1862,
    1863,  1863,  1864,  1864,  1865,  1865,  1865,  1866,  1867,  1868,
    1869,  1869,  1870,  1870,  1871,  1871,  1871,  1871,  1871,  1871,
    1871,  1871,  1872,  1872,  1873,  1874,  1875,  1875,  1875,  1876,
    1876,  1877,  1877,  1878,  1878,  1879,  1879,  1881,  1880,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1883,  1883,  1883,  1883,
    1884,  1884,  1885,  1885,  1887,  1888,  1889,  1890,  1891,  1886,
    1892,  1894,  1893,  1896,  1897,  1895,  1899,  1900,  1898,  1901,
    1901,  1901,  1901,  1901,  1901,  1902,  1902,  1903,  1903,  1903,
    1904,  1904,  1905,  1905,  1905,  1906,  1906,  1907,  1908,  1907,
    1909,  1909,  1910,  1910,  1911,  1911,  1912
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       4,     0,     2,     0,     4,     0,     5,     0,     0,     3,
       3,     1,     1,     0,     3,     0,     6,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     5,     5,     1,     0,
       1,     3,     1,     0,     1,     3,     1,     0,     1,     3,
       1,     3,     3,     3,     3,     3,     3,     3,     0,     1,
       1,     0,     7,     0,     8,     0,    15,     0,    14,     0,
      14,     0,     6,     0,    10,     0,    11,     0,     5,     0,
       5,     0,     5,     0,     5,     0,     6,     0,     5,     0,
       6,     7,     6,     4,     3,     0,     3,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     2,     3,     2,     1,
       3,     2,     1,     3,     3,     3,     1,     1,     1,     1,
       3,     0,    12,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     0,    12,     0,     6,     2,     0,     1,     3,
       1,     0,     2,     0,     2,     0,     1,     4,     0,     2,
       0,     2,     0,     3,     1,     0,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     1,     1,     2,     3,     3,
       0,     4,     0,     3,     0,     1,     3,     1,     0,     1,
       3,     1,     1,     2,     6,     8,     5,     7,     3,     0,
       1,     3,     1,     2,     0,     1,     1,     1,     0,     4,
       0,     4,     0,     3,     2,     3,     0,     3,     2,     1,
       3,     5,     1,     2,     1,     3,     3,     1,     3,     5,
       6,     4,     1,     4,     0,     6,     0,     6,     0,     3,
       0,     0,     3,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     3,     1,
       1,     0,     1,     0,     2,     3,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     4,     0,     1,     1,     3,     1,     3,
       3,     1,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     2,     0,     3,     2,
       2,     0,     0,     3,     0,     3,     1,     3,     0,     3,
       3,     3,     4,     5,     2,     4,     2,     1,     3,     0,
       0,     0,     7,     0,     2,     2,     0,     6,     0,     0,
       4,     1,     1,     2,     1,     2,     0,     0,     6,     0,
       0,     6,     0,     2,     2,     0,     1,     1,     0,     7,
       0,     5,     0,     7,     0,     1,     2,     5,     3,     5,
       3,     0,     6,     0,     6,     1,     0,     5,     0,     5,
       0,     0,     0,    11,     0,     5,     0,     3,     0,     3,
       0,     0,     8,     0,     3,     1,     1,     1,     1,     1,
       2,     4,     5,     0,     4,     4,     4,     3,     3,     2,
       2,     0,     2,     1,     2,     3,     1,     1,     1,     1,
       1,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     2,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     4,     0,     1,     1,     1,     1,
       1,     0,     7,     3,     3,     0,     5,     0,     5,     1,
       2,     4,     0,     3,     0,     7,     5,     3,     0,     5,
       0,     5,     1,     0,     1,     0,     4,     0,     0,     3,
       0,     6,     6,     0,     4,     2,     2,     0,     3,     2,
       0,     1,     0,     3,     0,     1,     1,     3,     1,     4,
       5,     5,     0,     2,     0,     0,     7,     0,    10,     1,
       3,     1,     1,     0,     2,     0,     3,     1,     3,     0,
       6,     1,     0,     0,     4,     0,     3,     1,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     3,     4,     4,
       3,     5,     0,     3,     1,     1,     2,     1,     1,     0,
       1,     0,     1,     1,     2,     1,     1,     0,     3,     0,
       3,     1,     3,     0,     1,     1,     2,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       0,     6,     1,     1,     3,     4,     4,     2,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     2,     0,     9,     0,    10,     0,     9,
       0,     9,     0,    10,     0,    11,     0,    10,     2,     0,
       1,     4,     0,     1,     2,     0,     4,     0,     3,     0,
       3,     0,     1,     2,     1,     1,     0,     6,     0,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       2,     1,     0,     3,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       2,     1,     1,     3,     3,     3,     3,     3,     2,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     3,
       1,     1,     2,     3,     2,     3,     2,     2,     2,     1,
       5,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     3,
       0,     1,     1,     5,     0,     1,     1,     1,     2,     2,
       3,     3,     3,     3,     0,     1,     0,     1,     0,     1,
       0,     1,     2,     1,     1,     2,     4,     1,     3,     2,
       2,     1,     0,     2,     2,     2,     1,     3,     3,     3,
       3,     2,     2,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     0,
       1,     2,     1,     1,     0,     1,     2,     1,     2,     0,
       1,     0,     4,     1,     1,     1,     0,     1,     2,     1,
       1,     2,     1,     3,     3,     1,     1,     0,     2,     0,
       1,     5,     0,     3,     3,     1,     0,     2,     2,     2,
       0,     3,     3,     6,     6,     1,     1,     2,     2,     2,
       2,     2,     1,     1,     0,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     2,     1,     2,     0,     2,     0,     2,     2,
       2,     2,     3,     2,     3,     3,     3,     3,     1,     1,
       1,     1,     3,     1,     1,     1,     4,     2,     1,     4,
       0,     1,     0,     2,     1,     3,     0,     0,     8,     0,
       5,     7,     0,     5,     0,     5,     0,    10,     0,     9,
       0,    11,     3,     4,     3,     3,     0,     8,     7,     0,
       0,     7,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     0,     2,     2,     2,     2,     1,     1,     1,
       4,     4,     0,     6,     4,     0,     5,     0,     6,     4,
       3,     1,     7,     2,     1,     1,     0,     6,     0,     3,
       2,     0,     5,     0,     0,     6,     1,     3,     1,     1,
       3,     3,     3,     2,     4,     2,     7,     6,     5,     5,
       4,     5,     3,     4,     2,     2,     6,     5,     3,     5,
       1,     1,     1,     1,     1,     0,     1,     1,     2,     2,
       3,     3,     3,     3,     0,     1,     0,     1,     0,     2,
       0,     1,     2,     1,     1,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     0,     6,     0,     5,
       4,     4,     3,     0,     1,     1,     3,     3,     2,     2,
       0,     2,     1,     3,     0,     1,     1,     0,     2,     4,
       1,     3,     0,     5,     0,     1,     1,     3,     0,     4,
       0,     4,     0,     1,     1,     2,     1,     1,     1,     0,
       2,     0,     5,     1,     3,     2,     0,     3,     1,     4,
       1,     0,     4,     1,     0,     4,     0,     1,     3,     0,
       1,     3,     1,     1,     2,     3,     0,     4,     0,     3,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       0,     2,     0,     6,     0,     1,     1,     0,     4,     4,
       3,     5,     1,     3,     4,     0,     6,     1,     1,     1,
       3,     2,     3,     1,     1,     0,     6,     1,     1,     1,
       3,     3,     4,     0,     6,     0,     2,     0,     4,     0,
       2,     2,     3,     1,     2,     2,     3,     4,     4,     3,
       1,     2,     2,     3,     4,     4,     0,     2,     0,     5,
       3,     0,     5,     3,     0,     5,     3,     0,     2,     0,
       7,     3,     0,     4,     2,     0,     4,     2,     2,     0,
       4,     2,     3,     1,     1,     1,     1,     1,     1,     2,
       1,     2,     3,     1,     4,     2,     2,     3,     0,     3,
       5,     0,     1,     2,     1,     1,     0,     1,     2,     1,
       1,     1,     1,     0,     3,     5,     3,     1,     1,     3,
       4,     0,     0,     0,     0,     2,     2,     1,     1,     0,
       2,     3,     0,     2,     3,     0,     2,     3,     3,     3,
       2,     3,     4,     3,     4,     3,     4,     1,     3,     4,
       3,     3,     6,     1,     5,     6,     5,     7,     6,     8,
       5,     6,     4,     4,     5,     3,     4,     1,     3,     3,
       3,     3,     3,     3,     5,     5,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     2,     1,     1,     1,     2,
       1,     2,     2,     0,     3,     1,     4,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     7,     6,     3,     4,     6,     6,     4,
       4,     4,     4,     4,     4,     6,     8,    10,     1,     3,
       3,     2,     3,     2,     2,     2,     2,     5,     4,     6,
       2,     2,     4,     4,     4,    10,     6,     8,     6,     4,
       4,     6,     4,     4,     4,     6,     4,     7,     7,     7,
       6,     6,     6,     6,     3,     4,     6,     8,     2,     2,
       8,     8,     6,     8,     6,     6,     6,     2,     6,     6,
       8,     8,     6,     8,     6,     2,     8,     8,     2,     2,
       2,     6,     6,     4,     4,     8,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     4,     4,
       4,     6,     8,     4,     3,     6,     4,     6,     5,     8,
       7,    10,     1,     6,     4,     4,     4,     4,     4,     6,
       4,     6,     0,     5,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     4,     4,     5,     4,     4,
       4,     5,     4,     0,     0,     7,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     9,     3,     3,
       1,     1,     3,     3,     3,     3,     3,     4,     4,     4,
       6,     4,     6,     4,     6,     5,     0,     7,     4,     4,
       4,     4,     1,     0,     3,     3,     1,     4,     0,     1,
       0,     2,     0,     3,     4,     2,     0,     1,     1,     2,
       1,     3,     3,     0,     3,     2,     0,     4,     2,     1,
       1,     1,     1,     2,     1,     2,     2,     2,     1,     2,
       2,     0,     1,     1,     3,     1,     3,     1,     3,     4,
       5,     1,     3,     1,     1,     1,     1,     4,     1,     3,
       3,     0,     6,     0,     8,     4,     0,     8,     0,    10,
       6,     0,     8,     0,    10,     6,     1,     2,     1,     1,
       2,     0,     1,     5,     1,     1,     0,     5,     5,     8,
       1,     2,     0,     4,     2,     3,     3,     1,     1,     0,
       3,     2,     1,     0,     3,     2,     1,     1,     3,     0,
       3,     0,     0,     5,     0,     1,     0,     0,     1,     0,
       2,     3,     3,     1,     1,     0,     7,     0,     7,     1,
       2,     0,     0,     2,     0,     2,     0,     1,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     2,     0,     0,     4,     4,     2,     0,     1,
       1,     0,     2,     3,     1,     3,     0,     7,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     4,
       2,     2,     2,     1,     2,     2,     0,     3,     2,     2,
       3,     3,     3,     1,     2,     0,     1,     0,     4,     4,
       2,     0,     1,     1,     0,     1,     1,     2,     5,     4,
       1,     3,     3,     1,     3,     1,     1,     1,     1,     1,
       0,     2,     3,     4,     0,     1,     2,     2,     2,     1,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     2,
       1,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     6,     0,     1,     3,     1,     3,     0,     2,
       3,     1,     1,     2,     1,     3,     2,     0,     0,     7,
       2,     1,     0,     3,     0,     8,     7,     4,     6,     4,
       4,     5,     5,     0,     6,     4,     4,     5,     6,     4,
       0,     6,     1,     3,     1,     2,     1,     3,     1,     0,
       2,     0,     2,     0,     1,     0,     0,     8,     0,     0,
       6,     0,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     3,     4,     0,     3,     3,     1,     2,     2,     1,
       3,     1,     3,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     1,     0,     4,     0,     1,     3,     1,     1,
       1,     1,     0,     0,     0,     7,     0,     0,    11,     3,
       1,     3,     3,     1,     3,     0,     1,     0,     4,     0,
       0,     9,     0,     5,     0,     6,     0,     2,     1,     3,
       2,     4,     0,     2,     0,     2,     1,     1,     1,     0,
       5,     0,     1,     0,     1,     1,     3,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     0,     3,     0,     3,
       2,     4,     4,     3,     4,     4,     1,     3,     3,     3,
       3,     6,     2,     2,     0,     6,     0,     7,     5,     2,
       1,     1,     1,     5,     5,     2,     2,     1,     4,     3,
       2,     3,     2,     2,     1,     4,     4,     3,     3,     3,
       2,     3,     2,     3,     3,     3,     3,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     3,     3,     0,     4,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     0,     3,     0,     1,     1,     0,     4,     0,     4,
       1,     0,     1,     4,     0,     3,     3,     1,     2,     2,
       2,     2,     3,     3,     2,     1,     1,     1,     1,     2,
       1,     1,     1,     2,     0,     1,     0,     5,     0,     1,
       3,     1,     0,     3,     0,     3,     3,     1,     0,     4,
       0,     3,     2,     0,     1,     0,     2,     0,     3,     3,
       2,     2,     0,     5,     0,     1,     1,     0,     1,     1,
       2,     1,     2,     1,     2,     0,     0,     0,     0,    22,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     5,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       2,     2,     0,     1,     0,     4,     0,     1,     1,     3,
       0,     9,     0,     3,     1,     3,     1,     1,     1,     3,
       5,     1,     1,     1,     3,     1,     1,     3,     1,     4,
       5,     1,     5,     3,     2,     1,     3,     2,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     0,     0,     7,     1,     3,     0,     3,     0,
       3,     0,     3,     0,     3,     2,     0,     2,     0,     2,
       0,     4,     0,     3,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     3,     3,     5,     5,
       4,     6,     2,     3,     3,     3,     5,     2,     3,     1,
       3,     3,     1,     1,     3,     3,     1,     3,     2,     2,
       2,     2,     2,     1,     1,     3,     1,     4,     4,     1,
       1,     1,     1,     1,     0,     5,     0,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     2,     2,     2,     0,
       3,     4,     3,     0,     7,     1,     2,     1,     1,     1,
       1,     1,     1,     0,     5,     1,     1,     1,     1,     1,
       3,     6,     6,     6,     7,     5,     3,     4,     1,     3,
       8,     8,     8,     6,     4,     0,     3,     0,     3,     1,
       3,     2,     1,     1,     0,     1,     1,     2,     0,     1,
       1,     3,     0,     3,     0,     3,     0,     3,     0,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       6,     1,     0,     3,     3,     1,     1,     0,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     0,
       2,     0,     2,     0,     3,     2,     1,     2,     1,     0,
       3,     1,     0,     1,     0,     1,     0,     3,     2,     0,
       1,     2,     4,     4,     5,     4,     2,     3,     1,     1,
       1,     0,     1,     0,     4,     0,     4,     0,     2,     2,
       1,     2,     0,     1,     1,     1,     1,     0,     3,     3,
       3,     4,     2,     3,     1,     1,     2,     4,     0,     0,
       0,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     3,     3,     3,     0,
       1,     3,     3,     0,     3,     1,     3,     0,     4,     3,
       1,     2,     2,     3,     4,     4,     0,     3,     4,     4,
       1,     1,     0,     2,     0,     0,     0,     0,     0,    19,
       6,     0,     3,     0,     0,     8,     0,     0,     7,     4,
       4,     3,     4,     3,     3,     0,     3,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     0,     3,
       0,     2,     5,     3,     3,     3,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 2027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 2036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].lex_string_with_pos);
          }
#line 23686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (lex->table_or_sp_used())
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].lex_string_with_pos);
          }
#line 23699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 23705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 23714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].lex_string_with_pos);
          }
#line 23724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->table_or_sp_used())
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 23741 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 2195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 23753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->table_or_sp_used())
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 23764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->prepared_stmt_params.push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 23773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 23782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 23792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 23800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 23814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 23822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 23830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 23838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 23846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 23860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 23877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 23885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 23893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 23901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 23909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 23926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2316 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 23934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 23965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 23973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 23981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 23989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 23997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 116:
#line 2384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 24021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2408 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 24040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 24048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 24058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 24068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 24078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 24088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 24097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (check_master_connection_name(&(yyvsp[0].lex_str)))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 24109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->create_info.init();
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num), (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options)))
               MYSQL_YYABORT;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 24133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.use_default_db_type(thd);
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER_THD(thd, ER_WARN_USING_OTHER_HANDLER),
                                  hton_name(lex->create_info.db_type)->str,
                                  (yyvsp[-2].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 24153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           lex->create_info.init();
           if (lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num), (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options)))
              MYSQL_YYABORT;

           if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                  TL_OPTION_UPDATING,
                                                  TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()))
               MYSQL_YYABORT;
         }
#line 24182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (lex->create_info.seq_create_info->check_and_adjust(1))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db,
                       lex->select_lex.table_list.first->table_name);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (prepare_sequence_fields(thd, &lex->alter_info.create_list))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.use_default_db_type(thd);
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER_THD(thd, ER_WARN_USING_OTHER_HANDLER),
                                  hton_name(lex->create_info.db_type)->str,
                                  (yyvsp[-3].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 24219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2572 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].lex_string_with_pos), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 24230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].lex_string_with_pos), HA_KEY_ALG_UNDEF, (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 24247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].lex_string_with_pos), HA_KEY_ALG_UNDEF, (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 24264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24270 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2601 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 24279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->set_command_with_check(SQLCOM_CREATE_DB, 0, (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].lex_string_with_pos);
          }
#line 24290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 24300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 24315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2630 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2632 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 24365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2646 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 24379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 24391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
          }
#line 24405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2662 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_command_with_check(SQLCOM_CREATE_USER, (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 24420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_command_with_check(SQLCOM_CREATE_ROLE, (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 24429 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 24437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 24445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 24451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR)
          {
            my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0), ""));
          }
          Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
        }
#line 24469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (!(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
          {
            my_yyabort_error((ER_INVALID_AGGREGATE_FUNCTION, MYF(0), ""));
          }
          Lex->sphead->set_chistics_agg_type(GROUP_AGGREGATE);
        }
#line 24481 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 24493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_AGGREGATE; }
#line 24505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 24520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value)
              MYSQL_YYABORT;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 24530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value)
              MYSQL_YYABORT;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 24540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 24549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value)
              MYSQL_YYABORT;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 24559 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value)
              MYSQL_YYABORT;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 24569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 24578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 24587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 24596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 24605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 24614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 24623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command != SQLCOM_ALTER_SEQUENCE)
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 24636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sql_command != SQLCOM_ALTER_SEQUENCE)
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 24650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options)))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 24660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2823 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 24666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 24675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
            my_casedn_str(system_charset_info,
		         (char*) Lex->server_options.host.str);
          }
#line 24686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 24695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 24704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 24713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 24722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 24730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2872 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (lex->add_create_options_with_check((yyvsp[-1].object_ddl_options)))
              MYSQL_YYABORT;
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 24750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 24762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 24771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 24779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2916 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 24805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 24826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 24834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 24842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 24859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 24874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (!lex->make_sp_head(thd, lex->event_parse_data->identifier,
                                        &sp_handler_procedure))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 24909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 24923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 24939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 24948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 24957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 24987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 24993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 24999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25029 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 25035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->call_statement_start(thd, (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 25074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 25082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 25091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar)))
              MYSQL_YYABORT;
          }
#line 25100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].lex_string_with_pos), (yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 25109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-4].lex_string_with_pos), (yyvsp[-2].lex_string_with_pos), (yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 25118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 25127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].lex_string_with_pos), (yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 25136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list)))
              MYSQL_YYABORT;
          }
#line 25145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyvsp[0].spvar)->mode=(yyvsp[-1].spvar_mode); }
#line 25151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 25157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 25163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 25169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 25175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 25183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 25191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 25199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 25207 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 25227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock)))
              MYSQL_YYABORT;
          }
#line 25240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 25246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.qualified_column_ident)= new (thd->mem_root) Qualified_column_ident(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 25255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.qualified_column_ident)= new (thd->mem_root) Qualified_column_ident(&(yyvsp[-2].lex_str), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 25264 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.qualified_column_ident)= new (thd->mem_root) Qualified_column_ident(thd,
                                                                 &(yyvsp[-4].lex_str), &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 25274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_string_char_length(&(yyvsp[0].lex_string_with_pos), 0, NAME_CHAR_LEN,
                                         system_charset_info, 1))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_string_with_pos).str));
            if (!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition()))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].lex_string_with_pos), thd->variables.collation_database);
          }
#line 25287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list()))
              MYSQL_YYABORT;
            (yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root);
          }
#line 25297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint unused;
            if ((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            (yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root);
          }
#line 25309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 25315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 25323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                       &Lex->last_field[0], (yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 25334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 25344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 25354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 25364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->spcont->declare_condition(thd, &(yyvsp[-3].lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num)))
              MYSQL_YYABORT;
          }
#line 25384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 25403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (Lex->sp_block_finalize(thd))
              MYSQL_YYABORT;
            if (Lex->sp_declare_cursor(thd, &(yyvsp[-5].lex_str), (yyvsp[0].sp_cursor_stmt), param_ctx, true))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 25417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (!((yyval.sp_cursor_stmt)= new (thd->mem_root) sp_lex_cursor(thd, thd->lex)))
              MYSQL_YYABORT;
          }
#line 25427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 25436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if ((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd) ||
                (yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 25448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 25454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 25460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 25472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (ctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 25488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lex_str)) || is_sqlstate_completion((yyvsp[0].lex_str).str))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 25540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_condition(&(yyvsp[0].lex_string_with_pos), false);
            if ((yyval.spcondvalue) == NULL)
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_string_with_pos).str));
          }
#line 25550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 25589 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3531 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (lex->spcont == NULL)
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_string_with_pos).str));
            cond= lex->spcont->find_condition(&(yyvsp[0].lex_string_with_pos), false);
            if (cond == NULL)
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_string_with_pos).str));
            if (cond->type != sp_condition_value::SQLSTATE)
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 25608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3546 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 25620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3553 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 25634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 25646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (info->m_item[index] != NULL)
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 25660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 25666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3611 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 25694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 25700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3619 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 25706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 25712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 25718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3625 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 25724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 25730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 25736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 25742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3633 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 25748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 25754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 25760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 25766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 25775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 25797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3669 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 25803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3674 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 25813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 25823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 25833 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 25843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 25853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= &thd->m_parser_state->m_lip;
            (yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].lex_string_with_pos), NULL,
                                                 lip->get_tok_start(),
                                                 lip->get_ptr());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 25866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 25876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 25882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 25888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 25894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 25904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 25914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 25924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 25930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 25936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3773 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 25942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 25948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 25954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 25960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 25966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 25972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 25978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 25984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 25990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 25996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 3797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_string_with_pos); }
#line 26008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 3802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[0].lex_str), TRUE))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str));
            spc->add_variable(thd, &(yyvsp[0].lex_str));
            (yyval.num)= 1;
          }
#line 26024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable(&(yyvsp[0].lex_string_with_pos), TRUE))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_string_with_pos).str));
            spc->add_variable(thd, &(yyvsp[0].lex_string_with_pos));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 26046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 26052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->maybe_start_compound_statement(thd))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 26062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 26068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 26080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (lex->sql_command == SQLCOM_CHANGE_DB)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (i == NULL)
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (!(i->m_query.str= strmake_root(thd->mem_root,
                                                 sp->m_tmp_query,
                                                 i->m_query.length)) ||
                    sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 26132 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                 (yyvsp[0].item), lex) ||
                sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_leave_statement(thd, &(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 26154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_iterate_statement(thd, &(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 26163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (!((yyval.assignment_lex)= new (thd->mem_root) sp_assignment_lex(thd, thd->lex)))
              MYSQL_YYABORT;
          }
#line 26173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 26182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 26204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 4003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 26227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 26236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 26242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 26248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_open_cursor(thd, &(yyvsp[-1].lex_string_with_pos), (yyvsp[0].sp_assignment_lex_list)))
              MYSQL_YYABORT;
          }
#line 26257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_add_cfetch(thd, &(yyvsp[-1].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 26266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4035 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_add_cfetch(thd, &(yyvsp[-1].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 26275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_add_cfetch(thd, &(yyvsp[-1].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 26284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            lex->sphead->m_flags|= sp_head::HAS_AGGREGATE_INSTR;
            sp_instr_agg_cfetch *i=
              new (thd->mem_root) sp_instr_agg_cfetch(sp->instructions(),
                                                      lex->spcont);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
         }
#line 26306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (! lex->spcont->find_cursor(&(yyvsp[0].lex_string_with_pos), &offset, false))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_string_with_pos).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
#line 26325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_string_with_pos), false)))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_string_with_pos).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 26343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_string_with_pos), false)))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_string_with_pos).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 26361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 26367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (i == NULL ||
                sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0)) ||
                sp->add_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 26403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 26413 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->maybe_start_compound_statement(thd))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 26467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 26485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 26491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->case_stmt_action_expr((yyvsp[0].item)))
              MYSQL_YYABORT;

            if (Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 26523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (lex->case_stmt_action_when((yyvsp[0].item), true))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->case_stmt_action_then())
              MYSQL_YYABORT;
          }
#line 26547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 26555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->case_stmt_action_when((yyvsp[0].item), false))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->case_stmt_action_then())
              MYSQL_YYABORT;
          }
#line 26577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
#line 26592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[-1].lex_str); }
#line 26598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 26604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 26610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->spcont->block_label_declare(&(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 26620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 26628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 26637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26645 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_block_finalize(thd, (yyvsp[-2].spblock)))
              MYSQL_YYABORT;
          }
#line 26654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->maybe_start_compound_statement(thd))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 26664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_block_finalize(thd, (yyvsp[-2].spblock)))
              MYSQL_YYABORT;
          }
#line 26673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 26685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].lex_string_with_pos), (yyvsp[0].for_loop_bounds)))
              MYSQL_YYABORT;
          }
#line 26694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4393 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-3].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[-2].assignment_lex);
            (yyval.for_loop_bounds).m_upper_bound= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 26705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_upper_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 26716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds), (yyvsp[-1].sp_cursor_stmt)))
              MYSQL_YYABORT;
          }
#line 26725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
          }
#line 26740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4429 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sp_while_loop_expression(thd, (yyvsp[-1].item)))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_while_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 26761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 26767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 26786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 26795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str)))
              MYSQL_YYABORT;
          }
#line 26804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 26820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 26835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str))) // The inner WHILE block
              MYSQL_YYABORT;
            if (Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop)))
              MYSQL_YYABORT;
          }
#line 26846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop)))
              MYSQL_YYABORT;
          }
#line 26855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_spblock tmp;
            tmp.curs= MY_TEST((yyvsp[-7].for_loop).m_implicit_cursor);
            if (Lex->sp_block_finalize(thd, tmp)) // The outer DECLARE..BEGIN..END
              MYSQL_YYABORT;
          }
#line 26866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str)))
              MYSQL_YYABORT;
          }
#line 26875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 26881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4524 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_empty_label(thd))
              MYSQL_YYABORT;
          }
#line 26890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 26898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4533 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_empty_label(thd))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 26908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 26916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (Lex->maybe_start_compound_statement(thd))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 26927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_empty_label(thd)) // The inner WHILE block
              MYSQL_YYABORT;
            if (Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop)))
              MYSQL_YYABORT;
          }
#line 26938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_spblock tmp;
            tmp.curs= MY_TEST((yyvsp[-5].for_loop).m_implicit_cursor);
            if (Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop)))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (Lex->sp_block_finalize(thd, tmp)) // The outer DECLARE..BEGIN..END
              MYSQL_YYABORT;
          }
#line 26952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_push_loop_empty_label(thd))
              MYSQL_YYABORT;
          }
#line 26961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 26969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 26975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 26981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 26987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 26993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 26999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_string_with_pos).str;
          }
#line 27014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 27022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4644 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 27030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 4761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 27045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 27054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 27063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].lex_string_with_pos).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_string_with_pos).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4811 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 27100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4816 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 27109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 4821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 27118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 4829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 27127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 27136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 27145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 4853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 27154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 4861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 27163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 27172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 4877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 27183 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 27194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4897 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 27206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 4913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 27215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 27226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 27232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lex_str).str;
            uint str_len= (yyvsp[0].lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, (char**) &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G': text_shift_number+=30; break;
                case 'm':
                case 'M': text_shift_number+=20; break;
                case 'k':
                case 'K': text_shift_number+=10; break;
                default:
                  my_yyabort_error((ER_WRONG_SIZE_NUMBER, MYF(0)));
              }
              if (prefix_number >> 31)
                my_yyabort_error((ER_SIZE_OVERFLOW_ERROR, MYF(0)));
              number= prefix_number << text_shift_number;
            }
            else
              my_yyabort_error((ER_WRONG_SIZE_NUMBER, MYF(0)));
            (yyval.ulonglong_number)= number;
          }
#line 27267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 27273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 27291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 4979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 27303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 27324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 27330 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 27336 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4999 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 27351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5013 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 27359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 27365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27371 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 27377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5020 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27383 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 27397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
#line 27421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 27437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 27454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 27466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 27477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 27483 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 27495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 27501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 27509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 27518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 27524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 27536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 27542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 27560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[0].lex_string_with_pos).str, thd->mem_root))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 27601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 5202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 27611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr(thd, (yyvsp[-3].simple_string) + 1, (yyvsp[-2].item), (yyvsp[-1].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 27623 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->part_info->set_part_expr(thd, (yyvsp[-3].simple_string) + 1, (yyvsp[-2].item), (yyvsp[-1].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
#line 27632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 27652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 27664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 5251 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 27680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 5261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 5266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[0].lex_string_with_pos).str, thd->mem_root))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 27714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 5281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->safe_to_cache_query)
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 27727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 5292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 5294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 27746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 5306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (part_info->part_type == LIST_PARTITION)
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 27760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 5316 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 27783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 5337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 5338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 5343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (!p_elem ||
                 part_info->partitions.push_back(p_elem, thd->mem_root))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 27816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 5363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 5368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (check_ident_length(&(yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].lex_string_with_pos).str;
          }
#line 27834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 5379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
                my_yyabort_error((ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
              if (part_info->part_type == LIST_PARTITION)
                my_yyabort_error((ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 27854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 5395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 27871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 5407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 5409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 27894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 5421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 5423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (part_info->init_column_part(thd))
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value(thd))
            {
              MYSQL_YYABORT;
            }
         }
#line 27925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 5447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part(thd))
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 5468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 5473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (part_info->reorganize_into_single_field_col_val(thd))
              {
                MYSQL_YYABORT;
              }
            }
          }
#line 27990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 5502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 28003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 5513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28015 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 5519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 5530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 5532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 28062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 5555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 5556 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 5561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 5574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (!lex->safe_to_cache_query)
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(thd, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
#line 28111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 5594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 28129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 5608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 28156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 5633 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28162 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 5634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28168 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 5639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 28206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_ident_length(&(yyvsp[0].lex_str)))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 28222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28240 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 28252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 28262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 28272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 28278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 28284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5714 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 28290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 28296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5718 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 28302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 28308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 28316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 28335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5751 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 28343 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5768 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 28355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5793 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28397 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 28411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 28419 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 5810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 28427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 5814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 28435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 5821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 28443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5825 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 28451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 5848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.db_type= (yyvsp[0].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 28460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 5853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 28469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 5858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 28478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 28487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5868 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 28496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 5873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 28505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 5878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 28514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 5883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 28533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 5898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 28543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 28562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 28571 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 5924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 28590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 5939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 28600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 28622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 28631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 5968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 28640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 28649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 28658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 28667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 28676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 28684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 28710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 28719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 28728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 28737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6036 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].lex_string_with_pos).str;}
#line 28743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 28749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 28755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 28765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 28774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 28783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true, &Lex->create_info.option_list,
                                  &Lex->option_list_last);
          }
#line 28795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_string_with_pos).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_string_with_pos), false, &Lex->create_info.option_list,
                                  &Lex->option_list_last);
          }
#line 28807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                  &Lex->option_list_last, thd->mem_root);
          }
#line 28817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), &Lex->create_info.option_list,
                                  &Lex->option_list_last);
          }
#line 28827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
          }
#line 28836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->create_info.add_table_option_default_charset((yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 28845 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[0].charset) &&
                 !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[0].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 28863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str),
                                            thd->lex->create_info.tmp_table());

            if (plugin)
              (yyval.db_type)= plugin_hton(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
                my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER_THD(thd, ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[0].lex_str).str);
            }
          }
#line 28885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if ((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false)))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 28897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 28903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 28909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 28915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 28921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 28927 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 28933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 28939 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 28945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 28951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 28957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 28963 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 28969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 28975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 28981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 28989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 28995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 29001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 29007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29023 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].lex_string_with_pos), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29065 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29081 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29087 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].lex_string_with_pos).str ? &(yyvsp[-2].lex_string_with_pos) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->check_add_key((yyvsp[-1].object_ddl_options)) ||
               !(Lex->last_key= (new (thd->mem_root)
                                 Key(Key::MULTIPLE, (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                     HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options)))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 29116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (key == NULL)
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
#line 29146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 29154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 29160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 29166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (!v)
            {
              MYSQL_YYABORT;
            }
            (yyval.virtual_column)= v;
          }
#line 29180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 29186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 29192 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 29198 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                         system_charset_info, 1))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (!f)
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
          }
#line 29217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if ((yyval.create_field)->check(thd))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 29239 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 29245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 29255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29273 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 29282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 29302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 29310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 29318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 29326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6414 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6420 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 29354 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 29364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6431 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 29370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->last_field->field_visibility= USER_DEFINED_INVISIBLE;
          }
#line 29378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 29391 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (!v)
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 29402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29423 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6476 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (!v)
            {
              MYSQL_YYABORT;
            }
            (yyval.virtual_column)= v;
          }
#line 29437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 29446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 29452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6508 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 29458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (err || tmp_length > PRECISION_FOR_DOUBLE)
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 29478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 29486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 29494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 29502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 29508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6540 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 29514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 29520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 29528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 29537 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 29546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 29554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6566 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 29563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].const_simple_string));
          }
#line 29572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 29594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(thd->type_handler_for_date()); }
#line 29600 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 29611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.sql_mode & MODE_MAXDB)
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_datetime2) :
                     static_cast<const Type_handler*>(&type_handler_datetime),
                     (yyvsp[0].const_simple_string));
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                Unless --explicit-defaults-for-timestamp is given.
              */
              if (!opt_explicit_defaults_for_timestamp)
                Lex->last_field->flags|= NOT_NULL_FLAG;
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_timestamp2):
                     static_cast<const Type_handler*>(&type_handler_timestamp),
                     (yyvsp[0].const_simple_string));
            }
          }
#line 29636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6626 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_datetime2) :
                   static_cast<const Type_handler*>(&type_handler_datetime),
                   (yyvsp[0].const_simple_string));
          }
#line 29647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 29656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6642 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[0].const_simple_string));
          }
#line 29665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 29680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 6658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 29689 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 6663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 29698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 29707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 29713 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6675 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 29719 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 29725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 29731 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6681 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 29737 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 29743 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6685 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 29752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 29758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6695 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 29764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6699 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 29770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 29776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6701 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 29782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 29788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 29794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 29800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 29806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 29812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6714 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6720 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 6726 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 6727 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 29878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 29884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 29890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 29896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 6736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 29902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 6741 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 29912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 29918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 6747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 29924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 29930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 6755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 29938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 29944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 29950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 29956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6767 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 29962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6771 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 29980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 29986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6775 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 29992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6776 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 29998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6780 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 30004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 30010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 30016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 30022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 30028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 6787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 30034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 30040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 30046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 30052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 30058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 6799 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 6800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 6804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 30082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 30088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 6812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 30099 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 6818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 30105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 30115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 6826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 30126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 6833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field->set_compressed((yyvsp[0].const_simple_string)))
              MYSQL_YYABORT;
          }
#line 30135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 6841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 30141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 6842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].lex_string_with_pos).str; }
#line 30147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 6846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= NOT_NULL_FLAG; }
#line 30153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 6848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 30163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 6855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true, &Lex->last_field->option_list,
                                  &Lex->option_list_last);
          }
#line 30175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_string_with_pos).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_string_with_pos), false, &Lex->last_field->option_list,
                                  &Lex->option_list_last);
          }
#line 30187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 6871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                  &Lex->option_list_last, thd->mem_root);
          }
#line 30197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), &Lex->last_field->option_list, &Lex->option_list_last);
          }
#line 30206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 6886 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type);

          if ((yyvsp[0].charset))
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyvsp[-1].Lex_field_type), Lex->charset);
        }
#line 30221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 6899 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30227 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 6900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6905 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 6909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 30248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 30254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 30260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 6918 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 6919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 30272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6929 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 30288 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6933 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 30294 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 30300 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str)))
              MYSQL_YYABORT;
          }
#line 30309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 6946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 30315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 6947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 30321 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 6951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 30327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 30333 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 6956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 6957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30345 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 6961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 30351 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 6962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 30357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 30366 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 30372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 6972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 30378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 6973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 30384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 6974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 30390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 6975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 30396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 6979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 30402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 6980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 30408 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 6985 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 30420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 6993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 6997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 6998 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 30438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 30444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 30456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7007 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 30462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7008 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 30468 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7013 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 30477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 30485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 30491 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 30497 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 30508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 30514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 30520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 30532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 30540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 30546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].lex_string_with_pos), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 30557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].lex_string_with_pos), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 30570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 30576 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 30582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 30588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 30594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30624 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 30674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 30680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 30686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 30728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 30734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 30740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 30753 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30759 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 30765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 30777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30783 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 30789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 30795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 30801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 30807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 30813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 30819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 30825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 30831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num); }
#line 30837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 30843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_str), true, &Lex->option_list,
                                  &Lex->option_list_last);
          }
#line 30855 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_string_with_pos).length > ENGINE_OPTION_MAX_LENGTH)
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].lex_str).str));
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].lex_string_with_pos), false, &Lex->option_list,
                                  &Lex->option_list_last);
          }
#line 30867 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                  &Lex->option_list_last, thd->mem_root);
          }
#line 30877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            new (thd->mem_root)
              engine_option_value((yyvsp[-2].lex_str), &Lex->option_list, &Lex->option_list_last);
          }
#line 30886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (plugin_is_ready(&(yyvsp[0].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].lex_str);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 30909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 30915 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 30923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 30931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].lex_string_with_pos), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (!key_part_len)
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_string_with_pos).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].lex_string_with_pos), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7325 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 30960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 30966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 30972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_string_with_pos); }
#line 30978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7336 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 30984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 30990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 31008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 31022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (Lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
#line 31036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 31045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 31058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].lex_string_with_pos);
          }
#line 31070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 31082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7410 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31093 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7417 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 31105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 31125 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31131 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7444 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 31140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 31167 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 31185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 31194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 31203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 31212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 31221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7506 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 31231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 31246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 31260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7529 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                   TL_OPTION_SEQUENCE,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 31274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7548 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31297 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31303 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31309 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31315 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7557 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 31328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7568 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7569 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_string_with_pos); }
#line 31352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7580 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 31386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 31396 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7624 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7637 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
               MYSQL_YYABORT;
          }
#line 31426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 31466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7691 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[-1].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 31507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
#line 31515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
#line 31523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7733 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 31541 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7747 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 31556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 31564 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 31579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7780 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
#line 31587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
#line 31595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7788 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 31604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7801 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[0].lex_string_with_pos).str,
                                                          thd->mem_root))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
#line 31629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
#line 31638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7830 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 31647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
#line 31656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
#line 31665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 31673 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= Alter_info::ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 31682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 31693 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 31704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
#line 31718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 31733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7891 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
#line 31747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7901 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 31762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7912 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
#line 31776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 31786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7928 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
#line 31796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= new (thd->mem_root) Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].virtual_column));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 31809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 7943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_column *ac= (new (thd->mem_root)
                               Alter_column((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac, thd->mem_root);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
#line 31823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 7953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[0].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            if (check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length, FALSE) ||
                ((yyvsp[0].table)->db.str && check_db_name((LEX_STRING*) &(yyvsp[0].table)->db)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
#line 31843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 7969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset)))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
          }
#line 31861 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
#line 31875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 7993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
#line 31883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 7997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
#line 31892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8014 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 31901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8019 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[0].lex_string_with_pos)))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lex_string_with_pos).str));
          }
#line 31910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 31919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[0].lex_string_with_pos)))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lex_string_with_pos).str));
          }
#line 31928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 31946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 31952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 31958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 31964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 31973 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8072 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 31979 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8073 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 31985 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 31991 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].lex_string_with_pos);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 32006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
#line 32016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 32051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 8108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 8110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 32068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 8116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 8118 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 32085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 8125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 32096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 8135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 8151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 8155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 8162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 8166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 8173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32153 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 8177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32161 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 8181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 8187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 32175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 8189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 8198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 8199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 32193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 8200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 32199 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 8204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 8206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                 (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 32218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 8215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 32226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 8227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 32237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 8234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 8238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 32249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 8239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 32255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 8240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 32261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 8246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 32267 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 8252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 32281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 8262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 32293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 8272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 32299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 8273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 8277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 8278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 8282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 32323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 8283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 32329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 8284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 32335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 8288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 8289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 32347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 8294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 32361 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 8304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 32373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 8326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 32387 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 8333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 8335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32399 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 8338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 8340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (lex->column_list == NULL)
              MYSQL_YYABORT;
          }
#line 32416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (lex->index_list == NULL)
              MYSQL_YYABORT;
          }
#line 32433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 32448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 32457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 8387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 32473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 8394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 32484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 8404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
          }
#line 32493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 32499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 32513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 32527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 32533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8445 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 32557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8451 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 32563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 32569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 32575 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8454 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 32581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8455 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 32587 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 8459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32593 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 8460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 32599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 8465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 32613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 32625 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 32631 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32643 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 32651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 8496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 32665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8505 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 32675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 32685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 32699 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8538 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 32707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 32717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 32728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 32739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 8580 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_string_with_pos); }
#line 32745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 32751 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8586 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 32761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 32778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8617 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
#line 32789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8627 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
#line 32797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 32807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 32813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 32819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8650 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 32825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8660 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
          }
#line 32835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 32843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 32851 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 32863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 32871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 8712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 32883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 32891 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8728 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 32903 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 8737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 32911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 32919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 8749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 32928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 8754 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 32936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 8762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 32945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8766 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 32951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8772 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 32960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 32969 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 8789 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 32978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 8796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 32987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 8805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 32995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 8809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 33003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 8814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 33011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 8818 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 33019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 33031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 33039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 33049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 8909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 33058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 8923 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 33079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 8940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 33100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 8961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
#line 33111 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
#line 33123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 8981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 33138 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 8995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(thd, (yyvsp[-1].item)))
              MYSQL_YYABORT;
          }
#line 33147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9000 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (add_item_to_list(thd, (yyvsp[-2].item)))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[0].lex_str).str))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 33170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 33178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 33186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 33194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 33200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9040 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_string_with_pos); }
#line 33206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 9041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 33212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 9042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_string_with_pos); }
#line 33218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 9043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 33224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 9047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 33230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 9048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 33236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 9049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 33242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 9053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 33248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 9054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 33254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 9055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 33260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 9059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 9060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 9066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 33327 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 9117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 9124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 33385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 9167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 9173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33405 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 9179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 9185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 9191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 9197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 9203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33455 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 9213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33465 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 9219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33475 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 9225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33485 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 9231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33495 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 9237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 9247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33528 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 33573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 9291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 9297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 33595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 9305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33609 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 9315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                   Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 9322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 33632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9336 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 9349 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 9367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33695 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 9373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 9379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33715 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 9385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 9391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 9397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 9403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 9409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 9415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33775 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 9421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 9427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 33795 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 9456 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 33801 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 33807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 9458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 33813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 9459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 33819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 33825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9461 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 33831 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9465 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 33837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 33843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 33852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9475 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 33858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9479 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 33864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9480 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 33870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 33876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9485 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 33882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 33888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9487 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 33894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 33900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 9489 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 33906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 9490 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 33912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 9494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 33918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 9495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 33924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 9496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 33930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 9501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 33936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 33944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 9507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 33953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 9515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if ((yyval.dyncol_def) == NULL)
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 33977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 9537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if ((yyval.dyncol_def_list) == NULL)
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 33988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 9544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 33997 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9585 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 34003 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9591 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9598 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[-1].item)->type() == Item::STRING_ITEM)
            {
              Item_string *item= (Item_string *) (yyvsp[-1].item);
              enum_field_types type= item->odbc_temporal_literal_type(&(yyvsp[-2].lex_string_with_pos));
              if (type != MYSQL_TYPE_STRING)
              {
                (yyval.item)= create_temporal_literal(thd, item->val_str(NULL),
                                            type, false);
              }
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[-1].item);
          }
#line 34052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9628 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 34066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset)))
              MYSQL_YYABORT;
          }
#line 34075 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9643 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 34084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 34094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset)))
              MYSQL_YYABORT;
          }
#line 34103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (il)
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 34128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9683 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table))))
              MYSQL_YYABORT;
          }
#line 34157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 34166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table))))
              MYSQL_YYABORT;
          }
#line 34175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9703 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1)))
              MYSQL_YYABORT;
          }
#line 34184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9708 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num))))
              MYSQL_YYABORT;
          }
#line 34193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num))))
              MYSQL_YYABORT;
          }
#line 34202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9722 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *i1= new (thd->mem_root) Item_string(thd, (yyvsp[0].lex_str).str,
                                                      (yyvsp[0].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34217 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 34223 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at)))
              MYSQL_YYABORT;
          }
#line 34233 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9740 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34243 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9746 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 34251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34261 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9756 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34271 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9784 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34301 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 9796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 34324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 9805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 34337 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34357 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 9826 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34367 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 9832 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 9838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[-1].item), thd->mem_root);
            list->push_front((yyvsp[-3].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 9852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 9863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 9869 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 9875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 9881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 9887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 9893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 9900 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 9907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 9913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_trim(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 9919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ltrim(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 9925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_rtrim(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34522 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 9931 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_trim(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 9937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ltrim(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 9943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_rtrim(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 9949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_trim(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 9955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_trim(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 9961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 34584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 9969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34594 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 9990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34605 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 9997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34637 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34657 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34677 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34687 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34697 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34749 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 34758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 34767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 34776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 34785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34807 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34827 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34933 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34943 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 34964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 34994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 35063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35073 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 35092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 35114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35144 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 10350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 10356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 10364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 10376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35193 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 10383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 35209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 35219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 35230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 10411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 35241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 10418 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 35252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 10425 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 35263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 10432 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 35274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 35282 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 35293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10450 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 35302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 35325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (check_routine_name(&(yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].lex_str), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].lex_str), (yyvsp[-1].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 35382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[-5].lex_string_with_pos).str || check_db_name((LEX_STRING*) &(yyvsp[-5].lex_string_with_pos)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-5].lex_string_with_pos).str));
            if (check_routine_name(&(yyvsp[-3].lex_string_with_pos)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create_with_db(thd, &(yyvsp[-5].lex_string_with_pos), &(yyvsp[-3].lex_string_with_pos), true, (yyvsp[-1].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
#line 35421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10577 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 35427 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 35433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35445 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 35451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10589 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 35457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 35463 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10594 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 35469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10599 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 35480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10606 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 35489 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10614 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 35517 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 10641 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 10647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35537 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 10653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35547 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 10659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 10665 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 10671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 10680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10686 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 35596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10688 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 35602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35612 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10707 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10719 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10725 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10731 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10755 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 35718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 35740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10786 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            if (Select->add_window_func((Item_window_func *) (yyval.item)))
              MYSQL_YYABORT;
          }
#line 35752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Select->add_window_spec(thd, lex->win_ref,
                                        Select->group_list,
                                        Select->order_list,
                                        lex->win_frame))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            if (Select->add_window_func((Item_window_func *) (yyval.item)))
              MYSQL_YYABORT;
          }
#line 35771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10815 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 35779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35789 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10829 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35849 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (item_offset == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10896 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (item_offset == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35907 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10926 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Select->add_window_spec(thd, lex->win_ref,
                                       Select->group_list,
                                       Select->order_list,
                                       NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            if (Select->add_window_func((Item_window_func *) (yyval.item)))
              MYSQL_YYABORT;
          }
#line 35936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 35942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 35950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (((yyval.item) == NULL) || (thd->is_error()))
            {
              MYSQL_YYABORT;
            }
            if (add_order_to_list(thd, (yyvsp[-1].item),FALSE)) MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 35988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 35994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_CSTRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
#line 36004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10997 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (! Lex->parsing_options.allows_variable)
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 36013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 36035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11019 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 36047 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(thd, (yyvsp[-2].var_type), &(yyvsp[-1].lex_str), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
#line 36064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 36086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 36092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 36098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 36104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 36130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 36141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 36152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 36163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 36176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 36185 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 36191 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 36197 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 36203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 36212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 36218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 36224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 36230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 36236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 36242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 36248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 36254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 36260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 36266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 36272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 36278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 36284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 36290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 36296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 36307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 36316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 36322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 36328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 36339 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 36348 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root);
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 36360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root);
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 36370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 36379 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 36385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 36398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 36404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 36410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 36416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 36422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 36430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=(yyvsp[-1].num); }
#line 36436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 36448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 36459 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 36467 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 36477 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11310 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 36487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 36499 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 36511 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 36519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 36529 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 36540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 36552 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 36565 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 36573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 36584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
#line 36596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 36620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11401 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 36632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11434 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 36649 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-3].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-2].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
#line 36664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11471 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-2].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-3].select_lex)->embedding &&
                !(yyvsp[-3].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-2].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(thd,
                                               ti, (yyvsp[0].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if ((yyvsp[0].lex_str_ptr) != NULL)
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-2].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
          }
#line 36728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-6].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-3].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (ti == NULL)
              MYSQL_YYABORT;
            (yyvsp[-3].select_lex)->set_with_clause((yyvsp[-4].with_clause));
            lex->current_select= sel;
            if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                             ti, (yyvsp[0].lex_str_ptr), 0,
                                             TL_READ, MDL_SHARED_READ)))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
          }
#line 36748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11573 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].table_list))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 36760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11581 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].table_list))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 36772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 36778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11596 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 36784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11597 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 36790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11608 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_braces(0);
          }
#line 36798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 36810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11623 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 36818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 36836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11647 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 36842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11648 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 36848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 36858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11666 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
	  }
#line 36869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1, NULL))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;

            if (!(lex->current_select->tvc=
	          new (lex->thd->mem_root) table_value_constr(lex->many_values,
							      lex->current_select,
							      lex->current_select->options)))
	      MYSQL_YYABORT;
	    lex->many_values.empty();
            (yyval.table_list)= NULL;
          }
#line 36897 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1, NULL))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 36918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 36926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 36932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11729 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
#line 36942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11737 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 36955 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36961 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11749 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36967 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11754 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 36975 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11757 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36981 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 37005 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11769 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 37013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 37021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 11787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 37027 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 11791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 37033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11796 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 37039 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37045 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11802 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].lex_string_with_pos).str, (yyvsp[0].lex_string_with_pos).length); }
#line 37051 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11804 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 37057 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.string_list)= new (thd->mem_root) List<String>))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].lex_string_with_pos).str,
                                                    (yyvsp[0].lex_string_with_pos).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 37072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11825 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].lex_string_with_pos).str,
                                                    (yyvsp[0].lex_string_with_pos).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[-2].string_list)->push_back(s, thd->mem_root);
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 37086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 37098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11839 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 37104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11840 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 37110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 37116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 37122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 37128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11844 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 37134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11845 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 37140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 37146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11847 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 37152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 37158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 37164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11853 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 37170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 37176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11855 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 37182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 37188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 37194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 37200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11859 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 37206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 37212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 37218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 37224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 37230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 37236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 37242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
#line 37252 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 11892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 37258 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11894 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 37266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11898 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 37278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 37286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11914 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 37298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 37307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string_ascii(thd, "", 0) :
                 new (thd->mem_root) Item_string_ascii(thd, "\\", 1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 37326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 37332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 37359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 37378 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11998 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37384 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37390 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                       Select->group_list,
                                       Select->order_list,
                                       lex->win_frame))
              MYSQL_YYABORT;
          }
#line 37403 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 37409 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37415 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_CSTRING));
            if (thd->lex->win_ref == NULL)
              MYSQL_YYABORT;
          }
#line 37425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 37431 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 37437 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (lex->win_frame == NULL)
              MYSQL_YYABORT;
          }
#line 37458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 37464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 37470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (lex->frame_bottom_bound == NULL)
              MYSQL_YYABORT;
          }
#line 37484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 37494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if ((yyval.window_frame_bound) == NULL)
              MYSQL_YYABORT;
          }
#line 37505 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if ((yyval.window_frame_bound) == NULL)
              MYSQL_YYABORT;
          }
#line 37516 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if ((yyval.window_frame_bound) == NULL)
              MYSQL_YYABORT;
          }
#line 37527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 37533 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if ((yyval.window_frame_bound) == NULL)
              MYSQL_YYABORT;
          }
#line 37544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if ((yyval.window_frame_bound) == NULL)
              MYSQL_YYABORT;
          }
#line 37555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 37561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 37567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 37573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 37579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 37585 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[-1].item), ascending))
              MYSQL_YYABORT;
          }
#line 37595 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_unit_op() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(thd))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
             }
          }
#line 37642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {

          }
#line 37650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 37656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { if (add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))) MYSQL_YYABORT; }
#line 37662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 37668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 37674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 37680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 37706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 37717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 37725 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 37733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 37744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 37755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 37766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= thd->lex;
          Lex_input_stream *lip= & thd->m_parser_state->m_lip;
          if (!((yyval.item)= lex->create_item_limit(thd, &(yyvsp[0].lex_string_with_pos),
                                           (yyvsp[0].lex_string_with_pos).m_pos, lip->get_tok_end())))
            MYSQL_YYABORT;
        }
#line 37778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= thd->lex;
          Lex_input_stream *lip= & thd->m_parser_state->m_lip;
          if (!((yyval.item)= lex->create_item_limit(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos),
                                           (yyvsp[-2].lex_string_with_pos).m_pos, lip->get_ptr())))
            MYSQL_YYABORT;
        }
#line 37790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyvsp[0].item_param)->limit_clause_param= TRUE;
        }
#line 37798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 37828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 37837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 37846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 37857 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 37863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12358 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 37869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37875 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37881 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37887 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 37893 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37899 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 37929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12388 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37959 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12391 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12396 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12397 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 37995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12399 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 38001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12403 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 38007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 38013 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12405 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 38019 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 38025 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 38031 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12412 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 38037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 38043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12422 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 38049 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 38055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 38061 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12428 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 38067 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].lex_string_with_pos));
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_proc_to_list(thd, item))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 38097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 38106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 12467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 12477 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_proc_to_list(thd, (yyvsp[-1].item)))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 38129 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 12486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                (!(lex->result= new (thd->mem_root) select_dumpvar(thd))))
              MYSQL_YYABORT;
          }
#line 38140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12493 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 12498 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 12502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if ((yyvsp[0].myvar) == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 38173 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12522 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 38181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_variable *t;

            if (!Lex->spcont || !(t= Lex->spcont->find_variable(&(yyvsp[0].lex_str), false)))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.myvar) = Lex->result ? (new (thd->mem_root)
                                my_var_sp(&(yyvsp[0].lex_str), t->offset, t->type_handler(),
                                          Lex->sphead)) :
                                NULL;
          }
#line 38196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))) && Lex->result)
              MYSQL_YYABORT;
          }
#line 38205 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12549 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange=
                    new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0)) ||
                !(lex->result=
                    new (thd->mem_root) select_export(thd, lex->exchange)))
              MYSQL_YYABORT;
          }
#line 38219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12559 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 38225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12562 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result=
                      new (thd->mem_root) select_dump(thd, lex->exchange)))
                MYSQL_YYABORT;
            }
          }
#line 38242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12575 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 38250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12586 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 38260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12592 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
          }
#line 38268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12603 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 38279 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12610 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].lex_string_with_pos).str, (yyvsp[-4].num)));
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
#line 38306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].lex_string_with_pos);
          }
#line 38316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 12635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lex_string_with_pos).str && check_db_name((LEX_STRING*) &(yyvsp[-2].lex_string_with_pos)))
               my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].lex_string_with_pos).str));
            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 38334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 12649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].lex_string_with_pos), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 38353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 12664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 38365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 38373 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 38381 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12680 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 38392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12689 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 38407 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12694 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 38417 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 38426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 38435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 38444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12716 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 38456 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12734 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38474 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
          }
#line 38488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12763 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12774 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 38509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12779 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 38518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12787 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 38526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 38534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12798 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 38546 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12806 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 38557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12814 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 38566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12819 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 12824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 38583 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 12831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
#line 38592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12836 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 12841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 38611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 12849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 12851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    thd->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 38629 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12858 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 38635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 38641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    thd->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 38653 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38665 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12880 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 38676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12888 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12889 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12890 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12892 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!(lex->insert_list= new (thd->mem_root) List_item) ||
                lex->many_values.push_back(lex->insert_list, thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38705 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 38711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 38717 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12908 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38723 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38729 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 12910 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38735 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 12925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[-2].item), thd->mem_root) ||
                lex->insert_list->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 12934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 12935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 12939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 12940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 12944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 12950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 12955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              if (!(Lex->insert_list= new (thd->mem_root) List_item))
                MYSQL_YYABORT;
          }
#line 38803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 12960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list, thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 12968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 12986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 38843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 12988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 38853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 12994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_value(thd, Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 38863 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13003 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 38869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 38877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13009 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 38885 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 38896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[-4].lock_type));
          }
#line 38919 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38925 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[-2].item), thd->mem_root) || 
              lex->value_list.push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 38945 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 38951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38957 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 38972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 38987 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38993 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 39009 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 39018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13124 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 39028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
#line 39037 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].lex_string_with_pos));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].lex_string_with_pos), &(yyvsp[-1].lex_string_with_pos), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39071 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39083 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39089 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39095 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 39101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 39107 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 39113 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 39128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 39140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 39148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 39156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 39164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 39172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 39180 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 39188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 39196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 39204 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 39212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 39220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 39228 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 39241 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 39249 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(thd, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
#line 39260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 13303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str).str;
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 39272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str).str;
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 39284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str).str;
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 39296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str).str;
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 39308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str).str;
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 39320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(thd, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 39331 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 13350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS))
              MYSQL_YYABORT;
          }
#line 39342 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 13357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS))
              MYSQL_YYABORT;
          }
#line 39352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 13363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 39358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 39364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 39377 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 13376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 39385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 13380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 39393 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 39402 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 39411 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
#line 39424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13404 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(thd, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 39435 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13411 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 39444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13416 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 39453 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 39462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13426 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 39471 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13431 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 39480 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13436 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 39486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13438 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 39492 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13440 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 39498 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(thd, lex, NULL, SCH_PROFILES) != 0)
              MYSQL_YYABORT;
          }
#line 39509 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13449 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS))
              MYSQL_YYABORT;
          }
#line 39521 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 39527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13459 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES))
              MYSQL_YYABORT;
          }
#line 39539 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(thd, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
#line 39550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13474 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(thd, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
#line 39561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (!(Lex->grant_user= (LEX_USER*)thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 39572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13488 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 39582 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13494 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].lex_string_with_pos);
          }
#line 39591 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13499 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 39603 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 13507 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 39615 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13515 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 39627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 39635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 39644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13532 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 39655 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13539 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 39664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13551 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 13558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 39696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 13564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (!(Lex->grant_user= (LEX_USER*)thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 39707 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 13571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 39716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 13576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(thd, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 39727 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(thd, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
#line 39738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 13590 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 13600 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 39765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13605 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 39776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, (yyvsp[-2].lex_str).str, &in_plugin);
             if (!table || !table->old_format || !in_plugin)
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (lex->wild && table->idx_field1 < 0)
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (make_schema_select(thd, Lex->current_select, table))
               MYSQL_YYABORT;
           }
#line 39799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13634 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 39805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13636 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 39811 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13638 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 39817 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 39823 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_string_with_pos); }
#line 39829 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13657 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 39835 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 39841 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13667 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 39847 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 39853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13672 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 39859 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 39865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13677 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 39871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 39883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13687 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 39894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13698 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
#line 39909 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 39917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13713 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 39923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13715 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 39932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13736 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 39940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13742 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 39946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13743 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 39952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13744 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13748 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13750 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "JSON"))
              Lex->explain_json= true;
            else if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "TRADITIONAL"))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 39977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13761 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13762 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 39989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13764 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].lex_string_with_pos).str,
                                                    (yyvsp[0].lex_string_with_pos).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
#line 40001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 40012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 40032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40044 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13807 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 40060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 40066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13824 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 40079 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 13831 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40085 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13837 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13842 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 40097 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13844 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 40103 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13846 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 40109 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13848 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 40115 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 40121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->type & REFRESH_RELAY_LOG)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 40133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 40139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 40145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 40151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13866 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 40160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13871 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 40166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (lex->type & REFRESH_SLAVE)
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 40178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 13881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 40184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 13883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 40190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 13885 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 40196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 13887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, (yyvsp[-1].lex_str).str);
             if (!table || !table->reset_table)
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             Lex->view_list.push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[-1].lex_str), sizeof(LEX_STRING)),
                                       thd->mem_root);
           }
#line 40213 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 13902 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40219 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13903 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40225 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13907 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40231 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 13909 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40237 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 13919 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 40245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 40251 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13926 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 40257 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13930 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 40266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 13944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 40278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 13946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 13948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 40293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 40299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 13957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 40305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 13958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 40311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 13962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 13964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 40325 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 13971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 40335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 13977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 40349 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 40360 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14002 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 40372 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14010 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 40380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14016 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 40386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14017 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 40392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14018 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 40404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 40410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 40416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 40425 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 40433 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14037 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 40442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 40448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].lex_string_with_pos).str;
          }
#line 40458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 40473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14074 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype))))
              MYSQL_YYABORT;
          }
#line 40487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[-9].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[0].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
#line 40501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 40507 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40513 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 40519 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 40525 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 40531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 40537 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40543 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 40555 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14121 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40561 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 40567 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 40573 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 40579 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 40588 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 40599 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 40608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 40617 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 40626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 40635 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40641 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 40647 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 40656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 40668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 14210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 14215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 14217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 40704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[-4].item), thd->mem_root) || 
                lex->value_list.push_back((yyvsp[-1].item), thd->mem_root))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 40738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata))))
              MYSQL_YYABORT;
          }
#line 40747 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata))))
              MYSQL_YYABORT;
          }
#line 40756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset))))
              MYSQL_YYABORT;
          }
#line 40765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= thd->make_string_literal_concat((yyvsp[-1].item), (yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 40774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 40792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 40809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 40822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 40839 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                           YYLIP->get_tok_start(),
                                           YYLIP->get_tok_start() + 1)))
              MYSQL_YYABORT;
          }
#line 40850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 40856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 40865 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 40871 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 40877 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14349 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 40883 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 40901 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40921 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40931 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14389 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 40951 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14395 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (!item_str || !item_str->check_well_formed_result(true))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 40970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 40984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14423 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 40998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
#line 41008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14439 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (((yyval.item_num) == NULL) || (thd->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 41021 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14448 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (((yyval.item_num) == NULL) || (thd->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
#line 41033 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14460 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
#line 41043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14466 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
#line 41053 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14472 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
#line 41063 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14481 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= 0; }
#line 41069 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 41077 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (with_clause == NULL)
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
          }
#line 41091 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14501 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 41100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 41112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14523 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if ((yyvsp[0].lex_str_list) == NULL)
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 41123 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14530 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            With_element *elem= new With_element((yyvsp[-8].lex_str_ptr), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
	    if (elem->set_unparsed_spec(thd, (yyvsp[-3].simple_string)+1, (yyvsp[-1].simple_string)))
              MYSQL_YYABORT;
	  }
#line 41135 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14542 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 41141 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14544 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 41147 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14550 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_CSTRING)));
	  }
#line 41156 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14555 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_CSTRING)));
          }
#line 41165 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14564 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_CSTRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
#line 41175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 41181 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14579 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 41187 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14584 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (thd->mem_root) Item_field(thd, Lex->current_context(),
                                                 NullS, (yyvsp[-2].lex_string_with_pos).str, &star_clex_str);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 41200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[-4].lex_string_with_pos).str;
            (yyval.item)= new (thd->mem_root) Item_field(thd, Lex->current_context(),
                                               schema,
                                               (yyvsp[-2].lex_string_with_pos).str, &star_clex_str);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
#line 41216 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14607 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 41222 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14612 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            if (!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].lex_string_with_pos),
                                             lip->get_tok_start_prev(),
                                             lip->get_tok_end())))
              MYSQL_YYABORT;
          }
#line 41234 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14621 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!((yyval.item)= lex->create_item_ident(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos),
                                             (yyvsp[-2].lex_string_with_pos).m_pos, YYLIP->get_tok_end())))
              MYSQL_YYABORT;
          }
#line 41245 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14631 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 41254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14635 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 41260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14640 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 41269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14649 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_ident(thd, &null_clex_str, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 41278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].lex_string_with_pos), &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos))))
              MYSQL_YYABORT;
          }
#line 41287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14661 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_string_with_pos);}
#line 41293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14663 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_string_with_pos).str, table->db))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_string_with_pos).str));
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_string_with_pos).str,
                              table->table_name))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_string_with_pos).str));
            (yyval.lex_str)=(yyvsp[0].lex_string_with_pos);
          }
#line 41307 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_string_with_pos).str, table->alias))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_string_with_pos).str));
            (yyval.lex_str)=(yyvsp[0].lex_string_with_pos);
          }
#line 41318 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14679 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_string_with_pos);}
#line 41324 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].lex_string_with_pos));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14690 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14696 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].lex_string_with_pos));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41355 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14706 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].lex_string_with_pos));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14712 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].lex_string_with_pos), &(yyvsp[-1].lex_string_with_pos), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14721 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].lex_string_with_pos), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 41386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14730 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 41392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14732 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              uint wlen= Well_formed_prefix(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length).length();
              if (wlen < (yyvsp[0].lex_str).length)
              {
                ErrConvString err((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[0].lex_str);
            }
            else
            {
              LEX_STRING to;
              if (thd->convert_with_error(system_charset_info, &to,
                                          thd->charset(), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length))
                MYSQL_YYABORT;
              (yyval.lex_str).str=    to.str;
	      (yyval.lex_str).length= to.length;
            }
          }
#line 41421 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[0].lex_string_with_metadata);
            else
            {
              LEX_STRING to;
              if (thd->convert_string(&to, system_charset_info,
                                  (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, thd->charset()))
                MYSQL_YYABORT;
              (yyval.lex_str).str=    to.str;
	      (yyval.lex_str).length= to.length;
            }
          }
#line 41439 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14777 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[0].lex_string_with_metadata);
            else
            {
              LEX_STRING to;
              if (thd->convert_string(&to, thd->variables.collation_connection,
                                  (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, thd->charset()))
                MYSQL_YYABORT;
              (yyval.lex_str).str=    to.str;
	      (yyval.lex_str).length= to.length;
            }
          }
#line 41457 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[0].lex_string_with_metadata);
            else
            {
              LEX_STRING to;
              if (thd->convert_string(&to,
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, thd->charset()))
                MYSQL_YYABORT;
              (yyval.lex_str).str=    to.str;
	      (yyval.lex_str).length= to.length;
            }
          }
#line 41476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14810 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 41482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14812 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 41493 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14822 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (LEX_CSTRING &)(yyval.lex_string_with_pos)= (yyvsp[0].lex_str);
            (yyval.lex_string_with_pos).m_pos= (char *) YYLIP->get_tok_start_prev();
          }
#line 41502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14827 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_string_with_pos).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_string_with_pos).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_string_with_pos).length= (yyvsp[0].symbol).length;
            (yyval.lex_string_with_pos).m_pos= (char *) YYLIP->get_tok_start_prev();
          }
#line 41514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14838 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (LEX_CSTRING &)(yyval.lex_string_with_pos)= (yyvsp[0].lex_str);
            (yyval.lex_string_with_pos).m_pos= (char *) YYLIP->get_tok_start();
          }
#line 41523 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14843 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_string_with_pos).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length)))
              MYSQL_YYABORT;
            (yyval.lex_string_with_pos).length= (yyvsp[0].symbol).length;
            (yyval.lex_string_with_pos).m_pos= (char *) YYLIP->get_tok_start();
          }
#line 41534 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 41540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14854 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str= thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].symbol).length;
          }
#line 41551 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14863 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_string_with_pos);}
#line 41557 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14864 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 41563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14865 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 41569 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14870 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                         username_char_length,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
#line 41586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14883 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                         username_char_length,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 41620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 41632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 41642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14934 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41648 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14935 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41654 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14936 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41660 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14937 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41672 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41678 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 14940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41684 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14941 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 14942 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41696 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 14943 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41702 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14944 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41714 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14946 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41720 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14947 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41726 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14948 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41732 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14949 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14950 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14951 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41750 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41756 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41762 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14954 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41768 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 14955 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41774 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 14956 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41780 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 14957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41786 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 14958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41792 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 14959 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41798 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 14960 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41804 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 14961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41810 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41816 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41822 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41828 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41834 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14966 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 14967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 14968 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 14969 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14971 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 14972 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14973 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14974 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 14975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 14976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14977 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41906 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 14978 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41912 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41918 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41924 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 14981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41930 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41942 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14984 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41948 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14985 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41954 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14986 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41960 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14987 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14988 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14989 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 14990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 14991 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 14992 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41996 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42002 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 14994 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42008 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 14999 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42014 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15021 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Compound.    Reserved in Oracle */ }
#line 42020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15023 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42032 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15024 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause                     */ }
#line 42038 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15025 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Compound.    Reserved in Oracle */ }
#line 42044 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15026 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause                     */ }
#line 42050 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15027 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42056 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15028 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause                     */ }
#line 42062 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15029 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42068 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15030 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42074 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2518:
#line 15031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause                     */ }
#line 42080 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15032 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Verb clause. Reserved in Oracle */ }
#line 42086 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15041 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15042 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42098 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15043 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42104 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15045 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42116 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15046 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42122 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15047 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42128 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15048 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42134 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15049 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42140 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15050 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42146 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42152 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15052 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42158 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15053 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42164 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15054 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42170 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42176 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15056 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42182 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42188 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15058 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42194 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15059 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42200 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15060 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42206 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15061 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42218 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15063 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15064 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15065 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15066 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15067 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15068 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15070 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15075 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15076 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15077 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15078 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15079 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15082 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 15083 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 15084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 15085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 15086 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15087 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 15090 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 15091 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 15092 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 15093 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 15094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 15095 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 15096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 15097 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 15098 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 15099 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15100 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15101 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 15103 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 15104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42446 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 15105 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42452 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15106 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42458 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 15107 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42464 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15108 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42470 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42476 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15110 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42482 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 15111 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 15112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 15113 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42500 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15114 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42506 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15115 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42512 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15116 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42518 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15117 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42524 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15118 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42530 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 15120 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42542 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 15125 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42548 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 15126 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42560 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 15128 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42566 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15129 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 15130 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42578 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 15131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42584 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 15132 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 15133 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 15134 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 15135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 15136 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 15137 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 15138 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 15139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 15140 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42638 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 15141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42644 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 15142 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 15143 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 15144 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 15145 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 15146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 15147 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42680 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 15148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42686 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 15149 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42692 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 15150 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 15151 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42704 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 15152 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42710 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 15153 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42716 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 15154 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 15155 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 15156 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42734 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 15157 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42740 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 15158 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42746 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 15159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42752 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 15160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42758 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 15161 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42764 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 15162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42770 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 15163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42776 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 15164 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42782 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 15165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42788 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 15166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42794 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 15167 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42800 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 15168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42806 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 15169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42812 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 15170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42818 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 15171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 15172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 15173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42836 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 15174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42842 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 15175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42848 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 15176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42854 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42860 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42866 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42878 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42884 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42896 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15184 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42902 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42908 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42914 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42920 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42932 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42938 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42944 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42950 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42962 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42968 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15196 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42974 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42980 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42986 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42992 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42998 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15201 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43004 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15202 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43010 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43016 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15204 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43022 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15206 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43034 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15207 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43040 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15208 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15209 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43052 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43058 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15212 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15213 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15214 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15215 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43100 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15218 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43106 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15219 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43112 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15220 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43118 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15221 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43124 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15222 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43130 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43136 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43142 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15225 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43148 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15226 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43154 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15227 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43160 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15228 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15229 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43172 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15230 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15231 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43184 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15232 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43190 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43196 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43202 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15235 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43208 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15236 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43214 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15237 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43220 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15238 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43226 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43232 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15240 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15241 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43244 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15242 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43250 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15243 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43256 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15244 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43262 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43268 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15246 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43274 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15247 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43280 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15248 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43286 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15249 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43292 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43298 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15251 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43304 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15252 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43310 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15253 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43316 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43322 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15255 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43328 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15256 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43334 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15257 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43340 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43346 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15259 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43352 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15260 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43358 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15261 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15262 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43370 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43376 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15264 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43382 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15265 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43388 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15266 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15267 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43400 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15268 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43406 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15269 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43412 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15270 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43418 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15271 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43424 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15272 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43430 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15273 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43436 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15274 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43442 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43448 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15276 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43454 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15277 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15278 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15279 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43472 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15281 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43484 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15282 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43490 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15283 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43496 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15284 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15285 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43508 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15286 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15287 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43520 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15289 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43532 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15290 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43538 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15291 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43544 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15292 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43550 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43556 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43562 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15295 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43568 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15296 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43574 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15297 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43580 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15298 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43586 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15299 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15300 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43598 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43604 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15302 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43610 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15303 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43616 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15304 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15305 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43628 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43634 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15307 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43640 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15308 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43646 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2780:
#line 15309 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43652 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 15310 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43658 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15311 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43664 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15312 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43670 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15313 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43676 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15314 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15315 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43688 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15316 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43694 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15318 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15319 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43712 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15320 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15321 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43724 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15322 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43730 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15323 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43736 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43742 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15325 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15326 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15327 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15328 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15330 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15331 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15332 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15333 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15334 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15336 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15337 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43820 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15338 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43826 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15339 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15340 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43838 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43844 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15342 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43850 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15343 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15344 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43862 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15345 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43868 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43874 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15347 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43880 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15348 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43886 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15349 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43892 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15350 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43898 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15351 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43904 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15352 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43910 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15353 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43916 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15354 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43922 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15355 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43928 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15356 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43934 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15357 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43940 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15358 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15359 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43952 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43958 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15361 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43964 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15362 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43970 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15363 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43976 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15364 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43982 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15365 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43988 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15366 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43994 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15367 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44000 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15368 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44006 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15369 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44012 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15370 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44018 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15371 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44024 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15372 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44030 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15373 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44036 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15374 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44042 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15375 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44048 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15376 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15377 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44060 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15378 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44066 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15379 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44072 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15380 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44078 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15381 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44084 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15382 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44090 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15383 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44096 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15384 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44102 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15385 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44108 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15386 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44114 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15387 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44120 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15388 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44126 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15400 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44137 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15407 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44143 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_init();
          }
#line 44151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15413 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->table_or_sp_used())
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 44163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15437 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15443 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 44186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15447 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44195 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44203 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
#line 44212 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
#line 44221 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15482 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15486 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
#line 44238 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44246 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15495 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_instr(thd, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
#line 44255 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44263 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15512 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44269 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15513 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15514 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44281 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15518 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44287 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15519 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44293 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15520 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44299 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15521 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44305 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15525 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 44311 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 15526 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 15527 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 15528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 15534 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if ((yyvsp[-2].variable).var && (yyvsp[-2].variable).var != trg_new_row_fake_var)
            {
              /* It is a system variable. */
              if (lex->set_system_variable(&(yyvsp[-2].variable), lex->option_type, (yyvsp[0].item)))
                MYSQL_YYABORT;
            }
            else
            {
              /*
                Not in trigger assigning value to new row,
                and option_type preceding local variable is illegal.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 44353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 15558 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            struct sys_var_with_base var;
            if (Lex->init_internal_variable(&var, &(yyvsp[-2].lex_string_with_pos)) ||
                Lex->set_variable(&var, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44364 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 15565 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->var_list.is_empty());
            if (Lex->set_variable(&(yyvsp[-4].lex_string_with_pos), &(yyvsp[-2].lex_string_with_pos), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 15571 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            struct sys_var_with_base var;
            if (Lex->init_default_internal_variable(&var, (yyvsp[-2].lex_string_with_pos)) ||
                Lex->set_variable(&var, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 15578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44394 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 15583 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            struct sys_var_with_base tmp= (yyvsp[-2].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (Lex->set_system_variable(&tmp, (yyvsp[-3].var_type), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 15595 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 15609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (spc && spc->find_variable(&names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 44443 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 15620 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44466 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 15639 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44487 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 15656 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44503 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 15668 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44515 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 15676 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44531 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 15692 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->init_internal_variable(&(yyval.variable), &(yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 44540 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 15697 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->init_internal_variable(&(yyval.variable), &(yyvsp[-2].lex_string_with_pos), &(yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 44549 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 15702 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->init_default_internal_variable(&(yyval.variable), (yyvsp[0].lex_string_with_pos)))
              MYSQL_YYABORT;
          }
#line 44558 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 15717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44577 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 15735 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44596 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 15752 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 44602 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 15753 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 44608 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 15757 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 44614 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 15758 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 44620 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 15759 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 44626 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 15760 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 44632 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 15765 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (spc && spc->find_variable(&pw, false))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (!(lex->definer= (LEX_USER*) thd->calloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 44650 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 15778 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 44656 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 15782 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 44662 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 15783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 44668 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 15785 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 44679 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 15794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44685 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 15795 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 44691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 15797 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 44701 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 15803 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 44711 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 15809 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 44721 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 15820 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 44733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 15828 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44739 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 15833 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44745 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 15835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (set_statement_var_if_exists(thd, C_STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num)) ||
              set_statement_var_if_exists(thd, C_STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num)))
            MYSQL_YYABORT;
        }
#line 44755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 15841 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if (set_statement_var_if_exists(thd, C_STRING_WITH_LEN("lock_wait_timeout"), 0) ||
              set_statement_var_if_exists(thd, C_STRING_WITH_LEN("innodb_lock_wait_timeout"), 0))
            MYSQL_YYABORT;
        }
#line 44765 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 15849 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44771 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 15850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 44777 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 15860 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            lock_type == TL_WRITE_CONCURRENT_INSERT ?
                                            MDL_SHARED_WRITE :
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
#line 44793 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 15874 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 44799 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 15875 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 44805 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 15877 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44813 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 15881 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 44819 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 15882 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 44825 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 15887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 44837 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 15895 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 15904 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 44856 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 15913 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 44869 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 15922 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 44890 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 15939 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (Lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 44905 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 15952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 44911 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 15953 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].lex_string_with_pos); }
#line 44917 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 15957 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44923 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 15958 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44929 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 15962 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44935 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 15963 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44941 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 15964 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 44947 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 15965 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 44953 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 15967 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (!(lex->insert_list= new (thd->mem_root) List_item))
              MYSQL_YYABORT;
          }
#line 44965 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 15975 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44971 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 15979 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44977 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 15980 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44983 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 15981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44989 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 15982 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44995 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 15983 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 45001 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 15990 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45007 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 15995 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 45017 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16001 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_grant_command(thd, SQLCOM_REVOKE, TYPE_ENUM_FUNCTION))
              MYSQL_YYABORT;
          }
#line 45026 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16006 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_grant_command(thd, SQLCOM_REVOKE, TYPE_ENUM_PROCEDURE))
              MYSQL_YYABORT;
          }
#line 45035 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16011 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 45043 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16015 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45054 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16022 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16031 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16033 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16038 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16044 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 45092 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16051 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_grant_command(thd, SQLCOM_GRANT, TYPE_ENUM_FUNCTION))
              MYSQL_YYABORT;
          }
#line 45101 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16057 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_grant_command(thd, SQLCOM_GRANT, TYPE_ENUM_PROCEDURE))
              MYSQL_YYABORT;
          }
#line 45110 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45121 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16069 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 45139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16081 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 45145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16084 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 45151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16085 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 45157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16089 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45166 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16094 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45175 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16102 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 45186 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16112 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if ((yyvsp[0].lex_str).length == 0)
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                         username_char_length,
                                         cs, 0))
              MYSQL_YYABORT;
          }
#line 45209 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45215 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16141 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 45224 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 16159 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 45230 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16160 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45236 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16162 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 45242 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45248 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16165 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 45254 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16166 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45260 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16168 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 45266 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16169 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45272 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 45278 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16171 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45284 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16172 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 45290 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16173 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 45296 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16174 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 45302 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16175 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 45308 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16176 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 45314 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 45320 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16178 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 45326 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16179 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 45332 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16180 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 45338 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16181 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45344 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16182 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 45350 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16183 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 45356 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16184 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 45362 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16185 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 45368 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 45374 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 45380 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16188 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 45386 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16189 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 45392 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 16190 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 45398 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 16191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 45404 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 16192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 45410 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 16193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 45416 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16194 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 45422 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16195 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 45428 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16199 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45434 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16200 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45440 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45451 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16217 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45462 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16224 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45473 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16234 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45488 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16245 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[-2].lex_string_with_pos).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45501 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16254 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45514 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16263 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[0].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 45527 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16275 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45536 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16280 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45545 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16288 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16293 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45563 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16301 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45572 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16306 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 45581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16317 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
          }
#line 45592 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16324 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 45601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16329 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 45611 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16335 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 45621 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 16341 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45627 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 16346 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 45636 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 16360 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].lex_string_with_pos).str,(yyvsp[0].lex_string_with_pos).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 45666 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 16390 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 45674 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 16394 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 45682 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 16398 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 45690 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 16402 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 45698 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16409 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 45708 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16415 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 45718 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16421 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 45728 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 16427 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 45738 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 16433 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 45748 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 16441 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45754 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 16442 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45760 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 16446 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45766 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 16452 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45772 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 16453 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45778 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 16457 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45784 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 16458 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45790 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 16462 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45796 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 16463 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45802 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 16467 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45808 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 16468 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45814 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 16473 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 45824 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 16478 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45830 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 16483 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 45840 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 16491 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 45846 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 16492 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 45852 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 16496 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45858 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 16497 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 16502 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45870 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 16503 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 16504 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45882 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 16509 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45888 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 16510 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45894 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 16511 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45900 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 16516 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45913 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 16528 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45926 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 16537 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_string_with_pos);
          }
#line 45936 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 16543 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_string_with_pos);
          }
#line 45946 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 16552 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_string_with_pos);
          }
#line 45956 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 16561 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_string_with_pos);
          }
#line 45966 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 16574 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= UNION_TYPE; }
#line 45972 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 16576 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= INTERSECT_TYPE; }
#line 45978 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 16578 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= EXCEPT_TYPE; }
#line 45984 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 16582 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45990 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 16588 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE))
              MYSQL_YYABORT;
          }
#line 45999 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 16593 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 46011 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 16604 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE))
              MYSQL_YYABORT;
          }
#line 46020 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 16609 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
          }
#line 46028 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 16615 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 46046 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 16629 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 46055 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 16645 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE))
              MYSQL_YYABORT;
          }
#line 46064 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 16652 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46070 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3123:
#line 16653 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46076 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3124:
#line 16654 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 46082 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3125:
#line 16658 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46088 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3126:
#line 16659 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46094 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3127:
#line 16664 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
	  }
#line 46105 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3128:
#line 16671 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
	    LEX *lex=Lex;
	    (yyval.select_lex)= lex->current_select;
	    mysql_init_select(Lex);
	    if (!((yyval.select_lex)->tvc=
	          new (lex->thd->mem_root) table_value_constr(lex->many_values, (yyval.select_lex), (yyval.select_lex)->options)))
	      MYSQL_YYABORT;
	    lex->many_values.empty();
	  }
#line 46119 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 16693 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 46127 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 16699 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 46133 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 16700 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 46139 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 16704 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46145 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 16705 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46151 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 16709 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46157 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 16710 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46163 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 16711 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46169 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 16717 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 46178 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 16724 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1, NULL))
              MYSQL_YYABORT;
          }
#line 46201 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 16745 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;

            /*
              Aggregate functions in having clause may add fields to an outer
              select. Count them also.
            */
            lex->current_select->select_n_having_items+=
            child->select_n_having_items;
          }
#line 46229 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 16781 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 46235 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 16783 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 46247 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 16790 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46253 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 16791 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 46259 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 16792 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 46265 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 16794 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 46275 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 16800 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 46285 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 16805 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 46291 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 16821 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 46306 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 16835 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 46317 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 16850 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 46323 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 16851 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 46329 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 16852 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 46335 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 16856 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 46341 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 16857 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 46347 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 16861 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 46353 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 16862 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 46359 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 16867 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46365 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 16873 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_STRING*)
                                     thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_STRING)),
                                     thd->mem_root);
          }
#line 46375 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 16879 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_STRING*)
                                     thd->memdup(&(yyvsp[0].lex_string_with_pos), sizeof(LEX_STRING)),
                                     thd->mem_root);
          }
#line 46385 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 16887 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 46395 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 16893 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            uint not_used;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select,
                            &not_used);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
          }
#line 46414 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 16924 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 46420 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 16925 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46426 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 16926 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46432 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 16927 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 46438 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 16938 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 46444 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 16940 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 46450 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 16945 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 46460 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 16952 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 46469 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16961 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_options_with_check((yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 46478 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16970 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 46486 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16976 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 46494 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 16981 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 46502 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 16985 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46526 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17005 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[-9].table),
                                                   (LEX_CSTRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 46554 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17039 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (lex->add_create_options_with_check((yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
            if (is_native_function(thd, & (yyvsp[-4].lex_string_with_pos)))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lex_string_with_pos).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].lex_string_with_pos);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 46570 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17055 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 46581 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17062 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead->fill_field_definition(thd, Lex->last_field))
              MYSQL_YYABORT;
          }
#line 46590 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17071 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                &sp_handler_function))
              MYSQL_YYABORT;
          }
#line 46601 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17080 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46613 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17088 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_body_finalize_function(thd))
              MYSQL_YYABORT;
          }
#line 46622 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17096 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                &sp_handler_procedure))
              MYSQL_YYABORT;
          }
#line 46633 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17104 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 46642 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17109 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 46651 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17119 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 46659 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17123 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 46667 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17127 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 46675 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17131 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 46683 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17135 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 46691 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17139 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 46700 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17146 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 46706 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17148 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "SQL"))
              (yyval.num)= true;
            else if (!my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, "RAW"))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 46722 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17163 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)thd->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 46733 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17170 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)thd->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 46744 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17177 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)thd->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 46755 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17186 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46761 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 17187 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46767 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 17191 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46773 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17192 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 46779 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 46785 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 17197 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46791 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 17198 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 46797 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 17203 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46803 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 17205 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 46809 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 17210 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46815 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 17211 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 46821 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 17216 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].lex_string_with_pos);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46832 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46843 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 17233 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].lex_string_with_pos);
          }
#line 46853 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 17239 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46864 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 17250 "/home/buildbot/git/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	  YYERROR;
	}
#line 46872 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46876 "/home/buildbot/git/mkdist/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
